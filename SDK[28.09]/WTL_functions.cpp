#pragma once

// Dumped with Dumper-7!


#include "../SDK.hpp"

namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// FUNCTIONS
//---------------------------------------------------------------------------------------------------------------------


// Class WTL.EQSTest_AwayFromAllPawns
// (None)

class UClass* UEQSTest_AwayFromAllPawns::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("EQSTest_AwayFromAllPawns");

	return Clss;
}


// EQSTest_AwayFromAllPawns WTL.Default__EQSTest_AwayFromAllPawns
// (Public, ClassDefaultObject, ArchetypeObject)

class UEQSTest_AwayFromAllPawns* UEQSTest_AwayFromAllPawns::GetDefaultObj()
{
	static class UEQSTest_AwayFromAllPawns* Default = nullptr;

	if (!Default)
		Default = static_cast<UEQSTest_AwayFromAllPawns*>(UEQSTest_AwayFromAllPawns::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.EQSTest_IsAlive
// (None)

class UClass* UEQSTest_IsAlive::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("EQSTest_IsAlive");

	return Clss;
}


// EQSTest_IsAlive WTL.Default__EQSTest_IsAlive
// (Public, ClassDefaultObject, ArchetypeObject)

class UEQSTest_IsAlive* UEQSTest_IsAlive::GetDefaultObj()
{
	static class UEQSTest_IsAlive* Default = nullptr;

	if (!Default)
		Default = static_cast<UEQSTest_IsAlive*>(UEQSTest_IsAlive::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.EQSTest_IsOnTheGround
// (None)

class UClass* UEQSTest_IsOnTheGround::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("EQSTest_IsOnTheGround");

	return Clss;
}


// EQSTest_IsOnTheGround WTL.Default__EQSTest_IsOnTheGround
// (Public, ClassDefaultObject, ArchetypeObject)

class UEQSTest_IsOnTheGround* UEQSTest_IsOnTheGround::GetDefaultObj()
{
	static class UEQSTest_IsOnTheGround* Default = nullptr;

	if (!Default)
		Default = static_cast<UEQSTest_IsOnTheGround*>(UEQSTest_IsOnTheGround::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.EQSTest_PointBehindTheEnemy
// (None)

class UClass* UEQSTest_PointBehindTheEnemy::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("EQSTest_PointBehindTheEnemy");

	return Clss;
}


// EQSTest_PointBehindTheEnemy WTL.Default__EQSTest_PointBehindTheEnemy
// (Public, ClassDefaultObject, ArchetypeObject)

class UEQSTest_PointBehindTheEnemy* UEQSTest_PointBehindTheEnemy::GetDefaultObj()
{
	static class UEQSTest_PointBehindTheEnemy* Default = nullptr;

	if (!Default)
		Default = static_cast<UEQSTest_PointBehindTheEnemy*>(UEQSTest_PointBehindTheEnemy::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.EQSTest_TraceChannel
// (None)

class UClass* UEQSTest_TraceChannel::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("EQSTest_TraceChannel");

	return Clss;
}


// EQSTest_TraceChannel WTL.Default__EQSTest_TraceChannel
// (Public, ClassDefaultObject, ArchetypeObject)

class UEQSTest_TraceChannel* UEQSTest_TraceChannel::GetDefaultObj()
{
	static class UEQSTest_TraceChannel* Default = nullptr;

	if (!Default)
		Default = static_cast<UEQSTest_TraceChannel*>(UEQSTest_TraceChannel::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.EQSTest_VisibilityCone
// (None)

class UClass* UEQSTest_VisibilityCone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("EQSTest_VisibilityCone");

	return Clss;
}


// EQSTest_VisibilityCone WTL.Default__EQSTest_VisibilityCone
// (Public, ClassDefaultObject, ArchetypeObject)

class UEQSTest_VisibilityCone* UEQSTest_VisibilityCone::GetDefaultObj()
{
	static class UEQSTest_VisibilityCone* Default = nullptr;

	if (!Default)
		Default = static_cast<UEQSTest_VisibilityCone*>(UEQSTest_VisibilityCone::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTL3DActorHealth
// (None)

class UClass* UWTL3DActorHealth::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTL3DActorHealth");

	return Clss;
}


// WTL3DActorHealth WTL.Default__WTL3DActorHealth
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTL3DActorHealth* UWTL3DActorHealth::GetDefaultObj()
{
	static class UWTL3DActorHealth* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTL3DActorHealth*>(UWTL3DActorHealth::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTL3DActorHealth.SetActorHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              CurrentHealth                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxHealth                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTL3DActorHealth::SetActorHealth(float CurrentHealth, float MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTL3DActorHealth", "SetActorHealth");

	Params::UWTL3DActorHealth_SetActorHealth_Params Parms{};

	Parms.CurrentHealth = CurrentHealth;
	Parms.MaxHealth = MaxHealth;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTL3DActorName
// (None)

class UClass* UWTL3DActorName::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTL3DActorName");

	return Clss;
}


// WTL3DActorName WTL.Default__WTL3DActorName
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTL3DActorName* UWTL3DActorName::GetDefaultObj()
{
	static class UWTL3DActorName* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTL3DActorName*>(UWTL3DActorName::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTL3DActorName.SetActorNameText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ActorName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTL3DActorName::SetActorNameText(const class FString& ActorName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTL3DActorName", "SetActorNameText");

	Params::UWTL3DActorName_SetActorNameText_Params Parms{};

	Parms.ActorName = ActorName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTL3DMobileStartPointParameters
// (None)

class UClass* UWTL3DMobileStartPointParameters::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTL3DMobileStartPointParameters");

	return Clss;
}


// WTL3DMobileStartPointParameters WTL.Default__WTL3DMobileStartPointParameters
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTL3DMobileStartPointParameters* UWTL3DMobileStartPointParameters::GetDefaultObj()
{
	static class UWTL3DMobileStartPointParameters* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTL3DMobileStartPointParameters*>(UWTL3DMobileStartPointParameters::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTL3DMonsterIdentity
// (None)

class UClass* UWTL3DMonsterIdentity::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTL3DMonsterIdentity");

	return Clss;
}


// WTL3DMonsterIdentity WTL.Default__WTL3DMonsterIdentity
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTL3DMonsterIdentity* UWTL3DMonsterIdentity::GetDefaultObj()
{
	static class UWTL3DMonsterIdentity* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTL3DMonsterIdentity*>(UWTL3DMonsterIdentity::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTL3DMonsterName
// (None)

class UClass* UWTL3DMonsterName::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTL3DMonsterName");

	return Clss;
}


// WTL3DMonsterName WTL.Default__WTL3DMonsterName
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTL3DMonsterName* UWTL3DMonsterName::GetDefaultObj()
{
	static class UWTL3DMonsterName* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTL3DMonsterName*>(UWTL3DMonsterName::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTL3DMonsterName.SetMonsterLevelText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              MonsterLevel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTL3DMonsterName::SetMonsterLevelText(int32 MonsterLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTL3DMonsterName", "SetMonsterLevelText");

	Params::UWTL3DMonsterName_SetMonsterLevelText_Params Parms{};

	Parms.MonsterLevel = MonsterLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTL3DPlayerIdentity
// (None)

class UClass* UWTL3DPlayerIdentity::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTL3DPlayerIdentity");

	return Clss;
}


// WTL3DPlayerIdentity WTL.Default__WTL3DPlayerIdentity
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTL3DPlayerIdentity* UWTL3DPlayerIdentity::GetDefaultObj()
{
	static class UWTL3DPlayerIdentity* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTL3DPlayerIdentity*>(UWTL3DPlayerIdentity::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAchievementSystem
// (None)

class UClass* UWTLAchievementSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAchievementSystem");

	return Clss;
}


// WTLAchievementSystem WTL.Default__WTLAchievementSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAchievementSystem* UWTLAchievementSystem::GetDefaultObj()
{
	static class UWTLAchievementSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAchievementSystem*>(UWTLAchievementSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLActionGameplayActivity
// (Actor)

class UClass* AWTLActionGameplayActivity::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLActionGameplayActivity");

	return Clss;
}


// WTLActionGameplayActivity WTL.Default__WTLActionGameplayActivity
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLActionGameplayActivity* AWTLActionGameplayActivity::GetDefaultObj()
{
	static class AWTLActionGameplayActivity* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLActionGameplayActivity*>(AWTLActionGameplayActivity::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLFortificationObject
// (Actor)

class UClass* AWTLFortificationObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFortificationObject");

	return Clss;
}


// WTLFortificationObject WTL.Default__WTLFortificationObject
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFortificationObject* AWTLFortificationObject::GetDefaultObj()
{
	static class AWTLFortificationObject* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFortificationObject*>(AWTLFortificationObject::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLActionGameplayMachinegun
// (Actor)

class UClass* AWTLActionGameplayMachinegun::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLActionGameplayMachinegun");

	return Clss;
}


// WTLActionGameplayMachinegun WTL.Default__WTLActionGameplayMachinegun
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLActionGameplayMachinegun* AWTLActionGameplayMachinegun::GetDefaultObj()
{
	static class AWTLActionGameplayMachinegun* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLActionGameplayMachinegun*>(AWTLActionGameplayMachinegun::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLActionGameplayMachinegun.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLActionGameplayMachinegun::SetEnabled(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "SetEnabled");

	Params::AWTLActionGameplayMachinegun_SetEnabled_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayMachinegun.OnUse
// (Final, Native, Private)
// Parameters:

void AWTLActionGameplayMachinegun::OnUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "OnUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayMachinegun.OnStorageCheck
// (Final, Native, Private)
// Parameters:

void AWTLActionGameplayMachinegun::OnStorageCheck()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "OnStorageCheck");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayMachinegun.OnRep_StorageContent
// (Final, Native, Private)
// Parameters:

void AWTLActionGameplayMachinegun::OnRep_StorageContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "OnRep_StorageContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayMachinegun.OnRep_MachinegunRortation
// (Final, Native, Private)
// Parameters:

void AWTLActionGameplayMachinegun::OnRep_MachinegunRortation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "OnRep_MachinegunRortation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayMachinegun.OnRep_IsInUse
// (Final, Native, Private)
// Parameters:

void AWTLActionGameplayMachinegun::OnRep_IsInUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "OnRep_IsInUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayMachinegun.OnRep_bIsAction
// (Final, Native, Private)
// Parameters:

void AWTLActionGameplayMachinegun::OnRep_bIsAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "OnRep_bIsAction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayMachinegun.OnLocalClientAcion
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLActionGameplayMachinegun::OnLocalClientAcion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "OnLocalClientAcion");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLActionGameplayMachinegun.OnClientUsageStop
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLActionGameplayMachinegun::OnClientUsageStop()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "OnClientUsageStop");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLActionGameplayMachinegun.OnClientUsageStart
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLActionGameplayMachinegun::OnClientUsageStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "OnClientUsageStart");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLActionGameplayMachinegun.GetPauseBetweenShots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLActionGameplayMachinegun::GetPauseBetweenShots()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "GetPauseBetweenShots");

	Params::AWTLActionGameplayMachinegun_GetPauseBetweenShots_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayMachinegun.GetOverheatSafeTemperature
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLActionGameplayMachinegun::GetOverheatSafeTemperature()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "GetOverheatSafeTemperature");

	Params::AWTLActionGameplayMachinegun_GetOverheatSafeTemperature_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayMachinegun.GetOverheatPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLActionGameplayMachinegun::GetOverheatPercent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "GetOverheatPercent");

	Params::AWTLActionGameplayMachinegun_GetOverheatPercent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayMachinegun.GetMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AWTLActionGameplayMachinegun::GetMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "GetMesh");

	Params::AWTLActionGameplayMachinegun_GetMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayMachinegun.GetIsInAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLActionGameplayMachinegun::GetIsInAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "GetIsInAction");

	Params::AWTLActionGameplayMachinegun_GetIsInAction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayMachinegun.GetIsCoolingDown
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLActionGameplayMachinegun::GetIsCoolingDown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "GetIsCoolingDown");

	Params::AWTLActionGameplayMachinegun_GetIsCoolingDown_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayMachinegun.GetCurrentCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* AWTLActionGameplayMachinegun::GetCurrentCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "GetCurrentCharacter");

	Params::AWTLActionGameplayMachinegun_GetCurrentCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayMachinegun.FillAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              AmmoID                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLActionGameplayMachinegun::FillAmmo(int32 AmmoID, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayMachinegun", "FillAmmo");

	Params::AWTLActionGameplayMachinegun_FillAmmo_Params Parms{};

	Parms.AmmoID = AmmoID;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLActionGameplayObjectInterface
// (None)

class UClass* IWTLActionGameplayObjectInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLActionGameplayObjectInterface");

	return Clss;
}


// WTLActionGameplayObjectInterface WTL.Default__WTLActionGameplayObjectInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLActionGameplayObjectInterface* IWTLActionGameplayObjectInterface::GetDefaultObj()
{
	static class IWTLActionGameplayObjectInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLActionGameplayObjectInterface*>(IWTLActionGameplayObjectInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLActionGameplayObjectInterface.SelectPreviousSlot
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLActionGameplayObjectInterface::SelectPreviousSlot(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "SelectPreviousSlot");

	Params::IWTLActionGameplayObjectInterface_SelectPreviousSlot_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayObjectInterface.SelectNextSlot
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLActionGameplayObjectInterface::SelectNextSlot(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "SelectNextSlot");

	Params::IWTLActionGameplayObjectInterface_SelectNextSlot_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayObjectInterface.OnCharacterStartActionWithGameplayObject
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLActionGameplayObjectInterface::OnCharacterStartActionWithGameplayObject(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "OnCharacterStartActionWithGameplayObject");

	Params::IWTLActionGameplayObjectInterface_OnCharacterStartActionWithGameplayObject_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayObjectInterface.OnCharacterFinishActionWithGameplayObject
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLActionGameplayObjectInterface::OnCharacterFinishActionWithGameplayObject(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "OnCharacterFinishActionWithGameplayObject");

	Params::IWTLActionGameplayObjectInterface_OnCharacterFinishActionWithGameplayObject_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayObjectInterface.MainUseStart
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLActionGameplayObjectInterface::MainUseStart(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "MainUseStart");

	Params::IWTLActionGameplayObjectInterface_MainUseStart_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActionGameplayObjectInterface.GetDesiredFOV
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IWTLActionGameplayObjectInterface::GetDesiredFOV()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "GetDesiredFOV");

	Params::IWTLActionGameplayObjectInterface_GetDesiredFOV_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayObjectInterface.CanStopAction
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IWTLActionGameplayObjectInterface::CanStopAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "CanStopAction");

	Params::IWTLActionGameplayObjectInterface_CanStopAction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayObjectInterface.CanStartActionWithItemInHands
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWTLUsable*                  ItemInHands                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IWTLActionGameplayObjectInterface::CanStartActionWithItemInHands(class AWTLUsable* ItemInHands)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "CanStartActionWithItemInHands");

	Params::IWTLActionGameplayObjectInterface_CanStartActionWithItemInHands_Params Parms{};

	Parms.ItemInHands = ItemInHands;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayObjectInterface.CanStartActionRightNow
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IWTLActionGameplayObjectInterface::CanStartActionRightNow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "CanStartActionRightNow");

	Params::IWTLActionGameplayObjectInterface_CanStartActionRightNow_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayObjectInterface.CanDrawDotPointer
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IWTLActionGameplayObjectInterface::CanDrawDotPointer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "CanDrawDotPointer");

	Params::IWTLActionGameplayObjectInterface_CanDrawDotPointer_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActionGameplayObjectInterface.CanChangeItemInArmsWhenActionInProgress
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IWTLActionGameplayObjectInterface::CanChangeItemInArmsWhenActionInProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActionGameplayObjectInterface", "CanChangeItemInArmsWhenActionInProgress");

	Params::IWTLActionGameplayObjectInterface_CanChangeItemInArmsWhenActionInProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLAnomaly
// (Actor)

class UClass* AWTLAnomaly::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnomaly");

	return Clss;
}


// WTLAnomaly WTL.Default__WTLAnomaly
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAnomaly* AWTLAnomaly::GetDefaultObj()
{
	static class AWTLAnomaly* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAnomaly*>(AWTLAnomaly::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLAnomaly.TeleportCharacterToRandomPointInRange
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinRange                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxRange                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLAnomalyActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAnomaly::TeleportCharacterToRandomPointInRange(class AWTLCharacter* Character, float MinRange, float MaxRange, enum class EWTLAnomalyActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnomaly", "TeleportCharacterToRandomPointInRange");

	Params::AWTLAnomaly_TeleportCharacterToRandomPointInRange_Params Parms{};

	Parms.Character = Character;
	Parms.MinRange = MinRange;
	Parms.MaxRange = MaxRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLAnomaly.TeleportCharacterToRandomPointArray
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>             Locations                                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLAnomalyActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAnomaly::TeleportCharacterToRandomPointArray(class AWTLCharacter* Character, const TArray<struct FVector>& Locations, enum class EWTLAnomalyActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnomaly", "TeleportCharacterToRandomPointArray");

	Params::AWTLAnomaly_TeleportCharacterToRandomPointArray_Params Parms{};

	Parms.Character = Character;
	Parms.Locations = Locations;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLAnomaly.TeleportCharacterToPoint
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLAnomalyActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAnomaly::TeleportCharacterToPoint(class AWTLCharacter* Character, const struct FVector& Location, enum class EWTLAnomalyActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnomaly", "TeleportCharacterToPoint");

	Params::AWTLAnomaly_TeleportCharacterToPoint_Params Parms{};

	Parms.Character = Character;
	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLAnomaly.OnEMPGrenadeExplosion
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLAnomaly::OnEMPGrenadeExplosion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnomaly", "OnEMPGrenadeExplosion");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLAnomaly.IsCharacterHoldingBreath
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLAnomalyCheckResult  Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAnomaly::IsCharacterHoldingBreath(class AWTLCharacter* Character, enum class EWTLAnomalyCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnomaly", "IsCharacterHoldingBreath");

	Params::AWTLAnomaly_IsCharacterHoldingBreath_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLAnomaly.ApplyRadialDamage
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// float                              DamageValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     DamageOrigin                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageRadius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>     DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLAnomalyActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAnomaly::ApplyRadialDamage(float DamageValue, const struct FVector& DamageOrigin, float DamageRadius, TSubclassOf<class UDamageType> DamageTypeClass, enum class EWTLAnomalyActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnomaly", "ApplyRadialDamage");

	Params::AWTLAnomaly_ApplyRadialDamage_Params Parms{};

	Parms.DamageValue = DamageValue;
	Parms.DamageOrigin = DamageOrigin;
	Parms.DamageRadius = DamageRadius;
	Parms.DamageTypeClass = DamageTypeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLAnomaly.AddEffectToCharacterWithFalloff
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectValue                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FalloffRadius                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinEffectValue                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLAnomalyActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAnomaly::AddEffectToCharacterWithFalloff(class AWTLCharacter* Character, enum class EWTLCharacterEffectType EffectType, float EffectValue, const struct FVector& Origin, float FalloffRadius, float MinEffectValue, enum class EWTLAnomalyActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnomaly", "AddEffectToCharacterWithFalloff");

	Params::AWTLAnomaly_AddEffectToCharacterWithFalloff_Params Parms{};

	Parms.Character = Character;
	Parms.EffectType = EffectType;
	Parms.EffectValue = EffectValue;
	Parms.Origin = Origin;
	Parms.FalloffRadius = FalloffRadius;
	Parms.MinEffectValue = MinEffectValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLAnomaly.AddEffectToCharactersWithFalloff
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<class AWTLCharacter*>       Characters                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FalloffRadius                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinEffectValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLAnomalyActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAnomaly::AddEffectToCharactersWithFalloff(const TArray<class AWTLCharacter*>& Characters, enum class EWTLCharacterEffectType EffectType, float EffectValue, const struct FVector& Origin, float FalloffRadius, float MinEffectValue, enum class EWTLAnomalyActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnomaly", "AddEffectToCharactersWithFalloff");

	Params::AWTLAnomaly_AddEffectToCharactersWithFalloff_Params Parms{};

	Parms.Characters = Characters;
	Parms.EffectType = EffectType;
	Parms.EffectValue = EffectValue;
	Parms.Origin = Origin;
	Parms.FalloffRadius = FalloffRadius;
	Parms.MinEffectValue = MinEffectValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLAnomaly.AddEffectToCharacters
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AWTLCharacter*>       Characters                                                       (ConstParm, Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectValue                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLAnomalyActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAnomaly::AddEffectToCharacters(const TArray<class AWTLCharacter*>& Characters, enum class EWTLCharacterEffectType EffectType, float EffectValue, enum class EWTLAnomalyActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnomaly", "AddEffectToCharacters");

	Params::AWTLAnomaly_AddEffectToCharacters_Params Parms{};

	Parms.Characters = Characters;
	Parms.EffectType = EffectType;
	Parms.EffectValue = EffectValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLAnomaly.AddEffectToCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectValue                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLAnomalyActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAnomaly::AddEffectToCharacter(class AWTLCharacter* Character, enum class EWTLCharacterEffectType EffectType, float EffectValue, enum class EWTLAnomalyActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnomaly", "AddEffectToCharacter");

	Params::AWTLAnomaly_AddEffectToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.EffectType = EffectType;
	Parms.EffectValue = EffectValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Class WTL.WTLStaticAnomaly
// (Actor)

class UClass* AWTLStaticAnomaly::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStaticAnomaly");

	return Clss;
}


// WTLStaticAnomaly WTL.Default__WTLStaticAnomaly
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStaticAnomaly* AWTLStaticAnomaly::GetDefaultObj()
{
	static class AWTLStaticAnomaly* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStaticAnomaly*>(AWTLStaticAnomaly::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLStaticAnomaly.OnThrowingDeviceProjectileEnter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLThrowingDeviceProjectile*ThrowingDeviceProjectile                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStaticAnomaly::OnThrowingDeviceProjectileEnter(class AWTLThrowingDeviceProjectile* ThrowingDeviceProjectile)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "OnThrowingDeviceProjectileEnter");

	Params::AWTLStaticAnomaly_OnThrowingDeviceProjectileEnter_Params Parms{};

	Parms.ThrowingDeviceProjectile = ThrowingDeviceProjectile;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLStaticAnomaly.OnNutLeave
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLNut*                     Nut                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStaticAnomaly::OnNutLeave(class AWTLNut* Nut)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "OnNutLeave");

	Params::AWTLStaticAnomaly_OnNutLeave_Params Parms{};

	Parms.Nut = Nut;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLStaticAnomaly.OnNutEnter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLNut*                     Nut                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStaticAnomaly::OnNutEnter(class AWTLNut* Nut)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "OnNutEnter");

	Params::AWTLStaticAnomaly_OnNutEnter_Params Parms{};

	Parms.Nut = Nut;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLStaticAnomaly.OnMonsterLeave
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStaticAnomaly::OnMonsterLeave(class AWTLMonsterPawn* Monster)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "OnMonsterLeave");

	Params::AWTLStaticAnomaly_OnMonsterLeave_Params Parms{};

	Parms.Monster = Monster;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLStaticAnomaly.OnMonsterEnter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStaticAnomaly::OnMonsterEnter(class AWTLMonsterPawn* Monster)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "OnMonsterEnter");

	Params::AWTLStaticAnomaly_OnMonsterEnter_Params Parms{};

	Parms.Monster = Monster;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLStaticAnomaly.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStaticAnomaly::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "OnEndOverlap");

	Params::AWTLStaticAnomaly_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStaticAnomaly.OnCharacterLeave
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStaticAnomaly::OnCharacterLeave(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "OnCharacterLeave");

	Params::AWTLStaticAnomaly_OnCharacterLeave_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLStaticAnomaly.OnCharacterEnter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStaticAnomaly::OnCharacterEnter(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "OnCharacterEnter");

	Params::AWTLStaticAnomaly_OnCharacterEnter_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLStaticAnomaly.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLStaticAnomaly::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "OnBeginOverlap");

	Params::AWTLStaticAnomaly_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStaticAnomaly.GetMonstersInVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AWTLMonsterPawn*>     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLMonsterPawn*> AWTLStaticAnomaly::GetMonstersInVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "GetMonstersInVolume");

	Params::AWTLStaticAnomaly_GetMonstersInVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLStaticAnomaly.GetCharactersInVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AWTLCharacter*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLCharacter*> AWTLStaticAnomaly::GetCharactersInVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaticAnomaly", "GetCharactersInVolume");

	Params::AWTLStaticAnomaly_GetCharactersInVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLActivatableAnomaly
// (Actor)

class UClass* AWTLActivatableAnomaly::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLActivatableAnomaly");

	return Clss;
}


// WTLActivatableAnomaly WTL.Default__WTLActivatableAnomaly
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLActivatableAnomaly* AWTLActivatableAnomaly::GetDefaultObj()
{
	static class AWTLActivatableAnomaly* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLActivatableAnomaly*>(AWTLActivatableAnomaly::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLActivatableAnomaly.ServerOnActivated
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLActivatableAnomaly::ServerOnActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableAnomaly", "ServerOnActivated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLActivatableAnomaly.OnRep_State
// (Final, Native, Private)
// Parameters:

void AWTLActivatableAnomaly::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableAnomaly", "OnRep_State");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActivatableAnomaly.OnRep_Energy
// (Final, Native, Private)
// Parameters:

void AWTLActivatableAnomaly::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableAnomaly", "OnRep_Energy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActivatableAnomaly.OnEnergyChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              EnergyValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLActivatableAnomaly::OnEnergyChanged(float EnergyValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableAnomaly", "OnEnergyChanged");

	Params::AWTLActivatableAnomaly_OnEnergyChanged_Params Parms{};

	Parms.EnergyValue = EnergyValue;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLActivatableAnomaly.ClientOnBeginActivate
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLActivatableAnomaly::ClientOnBeginActivate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableAnomaly", "ClientOnBeginActivate");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLActivatableAnomaly.ClientOnActivated
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLActivatableAnomaly::ClientOnActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableAnomaly", "ClientOnActivated");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLMovingAnomaly
// (Actor)

class UClass* AWTLMovingAnomaly::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMovingAnomaly");

	return Clss;
}


// WTLMovingAnomaly WTL.Default__WTLMovingAnomaly
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMovingAnomaly* AWTLMovingAnomaly::GetDefaultObj()
{
	static class AWTLMovingAnomaly* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMovingAnomaly*>(AWTLMovingAnomaly::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMovingAnomaly.OnRep_SynchronizationPosition
// (Final, Native, Protected)
// Parameters:

void AWTLMovingAnomaly::OnRep_SynchronizationPosition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnRep_SynchronizationPosition");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMovingAnomaly.OnNutLeave
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLNut*                     Nut                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMovingAnomaly::OnNutLeave(class AWTLNut* Nut)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnNutLeave");

	Params::AWTLMovingAnomaly_OnNutLeave_Params Parms{};

	Parms.Nut = Nut;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMovingAnomaly.OnNutEnter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLNut*                     Nut                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMovingAnomaly::OnNutEnter(class AWTLNut* Nut)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnNutEnter");

	Params::AWTLMovingAnomaly_OnNutEnter_Params Parms{};

	Parms.Nut = Nut;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMovingAnomaly.OnNPCLeave
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLEnemyNPC*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMovingAnomaly::OnNPCLeave(class AWTLEnemyNPC* NPC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnNPCLeave");

	Params::AWTLMovingAnomaly_OnNPCLeave_Params Parms{};

	Parms.NPC = NPC;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMovingAnomaly.OnNPCEnter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLEnemyNPC*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMovingAnomaly::OnNPCEnter(class AWTLEnemyNPC* NPC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnNPCEnter");

	Params::AWTLMovingAnomaly_OnNPCEnter_Params Parms{};

	Parms.NPC = NPC;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMovingAnomaly.OnMonsterLeave
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMovingAnomaly::OnMonsterLeave(class AWTLMonsterPawn* Monster)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnMonsterLeave");

	Params::AWTLMovingAnomaly_OnMonsterLeave_Params Parms{};

	Parms.Monster = Monster;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMovingAnomaly.OnMonsterEnter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMovingAnomaly::OnMonsterEnter(class AWTLMonsterPawn* Monster)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnMonsterEnter");

	Params::AWTLMovingAnomaly_OnMonsterEnter_Params Parms{};

	Parms.Monster = Monster;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMovingAnomaly.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMovingAnomaly::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnEndOverlap");

	Params::AWTLMovingAnomaly_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMovingAnomaly.OnCharacterLeave
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMovingAnomaly::OnCharacterLeave(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnCharacterLeave");

	Params::AWTLMovingAnomaly_OnCharacterLeave_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMovingAnomaly.OnCharacterEnter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMovingAnomaly::OnCharacterEnter(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnCharacterEnter");

	Params::AWTLMovingAnomaly_OnCharacterEnter_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMovingAnomaly.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMovingAnomaly::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "OnBeginOverlap");

	Params::AWTLMovingAnomaly_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMovingAnomaly.GetNPCInVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AWTLEnemyNPC*>        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLEnemyNPC*> AWTLMovingAnomaly::GetNPCInVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "GetNPCInVolume");

	Params::AWTLMovingAnomaly_GetNPCInVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMovingAnomaly.GetMonstersInVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AWTLMonsterPawn*>     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLMonsterPawn*> AWTLMovingAnomaly::GetMonstersInVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "GetMonstersInVolume");

	Params::AWTLMovingAnomaly_GetMonstersInVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMovingAnomaly.GetCharactersInVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AWTLCharacter*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLCharacter*> AWTLMovingAnomaly::GetCharactersInVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "GetCharactersInVolume");

	Params::AWTLMovingAnomaly_GetCharactersInVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMovingAnomaly.GetActorsInVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> AWTLMovingAnomaly::GetActorsInVolume()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMovingAnomaly", "GetActorsInVolume");

	Params::AWTLMovingAnomaly_GetActorsInVolume_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLActivatableMovingAnomaly
// (Actor)

class UClass* AWTLActivatableMovingAnomaly::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLActivatableMovingAnomaly");

	return Clss;
}


// WTLActivatableMovingAnomaly WTL.Default__WTLActivatableMovingAnomaly
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLActivatableMovingAnomaly* AWTLActivatableMovingAnomaly::GetDefaultObj()
{
	static class AWTLActivatableMovingAnomaly* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLActivatableMovingAnomaly*>(AWTLActivatableMovingAnomaly::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLActivatableMovingAnomaly.ServerOnActivated
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLActivatableMovingAnomaly::ServerOnActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableMovingAnomaly", "ServerOnActivated");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLActivatableMovingAnomaly.OnRep_State
// (Final, Native, Private)
// Parameters:

void AWTLActivatableMovingAnomaly::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableMovingAnomaly", "OnRep_State");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActivatableMovingAnomaly.OnRep_Energy
// (Final, Native, Private)
// Parameters:

void AWTLActivatableMovingAnomaly::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableMovingAnomaly", "OnRep_Energy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActivatableMovingAnomaly.OnEnergyChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              EnergyValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLActivatableMovingAnomaly::OnEnergyChanged(float EnergyValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableMovingAnomaly", "OnEnergyChanged");

	Params::AWTLActivatableMovingAnomaly_OnEnergyChanged_Params Parms{};

	Parms.EnergyValue = EnergyValue;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLActivatableMovingAnomaly.ClientOnBeginActivate
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLActivatableMovingAnomaly::ClientOnBeginActivate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableMovingAnomaly", "ClientOnBeginActivate");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLActivatableMovingAnomaly.ClientOnActivated
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLActivatableMovingAnomaly::ClientOnActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableMovingAnomaly", "ClientOnActivated");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLActivatableObject
// (Actor)

class UClass* AWTLActivatableObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLActivatableObject");

	return Clss;
}


// WTLActivatableObject WTL.Default__WTLActivatableObject
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLActivatableObject* AWTLActivatableObject::GetDefaultObj()
{
	static class AWTLActivatableObject* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLActivatableObject*>(AWTLActivatableObject::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLActivatableObject.BP_NotifyActivationStarted
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Activator                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLActivatableObject::BP_NotifyActivationStarted(class AWTLCharacter* Activator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableObject", "BP_NotifyActivationStarted");

	Params::AWTLActivatableObject_BP_NotifyActivationStarted_Params Parms{};

	Parms.Activator = Activator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLActivatableObject.BP_DeactivateObject
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Activator                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLActivatableObject::BP_DeactivateObject(class AWTLCharacter* Activator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableObject", "BP_DeactivateObject");

	Params::AWTLActivatableObject_BP_DeactivateObject_Params Parms{};

	Parms.Activator = Activator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLActivatableObject.BP_CanBeActivated
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLActivatableObject::BP_CanBeActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableObject", "BP_CanBeActivated");

	Params::AWTLActivatableObject_BP_CanBeActivated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLActivatableObject.BP_ActivateObject
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Activator                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLActivatableObject::BP_ActivateObject(class AWTLCharacter* Activator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatableObject", "BP_ActivateObject");

	Params::AWTLActivatableObject_BP_ActivateObject_Params Parms{};

	Parms.Activator = Activator;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLActivatableObjectInterface
// (None)

class UClass* IWTLActivatableObjectInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLActivatableObjectInterface");

	return Clss;
}


// WTLActivatableObjectInterface WTL.Default__WTLActivatableObjectInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLActivatableObjectInterface* IWTLActivatableObjectInterface::GetDefaultObj()
{
	static class IWTLActivatableObjectInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLActivatableObjectInterface*>(IWTLActivatableObjectInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLActivatorVolume
// (Actor)

class UClass* AWTLActivatorVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLActivatorVolume");

	return Clss;
}


// WTLActivatorVolume WTL.Default__WTLActivatorVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLActivatorVolume* AWTLActivatorVolume::GetDefaultObj()
{
	static class AWTLActivatorVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLActivatorVolume*>(AWTLActivatorVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLActivatorVolume.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLActivatorVolume::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatorVolume", "OnEndOverlap");

	Params::AWTLActivatorVolume_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLActivatorVolume.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLActivatorVolume::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLActivatorVolume", "OnBeginOverlap");

	Params::AWTLActivatorVolume_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLAIAnimInstance
// (None)

class UClass* UWTLAIAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAIAnimInstance");

	return Clss;
}


// WTLAIAnimInstance WTL.Default__WTLAIAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAIAnimInstance* UWTLAIAnimInstance::GetDefaultObj()
{
	static class UWTLAIAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAIAnimInstance*>(UWTLAIAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAICharacter
// (Actor, Pawn)

class UClass* AWTLAICharacter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAICharacter");

	return Clss;
}


// WTLAICharacter WTL.Default__WTLAICharacter
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAICharacter* AWTLAICharacter::GetDefaultObj()
{
	static class AWTLAICharacter* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAICharacter*>(AWTLAICharacter::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLAICharacter.SetStealthMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacter::SetStealthMode(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "SetStealthMode");

	Params::AWTLAICharacter_SetStealthMode_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.SetSpawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLSpawnAICharacter*        Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacter::SetSpawn(class AWTLSpawnAICharacter* Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "SetSpawn");

	Params::AWTLAICharacter_SetSpawn_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.SetLifetime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacter::SetLifetime(float Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "SetLifetime");

	Params::AWTLAICharacter_SetLifetime_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.SetLifespanAfterDeath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacter::SetLifespanAfterDeath(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "SetLifespanAfterDeath");

	Params::AWTLAICharacter_SetLifespanAfterDeath_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.SetApplyWeaponTypeDamageMultipliers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacter::SetApplyWeaponTypeDamageMultipliers(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "SetApplyWeaponTypeDamageMultipliers");

	Params::AWTLAICharacter_SetApplyWeaponTypeDamageMultipliers_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.OnRep_StorageContent
// (Final, Native, Public)
// Parameters:

void AWTLAICharacter::OnRep_StorageContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "OnRep_StorageContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.OnRep_IsInStealthMode
// (Final, Native, Public)
// Parameters:

void AWTLAICharacter::OnRep_IsInStealthMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "OnRep_IsInStealthMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.OnRep_Health
// (Final, Native, Public)
// Parameters:

void AWTLAICharacter::OnRep_Health()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "OnRep_Health");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.NetMulticast_OnToDeath
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                     DeathPosition                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         ActorRotation                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         MeshRotation                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLAICharacterDeathData    DeathData                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLAICharacter::NetMulticast_OnToDeath(struct FVector& DeathPosition, const struct FVector_NetQuantize& ActorRotation, const struct FVector_NetQuantize& MeshRotation, const struct FWTLAICharacterDeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "NetMulticast_OnToDeath");

	Params::AWTLAICharacter_NetMulticast_OnToDeath_Params Parms{};

	Parms.DeathPosition = DeathPosition;
	Parms.ActorRotation = ActorRotation;
	Parms.MeshRotation = MeshRotation;
	Parms.DeathData = DeathData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.NetMulticast_OnDeath
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                     DeathPosition                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         ActorRotation                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         MeshRotation                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLAICharacterDeathData    DeathData                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLAICharacter::NetMulticast_OnDeath(struct FVector& DeathPosition, const struct FVector_NetQuantize& ActorRotation, const struct FVector_NetQuantize& MeshRotation, const struct FWTLAICharacterDeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "NetMulticast_OnDeath");

	Params::AWTLAICharacter_NetMulticast_OnDeath_Params Parms{};

	Parms.DeathPosition = DeathPosition;
	Parms.ActorRotation = ActorRotation;
	Parms.MeshRotation = MeshRotation;
	Parms.DeathData = DeathData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.KillAiCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLAICharacter::KillAiCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "KillAiCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacter.K2_OnToDeathEvent
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                     DeathPosition                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         ActorRotation                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         MeshRotation                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLAICharacterDeathData    DeathData                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLAICharacter::K2_OnToDeathEvent(struct FVector& DeathPosition, const struct FVector_NetQuantize& ActorRotation, const struct FVector_NetQuantize& MeshRotation, const struct FWTLAICharacterDeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "K2_OnToDeathEvent");

	Params::AWTLAICharacter_K2_OnToDeathEvent_Params Parms{};

	Parms.DeathPosition = DeathPosition;
	Parms.ActorRotation = ActorRotation;
	Parms.MeshRotation = MeshRotation;
	Parms.DeathData = DeathData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAICharacter.K2_OnStealthModeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacter::K2_OnStealthModeChanged(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "K2_OnStealthModeChanged");

	Params::AWTLAICharacter_K2_OnStealthModeChanged_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAICharacter.K2_OnDeathEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FWTLAICharacterDeathData    DeathData                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLAICharacter::K2_OnDeathEvent(const struct FWTLAICharacterDeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "K2_OnDeathEvent");

	Params::AWTLAICharacter_K2_OnDeathEvent_Params Parms{};

	Parms.DeathData = DeathData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAICharacter.K2_OnBurst
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FWTLAICharacterDeathData    DeathData                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLAICharacter::K2_OnBurst(const struct FWTLAICharacterDeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "K2_OnBurst");

	Params::AWTLAICharacter_K2_OnBurst_Params Parms{};

	Parms.DeathData = DeathData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAICharacter.IsVisible
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLAICharacter::IsVisible()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "IsVisible");

	Params::AWTLAICharacter_IsVisible_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAICharacter.IsApplyWeaponTypeDamageMultipliers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLAICharacter::IsApplyWeaponTypeDamageMultipliers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "IsApplyWeaponTypeDamageMultipliers");

	Params::AWTLAICharacter_IsApplyWeaponTypeDamageMultipliers_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAICharacter.IsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLAICharacter::IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "IsAlive");

	Params::AWTLAICharacter_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAICharacter.GetSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLSpawnAICharacter*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLSpawnAICharacter* AWTLAICharacter::GetSpawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "GetSpawn");

	Params::AWTLAICharacter_GetSpawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAICharacter.GetMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLAICharacter::GetMaxHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "GetMaxHealth");

	Params::AWTLAICharacter_GetMaxHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAICharacter.GetHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLAICharacter::GetHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "GetHealth");

	Params::AWTLAICharacter_GetHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAICharacter.GetDangerLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLAICharacter::GetDangerLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "GetDangerLevel");

	Params::AWTLAICharacter_GetDangerLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAICharacter.GetAICharacterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLAICharacter::GetAICharacterID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacter", "GetAICharacterID");

	Params::AWTLAICharacter_GetAICharacterID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLAICharacterController
// (Actor)

class UClass* AWTLAICharacterController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAICharacterController");

	return Clss;
}


// WTLAICharacterController WTL.Default__WTLAICharacterController
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAICharacterController* AWTLAICharacterController::GetDefaultObj()
{
	static class AWTLAICharacterController* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAICharacterController*>(AWTLAICharacterController::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLAICharacterController.OnTouchSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacterController::OnTouchSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacterController", "OnTouchSenseUpdated");

	Params::AWTLAICharacterController_OnTouchSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAICharacterController.OnTeamSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacterController::OnTeamSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacterController", "OnTeamSenseUpdated");

	Params::AWTLAICharacterController_OnTeamSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAICharacterController.OnSightSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacterController::OnSightSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacterController", "OnSightSenseUpdated");

	Params::AWTLAICharacterController_OnSightSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAICharacterController.OnPredictionUpdate
// (Final, Native, Public)
// Parameters:

void AWTLAICharacterController::OnPredictionUpdate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacterController", "OnPredictionUpdate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacterController.OnPredictionSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacterController::OnPredictionSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacterController", "OnPredictionSenseUpdated");

	Params::AWTLAICharacterController_OnPredictionSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAICharacterController.OnPerceptionUpdated
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class AActor*>              UpdatedActors                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLAICharacterController::OnPerceptionUpdated(TArray<class AActor*>& UpdatedActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacterController", "OnPerceptionUpdated");

	Params::AWTLAICharacterController_OnPerceptionUpdated_Params Parms{};

	Parms.UpdatedActors = UpdatedActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacterController.OnHearingSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacterController::OnHearingSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacterController", "OnHearingSenseUpdated");

	Params::AWTLAICharacterController_OnHearingSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAICharacterController.OnDamageSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAICharacterController::OnDamageSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacterController", "OnDamageSenseUpdated");

	Params::AWTLAICharacterController_OnDamageSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAICharacterController.OnActorPerceptionUpdated
// (Final, Native, Public)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAIStimulus                 Stimulus                                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLAICharacterController::OnActorPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacterController", "OnActorPerceptionUpdated");

	Params::AWTLAICharacterController_OnActorPerceptionUpdated_Params Parms{};

	Parms.Actor = Actor;
	Parms.Stimulus = Stimulus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAICharacterController.GetMyPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLAICharacter*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLAICharacter* AWTLAICharacterController::GetMyPawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAICharacterController", "GetMyPawn");

	Params::AWTLAICharacterController_GetMyPawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLAIDestroyObject
// (Actor)

class UClass* AWTLAIDestroyObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAIDestroyObject");

	return Clss;
}


// WTLAIDestroyObject WTL.Default__WTLAIDestroyObject
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAIDestroyObject* AWTLAIDestroyObject::GetDefaultObj()
{
	static class AWTLAIDestroyObject* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAIDestroyObject*>(AWTLAIDestroyObject::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLAIDestroyObject.OnChangeCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              DeltaCondition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAIDestroyObject::OnChangeCondition(float DeltaCondition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "OnChangeCondition");

	Params::AWTLAIDestroyObject_OnChangeCondition_Params Parms{};

	Parms.DeltaCondition = DeltaCondition;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAIDestroyObject.BPUse
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAIDestroyObject::BPUse(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "BPUse");

	Params::AWTLAIDestroyObject_BPUse_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAIDestroyObject.BPSetHighlightState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAIDestroyObject::BPSetHighlightState(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "BPSetHighlightState");

	Params::AWTLAIDestroyObject_BPSetHighlightState_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAIDestroyObject.BPGetDisplayText
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLAIDestroyObject::BPGetDisplayText(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "BPGetDisplayText");

	Params::AWTLAIDestroyObject_BPGetDisplayText_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIDestroyObject.BPCanBeUsed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLAIDestroyObject::BPCanBeUsed(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "BPCanBeUsed");

	Params::AWTLAIDestroyObject_BPCanBeUsed_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIDestroyObject.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLAIDestroyObject::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "AIInterface_IsInSafeZone");

	Params::AWTLAIDestroyObject_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIDestroyObject.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLAIDestroyObject::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "AIInterface_IsCanBeAttacked");

	Params::AWTLAIDestroyObject_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIDestroyObject.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLAIDestroyObject::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "AIInterface_IsAlive");

	Params::AWTLAIDestroyObject_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIDestroyObject.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLAIDestroyObject::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "AIInterface_GetVelocity");

	Params::AWTLAIDestroyObject_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIDestroyObject.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLAIDestroyObject::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "AIInterface_GetGroupID");

	Params::AWTLAIDestroyObject_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIDestroyObject.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLAIDestroyObject::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIDestroyObject", "AIInterface_GetFaction");

	Params::AWTLAIDestroyObject_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLAIFlying
// (Actor, Pawn)

class UClass* AWTLAIFlying::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAIFlying");

	return Clss;
}


// WTLAIFlying WTL.Default__WTLAIFlying
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAIFlying* AWTLAIFlying::GetDefaultObj()
{
	static class AWTLAIFlying* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAIFlying*>(AWTLAIFlying::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAIFlyingController
// (Actor)

class UClass* AWTLAIFlyingController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAIFlyingController");

	return Clss;
}


// WTLAIFlyingController WTL.Default__WTLAIFlyingController
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAIFlyingController* AWTLAIFlyingController::GetDefaultObj()
{
	static class AWTLAIFlyingController* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAIFlyingController*>(AWTLAIFlyingController::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAIMonsterPawn
// (Actor, Pawn)

class UClass* AWTLAIMonsterPawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAIMonsterPawn");

	return Clss;
}


// WTLAIMonsterPawn WTL.Default__WTLAIMonsterPawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAIMonsterPawn* AWTLAIMonsterPawn::GetDefaultObj()
{
	static class AWTLAIMonsterPawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAIMonsterPawn*>(AWTLAIMonsterPawn::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAIPerceptionComponent
// (None)

class UClass* UWTLAIPerceptionComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAIPerceptionComponent");

	return Clss;
}


// WTLAIPerceptionComponent WTL.Default__WTLAIPerceptionComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAIPerceptionComponent* UWTLAIPerceptionComponent::GetDefaultObj()
{
	static class UWTLAIPerceptionComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAIPerceptionComponent*>(UWTLAIPerceptionComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLAIPerceptionComponent.SetSightVisionHalfAngle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Angle                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLAIPerceptionComponent::SetSightVisionHalfAngle(float Angle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIPerceptionComponent", "SetSightVisionHalfAngle");

	Params::UWTLAIPerceptionComponent_SetSightVisionHalfAngle_Params Parms{};

	Parms.Angle = Angle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAIPerceptionComponent.SetSightRadius
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Radius                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLAIPerceptionComponent::SetSightRadius(float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIPerceptionComponent", "SetSightRadius");

	Params::UWTLAIPerceptionComponent_SetSightRadius_Params Parms{};

	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAIPerceptionComponent.GetSightRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLAIPerceptionComponent::GetSightRadius()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIPerceptionComponent", "GetSightRadius");

	Params::UWTLAIPerceptionComponent_GetSightRadius_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIPerceptionComponent.GetSenseHearingRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLAIPerceptionComponent::GetSenseHearingRange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIPerceptionComponent", "GetSenseHearingRange");

	Params::UWTLAIPerceptionComponent_GetSenseHearingRange_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIPerceptionComponent.GetSeenLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      Actor                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UWTLAIPerceptionComponent::GetSeenLocation(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIPerceptionComponent", "GetSeenLocation");

	Params::UWTLAIPerceptionComponent_GetSeenLocation_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIPerceptionComponent.GetPredictionLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TimeSec                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UWTLAIPerceptionComponent::GetPredictionLocation(class AActor* Actor, float TimeSec)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIPerceptionComponent", "GetPredictionLocation");

	Params::UWTLAIPerceptionComponent_GetPredictionLocation_Params Parms{};

	Parms.Actor = Actor;
	Parms.TimeSec = TimeSec;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAIPerceptionComponent.GetIsSenseEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class UAISense>        SenseClass                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLAIPerceptionComponent::GetIsSenseEnabled(TSubclassOf<class UAISense> SenseClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAIPerceptionComponent", "GetIsSenseEnabled");

	Params::UWTLAIPerceptionComponent_GetIsSenseEnabled_Params Parms{};

	Parms.SenseClass = SenseClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLAIPerceptionSystem
// (None)

class UClass* UWTLAIPerceptionSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAIPerceptionSystem");

	return Clss;
}


// WTLAIPerceptionSystem WTL.Default__WTLAIPerceptionSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAIPerceptionSystem* UWTLAIPerceptionSystem::GetDefaultObj()
{
	static class UWTLAIPerceptionSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAIPerceptionSystem*>(UWTLAIPerceptionSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLInteractiveObject
// (Actor)

class UClass* AWTLInteractiveObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLInteractiveObject");

	return Clss;
}


// WTLInteractiveObject WTL.Default__WTLInteractiveObject
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLInteractiveObject* AWTLInteractiveObject::GetDefaultObj()
{
	static class AWTLInteractiveObject* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLInteractiveObject*>(AWTLInteractiveObject::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLInteractiveObject.BPUse
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLInteractiveObject::BPUse(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractiveObject", "BPUse");

	Params::AWTLInteractiveObject_BPUse_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLInteractiveObject.BPSetHighlightState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLInteractiveObject::BPSetHighlightState(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractiveObject", "BPSetHighlightState");

	Params::AWTLInteractiveObject_BPSetHighlightState_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLInteractiveObject.BPGetDisplayText
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLInteractiveObject::BPGetDisplayText(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractiveObject", "BPGetDisplayText");

	Params::AWTLInteractiveObject_BPGetDisplayText_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLInteractiveObject.BPCanBeUsed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLInteractiveObject::BPCanBeUsed(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractiveObject", "BPCanBeUsed");

	Params::AWTLInteractiveObject_BPCanBeUsed_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLStorageBox
// (Actor)

class UClass* AWTLStorageBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStorageBox");

	return Clss;
}


// WTLStorageBox WTL.Default__WTLStorageBox
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStorageBox* AWTLStorageBox::GetDefaultObj()
{
	static class AWTLStorageBox* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStorageBox*>(AWTLStorageBox::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLStorageBox.SetCharacterDropChanceMultiplier
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Multiplier                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStorageBox::SetCharacterDropChanceMultiplier(class AWTLCharacter* Character, float Multiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStorageBox", "SetCharacterDropChanceMultiplier");

	Params::AWTLStorageBox_SetCharacterDropChanceMultiplier_Params Parms{};

	Parms.Character = Character;
	Parms.Multiplier = Multiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStorageBox.OnRep_StorageContent
// (Final, Native, Protected)
// Parameters:

void AWTLStorageBox::OnRep_StorageContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStorageBox", "OnRep_StorageContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStorageBox.AllowSpecialLootForCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SpecialValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStorageBox::AllowSpecialLootForCharacter(class AWTLCharacter* Character, float SpecialValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStorageBox", "AllowSpecialLootForCharacter");

	Params::AWTLStorageBox_AllowSpecialLootForCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.SpecialValue = SpecialValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLAirDropStorage
// (Actor)

class UClass* AWTLAirDropStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAirDropStorage");

	return Clss;
}


// WTLAirDropStorage WTL.Default__WTLAirDropStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAirDropStorage* AWTLAirDropStorage::GetDefaultObj()
{
	static class AWTLAirDropStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAirDropStorage*>(AWTLAirDropStorage::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLAirDropStorage.OnRep_NewLifeTime
// (Final, Native, Private)
// Parameters:

void AWTLAirDropStorage::OnRep_NewLifeTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAirDropStorage", "OnRep_NewLifeTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAirDropStorage.OnRep_bShowPosition
// (Final, Native, Private)
// Parameters:

void AWTLAirDropStorage::OnRep_bShowPosition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAirDropStorage", "OnRep_bShowPosition");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAirDropStorage.OnRep_bShowAll
// (Final, Native, Private)
// Parameters:

void AWTLAirDropStorage::OnRep_bShowAll()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAirDropStorage", "OnRep_bShowAll");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAirDropStorage.NetMulsticast_Destroy
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLAirDropStorage::NetMulsticast_Destroy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAirDropStorage", "NetMulsticast_Destroy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLAirDropStorage.BPShowAll
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               ShowAll                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLAirDropStorage::BPShowAll(bool ShowAll)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAirDropStorage", "BPShowAll");

	Params::AWTLAirDropStorage_BPShowAll_Params Parms{};

	Parms.ShowAll = ShowAll;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLAirDropStorage.BPDestroy
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLAirDropStorage::BPDestroy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAirDropStorage", "BPDestroy");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLAITargetInterface
// (None)

class UClass* IWTLAITargetInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAITargetInterface");

	return Clss;
}


// WTLAITargetInterface WTL.Default__WTLAITargetInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLAITargetInterface* IWTLAITargetInterface::GetDefaultObj()
{
	static class IWTLAITargetInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLAITargetInterface*>(IWTLAITargetInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLAITargetInterface.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IWTLAITargetInterface::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAITargetInterface", "AIInterface_IsInSafeZone");

	Params::IWTLAITargetInterface_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAITargetInterface.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IWTLAITargetInterface::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAITargetInterface", "AIInterface_IsCanBeAttacked");

	Params::IWTLAITargetInterface_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAITargetInterface.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IWTLAITargetInterface::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAITargetInterface", "AIInterface_IsAlive");

	Params::IWTLAITargetInterface_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAITargetInterface.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector IWTLAITargetInterface::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAITargetInterface", "AIInterface_GetVelocity");

	Params::IWTLAITargetInterface_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAITargetInterface.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 IWTLAITargetInterface::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAITargetInterface", "AIInterface_GetGroupID");

	Params::IWTLAITargetInterface_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLAITargetInterface.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction IWTLAITargetInterface::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAITargetInterface", "AIInterface_GetFaction");

	Params::IWTLAITargetInterface_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLAmbientSound
// (Actor)

class UClass* AWTLAmbientSound::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAmbientSound");

	return Clss;
}


// WTLAmbientSound WTL.Default__WTLAmbientSound
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAmbientSound* AWTLAmbientSound::GetDefaultObj()
{
	static class AWTLAmbientSound* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAmbientSound*>(AWTLAmbientSound::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAmmoCase
// (Actor)

class UClass* AWTLAmmoCase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAmmoCase");

	return Clss;
}


// WTLAmmoCase WTL.Default__WTLAmmoCase
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAmmoCase* AWTLAmmoCase::GetDefaultObj()
{
	static class AWTLAmmoCase* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAmmoCase*>(AWTLAmmoCase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLAmmoCase.OnHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLAmmoCase::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAmmoCase", "OnHit");

	Params::AWTLAmmoCase_OnHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLAnimalBase
// (Actor)

class UClass* AWTLAnimalBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnimalBase");

	return Clss;
}


// WTLAnimalBase WTL.Default__WTLAnimalBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAnimalBase* AWTLAnimalBase::GetDefaultObj()
{
	static class AWTLAnimalBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAnimalBase*>(AWTLAnimalBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLAnimalBase.OnRepReplicatedMovement
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                     Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    Rotation                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AWTLAnimalBase::OnRepReplicatedMovement(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAnimalBase", "OnRepReplicatedMovement");

	Params::AWTLAnimalBase_OnRepReplicatedMovement_Params Parms{};

	Parms.Location = Location;
	Parms.Rotation = Rotation;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLAnimNotifyAmmoCaseEject
// (None)

class UClass* UWTLAnimNotifyAmmoCaseEject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnimNotifyAmmoCaseEject");

	return Clss;
}


// WTLAnimNotifyAmmoCaseEject WTL.Default__WTLAnimNotifyAmmoCaseEject
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAnimNotifyAmmoCaseEject* UWTLAnimNotifyAmmoCaseEject::GetDefaultObj()
{
	static class UWTLAnimNotifyAmmoCaseEject* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAnimNotifyAmmoCaseEject*>(UWTLAnimNotifyAmmoCaseEject::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAnimNotifyParticleAmmoCaseEject
// (None)

class UClass* UWTLAnimNotifyParticleAmmoCaseEject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnimNotifyParticleAmmoCaseEject");

	return Clss;
}


// WTLAnimNotifyParticleAmmoCaseEject WTL.Default__WTLAnimNotifyParticleAmmoCaseEject
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAnimNotifyParticleAmmoCaseEject* UWTLAnimNotifyParticleAmmoCaseEject::GetDefaultObj()
{
	static class UWTLAnimNotifyParticleAmmoCaseEject* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAnimNotifyParticleAmmoCaseEject*>(UWTLAnimNotifyParticleAmmoCaseEject::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAnimNotifyParticleEffect
// (None)

class UClass* UWTLAnimNotifyParticleEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnimNotifyParticleEffect");

	return Clss;
}


// WTLAnimNotifyParticleEffect WTL.Default__WTLAnimNotifyParticleEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAnimNotifyParticleEffect* UWTLAnimNotifyParticleEffect::GetDefaultObj()
{
	static class UWTLAnimNotifyParticleEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAnimNotifyParticleEffect*>(UWTLAnimNotifyParticleEffect::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAnimNotifyGunshot
// (None)

class UClass* UWTLAnimNotifyGunshot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnimNotifyGunshot");

	return Clss;
}


// WTLAnimNotifyGunshot WTL.Default__WTLAnimNotifyGunshot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAnimNotifyGunshot* UWTLAnimNotifyGunshot::GetDefaultObj()
{
	static class UWTLAnimNotifyGunshot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAnimNotifyGunshot*>(UWTLAnimNotifyGunshot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAnimNotifyFootstep
// (None)

class UClass* UWTLAnimNotifyFootstep::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnimNotifyFootstep");

	return Clss;
}


// WTLAnimNotifyFootstep WTL.Default__WTLAnimNotifyFootstep
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAnimNotifyFootstep* UWTLAnimNotifyFootstep::GetDefaultObj()
{
	static class UWTLAnimNotifyFootstep* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAnimNotifyFootstep*>(UWTLAnimNotifyFootstep::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAnimNotifyCharacterBreath
// (None)

class UClass* UWTLAnimNotifyCharacterBreath::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnimNotifyCharacterBreath");

	return Clss;
}


// WTLAnimNotifyCharacterBreath WTL.Default__WTLAnimNotifyCharacterBreath
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAnimNotifyCharacterBreath* UWTLAnimNotifyCharacterBreath::GetDefaultObj()
{
	static class UWTLAnimNotifyCharacterBreath* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAnimNotifyCharacterBreath*>(UWTLAnimNotifyCharacterBreath::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAnimNotifyPlayCharacterSound
// (None)

class UClass* UWTLAnimNotifyPlayCharacterSound::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnimNotifyPlayCharacterSound");

	return Clss;
}


// WTLAnimNotifyPlayCharacterSound WTL.Default__WTLAnimNotifyPlayCharacterSound
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAnimNotifyPlayCharacterSound* UWTLAnimNotifyPlayCharacterSound::GetDefaultObj()
{
	static class UWTLAnimNotifyPlayCharacterSound* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAnimNotifyPlayCharacterSound*>(UWTLAnimNotifyPlayCharacterSound::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacterAdditionalMeshNotifyState
// (None)

class UClass* UWTLCharacterAdditionalMeshNotifyState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterAdditionalMeshNotifyState");

	return Clss;
}


// WTLCharacterAdditionalMeshNotifyState WTL.Default__WTLCharacterAdditionalMeshNotifyState
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterAdditionalMeshNotifyState* UWTLCharacterAdditionalMeshNotifyState::GetDefaultObj()
{
	static class UWTLCharacterAdditionalMeshNotifyState* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterAdditionalMeshNotifyState*>(UWTLCharacterAdditionalMeshNotifyState::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacterAddStaticMeshNotify
// (None)

class UClass* UWTLCharacterAddStaticMeshNotify::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterAddStaticMeshNotify");

	return Clss;
}


// WTLCharacterAddStaticMeshNotify WTL.Default__WTLCharacterAddStaticMeshNotify
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterAddStaticMeshNotify* UWTLCharacterAddStaticMeshNotify::GetDefaultObj()
{
	static class UWTLCharacterAddStaticMeshNotify* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterAddStaticMeshNotify*>(UWTLCharacterAddStaticMeshNotify::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacterRemoveStaticMeshNotify
// (None)

class UClass* UWTLCharacterRemoveStaticMeshNotify::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterRemoveStaticMeshNotify");

	return Clss;
}


// WTLCharacterRemoveStaticMeshNotify WTL.Default__WTLCharacterRemoveStaticMeshNotify
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterRemoveStaticMeshNotify* UWTLCharacterRemoveStaticMeshNotify::GetDefaultObj()
{
	static class UWTLCharacterRemoveStaticMeshNotify* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterRemoveStaticMeshNotify*>(UWTLCharacterRemoveStaticMeshNotify::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacterHandsNotifyState
// (None)

class UClass* UWTLCharacterHandsNotifyState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterHandsNotifyState");

	return Clss;
}


// WTLCharacterHandsNotifyState WTL.Default__WTLCharacterHandsNotifyState
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterHandsNotifyState* UWTLCharacterHandsNotifyState::GetDefaultObj()
{
	static class UWTLCharacterHandsNotifyState* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterHandsNotifyState*>(UWTLCharacterHandsNotifyState::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacterHandsStateChange
// (None)

class UClass* UWTLCharacterHandsStateChange::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterHandsStateChange");

	return Clss;
}


// WTLCharacterHandsStateChange WTL.Default__WTLCharacterHandsStateChange
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterHandsStateChange* UWTLCharacterHandsStateChange::GetDefaultObj()
{
	static class UWTLCharacterHandsStateChange* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterHandsStateChange*>(UWTLCharacterHandsStateChange::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLReloadingStateChange
// (None)

class UClass* UWTLReloadingStateChange::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLReloadingStateChange");

	return Clss;
}


// WTLReloadingStateChange WTL.Default__WTLReloadingStateChange
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLReloadingStateChange* UWTLReloadingStateChange::GetDefaultObj()
{
	static class UWTLReloadingStateChange* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLReloadingStateChange*>(UWTLReloadingStateChange::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLUsableItemStateChange
// (None)

class UClass* UWTLUsableItemStateChange::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLUsableItemStateChange");

	return Clss;
}


// WTLUsableItemStateChange WTL.Default__WTLUsableItemStateChange
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLUsableItemStateChange* UWTLUsableItemStateChange::GetDefaultObj()
{
	static class UWTLUsableItemStateChange* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLUsableItemStateChange*>(UWTLUsableItemStateChange::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLUsableItemCustomTrigger
// (None)

class UClass* UWTLUsableItemCustomTrigger::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLUsableItemCustomTrigger");

	return Clss;
}


// WTLUsableItemCustomTrigger WTL.Default__WTLUsableItemCustomTrigger
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLUsableItemCustomTrigger* UWTLUsableItemCustomTrigger::GetDefaultObj()
{
	static class UWTLUsableItemCustomTrigger* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLUsableItemCustomTrigger*>(UWTLUsableItemCustomTrigger::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLVehicleStateChange
// (None)

class UClass* UWTLVehicleStateChange::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLVehicleStateChange");

	return Clss;
}


// WTLVehicleStateChange WTL.Default__WTLVehicleStateChange
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLVehicleStateChange* UWTLVehicleStateChange::GetDefaultObj()
{
	static class UWTLVehicleStateChange* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLVehicleStateChange*>(UWTLVehicleStateChange::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLVehicleCustomTrigger
// (None)

class UClass* UWTLVehicleCustomTrigger::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLVehicleCustomTrigger");

	return Clss;
}


// WTLVehicleCustomTrigger WTL.Default__WTLVehicleCustomTrigger
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLVehicleCustomTrigger* UWTLVehicleCustomTrigger::GetDefaultObj()
{
	static class UWTLVehicleCustomTrigger* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLVehicleCustomTrigger*>(UWTLVehicleCustomTrigger::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPlaceableStuffCustomTrigger
// (None)

class UClass* UWTLPlaceableStuffCustomTrigger::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPlaceableStuffCustomTrigger");

	return Clss;
}


// WTLPlaceableStuffCustomTrigger WTL.Default__WTLPlaceableStuffCustomTrigger
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPlaceableStuffCustomTrigger* UWTLPlaceableStuffCustomTrigger::GetDefaultObj()
{
	static class UWTLPlaceableStuffCustomTrigger* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPlaceableStuffCustomTrigger*>(UWTLPlaceableStuffCustomTrigger::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLNPCCustomTrigger
// (None)

class UClass* UWTLNPCCustomTrigger::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLNPCCustomTrigger");

	return Clss;
}


// WTLNPCCustomTrigger WTL.Default__WTLNPCCustomTrigger
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLNPCCustomTrigger* UWTLNPCCustomTrigger::GetDefaultObj()
{
	static class UWTLNPCCustomTrigger* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLNPCCustomTrigger*>(UWTLNPCCustomTrigger::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMonsterActionTrigger
// (None)

class UClass* UWTLMonsterActionTrigger::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterActionTrigger");

	return Clss;
}


// WTLMonsterActionTrigger WTL.Default__WTLMonsterActionTrigger
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMonsterActionTrigger* UWTLMonsterActionTrigger::GetDefaultObj()
{
	static class UWTLMonsterActionTrigger* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMonsterActionTrigger*>(UWTLMonsterActionTrigger::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMonsterAnimationTrigger
// (None)

class UClass* UWTLMonsterAnimationTrigger::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterAnimationTrigger");

	return Clss;
}


// WTLMonsterAnimationTrigger WTL.Default__WTLMonsterAnimationTrigger
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMonsterAnimationTrigger* UWTLMonsterAnimationTrigger::GetDefaultObj()
{
	static class UWTLMonsterAnimationTrigger* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMonsterAnimationTrigger*>(UWTLMonsterAnimationTrigger::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLNPCActionTrigger
// (None)

class UClass* UWTLNPCActionTrigger::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLNPCActionTrigger");

	return Clss;
}


// WTLNPCActionTrigger WTL.Default__WTLNPCActionTrigger
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLNPCActionTrigger* UWTLNPCActionTrigger::GetDefaultObj()
{
	static class UWTLNPCActionTrigger* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLNPCActionTrigger*>(UWTLNPCActionTrigger::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMonsterEffect
// (None)

class UClass* UWTLMonsterEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterEffect");

	return Clss;
}


// WTLMonsterEffect WTL.Default__WTLMonsterEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMonsterEffect* UWTLMonsterEffect::GetDefaultObj()
{
	static class UWTLMonsterEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMonsterEffect*>(UWTLMonsterEffect::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLAnomalyWayPoint
// (Actor)

class UClass* AWTLAnomalyWayPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnomalyWayPoint");

	return Clss;
}


// WTLAnomalyWayPoint WTL.Default__WTLAnomalyWayPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAnomalyWayPoint* AWTLAnomalyWayPoint::GetDefaultObj()
{
	static class AWTLAnomalyWayPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAnomalyWayPoint*>(AWTLAnomalyWayPoint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLArenaState
// (Actor)

class UClass* AWTLArenaState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLArenaState");

	return Clss;
}


// WTLArenaState WTL.Default__WTLArenaState
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLArenaState* AWTLArenaState::GetDefaultObj()
{
	static class AWTLArenaState* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLArenaState*>(AWTLArenaState::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLArenaState.OnRep_MatchState
// (Final, Native, Protected)
// Parameters:

void AWTLArenaState::OnRep_MatchState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLArenaState", "OnRep_MatchState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLBallisticsSystem
// (None)

class UClass* UWTLBallisticsSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBallisticsSystem");

	return Clss;
}


// WTLBallisticsSystem WTL.Default__WTLBallisticsSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBallisticsSystem* UWTLBallisticsSystem::GetDefaultObj()
{
	static class UWTLBallisticsSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBallisticsSystem*>(UWTLBallisticsSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBPLibraryCharacter
// (None)

class UClass* UWTLBPLibraryCharacter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBPLibraryCharacter");

	return Clss;
}


// WTLBPLibraryCharacter WTL.Default__WTLBPLibraryCharacter
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBPLibraryCharacter* UWTLBPLibraryCharacter::GetDefaultObj()
{
	static class UWTLBPLibraryCharacter* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBPLibraryCharacter*>(UWTLBPLibraryCharacter::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLBPLibraryCharacter.TeleportCharacterToRandomPointInRange
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     OriginLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinRange                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxRange                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::TeleportCharacterToRandomPointInRange(class AWTLCharacter* Character, const struct FVector& OriginLocation, float MinRange, float MaxRange, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "TeleportCharacterToRandomPointInRange");

	Params::UWTLBPLibraryCharacter_TeleportCharacterToRandomPointInRange_Params Parms{};

	Parms.Character = Character;
	Parms.OriginLocation = OriginLocation;
	Parms.MinRange = MinRange;
	Parms.MaxRange = MaxRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.TeleportCharacterToRandomPointArray
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>             Locations                                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::TeleportCharacterToRandomPointArray(class AWTLCharacter* Character, const TArray<struct FVector>& Locations, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "TeleportCharacterToRandomPointArray");

	Params::UWTLBPLibraryCharacter_TeleportCharacterToRandomPointArray_Params Parms{};

	Parms.Character = Character;
	Parms.Locations = Locations;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.TeleportCharacterToPoint
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::TeleportCharacterToPoint(class AWTLCharacter* Character, const struct FVector& Location, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "TeleportCharacterToPoint");

	Params::UWTLBPLibraryCharacter_TeleportCharacterToPoint_Params Parms{};

	Parms.Character = Character;
	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.TakeItemInContainerFromCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::TakeItemInContainerFromCharacter(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, int32 Count, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "TakeItemInContainerFromCharacter");

	Params::UWTLBPLibraryCharacter_TakeItemInContainerFromCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.TakeItemInArms
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::TakeItemInArms(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, uint8 SlotNumber, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "TakeItemInArms");

	Params::UWTLBPLibraryCharacter_TakeItemInArms_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.TakeItemFromCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLBPIdentityItemType>Items                                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               CheckInContainers                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::TakeItemFromCharacter(class AWTLCharacter* Character, const TArray<struct FWTLBPIdentityItemType>& Items, bool CheckInContainers, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "TakeItemFromCharacter");

	Params::UWTLBPLibraryCharacter_TakeItemFromCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.Items = Items;
	Parms.CheckInContainers = CheckInContainers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.TakeArtefactWithInteactiveObjectIDFromCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ArtefactID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InteractiveObjectID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::TakeArtefactWithInteactiveObjectIDFromCharacter(class AWTLCharacter* Character, int32 ArtefactID, int32 InteractiveObjectID, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "TakeArtefactWithInteactiveObjectIDFromCharacter");

	Params::UWTLBPLibraryCharacter_TakeArtefactWithInteactiveObjectIDFromCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ArtefactID = ArtefactID;
	Parms.InteractiveObjectID = InteractiveObjectID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.TakeAllItemsFromCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLBPIdentityItemType>Items                                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               CheckInContainers                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::TakeAllItemsFromCharacter(class AWTLCharacter* Character, const TArray<struct FWTLBPIdentityItemType>& Items, bool CheckInContainers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "TakeAllItemsFromCharacter");

	Params::UWTLBPLibraryCharacter_TakeAllItemsFromCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.Items = Items;
	Parms.CheckInContainers = CheckInContainers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.SwitchCharacterSex
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ArtefactID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InteractiveObjectID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLSex                 Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::SwitchCharacterSex(class AWTLCharacter* Character, int32 ArtefactID, int32 InteractiveObjectID, enum class EWTLSex* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "SwitchCharacterSex");

	Params::UWTLBPLibraryCharacter_SwitchCharacterSex_Params Parms{};

	Parms.Character = Character;
	Parms.ArtefactID = ArtefactID;
	Parms.InteractiveObjectID = InteractiveObjectID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.SwitchCharacterFaction
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::SwitchCharacterFaction(class AWTLCharacter* Character, enum class EWTLFaction* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "SwitchCharacterFaction");

	Params::UWTLBPLibraryCharacter_SwitchCharacterFaction_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.SetCharacterThirstValue
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::SetCharacterThirstValue(class AWTLCharacter* Character, uint8 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "SetCharacterThirstValue");

	Params::UWTLBPLibraryCharacter_SetCharacterThirstValue_Params Parms{};

	Parms.Character = Character;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.SetCharacterReputation
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Reputation                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::SetCharacterReputation(class AWTLCharacter* Character, uint8 Reputation, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "SetCharacterReputation");

	Params::UWTLBPLibraryCharacter_SetCharacterReputation_Params Parms{};

	Parms.Character = Character;
	Parms.Reputation = Reputation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.SetCharacterHungerValue
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::SetCharacterHungerValue(class AWTLCharacter* Character, uint8 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "SetCharacterHungerValue");

	Params::UWTLBPLibraryCharacter_SetCharacterHungerValue_Params Parms{};

	Parms.Character = Character;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.RecoverCharacterStaminaByPercent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              PercentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::RecoverCharacterStaminaByPercent(class AWTLCharacter* Character, float PercentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "RecoverCharacterStaminaByPercent");

	Params::UWTLBPLibraryCharacter_RecoverCharacterStaminaByPercent_Params Parms{};

	Parms.Character = Character;
	Parms.PercentValue = PercentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.RecoverCharacterStamina
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::RecoverCharacterStamina(class AWTLCharacter* Character, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "RecoverCharacterStamina");

	Params::UWTLBPLibraryCharacter_RecoverCharacterStamina_Params Parms{};

	Parms.Character = Character;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.KillCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>     DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::KillCharacter(class AWTLCharacter* Character, TSubclassOf<class UDamageType> DamageTypeClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "KillCharacter");

	Params::UWTLBPLibraryCharacter_KillCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.DamageTypeClass = DamageTypeClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.IsPointNearLocalCharacter
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Position                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxDistance                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::IsPointNearLocalCharacter(class UObject* WorldContextObject, const struct FVector& Position, float MaxDistance, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "IsPointNearLocalCharacter");

	Params::UWTLBPLibraryCharacter_IsPointNearLocalCharacter_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Position = Position;
	Parms.MaxDistance = MaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.IsPlayedCurrentEmotion
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              EmotionTypeID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              EmotionID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCharacter::IsPlayedCurrentEmotion(class AWTLCharacter* Character, int32 EmotionTypeID, int32 EmotionID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "IsPlayedCurrentEmotion");

	Params::UWTLBPLibraryCharacter_IsPlayedCurrentEmotion_Params Parms{};

	Parms.Character = Character;
	Parms.EmotionTypeID = EmotionTypeID;
	Parms.EmotionID = EmotionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.IsCharacterRegularPlayer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCharacter::IsCharacterRegularPlayer(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "IsCharacterRegularPlayer");

	Params::UWTLBPLibraryCharacter_IsCharacterRegularPlayer_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.IsCharacterModerator
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCharacter::IsCharacterModerator(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "IsCharacterModerator");

	Params::UWTLBPLibraryCharacter_IsCharacterModerator_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.IsCharacterHoldingBreath
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::IsCharacterHoldingBreath(class AWTLCharacter* Character, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "IsCharacterHoldingBreath");

	Params::UWTLBPLibraryCharacter_IsCharacterHoldingBreath_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.IsCharacterAdministator
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCharacter::IsCharacterAdministator(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "IsCharacterAdministator");

	Params::UWTLBPLibraryCharacter_IsCharacterAdministator_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.IsActorNearLocalCharacter
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxDistance                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::IsActorNearLocalCharacter(class AActor* Actor, float MaxDistance, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "IsActorNearLocalCharacter");

	Params::UWTLBPLibraryCharacter_IsActorNearLocalCharacter_Params Parms{};

	Parms.Actor = Actor;
	Parms.MaxDistance = MaxDistance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.InstallPDAModule
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ModuleID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::InstallPDAModule(class AWTLCharacter* Character, int32 ModuleID, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "InstallPDAModule");

	Params::UWTLBPLibraryCharacter_InstallPDAModule_Params Parms{};

	Parms.Character = Character;
	Parms.ModuleID = ModuleID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.IncCharacterThirstValue
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::IncCharacterThirstValue(class AWTLCharacter* Character, int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "IncCharacterThirstValue");

	Params::UWTLBPLibraryCharacter_IncCharacterThirstValue_Params Parms{};

	Parms.Character = Character;
	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.IncCharacterHungerValue
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::IncCharacterHungerValue(class AWTLCharacter* Character, int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "IncCharacterHungerValue");

	Params::UWTLBPLibraryCharacter_IncCharacterHungerValue_Params Parms{};

	Parms.Character = Character;
	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.HealCharacterByPercentRet
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              PercentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              RestoredHealth                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::HealCharacterByPercentRet(class AWTLCharacter* Character, float PercentValue, float* RestoredHealth)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "HealCharacterByPercentRet");

	Params::UWTLBPLibraryCharacter_HealCharacterByPercentRet_Params Parms{};

	Parms.Character = Character;
	Parms.PercentValue = PercentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (RestoredHealth != nullptr)
		*RestoredHealth = Parms.RestoredHealth;

}


// Function WTL.WTLBPLibraryCharacter.HealCharacterByPercent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              PercentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::HealCharacterByPercent(class AWTLCharacter* Character, float PercentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "HealCharacterByPercent");

	Params::UWTLBPLibraryCharacter_HealCharacterByPercent_Params Parms{};

	Parms.Character = Character;
	Parms.PercentValue = PercentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.HealCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::HealCharacter(class AWTLCharacter* Character, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "HealCharacter");

	Params::UWTLBPLibraryCharacter_HealCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.GiveExperienceToCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ExperienceAmount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::GiveExperienceToCharacter(class AWTLCharacter* Character, int32 ExperienceAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GiveExperienceToCharacter");

	Params::UWTLBPLibraryCharacter_GiveExperienceToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ExperienceAmount = ExperienceAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.GetLocalCharacter
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* UWTLBPLibraryCharacter::GetLocalCharacter(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetLocalCharacter");

	Params::UWTLBPLibraryCharacter_GetLocalCharacter_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetDistanceToLocalCharacter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Position                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCharacter::GetDistanceToLocalCharacter(class UObject* WorldContextObject, const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetDistanceToLocalCharacter");

	Params::UWTLBPLibraryCharacter_GetDistanceToLocalCharacter_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Position = Position;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterStrength
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UWTLBPLibraryCharacter::GetCharacterStrength(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterStrength");

	Params::UWTLBPLibraryCharacter_GetCharacterStrength_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterStaminaValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCharacter::GetCharacterStaminaValue(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterStaminaValue");

	Params::UWTLBPLibraryCharacter_GetCharacterStaminaValue_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterStaminaPercent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCharacter::GetCharacterStaminaPercent(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterStaminaPercent");

	Params::UWTLBPLibraryCharacter_GetCharacterStaminaPercent_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterStamina
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UWTLBPLibraryCharacter::GetCharacterStamina(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterStamina");

	Params::UWTLBPLibraryCharacter_GetCharacterStamina_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharactersInVolume
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UStaticMeshComponent*        Volume                                                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AWTLCharacter*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLCharacter*> UWTLBPLibraryCharacter::GetCharactersInVolume(class UObject* WorldContextObject, class UStaticMeshComponent* Volume)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharactersInVolume");

	Params::UWTLBPLibraryCharacter_GetCharactersInVolume_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Volume = Volume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharactersInRange
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Range                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AWTLCharacter*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLCharacter*> UWTLBPLibraryCharacter::GetCharactersInRange(class UObject* WorldContextObject, const struct FVector& Origin, float Range)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharactersInRange");

	Params::UWTLBPLibraryCharacter_GetCharactersInRange_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = Origin;
	Parms.Range = Range;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterSex
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLSex                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLSex UWTLBPLibraryCharacter::GetCharacterSex(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterSex");

	Params::UWTLBPLibraryCharacter_GetCharacterSex_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterRepurtationPercent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCharacter::GetCharacterRepurtationPercent(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterRepurtationPercent");

	Params::UWTLBPLibraryCharacter_GetCharacterRepurtationPercent_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterRepurtation
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UWTLBPLibraryCharacter::GetCharacterRepurtation(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterRepurtation");

	Params::UWTLBPLibraryCharacter_GetCharacterRepurtation_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterPlayerType
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLPlayerType          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLPlayerType UWTLBPLibraryCharacter::GetCharacterPlayerType(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterPlayerType");

	Params::UWTLBPLibraryCharacter_GetCharacterPlayerType_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterParameterValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterParameter  Parameter                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCharacter::GetCharacterParameterValue(class AWTLCharacter* Character, enum class EWTLCharacterParameter Parameter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterParameterValue");

	Params::UWTLBPLibraryCharacter_GetCharacterParameterValue_Params Parms{};

	Parms.Character = Character;
	Parms.Parameter = Parameter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UWTLBPLibraryCharacter::GetCharacterName(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterName");

	Params::UWTLBPLibraryCharacter_GetCharacterName_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UWTLBPLibraryCharacter::GetCharacterLevel(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterLevel");

	Params::UWTLBPLibraryCharacter_GetCharacterLevel_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterInventoryWeight
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWTLBPLibraryCharacter::GetCharacterInventoryWeight(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterInventoryWeight");

	Params::UWTLBPLibraryCharacter_GetCharacterInventoryWeight_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterIntelligence
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UWTLBPLibraryCharacter::GetCharacterIntelligence(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterIntelligence");

	Params::UWTLBPLibraryCharacter_GetCharacterIntelligence_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterHealthValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCharacter::GetCharacterHealthValue(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterHealthValue");

	Params::UWTLBPLibraryCharacter_GetCharacterHealthValue_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterHealthPercent
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCharacter::GetCharacterHealthPercent(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterHealthPercent");

	Params::UWTLBPLibraryCharacter_GetCharacterHealthPercent_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterFortune
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UWTLBPLibraryCharacter::GetCharacterFortune(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterFortune");

	Params::UWTLBPLibraryCharacter_GetCharacterFortune_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterFaction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction UWTLBPLibraryCharacter::GetCharacterFaction(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterFaction");

	Params::UWTLBPLibraryCharacter_GetCharacterFaction_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterEffectValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCharacter::GetCharacterEffectValue(class AWTLCharacter* Character, enum class EWTLCharacterEffectType EffectType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterEffectValue");

	Params::UWTLBPLibraryCharacter_GetCharacterEffectValue_Params Parms{};

	Parms.Character = Character;
	Parms.EffectType = EffectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterDexterity
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UWTLBPLibraryCharacter::GetCharacterDexterity(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterDexterity");

	Params::UWTLBPLibraryCharacter_GetCharacterDexterity_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterClanMemberType
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLClanMemberType      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::GetCharacterClanMemberType(class AWTLCharacter* Character, enum class EWTLClanMemberType* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterClanMemberType");

	Params::UWTLBPLibraryCharacter_GetCharacterClanMemberType_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.GetCharacterAccuracy
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UWTLBPLibraryCharacter::GetCharacterAccuracy(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "GetCharacterAccuracy");

	Params::UWTLBPLibraryCharacter_GetCharacterAccuracy_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.DecrementInventoryItem
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CheckInContainers                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::DecrementInventoryItem(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, int32 Count, bool CheckInContainers, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "DecrementInventoryItem");

	Params::UWTLBPLibraryCharacter_DecrementInventoryItem_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Count = Count;
	Parms.CheckInContainers = CheckInContainers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.DecrementCharacterStaminaByPercent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              PercentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::DecrementCharacterStaminaByPercent(class AWTLCharacter* Character, float PercentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "DecrementCharacterStaminaByPercent");

	Params::UWTLBPLibraryCharacter_DecrementCharacterStaminaByPercent_Params Parms{};

	Parms.Character = Character;
	Parms.PercentValue = PercentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.DecrementCharacterStamina
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::DecrementCharacterStamina(class AWTLCharacter* Character, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "DecrementCharacterStamina");

	Params::UWTLBPLibraryCharacter_DecrementCharacterStamina_Params Parms{};

	Parms.Character = Character;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.DecrementCharactersHealthToPercentInRange
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Range                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HealthPercent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               KillIfLessOrEqual                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>     DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                 EventInstigator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      DamageCauser                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::DecrementCharactersHealthToPercentInRange(class UObject* WorldContextObject, const struct FVector& Origin, float Range, float HealthPercent, bool KillIfLessOrEqual, TSubclassOf<class UDamageType> DamageTypeClass, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "DecrementCharactersHealthToPercentInRange");

	Params::UWTLBPLibraryCharacter_DecrementCharactersHealthToPercentInRange_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Origin = Origin;
	Parms.Range = Range;
	Parms.HealthPercent = HealthPercent;
	Parms.KillIfLessOrEqual = KillIfLessOrEqual;
	Parms.DamageTypeClass = DamageTypeClass;
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.DecrementCharacterHealthToPercent
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HealthPercent                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               KillIfLessOrEqual                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>     DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                 EventInstigator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      DamageCauser                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::DecrementCharacterHealthToPercent(class AWTLCharacter* Character, float HealthPercent, bool KillIfLessOrEqual, TSubclassOf<class UDamageType> DamageTypeClass, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "DecrementCharacterHealthToPercent");

	Params::UWTLBPLibraryCharacter_DecrementCharacterHealthToPercent_Params Parms{};

	Parms.Character = Character;
	Parms.HealthPercent = HealthPercent;
	Parms.KillIfLessOrEqual = KillIfLessOrEqual;
	Parms.DamageTypeClass = DamageTypeClass;
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.ClearCameraLimits
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::ClearCameraLimits(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "ClearCameraLimits");

	Params::UWTLBPLibraryCharacter_ClearCameraLimits_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.CheckCharacterHaveEnoughAvailableInventorySlots
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::CheckCharacterHaveEnoughAvailableInventorySlots(class AWTLCharacter* Character, int32 Count, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CheckCharacterHaveEnoughAvailableInventorySlots");

	Params::UWTLBPLibraryCharacter_CheckCharacterHaveEnoughAvailableInventorySlots_Params Parms{};

	Parms.Character = Character;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.CheckCharacterHaveArtefactWithInteactiveObjectID
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ArtefactID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InteractiveObjectID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::CheckCharacterHaveArtefactWithInteactiveObjectID(class AWTLCharacter* Character, int32 ArtefactID, int32 InteractiveObjectID, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CheckCharacterHaveArtefactWithInteactiveObjectID");

	Params::UWTLBPLibraryCharacter_CheckCharacterHaveArtefactWithInteactiveObjectID_Params Parms{};

	Parms.Character = Character;
	Parms.ArtefactID = ArtefactID;
	Parms.InteractiveObjectID = InteractiveObjectID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.CharacterTravel
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LocationID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PortalID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::CharacterTravel(class AWTLCharacter* Character, int32 LocationID, int32 PortalID, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterTravel");

	Params::UWTLBPLibraryCharacter_CharacterTravel_Params Parms{};

	Parms.Character = Character;
	Parms.LocationID = LocationID;
	Parms.PortalID = PortalID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.CharacterShowNote
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        NoteName                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              NoteID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::CharacterShowNote(class AWTLCharacter* Character, class FText& NoteName, int32 NoteID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterShowNote");

	Params::UWTLBPLibraryCharacter_CharacterShowNote_Params Parms{};

	Parms.Character = Character;
	Parms.NoteName = NoteName;
	Parms.NoteID = NoteID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.CharacterRandomDropItem
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Location                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 UWTLBPLibraryCharacter::CharacterRandomDropItem(class AWTLCharacter* Character, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterRandomDropItem");

	Params::UWTLBPLibraryCharacter_CharacterRandomDropItem_Params Parms{};

	Parms.Character = Character;
	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.CharacterLeaveClan
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::CharacterLeaveClan(class AWTLCharacter* Character, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterLeaveClan");

	Params::UWTLBPLibraryCharacter_CharacterLeaveClan_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.CharacterIsInvulnerable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCharacter::CharacterIsInvulnerable(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterIsInvulnerable");

	Params::UWTLBPLibraryCharacter_CharacterIsInvulnerable_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.CharacterHaveEquipedDevice
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              StuffID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCharacter::CharacterHaveEquipedDevice(class AWTLCharacter* Character, int32 StuffID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterHaveEquipedDevice");

	Params::UWTLBPLibraryCharacter_CharacterHaveEquipedDevice_Params Parms{};

	Parms.Character = Character;
	Parms.StuffID = StuffID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.CharacterHaveAnyItemsExcept
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLBPIdentityItemType>AllowedItems                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::CharacterHaveAnyItemsExcept(class AWTLCharacter* Character, const TArray<struct FWTLBPIdentityItemType>& AllowedItems, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterHaveAnyItemsExcept");

	Params::UWTLBPLibraryCharacter_CharacterHaveAnyItemsExcept_Params Parms{};

	Parms.Character = Character;
	Parms.AllowedItems = AllowedItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.CharacterHaveAnyItemOfTypeExcept
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      ExceptIDList                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               CheckInContainers                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::CharacterHaveAnyItemOfTypeExcept(class AWTLCharacter* Character, enum class EWTLItemType ItemType, const TArray<int32>& ExceptIDList, bool CheckInContainers, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterHaveAnyItemOfTypeExcept");

	Params::UWTLBPLibraryCharacter_CharacterHaveAnyItemOfTypeExcept_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ExceptIDList = ExceptIDList;
	Parms.CheckInContainers = CheckInContainers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.CharacterHaveAnyItemFromList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLBPIdentityItemType>Items                                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               CheckInContainers                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::CharacterHaveAnyItemFromList(class AWTLCharacter* Character, const TArray<struct FWTLBPIdentityItemType>& Items, bool CheckInContainers, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterHaveAnyItemFromList");

	Params::UWTLBPLibraryCharacter_CharacterHaveAnyItemFromList_Params Parms{};

	Parms.Character = Character;
	Parms.Items = Items;
	Parms.CheckInContainers = CheckInContainers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.CharacterHaveAllItemsFromList
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLBPIdentityItemType>Items                                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               CheckInContainers                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::CharacterHaveAllItemsFromList(class AWTLCharacter* Character, const TArray<struct FWTLBPIdentityItemType>& Items, bool CheckInContainers, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterHaveAllItemsFromList");

	Params::UWTLBPLibraryCharacter_CharacterHaveAllItemsFromList_Params Parms{};

	Parms.Character = Character;
	Parms.Items = Items;
	Parms.CheckInContainers = CheckInContainers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.CharacterHaveActiveNDPDetector
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCharacter::CharacterHaveActiveNDPDetector(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterHaveActiveNDPDetector");

	Params::UWTLBPLibraryCharacter_CharacterHaveActiveNDPDetector_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.CharacterHaveActiveMetalDetector
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCharacter::CharacterHaveActiveMetalDetector(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterHaveActiveMetalDetector");

	Params::UWTLBPLibraryCharacter_CharacterHaveActiveMetalDetector_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.CharacterHaveActiveEquipment
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              StuffID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCharacter::CharacterHaveActiveEquipment(class AWTLCharacter* Character, int32 StuffID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "CharacterHaveActiveEquipment");

	Params::UWTLBPLibraryCharacter_CharacterHaveActiveEquipment_Params Parms{};

	Parms.Character = Character;
	Parms.StuffID = StuffID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCharacter.BeginInformationDialog
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InformationDialogID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        Title                                                            (Parm, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::BeginInformationDialog(class AWTLCharacter* Character, int32 InformationDialogID, class FText Title)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "BeginInformationDialog");

	Params::UWTLBPLibraryCharacter_BeginInformationDialog_Params Parms{};

	Parms.Character = Character;
	Parms.InformationDialogID = InformationDialogID;
	Parms.Title = Title;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.AssignItemToFastAccessSlot
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::AssignItemToFastAccessSlot(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, uint8 SlotNumber, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "AssignItemToFastAccessSlot");

	Params::UWTLBPLibraryCharacter_AssignItemToFastAccessSlot_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.ApplyRandomPercentDamage
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinPercent                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxPercent                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>     DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                 EventInstigator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      DamageCauser                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::ApplyRandomPercentDamage(class AWTLCharacter* Character, float MinPercent, float MaxPercent, TSubclassOf<class UDamageType> DamageTypeClass, class AController* EventInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "ApplyRandomPercentDamage");

	Params::UWTLBPLibraryCharacter_ApplyRandomPercentDamage_Params Parms{};

	Parms.Character = Character;
	Parms.MinPercent = MinPercent;
	Parms.MaxPercent = MaxPercent;
	Parms.DamageTypeClass = DamageTypeClass;
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.ApplyRadialDamage
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     DamageOrigin                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageRadius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>     DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              IgnoreActors                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::ApplyRadialDamage(class UObject* WorldContextObject, float DamageValue, const struct FVector& DamageOrigin, float DamageRadius, TSubclassOf<class UDamageType> DamageTypeClass, const TArray<class AActor*>& IgnoreActors, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "ApplyRadialDamage");

	Params::UWTLBPLibraryCharacter_ApplyRadialDamage_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.DamageValue = DamageValue;
	Parms.DamageOrigin = DamageOrigin;
	Parms.DamageRadius = DamageRadius;
	Parms.DamageTypeClass = DamageTypeClass;
	Parms.IgnoreActors = IgnoreActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.ApplyHearingDamageToCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::ApplyHearingDamageToCharacter(class AWTLCharacter* Character, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "ApplyHearingDamageToCharacter");

	Params::UWTLBPLibraryCharacter_ApplyHearingDamageToCharacter_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.ApplyCameraLimits
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLCameraLimits            CameraLimits                                                     (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FRotator                    ViewOrigin                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::ApplyCameraLimits(class AWTLCharacter* Character, const struct FWTLCameraLimits& CameraLimits, struct FRotator& ViewOrigin)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "ApplyCameraLimits");

	Params::UWTLBPLibraryCharacter_ApplyCameraLimits_Params Parms{};

	Parms.Character = Character;
	Parms.CameraLimits = CameraLimits;
	Parms.ViewOrigin = ViewOrigin;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCharacter.AddEffectToCharacterWithFalloff
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FalloffRadius                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinEffectValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseStuffProtection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxEffectValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::AddEffectToCharacterWithFalloff(class AWTLCharacter* Character, enum class EWTLCharacterEffectType EffectType, float EffectValue, const struct FVector& Origin, float FalloffRadius, float MinEffectValue, enum class EWTLBPActionResult* Result, bool UseStuffProtection, float MaxEffectValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "AddEffectToCharacterWithFalloff");

	Params::UWTLBPLibraryCharacter_AddEffectToCharacterWithFalloff_Params Parms{};

	Parms.Character = Character;
	Parms.EffectType = EffectType;
	Parms.EffectValue = EffectValue;
	Parms.Origin = Origin;
	Parms.FalloffRadius = FalloffRadius;
	Parms.MinEffectValue = MinEffectValue;
	Parms.UseStuffProtection = UseStuffProtection;
	Parms.MaxEffectValue = MaxEffectValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.AddEffectToCharactersWithFalloff
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// TArray<class AWTLCharacter*>       Characters                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              FalloffRadius                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinEffectValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseStuffProtection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxEffectValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::AddEffectToCharactersWithFalloff(const TArray<class AWTLCharacter*>& Characters, enum class EWTLCharacterEffectType EffectType, float EffectValue, const struct FVector& Origin, float FalloffRadius, float MinEffectValue, enum class EWTLBPActionResult* Result, bool UseStuffProtection, float MaxEffectValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "AddEffectToCharactersWithFalloff");

	Params::UWTLBPLibraryCharacter_AddEffectToCharactersWithFalloff_Params Parms{};

	Parms.Characters = Characters;
	Parms.EffectType = EffectType;
	Parms.EffectValue = EffectValue;
	Parms.Origin = Origin;
	Parms.FalloffRadius = FalloffRadius;
	Parms.MinEffectValue = MinEffectValue;
	Parms.UseStuffProtection = UseStuffProtection;
	Parms.MaxEffectValue = MaxEffectValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.AddEffectToCharacters
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AWTLCharacter*>       Characters                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseStuffProtection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxEffectValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::AddEffectToCharacters(const TArray<class AWTLCharacter*>& Characters, enum class EWTLCharacterEffectType EffectType, float EffectValue, enum class EWTLBPActionResult* Result, bool UseStuffProtection, float MaxEffectValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "AddEffectToCharacters");

	Params::UWTLBPLibraryCharacter_AddEffectToCharacters_Params Parms{};

	Parms.Characters = Characters;
	Parms.EffectType = EffectType;
	Parms.EffectValue = EffectValue;
	Parms.UseStuffProtection = UseStuffProtection;
	Parms.MaxEffectValue = MaxEffectValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.AddEffectToCharacterOnNextSpawn
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::AddEffectToCharacterOnNextSpawn(class AWTLCharacter* Character, enum class EWTLCharacterEffectType EffectType, float EffectValue, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "AddEffectToCharacterOnNextSpawn");

	Params::UWTLBPLibraryCharacter_AddEffectToCharacterOnNextSpawn_Params Parms{};

	Parms.Character = Character;
	Parms.EffectType = EffectType;
	Parms.EffectValue = EffectValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCharacter.AddEffectToCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseStuffProtection                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxEffectValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCharacter::AddEffectToCharacter(class AWTLCharacter* Character, enum class EWTLCharacterEffectType EffectType, float EffectValue, enum class EWTLBPActionResult* Result, bool UseStuffProtection, float MaxEffectValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCharacter", "AddEffectToCharacter");

	Params::UWTLBPLibraryCharacter_AddEffectToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.EffectType = EffectType;
	Parms.EffectValue = EffectValue;
	Parms.UseStuffProtection = UseStuffProtection;
	Parms.MaxEffectValue = MaxEffectValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Class WTL.WTLBPLibraryCommon
// (None)

class UClass* UWTLBPLibraryCommon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBPLibraryCommon");

	return Clss;
}


// WTLBPLibraryCommon WTL.Default__WTLBPLibraryCommon
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBPLibraryCommon* UWTLBPLibraryCommon::GetDefaultObj()
{
	static class UWTLBPLibraryCommon* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBPLibraryCommon*>(UWTLBPLibraryCommon::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLBPLibraryCommon.WTLSwitchHasAuthority
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::WTLSwitchHasAuthority(class UObject* WorldContextObject, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "WTLSwitchHasAuthority");

	Params::UWTLBPLibraryCommon_WTLSwitchHasAuthority_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.WriteLog
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPLogVerbosity      Verbosity                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Text                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MethodName                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::WriteLog(class UObject* WorldContextObject, enum class EWTLBPLogVerbosity Verbosity, const class FString& Text, const class FString& MethodName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "WriteLog");

	Params::UWTLBPLibraryCommon_WriteLog_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Verbosity = Verbosity;
	Parms.Text = Text;
	Parms.MethodName = MethodName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.UpdateReflectionSphere
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UReflectionCaptureComponent* CaptureComponent                                                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::UpdateReflectionSphere(class UObject* WorldContextObject, class UReflectionCaptureComponent* CaptureComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "UpdateReflectionSphere");

	Params::UWTLBPLibraryCommon_UpdateReflectionSphere_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.CaptureComponent = CaptureComponent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.TakeMoneyFromCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Reason                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::TakeMoneyFromCharacter(class AWTLCharacter* Character, int32 MoneyAmount, const class FString& Reason, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "TakeMoneyFromCharacter");

	Params::UWTLBPLibraryCommon_TakeMoneyFromCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.MoneyAmount = MoneyAmount;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.SwitchIsValidActor
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::SwitchIsValidActor(class AActor* Actor, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "SwitchIsValidActor");

	Params::UWTLBPLibraryCommon_SwitchIsValidActor_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.SpawnWeaponProjectile
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       Instigator                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              WeaponID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              AmmoID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  SpawnTransform                                                   (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                              MinDamage                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxDamage                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::SpawnWeaponProjectile(class UObject* WorldContextObject, class APawn* Instigator, class AActor* Owner, int32 WeaponID, int32 AmmoID, const struct FTransform& SpawnTransform, float MinDamage, float MaxDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "SpawnWeaponProjectile");

	Params::UWTLBPLibraryCommon_SpawnWeaponProjectile_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Instigator = Instigator;
	Parms.Owner = Owner;
	Parms.WeaponID = WeaponID;
	Parms.AmmoID = AmmoID;
	Parms.SpawnTransform = SpawnTransform;
	Parms.MinDamage = MinDamage;
	Parms.MaxDamage = MaxDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.SpawnMonster
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AWTLMonsterPawn> MonsterClass                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MinLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  Transform                                                        (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FWTLMonsterBurst            Burst                                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// enum class EWTLFaction             MonsterFaction                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReactionOnElectronicBait                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifespanAfterDeath                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsSpawnDefaultController                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLMonsterPawn*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLMonsterPawn* UWTLBPLibraryCommon::SpawnMonster(class UObject* WorldContextObject, TSubclassOf<class AWTLMonsterPawn> MonsterClass, class AActor* Owner, int32 MinLevel, int32 MaxLevel, const struct FTransform& Transform, const struct FWTLMonsterBurst& Burst, enum class EWTLFaction MonsterFaction, bool ReactionOnElectronicBait, float LifespanAfterDeath, bool IsSpawnDefaultController)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "SpawnMonster");

	Params::UWTLBPLibraryCommon_SpawnMonster_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MonsterClass = MonsterClass;
	Parms.Owner = Owner;
	Parms.MinLevel = MinLevel;
	Parms.MaxLevel = MaxLevel;
	Parms.Transform = Transform;
	Parms.Burst = Burst;
	Parms.MonsterFaction = MonsterFaction;
	Parms.ReactionOnElectronicBait = ReactionOnElectronicBait;
	Parms.LifespanAfterDeath = LifespanAfterDeath;
	Parms.IsSpawnDefaultController = IsSpawnDefaultController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.SpawnEnemyNPC
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AWTLEnemyNPC>    NPCClass                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MinLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  Transform                                                        (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AWTLEnemyNPC*                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLEnemyNPC* UWTLBPLibraryCommon::SpawnEnemyNPC(class UObject* WorldContextObject, TSubclassOf<class AWTLEnemyNPC> NPCClass, class AActor* Owner, int32 MinLevel, int32 MaxLevel, const struct FTransform& Transform)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "SpawnEnemyNPC");

	Params::UWTLBPLibraryCommon_SpawnEnemyNPC_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NPCClass = NPCClass;
	Parms.Owner = Owner;
	Parms.MinLevel = MinLevel;
	Parms.MaxLevel = MaxLevel;
	Parms.Transform = Transform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.SpawnAirDrop
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     SpawnLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              DropID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxUseCount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifeSpan                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CanSpawnGuard                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::SpawnAirDrop(class UObject* WorldContextObject, const struct FVector& SpawnLocation, int32 DropID, int32 MaxUseCount, float LifeSpan, bool CanSpawnGuard, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "SpawnAirDrop");

	Params::UWTLBPLibraryCommon_SpawnAirDrop_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.SpawnLocation = SpawnLocation;
	Parms.DropID = DropID;
	Parms.MaxUseCount = MaxUseCount;
	Parms.LifeSpan = LifeSpan;
	Parms.CanSpawnGuard = CanSpawnGuard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.SpawnAIFlying
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AWTLAIFlying>    AIFlyingClass                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MinLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  Transform                                                        (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FWTLMonsterBurst            Burst                                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReactionOnElectronicBait                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifespanAfterDeath                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLAIFlying*                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLAIFlying* UWTLBPLibraryCommon::SpawnAIFlying(class UObject* WorldContextObject, TSubclassOf<class AWTLAIFlying> AIFlyingClass, class AActor* Owner, int32 MinLevel, int32 MaxLevel, const struct FTransform& Transform, const struct FWTLMonsterBurst& Burst, bool ReactionOnElectronicBait, float LifespanAfterDeath)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "SpawnAIFlying");

	Params::UWTLBPLibraryCommon_SpawnAIFlying_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AIFlyingClass = AIFlyingClass;
	Parms.Owner = Owner;
	Parms.MinLevel = MinLevel;
	Parms.MaxLevel = MaxLevel;
	Parms.Transform = Transform;
	Parms.Burst = Burst;
	Parms.ReactionOnElectronicBait = ReactionOnElectronicBait;
	Parms.LifespanAfterDeath = LifespanAfterDeath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.SpawnAICharacter
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AWTLAICharacter> AICharacterClass                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MinLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  Transform                                                        (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FWTLMonsterBurst            Burst                                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReactionOnElectronicBait                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifespanAfterDeath                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLAICharacter*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLAICharacter* UWTLBPLibraryCommon::SpawnAICharacter(class UObject* WorldContextObject, TSubclassOf<class AWTLAICharacter> AICharacterClass, class AActor* Owner, int32 MinLevel, int32 MaxLevel, const struct FTransform& Transform, const struct FWTLMonsterBurst& Burst, bool ReactionOnElectronicBait, float LifespanAfterDeath)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "SpawnAICharacter");

	Params::UWTLBPLibraryCommon_SpawnAICharacter_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.AICharacterClass = AICharacterClass;
	Parms.Owner = Owner;
	Parms.MinLevel = MinLevel;
	Parms.MaxLevel = MaxLevel;
	Parms.Transform = Transform;
	Parms.Burst = Burst;
	Parms.ReactionOnElectronicBait = ReactionOnElectronicBait;
	Parms.LifespanAfterDeath = LifespanAfterDeath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.ShowItemStoreOverlay
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::ShowItemStoreOverlay(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "ShowItemStoreOverlay");

	Params::UWTLBPLibraryCommon_ShowItemStoreOverlay_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.SetServerEventInfo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLServerEventType     Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinutesToEvent                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Comment                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::SetServerEventInfo(class UObject* WorldContextObject, enum class EWTLServerEventType Type, float MinutesToEvent, const class FString& Comment)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "SetServerEventInfo");

	Params::UWTLBPLibraryCommon_SetServerEventInfo_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Type = Type;
	Parms.MinutesToEvent = MinutesToEvent;
	Parms.Comment = Comment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.SendDedicatedServerMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LocationID                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MessageType                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MessageData                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::SendDedicatedServerMessage(class UObject* WorldContextObject, int32 LocationID, const class FString& MessageType, const class FString& MessageData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "SendDedicatedServerMessage");

	Params::UWTLBPLibraryCommon_SendDedicatedServerMessage_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.LocationID = LocationID;
	Parms.MessageType = MessageType;
	Parms.MessageData = MessageData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.ReportCrime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       Instigator                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       Victim                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsLethal                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::ReportCrime(class UObject* WorldContextObject, class APawn* Instigator, class APawn* Victim, bool bIsLethal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "ReportCrime");

	Params::UWTLBPLibraryCommon_ReportCrime_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Instigator = Instigator;
	Parms.Victim = Victim;
	Parms.bIsLethal = bIsLethal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.MergeMeshes
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSkeletalMeshMergeParams    Params                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class USkeletalMesh*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMesh* UWTLBPLibraryCommon::MergeMeshes(struct FSkeletalMeshMergeParams& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "MergeMeshes");

	Params::UWTLBPLibraryCommon_MergeMeshes_Params Parms{};

	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.K2_SpawnMonster
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AWTLMonsterPawn> MonsterClass                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      Owner                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MinLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                  Transform                                                        (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FWTLMonsterBurst            Burst                                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)
// enum class EWTLFaction             MonsterFaction                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReactionOnElectronicBait                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifespanAfterDeath                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLMonsterPawn*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLMonsterPawn* UWTLBPLibraryCommon::K2_SpawnMonster(class UObject* WorldContextObject, TSubclassOf<class AWTLMonsterPawn> MonsterClass, class AActor* Owner, int32 MinLevel, int32 MaxLevel, const struct FTransform& Transform, const struct FWTLMonsterBurst& Burst, enum class EWTLFaction MonsterFaction, bool ReactionOnElectronicBait, float LifespanAfterDeath, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "K2_SpawnMonster");

	Params::UWTLBPLibraryCommon_K2_SpawnMonster_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MonsterClass = MonsterClass;
	Parms.Owner = Owner;
	Parms.MinLevel = MinLevel;
	Parms.MaxLevel = MaxLevel;
	Parms.Transform = Transform;
	Parms.Burst = Burst;
	Parms.MonsterFaction = MonsterFaction;
	Parms.ReactionOnElectronicBait = ReactionOnElectronicBait;
	Parms.LifespanAfterDeath = LifespanAfterDeath;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.IsWithEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCommon::IsWithEditor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "IsWithEditor");

	Params::UWTLBPLibraryCommon_IsWithEditor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.IsValidVectorAI
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                     Vector                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCommon::IsValidVectorAI(const struct FVector& Vector)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "IsValidVectorAI");

	Params::UWTLBPLibraryCommon_IsValidVectorAI_Params Parms{};

	Parms.Vector = Vector;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.IsValidActor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                      Actor                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCommon::IsValidActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "IsValidActor");

	Params::UWTLBPLibraryCommon_IsValidActor_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.IsDay
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::IsDay(class UObject* WorldContextObject, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "IsDay");

	Params::UWTLBPLibraryCommon_IsDay_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.HasItemInCharacterInventoryResult
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::HasItemInCharacterInventoryResult(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "HasItemInCharacterInventoryResult");

	Params::UWTLBPLibraryCommon_HasItemInCharacterInventoryResult_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.HasItemInCharacterInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLBPLibraryCommon::HasItemInCharacterInventory(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "HasItemInCharacterInventory");

	Params::UWTLBPLibraryCommon_HasItemInCharacterInventory_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GiveMoneyToCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Reason                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::GiveMoneyToCharacter(class AWTLCharacter* Character, int32 MoneyAmount, const class FString& Reason, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GiveMoneyToCharacter");

	Params::UWTLBPLibraryCommon_GiveMoneyToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.MoneyAmount = MoneyAmount;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.GiveItemToCharacterEx
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Condition                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              CustomizationScalar                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              CustomizationColor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CustomizationName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ModificationData                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::GiveItemToCharacterEx(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, int32 Count, int32 Condition, uint8 CustomizationScalar, uint8 CustomizationColor, const class FString& CustomizationName, const class FString& ModificationData, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GiveItemToCharacterEx");

	Params::UWTLBPLibraryCommon_GiveItemToCharacterEx_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Count = Count;
	Parms.Condition = Condition;
	Parms.CustomizationScalar = CustomizationScalar;
	Parms.CustomizationColor = CustomizationColor;
	Parms.CustomizationName = CustomizationName;
	Parms.ModificationData = ModificationData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.GiveItemToCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Condition                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::GiveItemToCharacter(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, int32 Count, int32 Condition, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GiveItemToCharacter");

	Params::UWTLBPLibraryCommon_GiveItemToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Count = Count;
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.GiveItemsToCharacter
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLGiveItemInfo>    ItemsToGive                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::GiveItemsToCharacter(class AWTLCharacter* Character, const TArray<struct FWTLGiveItemInfo>& ItemsToGive, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GiveItemsToCharacter");

	Params::UWTLBPLibraryCommon_GiveItemsToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ItemsToGive = ItemsToGive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.GetSettings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLSettings                ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FWTLSettings UWTLBPLibraryCommon::GetSettings(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetSettings");

	Params::UWTLBPLibraryCommon_GetSettings_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetServerTimeSeconds
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCommon::GetServerTimeSeconds(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetServerTimeSeconds");

	Params::UWTLBPLibraryCommon_GetServerTimeSeconds_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetRandomPointInRange
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     OriginLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinRange                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxRange                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UWTLBPLibraryCommon::GetRandomPointInRange(class UObject* WorldContextObject, const struct FVector& OriginLocation, float MinRange, float MaxRange)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetRandomPointInRange");

	Params::UWTLBPLibraryCommon_GetRandomPointInRange_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.OriginLocation = OriginLocation;
	Parms.MinRange = MinRange;
	Parms.MaxRange = MaxRange;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetRandomCharactersInRange
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ObserverLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ObserverForwardVector                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             ObserverFaction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InRange                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AsEnemy                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfAnglePitch                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfAngleYaw                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AWTLCharacter*>       ResultList                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::GetRandomCharactersInRange(class UObject* WorldContextObject, const struct FVector& ObserverLocation, const struct FVector& ObserverForwardVector, enum class EWTLFaction ObserverFaction, float InRange, bool AsEnemy, float HalfAnglePitch, float HalfAngleYaw, int32 MaxCount, TArray<class AWTLCharacter*>* ResultList, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetRandomCharactersInRange");

	Params::UWTLBPLibraryCommon_GetRandomCharactersInRange_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObserverLocation = ObserverLocation;
	Parms.ObserverForwardVector = ObserverForwardVector;
	Parms.ObserverFaction = ObserverFaction;
	Parms.InRange = InRange;
	Parms.AsEnemy = AsEnemy;
	Parms.HalfAnglePitch = HalfAnglePitch;
	Parms.HalfAngleYaw = HalfAngleYaw;
	Parms.MaxCount = MaxCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ResultList != nullptr)
		*ResultList = std::move(Parms.ResultList);

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.GetMouseSensitivityInMiniGames
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCommon::GetMouseSensitivityInMiniGames(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetMouseSensitivityInMiniGames");

	Params::UWTLBPLibraryCommon_GetMouseSensitivityInMiniGames_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetMonsterLevelByCharactersInfo
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumCharactersToIncreaseLevel                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyAverageLevel                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MinLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWTLBPLibraryCommon::GetMonsterLevelByCharactersInfo(class UObject* WorldContextObject, int32 NumCharactersToIncreaseLevel, bool ApplyAverageLevel, int32 MinLevel, int32 MaxLevel, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetMonsterLevelByCharactersInfo");

	Params::UWTLBPLibraryCommon_GetMonsterLevelByCharactersInfo_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NumCharactersToIncreaseLevel = NumCharactersToIncreaseLevel;
	Parms.ApplyAverageLevel = ApplyAverageLevel;
	Parms.MinLevel = MinLevel;
	Parms.MaxLevel = MaxLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetMonsterInfo_LoadSynch
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MonsterID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class AWTLMonsterPawn> MonsterClass                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLMonsterItemData         ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FWTLMonsterItemData UWTLBPLibraryCommon::GetMonsterInfo_LoadSynch(class UObject* WorldContextObject, int32 MonsterID, TSubclassOf<class AWTLMonsterPawn>* MonsterClass, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetMonsterInfo_LoadSynch");

	Params::UWTLBPLibraryCommon_GetMonsterInfo_LoadSynch_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MonsterID = MonsterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (MonsterClass != nullptr)
		*MonsterClass = Parms.MonsterClass;

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetMonsterInfo
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MonsterID                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLMonsterItemData         ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FWTLMonsterItemData UWTLBPLibraryCommon::GetMonsterInfo(class UObject* WorldContextObject, int32 MonsterID, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetMonsterInfo");

	Params::UWTLBPLibraryCommon_GetMonsterInfo_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.MonsterID = MonsterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetLocationSkyDayTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCommon::GetLocationSkyDayTime(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetLocationSkyDayTime");

	Params::UWTLBPLibraryCommon_GetLocationSkyDayTime_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetListPlaceableStuffInRange
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ObserverLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ObserverForwardVector                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             ObserverFaction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InRange                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AsEnemy                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfAnglePitch                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfAngleYaw                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      ListIgnoreID                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class AWTLPlaceableStuff*>  ResultList                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::GetListPlaceableStuffInRange(class UObject* WorldContextObject, const struct FVector& ObserverLocation, const struct FVector& ObserverForwardVector, enum class EWTLFaction ObserverFaction, float InRange, bool AsEnemy, float HalfAnglePitch, float HalfAngleYaw, const TArray<int32>& ListIgnoreID, TArray<class AWTLPlaceableStuff*>* ResultList, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetListPlaceableStuffInRange");

	Params::UWTLBPLibraryCommon_GetListPlaceableStuffInRange_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObserverLocation = ObserverLocation;
	Parms.ObserverForwardVector = ObserverForwardVector;
	Parms.ObserverFaction = ObserverFaction;
	Parms.InRange = InRange;
	Parms.AsEnemy = AsEnemy;
	Parms.HalfAnglePitch = HalfAnglePitch;
	Parms.HalfAngleYaw = HalfAngleYaw;
	Parms.ListIgnoreID = ListIgnoreID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ResultList != nullptr)
		*ResultList = std::move(Parms.ResultList);

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.GetListMonstersInRange
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ObserverLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ObserverForwardVector                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             ObserverFaction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InRange                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AsEnemy                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfAnglePitch                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfAngleYaw                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AWTLMonsterPawn*>     ResultList                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::GetListMonstersInRange(class UObject* WorldContextObject, const struct FVector& ObserverLocation, const struct FVector& ObserverForwardVector, enum class EWTLFaction ObserverFaction, float InRange, bool AsEnemy, float HalfAnglePitch, float HalfAngleYaw, TArray<class AWTLMonsterPawn*>* ResultList, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetListMonstersInRange");

	Params::UWTLBPLibraryCommon_GetListMonstersInRange_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObserverLocation = ObserverLocation;
	Parms.ObserverForwardVector = ObserverForwardVector;
	Parms.ObserverFaction = ObserverFaction;
	Parms.InRange = InRange;
	Parms.AsEnemy = AsEnemy;
	Parms.HalfAnglePitch = HalfAnglePitch;
	Parms.HalfAngleYaw = HalfAngleYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ResultList != nullptr)
		*ResultList = std::move(Parms.ResultList);

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.GetListCharactersInRange
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ObserverLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ObserverForwardVector                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             ObserverFaction                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InRange                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AsEnemy                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfAnglePitch                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfAngleYaw                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AWTLCharacter*>       ResultList                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::GetListCharactersInRange(class UObject* WorldContextObject, const struct FVector& ObserverLocation, const struct FVector& ObserverForwardVector, enum class EWTLFaction ObserverFaction, float InRange, bool AsEnemy, float HalfAnglePitch, float HalfAngleYaw, TArray<class AWTLCharacter*>* ResultList, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetListCharactersInRange");

	Params::UWTLBPLibraryCommon_GetListCharactersInRange_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ObserverLocation = ObserverLocation;
	Parms.ObserverForwardVector = ObserverForwardVector;
	Parms.ObserverFaction = ObserverFaction;
	Parms.InRange = InRange;
	Parms.AsEnemy = AsEnemy;
	Parms.HalfAnglePitch = HalfAnglePitch;
	Parms.HalfAngleYaw = HalfAngleYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ResultList != nullptr)
		*ResultList = std::move(Parms.ResultList);

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.GetKeyFromAction
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FName                        ActionName                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                        ReturnValue                                                      (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FKey UWTLBPLibraryCommon::GetKeyFromAction(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetKeyFromAction");

	Params::UWTLBPLibraryCommon_GetKeyFromAction_Params Parms{};

	Parms.ActionName = ActionName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetItemDisplayName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UGameInstance*               GameInstance                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UWTLBPLibraryCommon::GetItemDisplayName(class UGameInstance* GameInstance, enum class EWTLItemType ItemType, int32 ItemTypeID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetItemDisplayName");

	Params::UWTLBPLibraryCommon_GetItemDisplayName_Params Parms{};

	Parms.GameInstance = GameInstance;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetInputAxisKeyMappingFromKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                        Key                                                              (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputAxisKeyMapping        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInputAxisKeyMapping UWTLBPLibraryCommon::GetInputAxisKeyMappingFromKey(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetInputAxisKeyMappingFromKey");

	Params::UWTLBPLibraryCommon_GetInputAxisKeyMappingFromKey_Params Parms{};

	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetInputActionKeyMappingFromKey
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                        Key                                                              (ConstParm, Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputActionKeyMapping      ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FInputActionKeyMapping UWTLBPLibraryCommon::GetInputActionKeyMappingFromKey(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetInputActionKeyMappingFromKey");

	Params::UWTLBPLibraryCommon_GetInputActionKeyMappingFromKey_Params Parms{};

	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetCurrentLevelTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                     WorldContextObject                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCommon::GetCurrentLevelTime(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetCurrentLevelTime");

	Params::UWTLBPLibraryCommon_GetCurrentLevelTime_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetClosestCharacterForMonster
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              CharacterList                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FVector                     ObserverLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InRadiusSquare                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* UWTLBPLibraryCommon::GetClosestCharacterForMonster(class UObject* WorldContextObject, class AWTLMonsterPawn* Monster, const TArray<class AActor*>& CharacterList, const struct FVector& ObserverLocation, enum class EWTLBPCheckResult* Result, float InRadiusSquare)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetClosestCharacterForMonster");

	Params::UWTLBPLibraryCommon_GetClosestCharacterForMonster_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Monster = Monster;
	Parms.CharacterList = CharacterList;
	Parms.ObserverLocation = ObserverLocation;
	Parms.InRadiusSquare = InRadiusSquare;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetClosestAITargetInterfaceForMonster
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ActorList                                                        (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FVector                     ObserverLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UWTLBPLibraryCommon::GetClosestAITargetInterfaceForMonster(class UObject* WorldContextObject, const TArray<class AActor*>& ActorList, const struct FVector& ObserverLocation, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetClosestAITargetInterfaceForMonster");

	Params::UWTLBPLibraryCommon_GetClosestAITargetInterfaceForMonster_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorList = ActorList;
	Parms.ObserverLocation = ObserverLocation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.GetAllCharactersForMonster
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AWTLCharacter*>       Characters                                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::GetAllCharactersForMonster(class UObject* WorldContextObject, TArray<class AWTLCharacter*>* Characters, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetAllCharactersForMonster");

	Params::UWTLBPLibraryCommon_GetAllCharactersForMonster_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Characters != nullptr)
		*Characters = std::move(Parms.Characters);

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryCommon.GetActorsInRadius
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      ActorClass                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Origin                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Distance                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UWTLBPLibraryCommon::GetActorsInRadius(class UObject* WorldContextObject, class UClass* ActorClass, const struct FVector& Origin, float Distance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "GetActorsInRadius");

	Params::UWTLBPLibraryCommon_GetActorsInRadius_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.ActorClass = ActorClass;
	Parms.Origin = Origin;
	Parms.Distance = Distance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.DistanceSSE2D
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                     From                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     To                                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCommon::DistanceSSE2D(const struct FVector& From, const struct FVector& To)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "DistanceSSE2D");

	Params::UWTLBPLibraryCommon_DistanceSSE2D_Params Parms{};

	Parms.From = From;
	Parms.To = To;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.DistanceSSE
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                     From                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     To                                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLBPLibraryCommon::DistanceSSE(const struct FVector& From, const struct FVector& To)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "DistanceSSE");

	Params::UWTLBPLibraryCommon_DistanceSSE_Params Parms{};

	Parms.From = From;
	Parms.To = To;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.DelayedSpawnActor
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLDelayedSpawnActorInfo   Info                                                             (Parm, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::DelayedSpawnActor(class UObject* WorldContextObject, const struct FWTLDelayedSpawnActorInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "DelayedSpawnActor");

	Params::UWTLBPLibraryCommon_DelayedSpawnActor_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Info = Info;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.DelayedDamage
// (Final, BlueprintAuthorityOnly, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLDelayedDamageInfo       Info                                                             (Parm, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::DelayedDamage(class UObject* WorldContextObject, const struct FWTLDelayedDamageInfo& Info)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "DelayedDamage");

	Params::UWTLBPLibraryCommon_DelayedDamage_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Info = Info;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.ClientShowWarningText
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        Text                                                             (Parm, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::ClientShowWarningText(class AWTLCharacter* Character, class FText Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "ClientShowWarningText");

	Params::UWTLBPLibraryCommon_ClientShowWarningText_Params Parms{};

	Parms.Character = Character;
	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.ClientShowTutorialMessagesByIDs
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      TutorialMessagesIDs                                              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::ClientShowTutorialMessagesByIDs(class AWTLCharacter* Character, TArray<int32>& TutorialMessagesIDs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "ClientShowTutorialMessagesByIDs");

	Params::UWTLBPLibraryCommon_ClientShowTutorialMessagesByIDs_Params Parms{};

	Parms.Character = Character;
	Parms.TutorialMessagesIDs = TutorialMessagesIDs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.ClientShowTutorialMessages
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<enum class EWTLTutorialMessage>TutorialMessages                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::ClientShowTutorialMessages(class AWTLCharacter* Character, TArray<enum class EWTLTutorialMessage>& TutorialMessages)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "ClientShowTutorialMessages");

	Params::UWTLBPLibraryCommon_ClientShowTutorialMessages_Params Parms{};

	Parms.Character = Character;
	Parms.TutorialMessages = TutorialMessages;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.ClientShowTutorialMessageByID
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TutorialMessageID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::ClientShowTutorialMessageByID(class AWTLCharacter* Character, int32 TutorialMessageID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "ClientShowTutorialMessageByID");

	Params::UWTLBPLibraryCommon_ClientShowTutorialMessageByID_Params Parms{};

	Parms.Character = Character;
	Parms.TutorialMessageID = TutorialMessageID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.ClientShowTutorialMessage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLTutorialMessage     TutorialMessage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::ClientShowTutorialMessage(class AWTLCharacter* Character, enum class EWTLTutorialMessage TutorialMessage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "ClientShowTutorialMessage");

	Params::UWTLBPLibraryCommon_ClientShowTutorialMessage_Params Parms{};

	Parms.Character = Character;
	Parms.TutorialMessage = TutorialMessage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.ClientDestoryActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::ClientDestoryActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "ClientDestoryActor");

	Params::UWTLBPLibraryCommon_ClientDestoryActor_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.CheckNPC
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::CheckNPC(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "CheckNPC");

	Params::UWTLBPLibraryCommon_CheckNPC_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBPLibraryCommon.CharactersInToAControllMonster
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContextObject                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MonsterID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MonsterLevel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MonsterLifeSpan                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             MonsterFaction                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLControlledMonsterPawn*   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLControlledMonsterPawn* UWTLBPLibraryCommon::CharactersInToAControllMonster(class UObject* WorldContextObject, class AWTLCharacter* Character, int32 MonsterID, int32 MonsterLevel, float MonsterLifeSpan, enum class EWTLFaction MonsterFaction, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "CharactersInToAControllMonster");

	Params::UWTLBPLibraryCommon_CharactersInToAControllMonster_Params Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Character = Character;
	Parms.MonsterID = MonsterID;
	Parms.MonsterLevel = MonsterLevel;
	Parms.MonsterLifeSpan = MonsterLifeSpan;
	Parms.MonsterFaction = MonsterFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.CalculationOfTheLead
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                     SelfLocation                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetLocation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TargetVelocity                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ProjectileSpeed                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UWTLBPLibraryCommon::CalculationOfTheLead(const struct FVector& SelfLocation, const struct FVector& TargetLocation, const struct FVector& TargetVelocity, float ProjectileSpeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "CalculationOfTheLead");

	Params::UWTLBPLibraryCommon_CalculationOfTheLead_Params Parms{};

	Parms.SelfLocation = SelfLocation;
	Parms.TargetLocation = TargetLocation;
	Parms.TargetVelocity = TargetVelocity;
	Parms.ProjectileSpeed = ProjectileSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLBPLibraryCommon.BranchMonsterCanUseBrains
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class APawn*                       Pawn                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryCommon::BranchMonsterCanUseBrains(class APawn* Pawn, enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryCommon", "BranchMonsterCanUseBrains");

	Params::UWTLBPLibraryCommon_BranchMonsterCanUseBrains_Params Parms{};

	Parms.Pawn = Pawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Class WTL.WTLBPLibraryQuestSystem
// (None)

class UClass* UWTLBPLibraryQuestSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBPLibraryQuestSystem");

	return Clss;
}


// WTLBPLibraryQuestSystem WTL.Default__WTLBPLibraryQuestSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBPLibraryQuestSystem* UWTLBPLibraryQuestSystem::GetDefaultObj()
{
	static class UWTLBPLibraryQuestSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBPLibraryQuestSystem*>(UWTLBPLibraryQuestSystem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLBPLibraryQuestSystem.SetQuestState
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::SetQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState State, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "SetQuestState");

	Params::UWTLBPLibraryQuestSystem_SetQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryQuestSystem.SetCharacterQuestState
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::SetCharacterQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState State, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "SetCharacterQuestState");

	Params::UWTLBPLibraryQuestSystem_SetCharacterQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryQuestSystem.SetCharacterQuestProgressBits
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              BitMask                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::SetCharacterQuestProgressBits(class AWTLCharacter* Character, int32 QuestID, int32 BitMask, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "SetCharacterQuestProgressBits");

	Params::UWTLBPLibraryQuestSystem_SetCharacterQuestProgressBits_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.BitMask = BitMask;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryQuestSystem.SetCharacterQuestProgress
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Progress1                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Progress2                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Progress3                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Progress4                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::SetCharacterQuestProgress(class AWTLCharacter* Character, int32 QuestID, uint8 Progress1, uint8 Progress2, uint8 Progress3, uint8 Progress4, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "SetCharacterQuestProgress");

	Params::UWTLBPLibraryQuestSystem_SetCharacterQuestProgress_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.Progress1 = Progress1;
	Parms.Progress2 = Progress2;
	Parms.Progress3 = Progress3;
	Parms.Progress4 = Progress4;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryQuestSystem.IsCharacterQuestInState
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::IsCharacterQuestInState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState QuestState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "IsCharacterQuestInState");

	Params::UWTLBPLibraryQuestSystem_IsCharacterQuestInState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.QuestState = QuestState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryQuestSystem.IncrementCharacterQuestProgress
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Progress1Delta                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Progress2Delta                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Progress3Delta                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Progress4Delta                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::IncrementCharacterQuestProgress(class AWTLCharacter* Character, int32 QuestID, uint8 Progress1Delta, uint8 Progress2Delta, uint8 Progress3Delta, uint8 Progress4Delta, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "IncrementCharacterQuestProgress");

	Params::UWTLBPLibraryQuestSystem_IncrementCharacterQuestProgress_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.Progress1Delta = Progress1Delta;
	Parms.Progress2Delta = Progress2Delta;
	Parms.Progress3Delta = Progress3Delta;
	Parms.Progress4Delta = Progress4Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryQuestSystem.GetCharacterQuestState
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::GetCharacterQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState* QuestState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "GetCharacterQuestState");

	Params::UWTLBPLibraryQuestSystem_GetCharacterQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (QuestState != nullptr)
		*QuestState = Parms.QuestState;

}


// Function WTL.WTLBPLibraryQuestSystem.GetCharacterQuestProgressDescription
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLMonsterKillRequirementState>MonsterKills                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FWTLEnemyNPCKillRequirementState>EnemyNPCKills                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FWTLCustomQuestRequirementState>CustomRequirements                                               (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::GetCharacterQuestProgressDescription(class AWTLCharacter* Character, int32 QuestID, TArray<struct FWTLMonsterKillRequirementState>* MonsterKills, TArray<struct FWTLEnemyNPCKillRequirementState>* EnemyNPCKills, TArray<struct FWTLCustomQuestRequirementState>* CustomRequirements, enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "GetCharacterQuestProgressDescription");

	Params::UWTLBPLibraryQuestSystem_GetCharacterQuestProgressDescription_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (MonsterKills != nullptr)
		*MonsterKills = std::move(Parms.MonsterKills);

	if (EnemyNPCKills != nullptr)
		*EnemyNPCKills = std::move(Parms.EnemyNPCKills);

	if (CustomRequirements != nullptr)
		*CustomRequirements = std::move(Parms.CustomRequirements);

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryQuestSystem.GetCharacterQuestProgress
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ProgressNumber                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ProgressValue                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::GetCharacterQuestProgress(class AWTLCharacter* Character, int32 QuestID, uint8 ProgressNumber, uint8* ProgressValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "GetCharacterQuestProgress");

	Params::UWTLBPLibraryQuestSystem_GetCharacterQuestProgress_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.ProgressNumber = ProgressNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ProgressValue != nullptr)
		*ProgressValue = Parms.ProgressValue;

}


// Function WTL.WTLBPLibraryQuestSystem.CharacterHasAvailableInventorySlotsForCompleteQuest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::CharacterHasAvailableInventorySlotsForCompleteQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "CharacterHasAvailableInventorySlotsForCompleteQuest");

	Params::UWTLBPLibraryQuestSystem_CharacterHasAvailableInventorySlotsForCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryQuestSystem.CharacterHasAndReturnAvailableInventorySlotsForCompleteQuest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InventoryRequiredSlotCount                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InventoryAvailableSlotCount                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::CharacterHasAndReturnAvailableInventorySlotsForCompleteQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLNPCCheckResult* Result, int32* InventoryRequiredSlotCount, int32* InventoryAvailableSlotCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "CharacterHasAndReturnAvailableInventorySlotsForCompleteQuest");

	Params::UWTLBPLibraryQuestSystem_CharacterHasAndReturnAvailableInventorySlotsForCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	if (InventoryRequiredSlotCount != nullptr)
		*InventoryRequiredSlotCount = Parms.InventoryRequiredSlotCount;

	if (InventoryAvailableSlotCount != nullptr)
		*InventoryAvailableSlotCount = Parms.InventoryAvailableSlotCount;

}


// Function WTL.WTLBPLibraryQuestSystem.CharacterCanTakeQuest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::CharacterCanTakeQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "CharacterCanTakeQuest");

	Params::UWTLBPLibraryQuestSystem_CharacterCanTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLBPLibraryQuestSystem.CharacterCanCompleteQuest
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBPLibraryQuestSystem::CharacterCanCompleteQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBPLibraryQuestSystem", "CharacterCanCompleteQuest");

	Params::UWTLBPLibraryQuestSystem_CharacterCanCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Class WTL.WTLBTService_AICheckForAttack
// (None)

class UClass* UWTLBTService_AICheckForAttack::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTService_AICheckForAttack");

	return Clss;
}


// WTLBTService_AICheckForAttack WTL.Default__WTLBTService_AICheckForAttack
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTService_AICheckForAttack* UWTLBTService_AICheckForAttack::GetDefaultObj()
{
	static class UWTLBTService_AICheckForAttack* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTService_AICheckForAttack*>(UWTLBTService_AICheckForAttack::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTService_BlueprintBase
// (None)

class UClass* UWTLBTService_BlueprintBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTService_BlueprintBase");

	return Clss;
}


// WTLBTService_BlueprintBase WTL.Default__WTLBTService_BlueprintBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTService_BlueprintBase* UWTLBTService_BlueprintBase::GetDefaultObj()
{
	static class UWTLBTService_BlueprintBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTService_BlueprintBase*>(UWTLBTService_BlueprintBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTService_CheckEnemy
// (None)

class UClass* UWTLBTService_CheckEnemy::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTService_CheckEnemy");

	return Clss;
}


// WTLBTService_CheckEnemy WTL.Default__WTLBTService_CheckEnemy
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTService_CheckEnemy* UWTLBTService_CheckEnemy::GetDefaultObj()
{
	static class UWTLBTService_CheckEnemy* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTService_CheckEnemy*>(UWTLBTService_CheckEnemy::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTService_CheckForFarAttack
// (None)

class UClass* UWTLBTService_CheckForFarAttack::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTService_CheckForFarAttack");

	return Clss;
}


// WTLBTService_CheckForFarAttack WTL.Default__WTLBTService_CheckForFarAttack
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTService_CheckForFarAttack* UWTLBTService_CheckForFarAttack::GetDefaultObj()
{
	static class UWTLBTService_CheckForFarAttack* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTService_CheckForFarAttack*>(UWTLBTService_CheckForFarAttack::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTService_CheckForJump
// (None)

class UClass* UWTLBTService_CheckForJump::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTService_CheckForJump");

	return Clss;
}


// WTLBTService_CheckForJump WTL.Default__WTLBTService_CheckForJump
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTService_CheckForJump* UWTLBTService_CheckForJump::GetDefaultObj()
{
	static class UWTLBTService_CheckForJump* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTService_CheckForJump*>(UWTLBTService_CheckForJump::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTService_Enemy_Sensing
// (None)

class UClass* UWTLBTService_Enemy_Sensing::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTService_Enemy_Sensing");

	return Clss;
}


// WTLBTService_Enemy_Sensing WTL.Default__WTLBTService_Enemy_Sensing
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTService_Enemy_Sensing* UWTLBTService_Enemy_Sensing::GetDefaultObj()
{
	static class UWTLBTService_Enemy_Sensing* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTService_Enemy_Sensing*>(UWTLBTService_Enemy_Sensing::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTService_FrightRadius
// (None)

class UClass* UWTLBTService_FrightRadius::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTService_FrightRadius");

	return Clss;
}


// WTLBTService_FrightRadius WTL.Default__WTLBTService_FrightRadius
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTService_FrightRadius* UWTLBTService_FrightRadius::GetDefaultObj()
{
	static class UWTLBTService_FrightRadius* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTService_FrightRadius*>(UWTLBTService_FrightRadius::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTService_MonsterMovementMode
// (None)

class UClass* UWTLBTService_MonsterMovementMode::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTService_MonsterMovementMode");

	return Clss;
}


// WTLBTService_MonsterMovementMode WTL.Default__WTLBTService_MonsterMovementMode
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTService_MonsterMovementMode* UWTLBTService_MonsterMovementMode::GetDefaultObj()
{
	static class UWTLBTService_MonsterMovementMode* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTService_MonsterMovementMode*>(UWTLBTService_MonsterMovementMode::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTService_SightAI
// (None)

class UClass* UWTLBTService_SightAI::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTService_SightAI");

	return Clss;
}


// WTLBTService_SightAI WTL.Default__WTLBTService_SightAI
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTService_SightAI* UWTLBTService_SightAI::GetDefaultObj()
{
	static class UWTLBTService_SightAI* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTService_SightAI*>(UWTLBTService_SightAI::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTService_StateIfHealthLess
// (None)

class UClass* UWTLBTService_StateIfHealthLess::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTService_StateIfHealthLess");

	return Clss;
}


// WTLBTService_StateIfHealthLess WTL.Default__WTLBTService_StateIfHealthLess
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTService_StateIfHealthLess* UWTLBTService_StateIfHealthLess::GetDefaultObj()
{
	static class UWTLBTService_StateIfHealthLess* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTService_StateIfHealthLess*>(UWTLBTService_StateIfHealthLess::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_ActionFromBlackBoard
// (None)

class UClass* UWTLBTTask_ActionFromBlackBoard::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_ActionFromBlackBoard");

	return Clss;
}


// WTLBTTask_ActionFromBlackBoard WTL.Default__WTLBTTask_ActionFromBlackBoard
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_ActionFromBlackBoard* UWTLBTTask_ActionFromBlackBoard::GetDefaultObj()
{
	static class UWTLBTTask_ActionFromBlackBoard* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_ActionFromBlackBoard*>(UWTLBTTask_ActionFromBlackBoard::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_AvailableAction
// (None)

class UClass* UWTLBTTask_AvailableAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_AvailableAction");

	return Clss;
}


// WTLBTTask_AvailableAction WTL.Default__WTLBTTask_AvailableAction
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_AvailableAction* UWTLBTTask_AvailableAction::GetDefaultObj()
{
	static class UWTLBTTask_AvailableAction* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_AvailableAction*>(UWTLBTTask_AvailableAction::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_BlueprintBase
// (None)

class UClass* UWTLBTTask_BlueprintBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_BlueprintBase");

	return Clss;
}


// WTLBTTask_BlueprintBase WTL.Default__WTLBTTask_BlueprintBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_BlueprintBase* UWTLBTTask_BlueprintBase::GetDefaultObj()
{
	static class UWTLBTTask_BlueprintBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_BlueprintBase*>(UWTLBTTask_BlueprintBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_EnemyNPC_MoveTo
// (None)

class UClass* UWTLBTTask_EnemyNPC_MoveTo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_EnemyNPC_MoveTo");

	return Clss;
}


// WTLBTTask_EnemyNPC_MoveTo WTL.Default__WTLBTTask_EnemyNPC_MoveTo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_EnemyNPC_MoveTo* UWTLBTTask_EnemyNPC_MoveTo::GetDefaultObj()
{
	static class UWTLBTTask_EnemyNPC_MoveTo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_EnemyNPC_MoveTo*>(UWTLBTTask_EnemyNPC_MoveTo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_FindClosestMonster
// (None)

class UClass* UWTLBTTask_FindClosestMonster::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_FindClosestMonster");

	return Clss;
}


// WTLBTTask_FindClosestMonster WTL.Default__WTLBTTask_FindClosestMonster
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_FindClosestMonster* UWTLBTTask_FindClosestMonster::GetDefaultObj()
{
	static class UWTLBTTask_FindClosestMonster* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_FindClosestMonster*>(UWTLBTTask_FindClosestMonster::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_FrightRadius
// (None)

class UClass* UWTLBTTask_FrightRadius::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_FrightRadius");

	return Clss;
}


// WTLBTTask_FrightRadius WTL.Default__WTLBTTask_FrightRadius
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_FrightRadius* UWTLBTTask_FrightRadius::GetDefaultObj()
{
	static class UWTLBTTask_FrightRadius* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_FrightRadius*>(UWTLBTTask_FrightRadius::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_Idle
// (None)

class UClass* UWTLBTTask_Idle::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_Idle");

	return Clss;
}


// WTLBTTask_Idle WTL.Default__WTLBTTask_Idle
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_Idle* UWTLBTTask_Idle::GetDefaultObj()
{
	static class UWTLBTTask_Idle* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_Idle*>(UWTLBTTask_Idle::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_MonsterAction
// (None)

class UClass* UWTLBTTask_MonsterAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_MonsterAction");

	return Clss;
}


// WTLBTTask_MonsterAction WTL.Default__WTLBTTask_MonsterAction
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_MonsterAction* UWTLBTTask_MonsterAction::GetDefaultObj()
{
	static class UWTLBTTask_MonsterAction* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_MonsterAction*>(UWTLBTTask_MonsterAction::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_MoveDirectlyToward
// (None)

class UClass* UWTLBTTask_MoveDirectlyToward::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_MoveDirectlyToward");

	return Clss;
}


// WTLBTTask_MoveDirectlyToward WTL.Default__WTLBTTask_MoveDirectlyToward
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_MoveDirectlyToward* UWTLBTTask_MoveDirectlyToward::GetDefaultObj()
{
	static class UWTLBTTask_MoveDirectlyToward* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_MoveDirectlyToward*>(UWTLBTTask_MoveDirectlyToward::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_RunBehaviorStealth
// (None)

class UClass* UWTLBTTask_RunBehaviorStealth::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_RunBehaviorStealth");

	return Clss;
}


// WTLBTTask_RunBehaviorStealth WTL.Default__WTLBTTask_RunBehaviorStealth
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_RunBehaviorStealth* UWTLBTTask_RunBehaviorStealth::GetDefaultObj()
{
	static class UWTLBTTask_RunBehaviorStealth* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_RunBehaviorStealth*>(UWTLBTTask_RunBehaviorStealth::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_SetAIState
// (None)

class UClass* UWTLBTTask_SetAIState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_SetAIState");

	return Clss;
}


// WTLBTTask_SetAIState WTL.Default__WTLBTTask_SetAIState
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_SetAIState* UWTLBTTask_SetAIState::GetDefaultObj()
{
	static class UWTLBTTask_SetAIState* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_SetAIState*>(UWTLBTTask_SetAIState::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_SetMovementMode
// (None)

class UClass* UWTLBTTask_SetMovementMode::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_SetMovementMode");

	return Clss;
}


// WTLBTTask_SetMovementMode WTL.Default__WTLBTTask_SetMovementMode
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_SetMovementMode* UWTLBTTask_SetMovementMode::GetDefaultObj()
{
	static class UWTLBTTask_SetMovementMode* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_SetMovementMode*>(UWTLBTTask_SetMovementMode::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_SetStealthMode
// (None)

class UClass* UWTLBTTask_SetStealthMode::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_SetStealthMode");

	return Clss;
}


// WTLBTTask_SetStealthMode WTL.Default__WTLBTTask_SetStealthMode
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_SetStealthMode* UWTLBTTask_SetStealthMode::GetDefaultObj()
{
	static class UWTLBTTask_SetStealthMode* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_SetStealthMode*>(UWTLBTTask_SetStealthMode::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_WTLMoveTo
// (None)

class UClass* UWTLBTTask_WTLMoveTo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_WTLMoveTo");

	return Clss;
}


// WTLBTTask_WTLMoveTo WTL.Default__WTLBTTask_WTLMoveTo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_WTLMoveTo* UWTLBTTask_WTLMoveTo::GetDefaultObj()
{
	static class UWTLBTTask_WTLMoveTo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_WTLMoveTo*>(UWTLBTTask_WTLMoveTo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBulletHellBase
// (Actor)

class UClass* AWTLBulletHellBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBulletHellBase");

	return Clss;
}


// WTLBulletHellBase WTL.Default__WTLBulletHellBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLBulletHellBase* AWTLBulletHellBase::GetDefaultObj()
{
	static class AWTLBulletHellBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLBulletHellBase*>(AWTLBulletHellBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBulletHellBillboardComponent
// (SceneComponent, PrimitiveComponent)

class UClass* UWTLBulletHellBillboardComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBulletHellBillboardComponent");

	return Clss;
}


// WTLBulletHellBillboardComponent WTL.Default__WTLBulletHellBillboardComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBulletHellBillboardComponent* UWTLBulletHellBillboardComponent::GetDefaultObj()
{
	static class UWTLBulletHellBillboardComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBulletHellBillboardComponent*>(UWTLBulletHellBillboardComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLBulletHellBillboardComponent.SetElements
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FWTLMaterialSpriteElement>NewElements                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLBulletHellBillboardComponent::SetElements(TArray<struct FWTLMaterialSpriteElement>& NewElements)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBulletHellBillboardComponent", "SetElements");

	Params::UWTLBulletHellBillboardComponent_SetElements_Params Parms{};

	Parms.NewElements = NewElements;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBulletHellBillboardComponent.AddElement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UMaterialInterface*          Material                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                 DistanceToOpacityCurve                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bSizeIsInScreenSpace                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BaseSizeX                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BaseSizeY                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCurveFloat*                 DistanceToSizeCurve                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLBulletHellBillboardComponent::AddElement(class UMaterialInterface* Material, class UCurveFloat* DistanceToOpacityCurve, bool bSizeIsInScreenSpace, float BaseSizeX, float BaseSizeY, class UCurveFloat* DistanceToSizeCurve)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBulletHellBillboardComponent", "AddElement");

	Params::UWTLBulletHellBillboardComponent_AddElement_Params Parms{};

	Parms.Material = Material;
	Parms.DistanceToOpacityCurve = DistanceToOpacityCurve;
	Parms.bSizeIsInScreenSpace = bSizeIsInScreenSpace;
	Parms.BaseSizeX = BaseSizeX;
	Parms.BaseSizeY = BaseSizeY;
	Parms.DistanceToSizeCurve = DistanceToSizeCurve;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLBulletinBoard
// (Actor)

class UClass* AWTLBulletinBoard::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBulletinBoard");

	return Clss;
}


// WTLBulletinBoard WTL.Default__WTLBulletinBoard
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLBulletinBoard* AWTLBulletinBoard::GetDefaultObj()
{
	static class AWTLBulletinBoard* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLBulletinBoard*>(AWTLBulletinBoard::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLBulletinBoard.SetIsActive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLBulletinBoard::SetIsActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBulletinBoard", "SetIsActive");

	Params::AWTLBulletinBoard_SetIsActive_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBulletinBoard.OnRep_IsActive
// (Final, Native, Private)
// Parameters:

void AWTLBulletinBoard::OnRep_IsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBulletinBoard", "OnRep_IsActive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBulletinBoard.OnIsActiveChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLBulletinBoard::OnIsActiveChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBulletinBoard", "OnIsActiveChanged");

	Params::AWTLBulletinBoard_OnIsActiveChanged_Params Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLBulletinBoard.GetIsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLBulletinBoard::GetIsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBulletinBoard", "GetIsActive");

	Params::AWTLBulletinBoard_GetIsActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLProjectile
// (Actor)

class UClass* AWTLProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLProjectile");

	return Clss;
}


// WTLProjectile WTL.Default__WTLProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLProjectile* AWTLProjectile::GetDefaultObj()
{
	static class AWTLProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLProjectile*>(AWTLProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBulletProjectile
// (Actor)

class UClass* AWTLBulletProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBulletProjectile");

	return Clss;
}


// WTLBulletProjectile WTL.Default__WTLBulletProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLBulletProjectile* AWTLBulletProjectile::GetDefaultObj()
{
	static class AWTLBulletProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLBulletProjectile*>(AWTLBulletProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLBulletProjectile.OnProjectileBounce
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// struct FHitResult                  ImpactResult                                                     (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FVector                     ImpactVelocity                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLBulletProjectile::OnProjectileBounce(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBulletProjectile", "OnProjectileBounce");

	Params::AWTLBulletProjectile_OnProjectileBounce_Params Parms{};

	Parms.ImpactResult = ImpactResult;
	Parms.ImpactVelocity = ImpactVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLBulletProjectile.OnHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLBulletProjectile::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBulletProjectile", "OnHit");

	Params::AWTLBulletProjectile_OnHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLBulletTracer
// (Actor)

class UClass* AWTLBulletTracer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBulletTracer");

	return Clss;
}


// WTLBulletTracer WTL.Default__WTLBulletTracer
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLBulletTracer* AWTLBulletTracer::GetDefaultObj()
{
	static class AWTLBulletTracer* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLBulletTracer*>(AWTLBulletTracer::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLBulletTracer.OnTracerDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                      DestroyedActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLBulletTracer::OnTracerDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLBulletTracer", "OnTracerDestroyed");

	Params::AWTLBulletTracer_OnTracerDestroyed_Params Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLUsable
// (Actor)

class UClass* AWTLUsable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLUsable");

	return Clss;
}


// WTLUsable WTL.Default__WTLUsable
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLUsable* AWTLUsable::GetDefaultObj()
{
	static class AWTLUsable* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLUsable*>(AWTLUsable::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLUsable.NetMulticast_PutToInventory
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AWTLUsable::NetMulticast_PutToInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUsable", "NetMulticast_PutToInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLUsable.GetMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AWTLUsable::GetMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUsable", "GetMesh");

	Params::AWTLUsable_GetMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLUsable.BP_CustomActionTrigger
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        Name                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLUsable::BP_CustomActionTrigger(class FName Name)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUsable", "BP_CustomActionTrigger");

	Params::AWTLUsable_BP_CustomActionTrigger_Params Parms{};

	Parms.Name = Name;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLStuff
// (Actor)

class UClass* AWTLStuff::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStuff");

	return Clss;
}


// WTLStuff WTL.Default__WTLStuff
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStuff* AWTLStuff::GetDefaultObj()
{
	static class AWTLStuff* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStuff*>(AWTLStuff::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLStuff.Server_OnCharge
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLStuff::Server_OnCharge()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStuff", "Server_OnCharge");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStuff.OnReload
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLStuff::OnReload()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStuff", "OnReload");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStuff.NetMulticast_Recharge
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AWTLStuff::NetMulticast_Recharge()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStuff", "NetMulticast_Recharge");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCameraDisplay
// (Actor)

class UClass* AWTLCameraDisplay::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCameraDisplay");

	return Clss;
}


// WTLCameraDisplay WTL.Default__WTLCameraDisplay
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCameraDisplay* AWTLCameraDisplay::GetDefaultObj()
{
	static class AWTLCameraDisplay* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCameraDisplay*>(AWTLCameraDisplay::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCameraDisplay.K2_StickInputDirection
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              InputUp                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InputRight                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCameraDisplay::K2_StickInputDirection(float InputUp, float InputRight)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCameraDisplay", "K2_StickInputDirection");

	Params::AWTLCameraDisplay_K2_StickInputDirection_Params Parms{};

	Parms.InputUp = InputUp;
	Parms.InputRight = InputRight;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLStaticReplicatedActor
// (Actor)

class UClass* AWTLStaticReplicatedActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStaticReplicatedActor");

	return Clss;
}


// WTLStaticReplicatedActor WTL.Default__WTLStaticReplicatedActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStaticReplicatedActor* AWTLStaticReplicatedActor::GetDefaultObj()
{
	static class AWTLStaticReplicatedActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStaticReplicatedActor*>(AWTLStaticReplicatedActor::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPlaceableStuff
// (Actor)

class UClass* AWTLPlaceableStuff::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPlaceableStuff");

	return Clss;
}


// WTLPlaceableStuff WTL.Default__WTLPlaceableStuff
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLPlaceableStuff* AWTLPlaceableStuff::GetDefaultObj()
{
	static class AWTLPlaceableStuff* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLPlaceableStuff*>(AWTLPlaceableStuff::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPlaceableStuff.OnTakedBack
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               EventInstigator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlaceableStuff::OnTakedBack(class AWTLCharacter* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlaceableStuff", "OnTakedBack");

	Params::AWTLPlaceableStuff_OnTakedBack_Params Parms{};

	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLPlaceableStuff.OnRep_Condition
// (Native, Protected)
// Parameters:

void AWTLPlaceableStuff::OnRep_Condition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlaceableStuff", "OnRep_Condition");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlaceableStuff.OnPlaced
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               EventInstigator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlaceableStuff::OnPlaced(class AWTLCharacter* EventInstigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlaceableStuff", "OnPlaced");

	Params::AWTLPlaceableStuff_OnPlaced_Params Parms{};

	Parms.EventInstigator = EventInstigator;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLPlaceableStuff.OnEnergyChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              EnergyValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlaceableStuff::OnEnergyChanged(float EnergyValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlaceableStuff", "OnEnergyChanged");

	Params::AWTLPlaceableStuff_OnEnergyChanged_Params Parms{};

	Parms.EnergyValue = EnergyValue;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLPlaceableStuff.OnConditionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              ConditionValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlaceableStuff::OnConditionChanged(float ConditionValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlaceableStuff", "OnConditionChanged");

	Params::AWTLPlaceableStuff_OnConditionChanged_Params Parms{};

	Parms.ConditionValue = ConditionValue;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLPlaceableStuff.NetMulticast_OnDestroyed
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:

void AWTLPlaceableStuff::NetMulticast_OnDestroyed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlaceableStuff", "NetMulticast_OnDestroyed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlaceableStuff.K2_OnDestroyed
// (Event, Protected, BlueprintEvent)
// Parameters:

void AWTLPlaceableStuff::K2_OnDestroyed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlaceableStuff", "K2_OnDestroyed");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLPlaceableStuff.BPCustomAnimTrigger
// (Event, Protected, BlueprintEvent)
// Parameters:
// class FName                        TriggerName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlaceableStuff::BPCustomAnimTrigger(class FName TriggerName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlaceableStuff", "BPCustomAnimTrigger");

	Params::AWTLPlaceableStuff_BPCustomAnimTrigger_Params Parms{};

	Parms.TriggerName = TriggerName;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLPlaceableStuff.BP_GetMaxCondition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLPlaceableStuff::BP_GetMaxCondition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlaceableStuff", "BP_GetMaxCondition");

	Params::AWTLPlaceableStuff_BP_GetMaxCondition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLPlaceableStuff.BP_GetCondition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLPlaceableStuff::BP_GetCondition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlaceableStuff", "BP_GetCondition");

	Params::AWTLPlaceableStuff_BP_GetCondition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLCampfire
// (Actor)

class UClass* AWTLCampfire::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCampfire");

	return Clss;
}


// WTLCampfire WTL.Default__WTLCampfire
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCampfire* AWTLCampfire::GetDefaultObj()
{
	static class AWTLCampfire* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCampfire*>(AWTLCampfire::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCampfire.OnRep_StorageContent
// (Final, Native, Private)
// Parameters:

void AWTLCampfire::OnRep_StorageContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCampfire", "OnRep_StorageContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCampfire.OnRep_Energy
// (Final, Native, Private)
// Parameters:

void AWTLCampfire::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCampfire", "OnRep_Energy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCanvasDrawableInterface
// (None)

class UClass* IWTLCanvasDrawableInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCanvasDrawableInterface");

	return Clss;
}


// WTLCanvasDrawableInterface WTL.Default__WTLCanvasDrawableInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLCanvasDrawableInterface* IWTLCanvasDrawableInterface::GetDefaultObj()
{
	static class IWTLCanvasDrawableInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLCanvasDrawableInterface*>(IWTLCanvasDrawableInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCaptureComponent2D
// (SceneComponent)

class UClass* UWTLCaptureComponent2D::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCaptureComponent2D");

	return Clss;
}


// WTLCaptureComponent2D WTL.Default__WTLCaptureComponent2D
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCaptureComponent2D* UWTLCaptureComponent2D::GetDefaultObj()
{
	static class UWTLCaptureComponent2D* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCaptureComponent2D*>(UWTLCaptureComponent2D::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacter
// (Actor, Pawn)

class UClass* AWTLCharacter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacter");

	return Clss;
}


// WTLCharacter WTL.Default__WTLCharacter
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCharacter* AWTLCharacter::GetDefaultObj()
{
	static class AWTLCharacter* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCharacter*>(AWTLCharacter::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCharacter.UpdateEquipmentItemStates
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::UpdateEquipmentItemStates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "UpdateEquipmentItemStates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.StopEmotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLCharacter::StopEmotion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "StopEmotion");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.StopCameraShake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UMatineeCameraShake>CameraShake                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::StopCameraShake(TSubclassOf<class UMatineeCameraShake> CameraShake)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "StopCameraShake");

	Params::AWTLCharacter_StopCameraShake_Params Parms{};

	Parms.CameraShake = CameraShake;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.StartQTE
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      QTEInstigator                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::StartQTE(class AActor* QTEInstigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "StartQTE");

	Params::AWTLCharacter_StartQTE_Params Parms{};

	Parms.QTEInstigator = QTEInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.StartInteractionWithActionGameplayObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ActionGameplayActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::StartInteractionWithActionGameplayObject(class AActor* ActionGameplayActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "StartInteractionWithActionGameplayObject");

	Params::AWTLCharacter_StartInteractionWithActionGameplayObject_Params Parms{};

	Parms.ActionGameplayActor = ActionGameplayActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.SpawnVehicle
// (Final, Native, Private)
// Parameters:
// uint64                             ItemId                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             VehicleID                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::SpawnVehicle(uint64 ItemId, uint16 VehicleID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "SpawnVehicle");

	Params::AWTLCharacter_SpawnVehicle_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.VehicleID = VehicleID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.ShowSteamStoreInterface
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLCharacter::ShowSteamStoreInterface()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "ShowSteamStoreInterface");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.ShowDeathScreen
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLCharacter::ShowDeathScreen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "ShowDeathScreen");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.ShowAllMeshesVisibleOnClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bVisible                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::ShowAllMeshesVisibleOnClient(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "ShowAllMeshesVisibleOnClient");

	Params::AWTLCharacter_ShowAllMeshesVisibleOnClient_Params Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.SetShowAllMeshes
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                               ShowAllMeshes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::SetShowAllMeshes(bool ShowAllMeshes)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "SetShowAllMeshes");

	Params::AWTLCharacter_SetShowAllMeshes_Params Parms{};

	Parms.ShowAllMeshes = ShowAllMeshes;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.SetDeathFromAnomaly
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                               DeathFromAnomaly                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ShowAllMeshes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DeathSimulatePhysics                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::SetDeathFromAnomaly(bool DeathFromAnomaly, bool ShowAllMeshes, bool DeathSimulatePhysics)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "SetDeathFromAnomaly");

	Params::AWTLCharacter_SetDeathFromAnomaly_Params Parms{};

	Parms.DeathFromAnomaly = DeathFromAnomaly;
	Parms.ShowAllMeshes = ShowAllMeshes;
	Parms.DeathSimulatePhysics = DeathSimulatePhysics;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.SetDeathByTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              DelayValue                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>     DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                 DeathInstigator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      DeathCauser                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::SetDeathByTimer(float DelayValue, TSubclassOf<class UDamageType> DamageTypeClass, enum class EWTLCharacterEffectType EffectType, class AController* DeathInstigator, class AActor* DeathCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "SetDeathByTimer");

	Params::AWTLCharacter_SetDeathByTimer_Params Parms{};

	Parms.DelayValue = DelayValue;
	Parms.DamageTypeClass = DamageTypeClass;
	Parms.EffectType = EffectType;
	Parms.DeathInstigator = DeathInstigator;
	Parms.DeathCauser = DeathCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.SetCurrentPose
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// enum class EWTLCharacterPose       Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::SetCurrentPose(enum class EWTLCharacterPose Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "SetCurrentPose");

	Params::AWTLCharacter_SetCurrentPose_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.SetAllMeshesVisible
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bVisible                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::SetAllMeshesVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "SetAllMeshesVisible");

	Params::AWTLCharacter_SetAllMeshesVisible_Params Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_UseEquipmentSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_UseEquipmentSlot(uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_UseEquipmentSlot");

	Params::AWTLCharacter_Server_UseEquipmentSlot_Params Parms{};

	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_Use
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_Use(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_Use");

	Params::AWTLCharacter_Server_Use_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_ThrowNut
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_ThrowNut()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_ThrowNut");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_SwitchFireMode
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_SwitchFireMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_SwitchFireMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_Suicide
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_Suicide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_Suicide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_StopItemPlacement
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_StopItemPlacement()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_StopItemPlacement");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_StopEmotion
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_StopEmotion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_StopEmotion");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_StartItemPlacement
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_StartItemPlacement()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_StartItemPlacement");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_SetSprintMode
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_SetSprintMode(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_SetSprintMode");

	Params::AWTLCharacter_Server_SetSprintMode_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_SetHoldingBreath
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_SetHoldingBreath(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_SetHoldingBreath");

	Params::AWTLCharacter_Server_SetHoldingBreath_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_SetFlashlightEnabled
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_SetFlashlightEnabled(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_SetFlashlightEnabled");

	Params::AWTLCharacter_Server_SetFlashlightEnabled_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_SetDeathFromAnomaly
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// bool                               DeathFromAnomaly                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ShowAllMeshes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DeathSimulatePhysics                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_SetDeathFromAnomaly(bool DeathFromAnomaly, bool ShowAllMeshes, bool DeathSimulatePhysics)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_SetDeathFromAnomaly");

	Params::AWTLCharacter_Server_SetDeathFromAnomaly_Params Parms{};

	Parms.DeathFromAnomaly = DeathFromAnomaly;
	Parms.ShowAllMeshes = ShowAllMeshes;
	Parms.DeathSimulatePhysics = DeathSimulatePhysics;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_SetCurrentPose
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// enum class EWTLCharacterPose       Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_SetCurrentPose(enum class EWTLCharacterPose Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_SetCurrentPose");

	Params::AWTLCharacter_Server_SetCurrentPose_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_SetAppearanceProcessed
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_SetAppearanceProcessed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_SetAppearanceProcessed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_SetAimMode
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IgnoreHandsState                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_SetAimMode(bool Value, bool IgnoreHandsState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_SetAimMode");

	Params::AWTLCharacter_Server_SetAimMode_Params Parms{};

	Parms.Value = Value;
	Parms.IgnoreHandsState = IgnoreHandsState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_SendQTEAction
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint8                              ActionID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_SendQTEAction(uint8 ActionID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_SendQTEAction");

	Params::AWTLCharacter_Server_SendQTEAction_Params Parms{};

	Parms.ActionID = ActionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_SelectSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AllowReselect                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Force                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_SelectSlot(uint8 SlotNumber, bool AllowReselect, bool Force)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_SelectSlot");

	Params::AWTLCharacter_Server_SelectSlot_Params Parms{};

	Parms.SlotNumber = SlotNumber;
	Parms.AllowReselect = AllowReselect;
	Parms.Force = Force;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_RequestStuffPlacement
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint64                             StuffItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_RequestStuffPlacement(uint64 StuffItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_RequestStuffPlacement");

	Params::AWTLCharacter_Server_RequestStuffPlacement_Params Parms{};

	Parms.StuffItemID = StuffItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_RequestSpecialStuffPlacement
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint16                             StuffID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_RequestSpecialStuffPlacement(uint16 StuffID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_RequestSpecialStuffPlacement");

	Params::AWTLCharacter_Server_RequestSpecialStuffPlacement_Params Parms{};

	Parms.StuffID = StuffID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_RequestActionGameplayActorToUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AActor*                      ActionGameplayActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_RequestActionGameplayActorToUse(class AActor* ActionGameplayActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_RequestActionGameplayActorToUse");

	Params::AWTLCharacter_Server_RequestActionGameplayActorToUse_Params Parms{};

	Parms.ActionGameplayActor = ActionGameplayActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_RequestActionGameplayActorToStopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_RequestActionGameplayActorToStopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_RequestActionGameplayActorToStopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_QuickThrow
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_QuickThrow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_QuickThrow");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_QuickMeleeHit
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_QuickMeleeHit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_QuickMeleeHit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_ProcessBulletFlyNear
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize         Location                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCaliber             Caliber                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_ProcessBulletFlyNear(const struct FVector_NetQuantize& Location, enum class EWTLCaliber Caliber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_ProcessBulletFlyNear");

	Params::AWTLCharacter_Server_ProcessBulletFlyNear_Params Parms{};

	Parms.Location = Location;
	Parms.Caliber = Caliber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_PlayEmotion
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              EmotionTypeID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              EmotionID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_PlayEmotion(int32 EmotionTypeID, int32 EmotionID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_PlayEmotion");

	Params::AWTLCharacter_Server_PlayEmotion_Params Parms{};

	Parms.EmotionTypeID = EmotionTypeID;
	Parms.EmotionID = EmotionID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_PlaceStuff
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_PlaceStuff()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_PlaceStuff");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_OnUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AActor*                      InteractiveActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_OnUse(class AActor* InteractiveActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_OnUse");

	Params::AWTLCharacter_Server_OnUse_Params Parms{};

	Parms.InteractiveActor = InteractiveActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_OnTiltRight
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_OnTiltRight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_OnTiltRight");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_OnTiltLeft
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_OnTiltLeft()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_OnTiltLeft");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_OnStopTilt
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_OnStopTilt()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_OnStopTilt");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_OnStartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_OnStartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_OnStartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_OnFinishUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AActor*                      InteractiveObject                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_OnFinishUse(class AActor* InteractiveObject, bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_OnFinishUse");

	Params::AWTLCharacter_Server_OnFinishUse_Params Parms{};

	Parms.InteractiveObject = InteractiveObject;
	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_NotifyClientCheatState
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// enum class EWTLCheatType           CheatType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Info                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_NotifyClientCheatState(enum class EWTLCheatType CheatType, const class FString& Info)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_NotifyClientCheatState");

	Params::AWTLCharacter_Server_NotifyClientCheatState_Params Parms{};

	Parms.CheatType = CheatType;
	Parms.Info = Info;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_MainUseStop
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int32                              OptionalValue1                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OptionalValue2                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_MainUseStop(int32 OptionalValue1, int32 OptionalValue2)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_MainUseStop");

	Params::AWTLCharacter_Server_MainUseStop_Params Parms{};

	Parms.OptionalValue1 = OptionalValue1;
	Parms.OptionalValue2 = OptionalValue2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_MainUseStart
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector2D                   AimOffset                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_MainUseStart(const struct FVector2D& AimOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_MainUseStart");

	Params::AWTLCharacter_Server_MainUseStart_Params Parms{};

	Parms.AimOffset = AimOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_HideItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               Force                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_HideItem(bool Force)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_HideItem");

	Params::AWTLCharacter_Server_HideItem_Params Parms{};

	Parms.Force = Force;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_HideDrone
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_HideDrone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_HideDrone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_CoreHacking_Process
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              InputValue                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLFortificationCommandCore*CommandCore                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_CoreHacking_Process(uint8 InputValue, class AWTLFortificationCommandCore* CommandCore)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_CoreHacking_Process");

	Params::AWTLCharacter_Server_CoreHacking_Process_Params Parms{};

	Parms.InputValue = InputValue;
	Parms.CommandCore = CommandCore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_ClearCurrentSlot
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_ClearCurrentSlot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_ClearCurrentSlot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_CancelStuffPlacementMode
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_CancelStuffPlacementMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_CancelStuffPlacementMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_CancelQTE
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_CancelQTE()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_CancelQTE");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_AssignItemToFastAccessSlot
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Server_AssignItemToFastAccessSlot(uint8 SlotNumber, enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_AssignItemToFastAccessSlot");

	Params::AWTLCharacter_Server_AssignItemToFastAccessSlot_Params Parms{};

	Parms.SlotNumber = SlotNumber;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_AlternativeUseStop
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_AlternativeUseStop()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_AlternativeUseStop");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Server_AlternativeUseStart
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLCharacter::Server_AlternativeUseStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Server_AlternativeUseStart");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.ResetIdleTimer
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLCharacter::ResetIdleTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "ResetIdleTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.PostDeath
// (Native, Public)
// Parameters:

void AWTLCharacter::PostDeath()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "PostDeath");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.PlayStunhit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLCharacterStunhitDirectionStunhitDirection                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsHideUsableItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::PlayStunhit(enum class EWTLCharacterStunhitDirection StunhitDirection, bool IsHideUsableItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "PlayStunhit");

	Params::AWTLCharacter_PlayStunhit_Params Parms{};

	Parms.StunhitDirection = StunhitDirection;
	Parms.IsHideUsableItem = IsHideUsableItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.PlaySoundEventAttached
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFMODEvent*                  Sound                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::PlaySoundEventAttached(class UFMODEvent* Sound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "PlaySoundEventAttached");

	Params::AWTLCharacter_PlaySoundEventAttached_Params Parms{};

	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.PlaySoundEvent2D
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UFMODEvent*                  Sound                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::PlaySoundEvent2D(class UFMODEvent* Sound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "PlaySoundEvent2D");

	Params::AWTLCharacter_PlaySoundEvent2D_Params Parms{};

	Parms.Sound = Sound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.PlayMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                MontageToPlay                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               BlockInput                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::PlayMontage(class UAnimMontage* MontageToPlay, bool BlockInput)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "PlayMontage");

	Params::AWTLCharacter_PlayMontage_Params Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.BlockInput = BlockInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.PlayCameraShake
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UMatineeCameraShake>CameraShake                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsHideUsableItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               RemoveAiming                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::PlayCameraShake(TSubclassOf<class UMatineeCameraShake> CameraShake, float Value, bool IsHideUsableItem, bool RemoveAiming)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "PlayCameraShake");

	Params::AWTLCharacter_PlayCameraShake_Params Parms{};

	Parms.CameraShake = CameraShake;
	Parms.Value = Value;
	Parms.IsHideUsableItem = IsHideUsableItem;
	Parms.RemoveAiming = RemoveAiming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnUnmuteCharacter
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnUnmuteCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnUnmuteCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnTextChatUnmuteCharacter
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnTextChatUnmuteCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnTextChatUnmuteCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnTextChatMuteCharacter
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnTextChatMuteCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnTextChatMuteCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnShowInformationAboutCharacter
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnShowInformationAboutCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnShowInformationAboutCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnShortCharacterInfoChanged
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnShortCharacterInfoChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnShortCharacterInfoChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnSendTextChatMessageToCharacter
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnSendTextChatMessageToCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnSendTextChatMessageToCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnReportCharacter
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnReportCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnReportCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_UsableItemInHands
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_UsableItemInHands()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_UsableItemInHands");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_Stamina
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_Stamina()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_Stamina");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_QTEState
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_QTEState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_QTEState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_PersonalEnergyShieldState
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_PersonalEnergyShieldState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_PersonalEnergyShieldState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_Oxygen
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_Oxygen()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_Oxygen");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_LastTakeHitInfo
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_LastTakeHitInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_LastTakeHitInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_LastEventPoint
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_LastEventPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_LastEventPoint");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_IsTraveling
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_IsTraveling()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_IsTraveling");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_IsProned
// (Native, Public)
// Parameters:

void AWTLCharacter::OnRep_IsProned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_IsProned");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_IsPlacingItem
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_IsPlacingItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_IsPlacingItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_IsInvulnerable
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_IsInvulnerable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_IsInvulnerable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_IsInSafeZone
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_IsInSafeZone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_IsInPVPZone
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_IsInPVPZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_IsInPVPZone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_IsInMobileResurectionPointWorkZone
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_IsInMobileResurectionPointWorkZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_IsInMobileResurectionPointWorkZone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_IsInFishingZone
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_IsInFishingZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_IsInFishingZone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_IsHoldingBreath
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_IsHoldingBreath()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_IsHoldingBreath");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_IsClimbingLadder
// (Final, Native, Public)
// Parameters:

void AWTLCharacter::OnRep_IsClimbingLadder()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_IsClimbingLadder");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_HandsState
// (Final, Native, Private)
// Parameters:
// enum class EWTLHandsState          PreviousHandsState                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::OnRep_HandsState(enum class EWTLHandsState PreviousHandsState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_HandsState");

	Params::AWTLCharacter_OnRep_HandsState_Params Parms{};

	Parms.PreviousHandsState = PreviousHandsState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_FlashlightEnabled
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_FlashlightEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_FlashlightEnabled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_DroneRenderTargetActor
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_DroneRenderTargetActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_DroneRenderTargetActor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_Drone
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_Drone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_Drone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_CurrentRadiationLevel
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_CurrentRadiationLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_CurrentRadiationLevel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_CurrentPose
// (Final, Native, Private)
// Parameters:
// enum class EWTLCharacterPose       PrevValue                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::OnRep_CurrentPose(enum class EWTLCharacterPose PrevValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_CurrentPose");

	Params::AWTLCharacter_OnRep_CurrentPose_Params Parms{};

	Parms.PrevValue = PrevValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_CurrentEmotionKey
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_CurrentEmotionKey()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_CurrentEmotionKey");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_CurrentActionGameplayActor
// (Final, Native, Private)
// Parameters:
// class AActor*                      PrevActor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::OnRep_CurrentActionGameplayActor(class AActor* PrevActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_CurrentActionGameplayActor");

	Params::AWTLCharacter_OnRep_CurrentActionGameplayActor_Params Parms{};

	Parms.PrevActor = PrevActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_bIsSprinting
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_bIsSprinting()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_bIsSprinting");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_bIsJumping
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_bIsJumping()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_bIsJumping");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnRep_bIsAiming
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnRep_bIsAiming()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnRep_bIsAiming");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnPickupPlaceableStuffConfirmed
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnPickupPlaceableStuffConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnPickupPlaceableStuffConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnPickupPlaceableStuff
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnPickupPlaceableStuff()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnPickupPlaceableStuff");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnOfferBarterToCharacter
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnOfferBarterToCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnOfferBarterToCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnOfferBarter
// (Final, Native, Private)
// Parameters:
// class FString                      Message                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::OnOfferBarter(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnOfferBarter");

	Params::AWTLCharacter_OnOfferBarter_Params Parms{};

	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnMuteCharacter
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnMuteCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnMuteCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnMontageStarted
// (Final, Native, Private)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::OnMontageStarted(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnMontageStarted");

	Params::AWTLCharacter_OnMontageStarted_Params Parms{};

	Parms.Montage = Montage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnMontageEnded
// (Final, Native, Private)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInterrupted                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnMontageEnded");

	Params::AWTLCharacter_OnMontageEnded_Params Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnInviteCharacterToGroup
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnInviteCharacterToGroup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnInviteCharacterToGroup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnGiveTokensToCharacter
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnGiveTokensToCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnGiveTokensToCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnCommendCharacter
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnCommendCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnCommendCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnChargePlaceableStuff
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnChargePlaceableStuff()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnChargePlaceableStuff");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnCharacterInfoChanged
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::OnCharacterInfoChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnCharacterInfoChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnCapsuleEndOverlap
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::OnCapsuleEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnCapsuleEndOverlap");

	Params::AWTLCharacter_OnCapsuleEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnCapsuleBeginOverlap
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLCharacter::OnCapsuleBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnCapsuleBeginOverlap");

	Params::AWTLCharacter_OnCapsuleBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.OnBulletFlyNearVolumeBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLCharacter::OnBulletFlyNearVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "OnBulletFlyNearVolumeBeginOverlap");

	Params::AWTLCharacter_OnBulletFlyNearVolumeBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.NetMulticast_ThrowNut
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AWTLCharacter::NetMulticast_ThrowNut()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "NetMulticast_ThrowNut");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.NetMulticast_ShowTeleportationDeviceEffect
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AWTLCharacter::NetMulticast_ShowTeleportationDeviceEffect()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "NetMulticast_ShowTeleportationDeviceEffect");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.NetMulticast_SetBrokenLight
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::NetMulticast_SetBrokenLight(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "NetMulticast_SetBrokenLight");

	Params::AWTLCharacter_NetMulticast_SetBrokenLight_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.NetMulticast_PlayPickupAnimation
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// float                              Rate                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::NetMulticast_PlayPickupAnimation(float Rate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "NetMulticast_PlayPickupAnimation");

	Params::AWTLCharacter_NetMulticast_PlayPickupAnimation_Params Parms{};

	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.NetMulticast_PlayAnimMontage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Rate                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::NetMulticast_PlayAnimMontage(class UAnimMontage* Montage, float Rate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "NetMulticast_PlayAnimMontage");

	Params::AWTLCharacter_NetMulticast_PlayAnimMontage_Params Parms{};

	Parms.Montage = Montage;
	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.NetMulticast_OnTeleportedWithDevice
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AWTLCharacter::NetMulticast_OnTeleportedWithDevice()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "NetMulticast_OnTeleportedWithDevice");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.NetMulticast_OnStuffEquipmentStateChanged
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             StuffID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::NetMulticast_OnStuffEquipmentStateChanged(uint64 CharacterID, uint16 StuffID, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "NetMulticast_OnStuffEquipmentStateChanged");

	Params::AWTLCharacter_NetMulticast_OnStuffEquipmentStateChanged_Params Parms{};

	Parms.CharacterID = CharacterID;
	Parms.StuffID = StuffID;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.LevelLoadedAtStart
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::LevelLoadedAtStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "LevelLoadedAtStart");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Kill
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AController*                 Killer                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      DamageCauser                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>     DamageTypeClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Kill(class AController* Killer, class AActor* DamageCauser, TSubclassOf<class UDamageType> DamageTypeClass, enum class EWTLCharacterEffectType EffectType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Kill");

	Params::AWTLCharacter_Kill_Params Parms{};

	Parms.Killer = Killer;
	Parms.DamageCauser = DamageCauser;
	Parms.DamageTypeClass = DamageTypeClass;
	Parms.EffectType = EffectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.K2_ShowTeleportationDeviceEffect
// (Event, Protected, BlueprintEvent)
// Parameters:

void AWTLCharacter::K2_ShowTeleportationDeviceEffect()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_ShowTeleportationDeviceEffect");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLCharacter.K2_ShowExplosionEffectsAfterDeath
// (Event, Protected, BlueprintEvent)
// Parameters:

void AWTLCharacter::K2_ShowExplosionEffectsAfterDeath()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_ShowExplosionEffectsAfterDeath");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLCharacter.K2_ShowEffectsAfterDeath
// (Event, Protected, BlueprintEvent)
// Parameters:

void AWTLCharacter::K2_ShowEffectsAfterDeath()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_ShowEffectsAfterDeath");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLCharacter.K2_SetMovementEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::K2_SetMovementEnabled(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_SetMovementEnabled");

	Params::AWTLCharacter_K2_SetMovementEnabled_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.K2_OnStartProne
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              HalfHeightAdjust                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ScaledHalfHeightAdjust                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::K2_OnStartProne(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_OnStartProne");

	Params::AWTLCharacter_K2_OnStartProne_Params Parms{};

	Parms.HalfHeightAdjust = HalfHeightAdjust;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCharacter.K2_OnEndProne
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              HalfHeightAdjust                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ScaledHalfHeightAdjust                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::K2_OnEndProne(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_OnEndProne");

	Params::AWTLCharacter_K2_OnEndProne_Params Parms{};

	Parms.HalfHeightAdjust = HalfHeightAdjust;
	Parms.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCharacter.K2_OnEffectRemoved
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::K2_OnEffectRemoved(enum class EWTLCharacterEffectType EffectType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_OnEffectRemoved");

	Params::AWTLCharacter_K2_OnEffectRemoved_Params Parms{};

	Parms.EffectType = EffectType;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCharacter.K2_OnEffectAdded
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::K2_OnEffectAdded(enum class EWTLCharacterEffectType EffectType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_OnEffectAdded");

	Params::AWTLCharacter_K2_OnEffectAdded_Params Parms{};

	Parms.EffectType = EffectType;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCharacter.K2_OnDeath
// (Event, Protected, BlueprintEvent)
// Parameters:

void AWTLCharacter::K2_OnDeath()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_OnDeath");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLCharacter.K2_LockCameraRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::K2_LockCameraRotation(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_LockCameraRotation");

	Params::AWTLCharacter_K2_LockCameraRotation_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.K2_GetGenericTeamID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGenericTeamId              ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGenericTeamId AWTLCharacter::K2_GetGenericTeamID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_GetGenericTeamID");

	Params::AWTLCharacter_K2_GetGenericTeamID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.K2_GetCharacterClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLCharacterClass      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLCharacterClass AWTLCharacter::K2_GetCharacterClass()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_GetCharacterClass");

	Params::AWTLCharacter_K2_GetCharacterClass_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.K2_CanBeSeenFrom
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     ObserverLocation                                                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     OutSeenLocation                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NumberOfLoSChecksPerformed                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              OutSightStrength                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      IgnoreActor                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::K2_CanBeSeenFrom(struct FVector& ObserverLocation, struct FVector* OutSeenLocation, int32* NumberOfLoSChecksPerformed, float* OutSightStrength, class AActor* IgnoreActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "K2_CanBeSeenFrom");

	Params::AWTLCharacter_K2_CanBeSeenFrom_Params Parms{};

	Parms.ObserverLocation = ObserverLocation;
	Parms.IgnoreActor = IgnoreActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutSeenLocation != nullptr)
		*OutSeenLocation = std::move(Parms.OutSeenLocation);

	if (NumberOfLoSChecksPerformed != nullptr)
		*NumberOfLoSChecksPerformed = Parms.NumberOfLoSChecksPerformed;

	if (OutSightStrength != nullptr)
		*OutSightStrength = Parms.OutSightStrength;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IsReadyToSpawnVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::IsReadyToSpawnVehicle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IsReadyToSpawnVehicle");

	Params::AWTLCharacter_IsReadyToSpawnVehicle_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IsPVPEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::IsPVPEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IsPVPEnabled");

	Params::AWTLCharacter_IsPVPEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IsPlayingEmotion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::IsPlayingEmotion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IsPlayingEmotion");

	Params::AWTLCharacter_IsPlayingEmotion_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IsInSafeZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IsInSafeZone");

	Params::AWTLCharacter_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IsInPVPZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::IsInPVPZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IsInPVPZone");

	Params::AWTLCharacter_IsInPVPZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IsInMobileResurectionPointWorkZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::IsInMobileResurectionPointWorkZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IsInMobileResurectionPointWorkZone");

	Params::AWTLCharacter_IsInMobileResurectionPointWorkZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IsInFortificationScoreZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::IsInFortificationScoreZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IsInFortificationScoreZone");

	Params::AWTLCharacter_IsInFortificationScoreZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IsInFishingZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::IsInFishingZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IsInFishingZone");

	Params::AWTLCharacter_IsInFishingZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IsInExactSafeZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLSafeZone*                SafeZone                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::IsInExactSafeZone(class AWTLSafeZone* SafeZone)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IsInExactSafeZone");

	Params::AWTLCharacter_IsInExactSafeZone_Params Parms{};

	Parms.SafeZone = SafeZone;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IsInAir
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::IsInAir()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IsInAir");

	Params::AWTLCharacter_IsInAir_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.IncrementMonstersNear
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::IncrementMonstersNear(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IncrementMonstersNear");

	Params::AWTLCharacter_IncrementMonstersNear_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.IncrementMonstersFollowing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::IncrementMonstersFollowing(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "IncrementMonstersFollowing");

	Params::AWTLCharacter_IncrementMonstersFollowing_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.HideAllMeshes
// (Final, Native, Private, BlueprintCallable)
// Parameters:

void AWTLCharacter::HideAllMeshes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "HideAllMeshes");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.GetSkeletalMeshComponentsByRef
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class USkeletalMeshComponent*>Meshes                                                           (Parm, OutParm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLCharacter::GetSkeletalMeshComponentsByRef(TArray<class USkeletalMeshComponent*>* Meshes)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetSkeletalMeshComponentsByRef");

	Params::AWTLCharacter_GetSkeletalMeshComponentsByRef_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Meshes != nullptr)
		*Meshes = std::move(Parms.Meshes);

}


// Function WTL.WTLCharacter.GetSkeletalMeshComponents
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class USkeletalMeshComponent*>ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class USkeletalMeshComponent*> AWTLCharacter::GetSkeletalMeshComponents()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetSkeletalMeshComponents");

	Params::AWTLCharacter_GetSkeletalMeshComponents_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetPercentHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLCharacter::GetPercentHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetPercentHealth");

	Params::AWTLCharacter_GetPercentHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetLastEventPoint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLEventPoint*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLEventPoint* AWTLCharacter::GetLastEventPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetLastEventPoint");

	Params::AWTLCharacter_GetLastEventPoint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetIsInQTE
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::GetIsInQTE()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetIsInQTE");

	Params::AWTLCharacter_GetIsInQTE_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetHUD
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLHUD*                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLHUD* AWTLCharacter::GetHUD()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetHUD");

	Params::AWTLCharacter_GetHUD_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetDeathFromAnomaly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::GetDeathFromAnomaly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetDeathFromAnomaly");

	Params::AWTLCharacter_GetDeathFromAnomaly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetCurrentPose
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLCharacterPose       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLCharacterPose AWTLCharacter::GetCurrentPose()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetCurrentPose");

	Params::AWTLCharacter_GetCurrentPose_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetCurrentActionGameplayObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* AWTLCharacter::GetCurrentActionGameplayObject()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetCurrentActionGameplayObject");

	Params::AWTLCharacter_GetCurrentActionGameplayObject_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetComplexion
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AWTLCharacter::GetComplexion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetComplexion");

	Params::AWTLCharacter_GetComplexion_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetChickenStatusAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLCharacter::GetChickenStatusAlpha()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetChickenStatusAlpha");

	Params::AWTLCharacter_GetChickenStatusAlpha_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetChickenStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AWTLCharacter::GetChickenStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetChickenStatus");

	Params::AWTLCharacter_GetChickenStatus_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetCharacterRankName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLCharacter::GetCharacterRankName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetCharacterRankName");

	Params::AWTLCharacter_GetCharacterRankName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetCharacterRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AWTLCharacter::GetCharacterRank()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetCharacterRank");

	Params::AWTLCharacter_GetCharacterRank_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetCharacterLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AWTLCharacter::GetCharacterLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetCharacterLevel");

	Params::AWTLCharacter_GetCharacterLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.GetAITeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLAITeam              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLAITeam AWTLCharacter::GetAITeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "GetAITeam");

	Params::AWTLCharacter_GetAITeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.FinishInteractionWithActionGameplayObject
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLCharacter::FinishInteractionWithActionGameplayObject()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "FinishInteractionWithActionGameplayObject");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.FailQTE
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLCharacter::FailQTE()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "FailQTE");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.DecrementMonstersNear
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::DecrementMonstersNear(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "DecrementMonstersNear");

	Params::AWTLCharacter_DecrementMonstersNear_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.DecrementMonstersFollowing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::DecrementMonstersFollowing(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "DecrementMonstersFollowing");

	Params::AWTLCharacter_DecrementMonstersFollowing_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_WrongPlacementSpotMessage
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class FText                        Message                                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_WrongPlacementSpotMessage(class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_WrongPlacementSpotMessage");

	Params::AWTLCharacter_Client_WrongPlacementSpotMessage_Params Parms{};

	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_UpdateEquipmentItemStates
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLCharacter::Client_UpdateEquipmentItemStates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_UpdateEquipmentItemStates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_ShowWarningText
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// class FText                        WarningText                                                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               IsPlaySound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_ShowWarningText(class FText& WarningText, bool IsPlaySound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_ShowWarningText");

	Params::AWTLCharacter_Client_ShowWarningText_Params Parms{};

	Parms.WarningText = WarningText;
	Parms.IsPlaySound = IsPlaySound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_ShowWarning
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// enum class EWTLWarningTitleWidgetTypeWarningTitleWidgetType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsPlaySound                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_ShowWarning(enum class EWTLWarningTitleWidgetType WarningTitleWidgetType, bool IsPlaySound)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_ShowWarning");

	Params::AWTLCharacter_Client_ShowWarning_Params Parms{};

	Parms.WarningTitleWidgetType = WarningTitleWidgetType;
	Parms.IsPlaySound = IsPlaySound;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_ShowTeleportationDeviceWindowWidget
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint64                             TeleportationDeviceItemID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_ShowTeleportationDeviceWindowWidget(uint64 TeleportationDeviceItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_ShowTeleportationDeviceWindowWidget");

	Params::AWTLCharacter_Client_ShowTeleportationDeviceWindowWidget_Params Parms{};

	Parms.TeleportationDeviceItemID = TeleportationDeviceItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_ShowSteamStoreInterface
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:

void AWTLCharacter::Client_ShowSteamStoreInterface()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_ShowSteamStoreInterface");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_ShowContentInventory
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_ShowContentInventory(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_ShowContentInventory");

	Params::AWTLCharacter_Client_ShowContentInventory_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_ShowActionTimerWidget
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// float                              Timeout                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLActionTimerWidgetTypeType                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCountdownSliderWidgetFillingTypeFillingType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_ShowActionTimerWidget(float Timeout, enum class EWTLActionTimerWidgetType Type, enum class EWTLCountdownSliderWidgetFillingType FillingType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_ShowActionTimerWidget");

	Params::AWTLCharacter_Client_ShowActionTimerWidget_Params Parms{};

	Parms.Timeout = Timeout;
	Parms.Type = Type;
	Parms.FillingType = FillingType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_SetDeathFromAnomaly
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:
// bool                               DeathFromAnomaly                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ShowAllMeshes                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DeathSimulatePhysics                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_SetDeathFromAnomaly(bool DeathFromAnomaly, bool ShowAllMeshes, bool DeathSimulatePhysics)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_SetDeathFromAnomaly");

	Params::AWTLCharacter_Client_SetDeathFromAnomaly_Params Parms{};

	Parms.DeathFromAnomaly = DeathFromAnomaly;
	Parms.ShowAllMeshes = ShowAllMeshes;
	Parms.DeathSimulatePhysics = DeathSimulatePhysics;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_SetAllMeshesVisible
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bVisible                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_SetAllMeshesVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_SetAllMeshesVisible");

	Params::AWTLCharacter_Client_SetAllMeshesVisible_Params Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_SetAdminGodMode
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_SetAdminGodMode(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_SetAdminGodMode");

	Params::AWTLCharacter_Client_SetAdminGodMode_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_SetAdminDropMode
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_SetAdminDropMode(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_SetAdminDropMode");

	Params::AWTLCharacter_Client_SetAdminDropMode_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_SelectSlot
// (Final, Net, NetReliable, Native, Event, Private, NetClient, NetValidate)
// Parameters:
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AllowReselect                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Force                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_SelectSlot(uint8 SlotNumber, bool AllowReselect, bool Force)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_SelectSlot");

	Params::AWTLCharacter_Client_SelectSlot_Params Parms{};

	Parms.SlotNumber = SlotNumber;
	Parms.AllowReselect = AllowReselect;
	Parms.Force = Force;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_ResetCurrentInteractiveObjetHighlight
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:

void AWTLCharacter::Client_ResetCurrentInteractiveObjetHighlight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_ResetCurrentInteractiveObjetHighlight");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_ResetAimMode
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLCharacter::Client_ResetAimMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_ResetAimMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_RadiationDetectorSignal
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                              Power                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_RadiationDetectorSignal(float Power)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_RadiationDetectorSignal");

	Params::AWTLCharacter_Client_RadiationDetectorSignal_Params Parms{};

	Parms.Power = Power;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnUsePortalError
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLCharacter::Client_OnUsePortalError()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnUsePortalError");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnUsePortal
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLCharacter::Client_OnUsePortal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnUsePortal");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnStuffPlacementMode
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint16                             StuffID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnStuffPlacementMode(uint16 StuffID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnStuffPlacementMode");

	Params::AWTLCharacter_Client_OnStuffPlacementMode_Params Parms{};

	Parms.StuffID = StuffID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnPostSelectSlot
// (Final, Net, NetReliable, Native, Event, Private, NetClient, NetValidate)
// Parameters:
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnPostSelectSlot(uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnPostSelectSlot");

	Params::AWTLCharacter_Client_OnPostSelectSlot_Params Parms{};

	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnPosses
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint64                             PossesedCharacterID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnPosses(uint64 PossesedCharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnPosses");

	Params::AWTLCharacter_Client_OnPosses_Params Parms{};

	Parms.PossesedCharacterID = PossesedCharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnPlaceableStuffUsed
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnPlaceableStuffUsed(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnPlaceableStuffUsed");

	Params::AWTLCharacter_Client_OnPlaceableStuffUsed_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnMedicineApplied
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint16                             MedicineID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnMedicineApplied(uint16 MedicineID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnMedicineApplied");

	Params::AWTLCharacter_Client_OnMedicineApplied_Params Parms{};

	Parms.MedicineID = MedicineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnItemUnequipped
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLCharacter::Client_OnItemUnequipped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnItemUnequipped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnItemEquipped
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLCharacter::Client_OnItemEquipped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnItemEquipped");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnHideItem
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLCharacter::Client_OnHideItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnHideItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnEventZoneLeave
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class AWTLEventPoint*              EventPoint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnEventZoneLeave(class AWTLEventPoint* EventPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnEventZoneLeave");

	Params::AWTLCharacter_Client_OnEventZoneLeave_Params Parms{};

	Parms.EventPoint = EventPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnEventZoneFinished
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class AWTLEventPoint*              EventPoint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Successful                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnEventZoneFinished(class AWTLEventPoint* EventPoint, bool Successful)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnEventZoneFinished");

	Params::AWTLCharacter_Client_OnEventZoneFinished_Params Parms{};

	Parms.EventPoint = EventPoint;
	Parms.Successful = Successful;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnEventZoneEnter
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class AWTLEventPoint*              EventPoint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ShowInformer                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnEventZoneEnter(class AWTLEventPoint* EventPoint, bool ShowInformer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnEventZoneEnter");

	Params::AWTLCharacter_Client_OnEventZoneEnter_Params Parms{};

	Parms.EventPoint = EventPoint;
	Parms.ShowInformer = ShowInformer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnEquipmentItemStateChanged
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint16                             StuffID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsEnabled                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnEquipmentItemStateChanged(uint16 StuffID, bool bIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnEquipmentItemStateChanged");

	Params::AWTLCharacter_Client_OnEquipmentItemStateChanged_Params Parms{};

	Parms.StuffID = StuffID;
	Parms.bIsEnabled = bIsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnEffectRemoved
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnEffectRemoved(enum class EWTLCharacterEffectType EffectType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnEffectRemoved");

	Params::AWTLCharacter_Client_OnEffectRemoved_Params Parms{};

	Parms.EffectType = EffectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnEffectAdded
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnEffectAdded(enum class EWTLCharacterEffectType EffectType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnEffectAdded");

	Params::AWTLCharacter_Client_OnEffectAdded_Params Parms{};

	Parms.EffectType = EffectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnCharacterUsed
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLCharacter::Client_OnCharacterUsed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnCharacterUsed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_OnBulletFlyNear
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:
// struct FVector_NetQuantize         Position                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCaliber             Caliber                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_OnBulletFlyNear(const struct FVector_NetQuantize& Position, enum class EWTLCaliber Caliber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_OnBulletFlyNear");

	Params::AWTLCharacter_Client_OnBulletFlyNear_Params Parms{};

	Parms.Position = Position;
	Parms.Caliber = Caliber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_NDPDetectorSignal
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                              Power                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_NDPDetectorSignal(float Power)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_NDPDetectorSignal");

	Params::AWTLCharacter_Client_NDPDetectorSignal_Params Parms{};

	Parms.Power = Power;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_LockInputUnequipUsableItemAndUse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLCharacter::Client_LockInputUnequipUsableItemAndUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_LockInputUnequipUsableItemAndUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_HideActionTimerWidget
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_HideActionTimerWidget(bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_HideActionTimerWidget");

	Params::AWTLCharacter_Client_HideActionTimerWidget_Params Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_EffectCameraManager
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// float                              AddVingette                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              AddFringe                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsHideUsableItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               RemoveAiming                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_EffectCameraManager(float AddVingette, float AddFringe, bool IsHideUsableItem, bool RemoveAiming)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_EffectCameraManager");

	Params::AWTLCharacter_Client_EffectCameraManager_Params Parms{};

	Parms.AddVingette = AddVingette;
	Parms.AddFringe = AddFringe;
	Parms.IsHideUsableItem = IsHideUsableItem;
	Parms.RemoveAiming = RemoveAiming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_CoreHacking_Result
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint8                              Result                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_CoreHacking_Result(uint8 Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_CoreHacking_Result");

	Params::AWTLCharacter_Client_CoreHacking_Result_Params Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_ClearChat
// (Net, Native, Event, Public, NetClient)
// Parameters:

void AWTLCharacter::Client_ClearChat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_ClearChat");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_ApplyHearingDamage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                              Duration                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Falloff                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_ApplyHearingDamage(float Duration, float Falloff)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_ApplyHearingDamage");

	Params::AWTLCharacter_Client_ApplyHearingDamage_Params Parms{};

	Parms.Duration = Duration;
	Parms.Falloff = Falloff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Client_AddMarkers
// (Net, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FWTLMarkerMemoryElement>Markers                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLCharacter::Client_AddMarkers(TArray<struct FWTLMarkerMemoryElement>& Markers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Client_AddMarkers");

	Params::AWTLCharacter_Client_AddMarkers_Params Parms{};

	Parms.Markers = Markers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.CleanMotionVector
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLCharacter::CleanMotionVector()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "CleanMotionVector");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.ChickenStatusDelta
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Delta                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::ChickenStatusDelta(int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "ChickenStatusDelta");

	Params::AWTLCharacter_ChickenStatusDelta_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.CharacterStunned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::CharacterStunned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "CharacterStunned");

	Params::AWTLCharacter_CharacterStunned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.CanSpawnOnSafeZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::CanSpawnOnSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "CanSpawnOnSafeZone");

	Params::AWTLCharacter_CanSpawnOnSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.CancelQTE
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               bIsFromClientside                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::CancelQTE(bool bIsFromClientside)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "CancelQTE");

	Params::AWTLCharacter_CancelQTE_Params Parms{};

	Parms.bIsFromClientside = bIsFromClientside;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Broadcast_SetAllMeshesVisible
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                               bVisible                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Broadcast_SetAllMeshesVisible(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Broadcast_SetAllMeshesVisible");

	Params::AWTLCharacter_Broadcast_SetAllMeshesVisible_Params Parms{};

	Parms.bVisible = bVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Broadcast_PlayMontage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class UAnimMontage*                MontageToPlay                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               BlockInput                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Broadcast_PlayMontage(class UAnimMontage* MontageToPlay, bool BlockInput)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Broadcast_PlayMontage");

	Params::AWTLCharacter_Broadcast_PlayMontage_Params Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.BlockInput = BlockInput;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.Broadcast_OnStunhit
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// enum class EWTLCharacterStunhitDirectionStunhitDirection                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::Broadcast_OnStunhit(enum class EWTLCharacterStunhitDirection StunhitDirection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "Broadcast_OnStunhit");

	Params::AWTLCharacter_Broadcast_OnStunhit_Params Parms{};

	Parms.StunhitDirection = StunhitDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.BPHavePremium
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::BPHavePremium()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "BPHavePremium");

	Params::AWTLCharacter_BPHavePremium_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.BPGetCharacterName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLCharacter::BPGetCharacterName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "BPGetCharacterName");

	Params::AWTLCharacter_BPGetCharacterName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.BPGetCharacterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int64                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 AWTLCharacter::BPGetCharacterID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "BPGetCharacterID");

	Params::AWTLCharacter_BPGetCharacterID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.AvailableNear
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::AvailableNear()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "AvailableNear");

	Params::AWTLCharacter_AvailableNear_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.AvailableForPursuit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::AvailableForPursuit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "AvailableForPursuit");

	Params::AWTLCharacter_AvailableForPursuit_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.ApplyHearingDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Duration                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Falloff                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::ApplyHearingDamage(float Duration, float Falloff)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "ApplyHearingDamage");

	Params::AWTLCharacter_ApplyHearingDamage_Params Parms{};

	Parms.Duration = Duration;
	Parms.Falloff = Falloff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.ApplyEffectToCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacter::ApplyEffectToCharacter(enum class EWTLCharacterEffectType EffectType, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "ApplyEffectToCharacter");

	Params::AWTLCharacter_ApplyEffectToCharacter_Params Parms{};

	Parms.EffectType = EffectType;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.AllLevelsLoadedAtStart
// (Final, Native, Private)
// Parameters:

void AWTLCharacter::AllLevelsLoadedAtStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "AllLevelsLoadedAtStart");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacter.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "AIInterface_IsInSafeZone");

	Params::AWTLCharacter_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "AIInterface_IsCanBeAttacked");

	Params::AWTLCharacter_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacter::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "AIInterface_IsAlive");

	Params::AWTLCharacter_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLCharacter::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "AIInterface_GetVelocity");

	Params::AWTLCharacter_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLCharacter::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "AIInterface_GetGroupID");

	Params::AWTLCharacter_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacter.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLCharacter::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacter", "AIInterface_GetFaction");

	Params::AWTLCharacter_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLAnimationMetaData
// (None)

class UClass* UWTLAnimationMetaData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAnimationMetaData");

	return Clss;
}


// WTLAnimationMetaData WTL.Default__WTLAnimationMetaData
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLAnimationMetaData* UWTLAnimationMetaData::GetDefaultObj()
{
	static class UWTLAnimationMetaData* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLAnimationMetaData*>(UWTLAnimationMetaData::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLRootMotionAnimationMetaData
// (None)

class UClass* UWTLRootMotionAnimationMetaData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRootMotionAnimationMetaData");

	return Clss;
}


// WTLRootMotionAnimationMetaData WTL.Default__WTLRootMotionAnimationMetaData
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLRootMotionAnimationMetaData* UWTLRootMotionAnimationMetaData::GetDefaultObj()
{
	static class UWTLRootMotionAnimationMetaData* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLRootMotionAnimationMetaData*>(UWTLRootMotionAnimationMetaData::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCameraLimitsAnimationMetaData
// (None)

class UClass* UWTLCameraLimitsAnimationMetaData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCameraLimitsAnimationMetaData");

	return Clss;
}


// WTLCameraLimitsAnimationMetaData WTL.Default__WTLCameraLimitsAnimationMetaData
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCameraLimitsAnimationMetaData* UWTLCameraLimitsAnimationMetaData::GetDefaultObj()
{
	static class UWTLCameraLimitsAnimationMetaData* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCameraLimitsAnimationMetaData*>(UWTLCameraLimitsAnimationMetaData::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCameraStyleAnimationMetaData
// (None)

class UClass* UWTLCameraStyleAnimationMetaData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCameraStyleAnimationMetaData");

	return Clss;
}


// WTLCameraStyleAnimationMetaData WTL.Default__WTLCameraStyleAnimationMetaData
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCameraStyleAnimationMetaData* UWTLCameraStyleAnimationMetaData::GetDefaultObj()
{
	static class UWTLCameraStyleAnimationMetaData* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCameraStyleAnimationMetaData*>(UWTLCameraStyleAnimationMetaData::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPawnRotationLockingAnimationMetaData
// (None)

class UClass* UWTLPawnRotationLockingAnimationMetaData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPawnRotationLockingAnimationMetaData");

	return Clss;
}


// WTLPawnRotationLockingAnimationMetaData WTL.Default__WTLPawnRotationLockingAnimationMetaData
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPawnRotationLockingAnimationMetaData* UWTLPawnRotationLockingAnimationMetaData::GetDefaultObj()
{
	static class UWTLPawnRotationLockingAnimationMetaData* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPawnRotationLockingAnimationMetaData*>(UWTLPawnRotationLockingAnimationMetaData::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSpecialStatesAnimationMetaData
// (None)

class UClass* UWTLSpecialStatesAnimationMetaData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSpecialStatesAnimationMetaData");

	return Clss;
}


// WTLSpecialStatesAnimationMetaData WTL.Default__WTLSpecialStatesAnimationMetaData
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSpecialStatesAnimationMetaData* UWTLSpecialStatesAnimationMetaData::GetDefaultObj()
{
	static class UWTLSpecialStatesAnimationMetaData* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSpecialStatesAnimationMetaData*>(UWTLSpecialStatesAnimationMetaData::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPawnCapsuleCollisionRemover
// (None)

class UClass* UWTLPawnCapsuleCollisionRemover::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPawnCapsuleCollisionRemover");

	return Clss;
}


// WTLPawnCapsuleCollisionRemover WTL.Default__WTLPawnCapsuleCollisionRemover
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPawnCapsuleCollisionRemover* UWTLPawnCapsuleCollisionRemover::GetDefaultObj()
{
	static class UWTLPawnCapsuleCollisionRemover* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPawnCapsuleCollisionRemover*>(UWTLPawnCapsuleCollisionRemover::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPawnInVehicleMetaData
// (None)

class UClass* UWTLPawnInVehicleMetaData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPawnInVehicleMetaData");

	return Clss;
}


// WTLPawnInVehicleMetaData WTL.Default__WTLPawnInVehicleMetaData
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPawnInVehicleMetaData* UWTLPawnInVehicleMetaData::GetDefaultObj()
{
	static class UWTLPawnInVehicleMetaData* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPawnInVehicleMetaData*>(UWTLPawnInVehicleMetaData::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLResetLowerBodyRotationAnimationMetaData
// (None)

class UClass* UWTLResetLowerBodyRotationAnimationMetaData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLResetLowerBodyRotationAnimationMetaData");

	return Clss;
}


// WTLResetLowerBodyRotationAnimationMetaData WTL.Default__WTLResetLowerBodyRotationAnimationMetaData
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLResetLowerBodyRotationAnimationMetaData* UWTLResetLowerBodyRotationAnimationMetaData::GetDefaultObj()
{
	static class UWTLResetLowerBodyRotationAnimationMetaData* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLResetLowerBodyRotationAnimationMetaData*>(UWTLResetLowerBodyRotationAnimationMetaData::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacterBodyAnimInstance
// (None)

class UClass* UWTLCharacterBodyAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterBodyAnimInstance");

	return Clss;
}


// WTLCharacterBodyAnimInstance WTL.Default__WTLCharacterBodyAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterBodyAnimInstance* UWTLCharacterBodyAnimInstance::GetDefaultObj()
{
	static class UWTLCharacterBodyAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterBodyAnimInstance*>(UWTLCharacterBodyAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCharacterBodyAnimInstance.UpdateComplexity
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void UWTLCharacterBodyAnimInstance::UpdateComplexity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterBodyAnimInstance", "UpdateComplexity");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacterBodyAnimInstance.K2_MortarLoadingInProccess
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCharacterBodyAnimInstance::K2_MortarLoadingInProccess()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterBodyAnimInstance", "K2_MortarLoadingInProccess");

	Params::UWTLCharacterBodyAnimInstance_K2_MortarLoadingInProccess_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacterBodyAnimInstance.K2_GetMortarSocketLocationInComponentSpace
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        Socket                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UWTLCharacterBodyAnimInstance::K2_GetMortarSocketLocationInComponentSpace(class FName Socket)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterBodyAnimInstance", "K2_GetMortarSocketLocationInComponentSpace");

	Params::UWTLCharacterBodyAnimInstance_K2_GetMortarSocketLocationInComponentSpace_Params Parms{};

	Parms.Socket = Socket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacterBodyAnimInstance.K2_GetMortarSocketLocationInBoneSpace
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        Bone                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        Socket                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UWTLCharacterBodyAnimInstance::K2_GetMortarSocketLocationInBoneSpace(class FName Bone, class FName Socket)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterBodyAnimInstance", "K2_GetMortarSocketLocationInBoneSpace");

	Params::UWTLCharacterBodyAnimInstance_K2_GetMortarSocketLocationInBoneSpace_Params Parms{};

	Parms.Bone = Bone;
	Parms.Socket = Socket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacterBodyAnimInstance.K2_GetMortarSocketLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        Socket                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UWTLCharacterBodyAnimInstance::K2_GetMortarSocketLocation(class FName Socket)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterBodyAnimInstance", "K2_GetMortarSocketLocation");

	Params::UWTLCharacterBodyAnimInstance_K2_GetMortarSocketLocation_Params Parms{};

	Parms.Socket = Socket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacterBodyAnimInstance.K2_GetMortarInclineAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLCharacterBodyAnimInstance::K2_GetMortarInclineAlpha()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterBodyAnimInstance", "K2_GetMortarInclineAlpha");

	Params::UWTLCharacterBodyAnimInstance_K2_GetMortarInclineAlpha_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacterBodyAnimInstance.GetUsableItemAnimationVectorParameter
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              Index                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UWTLCharacterBodyAnimInstance::GetUsableItemAnimationVectorParameter(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterBodyAnimInstance", "GetUsableItemAnimationVectorParameter");

	Params::UWTLCharacterBodyAnimInstance_GetUsableItemAnimationVectorParameter_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacterBodyAnimInstance.GetUsableItemAnimationFloatParameter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              Index                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UWTLCharacterBodyAnimInstance::GetUsableItemAnimationFloatParameter(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterBodyAnimInstance", "GetUsableItemAnimationFloatParameter");

	Params::UWTLCharacterBodyAnimInstance_GetUsableItemAnimationFloatParameter_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLCharacterCameraComponent
// (SceneComponent)

class UClass* UWTLCharacterCameraComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterCameraComponent");

	return Clss;
}


// WTLCharacterCameraComponent WTL.Default__WTLCharacterCameraComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterCameraComponent* UWTLCharacterCameraComponent::GetDefaultObj()
{
	static class UWTLCharacterCameraComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterCameraComponent*>(UWTLCharacterCameraComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacterCustomizationHelper
// (None)

class UClass* UWTLCharacterCustomizationHelper::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterCustomizationHelper");

	return Clss;
}


// WTLCharacterCustomizationHelper WTL.Default__WTLCharacterCustomizationHelper
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterCustomizationHelper* UWTLCharacterCustomizationHelper::GetDefaultObj()
{
	static class UWTLCharacterCustomizationHelper* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterCustomizationHelper*>(UWTLCharacterCustomizationHelper::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacterDrop
// (Actor)

class UClass* AWTLCharacterDrop::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterDrop");

	return Clss;
}


// WTLCharacterDrop WTL.Default__WTLCharacterDrop
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCharacterDrop* AWTLCharacterDrop::GetDefaultObj()
{
	static class AWTLCharacterDrop* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCharacterDrop*>(AWTLCharacterDrop::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCharacterDrop.OnRep_StorageContent
// (Final, Native, Public)
// Parameters:

void AWTLCharacterDrop::OnRep_StorageContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterDrop", "OnRep_StorageContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCharacterEffectsSystem
// (None)

class UClass* UWTLCharacterEffectsSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterEffectsSystem");

	return Clss;
}


// WTLCharacterEffectsSystem WTL.Default__WTLCharacterEffectsSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterEffectsSystem* UWTLCharacterEffectsSystem::GetDefaultObj()
{
	static class UWTLCharacterEffectsSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterEffectsSystem*>(UWTLCharacterEffectsSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacterIdentityComponent
// (None)

class UClass* UWTLCharacterIdentityComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterIdentityComponent");

	return Clss;
}


// WTLCharacterIdentityComponent WTL.Default__WTLCharacterIdentityComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterIdentityComponent* UWTLCharacterIdentityComponent::GetDefaultObj()
{
	static class UWTLCharacterIdentityComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterIdentityComponent*>(UWTLCharacterIdentityComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCharacterMovementComponent
// (None)

class UClass* UWTLCharacterMovementComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterMovementComponent");

	return Clss;
}


// WTLCharacterMovementComponent WTL.Default__WTLCharacterMovementComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterMovementComponent* UWTLCharacterMovementComponent::GetDefaultObj()
{
	static class UWTLCharacterMovementComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterMovementComponent*>(UWTLCharacterMovementComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCharacterMovementComponent.Server_SetLadderClimbing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCharacterMovementComponent::Server_SetLadderClimbing(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterMovementComponent", "Server_SetLadderClimbing");

	Params::UWTLCharacterMovementComponent_Server_SetLadderClimbing_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacterMovementComponent.NetMulticast_PlayLadderMontage
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AWTLLadder*                  Ladder                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLLadderMontageType   LadderMontageType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCharacterMovementComponent::NetMulticast_PlayLadderMontage(class AWTLLadder* Ladder, enum class EWTLLadderMontageType LadderMontageType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterMovementComponent", "NetMulticast_PlayLadderMontage");

	Params::UWTLCharacterMovementComponent_NetMulticast_PlayLadderMontage_Params Parms{};

	Parms.Ladder = Ladder;
	Parms.LadderMontageType = LadderMontageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCharacterPreview
// (Actor)

class UClass* AWTLCharacterPreview::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterPreview");

	return Clss;
}


// WTLCharacterPreview WTL.Default__WTLCharacterPreview
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCharacterPreview* AWTLCharacterPreview::GetDefaultObj()
{
	static class AWTLCharacterPreview* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCharacterPreview*>(AWTLCharacterPreview::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCharacterPreview.UpdateFromStore
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLShortCharacterInfo      ShortCharacterInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ArmsItemType                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ArmsItemTypeID                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              CustomizationScalar                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              CustomizationColor                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MuzzleAttachmentTypeID                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              FlashlightAttachmentTypeID                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ScopeAttachmentTypeID                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacterPreview::UpdateFromStore(class AWTLCharacter* Character, struct FWTLShortCharacterInfo& ShortCharacterInfo, enum class EWTLItemType ArmsItemType, int32 ArmsItemTypeID, uint8 CustomizationScalar, uint8 CustomizationColor, int32 MuzzleAttachmentTypeID, int32 FlashlightAttachmentTypeID, int32 ScopeAttachmentTypeID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterPreview", "UpdateFromStore");

	Params::AWTLCharacterPreview_UpdateFromStore_Params Parms{};

	Parms.Character = Character;
	Parms.ShortCharacterInfo = ShortCharacterInfo;
	Parms.ArmsItemType = ArmsItemType;
	Parms.ArmsItemTypeID = ArmsItemTypeID;
	Parms.CustomizationScalar = CustomizationScalar;
	Parms.CustomizationColor = CustomizationColor;
	Parms.MuzzleAttachmentTypeID = MuzzleAttachmentTypeID;
	Parms.FlashlightAttachmentTypeID = FlashlightAttachmentTypeID;
	Parms.ScopeAttachmentTypeID = ScopeAttachmentTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacterPreview.UpdateFromShortCharacterInfo
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FWTLShortCharacterInfo      ShortCharacterInfo                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLCharacterPreview::UpdateFromShortCharacterInfo(struct FWTLShortCharacterInfo& ShortCharacterInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterPreview", "UpdateFromShortCharacterInfo");

	Params::AWTLCharacterPreview_UpdateFromShortCharacterInfo_Params Parms{};

	Parms.ShortCharacterInfo = ShortCharacterInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacterPreview.UpdateFromCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacterPreview::UpdateFromCharacter(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterPreview", "UpdateFromCharacter");

	Params::AWTLCharacterPreview_UpdateFromCharacter_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacterPreview.SetCharacterPreviewType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLCharacterPreviewTypePreviewType                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacterPreview::SetCharacterPreviewType(enum class EWTLCharacterPreviewType PreviewType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterPreview", "SetCharacterPreviewType");

	Params::AWTLCharacterPreview_SetCharacterPreviewType_Params Parms{};

	Parms.PreviewType = PreviewType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCharacterPreviewAnimInstance
// (None)

class UClass* UWTLCharacterPreviewAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterPreviewAnimInstance");

	return Clss;
}


// WTLCharacterPreviewAnimInstance WTL.Default__WTLCharacterPreviewAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterPreviewAnimInstance* UWTLCharacterPreviewAnimInstance::GetDefaultObj()
{
	static class UWTLCharacterPreviewAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterPreviewAnimInstance*>(UWTLCharacterPreviewAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCharacterPreviewAnimInstance.UpdateComplexity
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                              BodyType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCharacterPreviewAnimInstance::UpdateComplexity(uint8 BodyType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterPreviewAnimInstance", "UpdateComplexity");

	Params::UWTLCharacterPreviewAnimInstance_UpdateComplexity_Params Parms{};

	Parms.BodyType = BodyType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCharacterPreviewRoom
// (Actor)

class UClass* AWTLCharacterPreviewRoom::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterPreviewRoom");

	return Clss;
}


// WTLCharacterPreviewRoom WTL.Default__WTLCharacterPreviewRoom
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCharacterPreviewRoom* AWTLCharacterPreviewRoom::GetDefaultObj()
{
	static class AWTLCharacterPreviewRoom* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCharacterPreviewRoom*>(AWTLCharacterPreviewRoom::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCharacterPreviewRoom.GetCharacterPreview
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacterPreview*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacterPreview* AWTLCharacterPreviewRoom::GetCharacterPreview()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterPreviewRoom", "GetCharacterPreview");

	Params::AWTLCharacterPreviewRoom_GetCharacterPreview_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLCharacterTransportBase
// (Actor, Pawn)

class UClass* AWTLCharacterTransportBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterTransportBase");

	return Clss;
}


// WTLCharacterTransportBase WTL.Default__WTLCharacterTransportBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCharacterTransportBase* AWTLCharacterTransportBase::GetDefaultObj()
{
	static class AWTLCharacterTransportBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCharacterTransportBase*>(AWTLCharacterTransportBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCharacterTransportBase.K2_Use
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacterTransportBase::K2_Use(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterTransportBase", "K2_Use");

	Params::AWTLCharacterTransportBase_K2_Use_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacterTransportBase.K2_SetHighlightState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCharacterTransportBase::K2_SetHighlightState(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterTransportBase", "K2_SetHighlightState");

	Params::AWTLCharacterTransportBase_K2_SetHighlightState_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCharacterTransportBase.K2_GetDisplayText
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLCharacterTransportBase::K2_GetDisplayText(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterTransportBase", "K2_GetDisplayText");

	Params::AWTLCharacterTransportBase_K2_GetDisplayText_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacterTransportBase.K2_CanBeUsed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacterTransportBase::K2_CanBeUsed(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterTransportBase", "K2_CanBeUsed");

	Params::AWTLCharacterTransportBase_K2_CanBeUsed_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacterTransportBase.IsUses
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCharacterTransportBase::IsUses()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterTransportBase", "IsUses");

	Params::AWTLCharacterTransportBase_IsUses_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacterTransportBase.GetMyController
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLPlayerController*        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLPlayerController* AWTLCharacterTransportBase::GetMyController()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterTransportBase", "GetMyController");

	Params::AWTLCharacterTransportBase_GetMyController_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCharacterTransportBase.GetMyCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* AWTLCharacterTransportBase::GetMyCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCharacterTransportBase", "GetMyCharacter");

	Params::AWTLCharacterTransportBase_GetMyCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLCharacterWatchAnimInstance
// (None)

class UClass* UWTLCharacterWatchAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCharacterWatchAnimInstance");

	return Clss;
}


// WTLCharacterWatchAnimInstance WTL.Default__WTLCharacterWatchAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCharacterWatchAnimInstance* UWTLCharacterWatchAnimInstance::GetDefaultObj()
{
	static class UWTLCharacterWatchAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCharacterWatchAnimInstance*>(UWTLCharacterWatchAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLChargeablePlaceableStuff
// (Actor)

class UClass* AWTLChargeablePlaceableStuff::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLChargeablePlaceableStuff");

	return Clss;
}


// WTLChargeablePlaceableStuff WTL.Default__WTLChargeablePlaceableStuff
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLChargeablePlaceableStuff* AWTLChargeablePlaceableStuff::GetDefaultObj()
{
	static class AWTLChargeablePlaceableStuff* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLChargeablePlaceableStuff*>(AWTLChargeablePlaceableStuff::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLChargeablePlaceableStuff.OnRep_Energy
// (Native, Protected)
// Parameters:

void AWTLChargeablePlaceableStuff::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLChargeablePlaceableStuff", "OnRep_Energy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLChargeablePlaceableStuff.BPGetEnergy
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLChargeablePlaceableStuff::BPGetEnergy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLChargeablePlaceableStuff", "BPGetEnergy");

	Params::AWTLChargeablePlaceableStuff_BPGetEnergy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLChargeablePlaceableStuff.BPGetCondition
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLChargeablePlaceableStuff::BPGetCondition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLChargeablePlaceableStuff", "BPGetCondition");

	Params::AWTLChargeablePlaceableStuff_BPGetCondition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLChargeablePlaceableStuff.BPCharged
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLChargeablePlaceableStuff::BPCharged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLChargeablePlaceableStuff", "BPCharged");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLRichTextBlock
// (None)

class UClass* UWTLRichTextBlock::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRichTextBlock");

	return Clss;
}


// WTLRichTextBlock WTL.Default__WTLRichTextBlock
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLRichTextBlock* UWTLRichTextBlock::GetDefaultObj()
{
	static class UWTLRichTextBlock* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLRichTextBlock*>(UWTLRichTextBlock::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLChatTextBlock
// (None)

class UClass* UWTLChatTextBlock::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLChatTextBlock");

	return Clss;
}


// WTLChatTextBlock WTL.Default__WTLChatTextBlock
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLChatTextBlock* UWTLChatTextBlock::GetDefaultObj()
{
	static class UWTLChatTextBlock* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLChatTextBlock*>(UWTLChatTextBlock::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLChatTextBlock.K2_SetWrapTextAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLChatTextBlock::K2_SetWrapTextAt(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLChatTextBlock", "K2_SetWrapTextAt");

	Params::UWTLChatTextBlock_K2_SetWrapTextAt_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommandCore
// (Actor)

class UClass* AWTLCommandCore::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommandCore");

	return Clss;
}


// WTLCommandCore WTL.Default__WTLCommandCore
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCommandCore* AWTLCommandCore::GetDefaultObj()
{
	static class AWTLCommandCore* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCommandCore*>(AWTLCommandCore::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommandCore.OnIntruderKilled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                       Victim                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCommandCore::OnIntruderKilled(class APawn* Victim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCore", "OnIntruderKilled");

	Params::AWTLCommandCore_OnIntruderKilled_Params Parms{};

	Parms.Victim = Victim;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandCore.OnIntruderDetected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                       Intruder                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsLethal                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCommandCore::OnIntruderDetected(class APawn* Intruder, bool bIsLethal)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCore", "OnIntruderDetected");

	Params::AWTLCommandCore_OnIntruderDetected_Params Parms{};

	Parms.Intruder = Intruder;
	Parms.bIsLethal = bIsLethal;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandCore.K2_OnIntruderKilled
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                       Victim                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCommandCore::K2_OnIntruderKilled(class APawn* Victim)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCore", "K2_OnIntruderKilled");

	Params::AWTLCommandCore_K2_OnIntruderKilled_Params Parms{};

	Parms.Victim = Victim;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCommandCore.IsIntruder
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCommandCore::IsIntruder(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCore", "IsIntruder");

	Params::AWTLCommandCore_IsIntruder_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLFortificationCommandCore
// (Actor)

class UClass* AWTLFortificationCommandCore::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFortificationCommandCore");

	return Clss;
}


// WTLFortificationCommandCore WTL.Default__WTLFortificationCommandCore
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFortificationCommandCore* AWTLFortificationCommandCore::GetDefaultObj()
{
	static class AWTLFortificationCommandCore* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFortificationCommandCore*>(AWTLFortificationCommandCore::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLFortificationCommandCore.SetVulnerable
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLFortificationCommandCore::SetVulnerable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "SetVulnerable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFortificationCommandCore.OnRep_TimeTillNextHack
// (Final, Native, Protected)
// Parameters:

void AWTLFortificationCommandCore::OnRep_TimeTillNextHack()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "OnRep_TimeTillNextHack");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFortificationCommandCore.OnRep_IsAnyEngineerConnected
// (Final, Native, Protected)
// Parameters:

void AWTLFortificationCommandCore::OnRep_IsAnyEngineerConnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "OnRep_IsAnyEngineerConnected");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFortificationCommandCore.OnRep_Energy
// (Final, Native, Protected)
// Parameters:

void AWTLFortificationCommandCore::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "OnRep_Energy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFortificationCommandCore.OnRep_ControlFaction
// (Final, Native, Protected)
// Parameters:

void AWTLFortificationCommandCore::OnRep_ControlFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "OnRep_ControlFaction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFortificationCommandCore.OnControlFactionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLFaction             Faction                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFortificationCommandCore::OnControlFactionChanged(enum class EWTLFaction Faction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "OnControlFactionChanged");

	Params::AWTLFortificationCommandCore_OnControlFactionChanged_Params Parms{};

	Parms.Faction = Faction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLFortificationCommandCore.NetMulticast_OnCaptureEnded
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:

void AWTLFortificationCommandCore::NetMulticast_OnCaptureEnded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "NetMulticast_OnCaptureEnded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFortificationCommandCore.IsVulnerable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLFortificationCommandCore::IsVulnerable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "IsVulnerable");

	Params::AWTLFortificationCommandCore_IsVulnerable_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.IsStateRestored
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLFortificationCommandCore::IsStateRestored()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "IsStateRestored");

	Params::AWTLFortificationCommandCore_IsStateRestored_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.IsJammed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLFortificationCommandCore::IsJammed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "IsJammed");

	Params::AWTLFortificationCommandCore_IsJammed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.IsCaptureInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLFortificationCommandCore::IsCaptureInProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "IsCaptureInProgress");

	Params::AWTLFortificationCommandCore_IsCaptureInProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.GetTimeTillNextHack
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWTLDateTime                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FWTLDateTime AWTLFortificationCommandCore::GetTimeTillNextHack()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "GetTimeTillNextHack");

	Params::AWTLFortificationCommandCore_GetTimeTillNextHack_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.GetSignalRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLFortificationCommandCore::GetSignalRange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "GetSignalRange");

	Params::AWTLFortificationCommandCore_GetSignalRange_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.GetNormalizedEnergy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLFortificationCommandCore::GetNormalizedEnergy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "GetNormalizedEnergy");

	Params::AWTLFortificationCommandCore_GetNormalizedEnergy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.GetMaxEnergy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLFortificationCommandCore::GetMaxEnergy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "GetMaxEnergy");

	Params::AWTLFortificationCommandCore_GetMaxEnergy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.GetLastHackTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWTLDateTime                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FWTLDateTime AWTLFortificationCommandCore::GetLastHackTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "GetLastHackTime");

	Params::AWTLFortificationCommandCore_GetLastHackTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.GetHackEndTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWTLDateTime                ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FWTLDateTime AWTLFortificationCommandCore::GetHackEndTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "GetHackEndTime");

	Params::AWTLFortificationCommandCore_GetHackEndTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.GetEnergyPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLFortificationCommandCore::GetEnergyPercent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "GetEnergyPercent");

	Params::AWTLFortificationCommandCore_GetEnergyPercent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.GetEnergy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLFortificationCommandCore::GetEnergy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "GetEnergy");

	Params::AWTLFortificationCommandCore_GetEnergy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.GetControlFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLFortificationCommandCore::GetControlFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "GetControlFaction");

	Params::AWTLFortificationCommandCore_GetControlFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationCommandCore.ClientStopInteraction
// (Final, Native, Public)
// Parameters:

void AWTLFortificationCommandCore::ClientStopInteraction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationCommandCore", "ClientStopInteraction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCheckpointCommandCore
// (Actor)

class UClass* AWTLCheckpointCommandCore::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCheckpointCommandCore");

	return Clss;
}


// WTLCheckpointCommandCore WTL.Default__WTLCheckpointCommandCore
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCheckpointCommandCore* AWTLCheckpointCommandCore::GetDefaultObj()
{
	static class AWTLCheckpointCommandCore* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCheckpointCommandCore*>(AWTLCheckpointCommandCore::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCheckpointControllerComponent
// (None)

class UClass* UWTLCheckpointControllerComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCheckpointControllerComponent");

	return Clss;
}


// WTLCheckpointControllerComponent WTL.Default__WTLCheckpointControllerComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCheckpointControllerComponent* UWTLCheckpointControllerComponent::GetDefaultObj()
{
	static class UWTLCheckpointControllerComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCheckpointControllerComponent*>(UWTLCheckpointControllerComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCheckpointControllerComponent.OnControlFactionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLFaction             Faction                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCheckpointControllerComponent::OnControlFactionChanged(enum class EWTLFaction Faction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCheckpointControllerComponent", "OnControlFactionChanged");

	Params::UWTLCheckpointControllerComponent_OnControlFactionChanged_Params Parms{};

	Parms.Faction = Faction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCheckpointControllerComponent.OnCheckpointStateRestored
// (Event, Public, BlueprintEvent)
// Parameters:

void UWTLCheckpointControllerComponent::OnCheckpointStateRestored()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCheckpointControllerComponent", "OnCheckpointStateRestored");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLCheckpointControllerComponent.OnAllCheckpointsCaptured
// (Event, Public, BlueprintEvent)
// Parameters:

void UWTLCheckpointControllerComponent::OnAllCheckpointsCaptured()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCheckpointControllerComponent", "OnAllCheckpointsCaptured");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLCheckpointControllerComponent.GetControlFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction UWTLCheckpointControllerComponent::GetControlFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCheckpointControllerComponent", "GetControlFaction");

	Params::UWTLCheckpointControllerComponent_GetControlFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCheckpointControllerComponent.GetCaptureEndTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UWTLCheckpointControllerComponent::GetCaptureEndTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCheckpointControllerComponent", "GetCaptureEndTime");

	Params::UWTLCheckpointControllerComponent_GetCaptureEndTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLCircularProgressBar
// (None)

class UClass* UWTLCircularProgressBar::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCircularProgressBar");

	return Clss;
}


// WTLCircularProgressBar WTL.Default__WTLCircularProgressBar
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCircularProgressBar* UWTLCircularProgressBar::GetDefaultObj()
{
	static class UWTLCircularProgressBar* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCircularProgressBar*>(UWTLCircularProgressBar::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCircularProgressBar.SetPercent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCircularProgressBar::SetPercent(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCircularProgressBar", "SetPercent");

	Params::UWTLCircularProgressBar_SetPercent_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCircularProgressBar.SetColor
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor                NewColor                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCircularProgressBar::SetColor(const struct FLinearColor& NewColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCircularProgressBar", "SetColor");

	Params::UWTLCircularProgressBar_SetColor_Params Parms{};

	Parms.NewColor = NewColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLDrone
// (Actor, Pawn)

class UClass* AWTLDrone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDrone");

	return Clss;
}


// WTLDrone WTL.Default__WTLDrone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDrone* AWTLDrone::GetDefaultObj()
{
	static class AWTLDrone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDrone*>(AWTLDrone::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLDrone.OnRep_IsFalling
// (Final, Native, Protected)
// Parameters:

void AWTLDrone::OnRep_IsFalling()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "OnRep_IsFalling");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDrone.OnRep_DroneCondition
// (Native, Protected)
// Parameters:

void AWTLDrone::OnRep_DroneCondition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "OnRep_DroneCondition");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDrone.OnRep_DestroyDrone
// (Final, Native, Protected)
// Parameters:

void AWTLDrone::OnRep_DestroyDrone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "OnRep_DestroyDrone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDrone.OnRep_Character
// (Final, Native, Protected)
// Parameters:

void AWTLDrone::OnRep_Character()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "OnRep_Character");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDrone.OnHit
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLDrone::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "OnHit");

	Params::AWTLDrone_OnHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDrone.OnEndOverlap
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDrone::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "OnEndOverlap");

	Params::AWTLDrone_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDrone.OnCharacterDied
// (Final, Native, Protected)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDrone::OnCharacterDied(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "OnCharacterDied");

	Params::AWTLDrone_OnCharacterDied_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDrone.OnBeginOverlap
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLDrone::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "OnBeginOverlap");

	Params::AWTLDrone_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDrone.K2_UpdateDroneCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              ConditionValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDrone::K2_UpdateDroneCondition(float ConditionValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "K2_UpdateDroneCondition");

	Params::AWTLDrone_K2_UpdateDroneCondition_Params Parms{};

	Parms.ConditionValue = ConditionValue;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLDrone.K2_InitilizeDrone
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDrone::K2_InitilizeDrone(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "K2_InitilizeDrone");

	Params::AWTLDrone_K2_InitilizeDrone_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLDrone.IsFriendly
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EWTLAITeam              AIFaction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLDrone::IsFriendly(enum class EWTLAITeam AIFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "IsFriendly");

	Params::AWTLDrone_IsFriendly_Params Parms{};

	Parms.AIFaction = AIFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDrone.GetSideVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLDrone::GetSideVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "GetSideVelocity");

	Params::AWTLDrone_GetSideVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDrone.GetMovementSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLDrone::GetMovementSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "GetMovementSpeed");

	Params::AWTLDrone_GetMovementSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDrone.GetForwardVelocity
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLDrone::GetForwardVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "GetForwardVelocity");

	Params::AWTLDrone_GetForwardVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDrone.GetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* AWTLDrone::GetCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "GetCharacter");

	Params::AWTLDrone_GetCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDrone.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLDrone::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "AIInterface_IsInSafeZone");

	Params::AWTLDrone_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDrone.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLDrone::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "AIInterface_IsCanBeAttacked");

	Params::AWTLDrone_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDrone.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLDrone::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "AIInterface_IsAlive");

	Params::AWTLDrone_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDrone.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLDrone::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "AIInterface_GetVelocity");

	Params::AWTLDrone_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDrone.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLDrone::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "AIInterface_GetGroupID");

	Params::AWTLDrone_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDrone.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLDrone::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDrone", "AIInterface_GetFaction");

	Params::AWTLDrone_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLCombatDrone
// (Actor, Pawn)

class UClass* AWTLCombatDrone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCombatDrone");

	return Clss;
}


// WTLCombatDrone WTL.Default__WTLCombatDrone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCombatDrone* AWTLCombatDrone::GetDefaultObj()
{
	static class AWTLCombatDrone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCombatDrone*>(AWTLCombatDrone::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommandCoreNode
// (None)

class UClass* IWTLCommandCoreNode::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommandCoreNode");

	return Clss;
}


// WTLCommandCoreNode WTL.Default__WTLCommandCoreNode
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLCommandCoreNode* IWTLCommandCoreNode::GetDefaultObj()
{
	static class IWTLCommandCoreNode* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLCommandCoreNode*>(IWTLCommandCoreNode::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommandCoreNode.OnIntruderRemovedFromList
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                       Intruder                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLCommandCoreNode::OnIntruderRemovedFromList(class APawn* Intruder)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCoreNode", "OnIntruderRemovedFromList");

	Params::IWTLCommandCoreNode_OnIntruderRemovedFromList_Params Parms{};

	Parms.Intruder = Intruder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandCoreNode.OnIntruderDetected
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                       Intruder                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLCommandCoreNode::OnIntruderDetected(class APawn* Intruder)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCoreNode", "OnIntruderDetected");

	Params::IWTLCommandCoreNode_OnIntruderDetected_Params Parms{};

	Parms.Intruder = Intruder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandCoreNode.GetWatchingRange
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float IWTLCommandCoreNode::GetWatchingRange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCoreNode", "GetWatchingRange");

	Params::IWTLCommandCoreNode_GetWatchingRange_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandCoreNode.GetCommandCore
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWTLCommandCore*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCommandCore* IWTLCommandCoreNode::GetCommandCore()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCoreNode", "GetCommandCore");

	Params::IWTLCommandCoreNode_GetCommandCore_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandCoreNode.CommandCoreLink
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCommandCore*             CommandCore                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLCommandCoreNode::CommandCoreLink(class AWTLCommandCore* CommandCore)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCoreNode", "CommandCoreLink");

	Params::IWTLCommandCoreNode_CommandCoreLink_Params Parms{};

	Parms.CommandCore = CommandCore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLBTTask_TurretFindTarget
// (None)

class UClass* UWTLBTTask_TurretFindTarget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_TurretFindTarget");

	return Clss;
}


// WTLBTTask_TurretFindTarget WTL.Default__WTLBTTask_TurretFindTarget
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_TurretFindTarget* UWTLBTTask_TurretFindTarget::GetDefaultObj()
{
	static class UWTLBTTask_TurretFindTarget* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_TurretFindTarget*>(UWTLBTTask_TurretFindTarget::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLBTTask_TurretExtermination
// (None)

class UClass* UWTLBTTask_TurretExtermination::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLBTTask_TurretExtermination");

	return Clss;
}


// WTLBTTask_TurretExtermination WTL.Default__WTLBTTask_TurretExtermination
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLBTTask_TurretExtermination* UWTLBTTask_TurretExtermination::GetDefaultObj()
{
	static class UWTLBTTask_TurretExtermination* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLBTTask_TurretExtermination*>(UWTLBTTask_TurretExtermination::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommandCoreTurret
// (Actor, Pawn)

class UClass* AWTLCommandCoreTurret::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommandCoreTurret");

	return Clss;
}


// WTLCommandCoreTurret WTL.Default__WTLCommandCoreTurret
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCommandCoreTurret* AWTLCommandCoreTurret::GetDefaultObj()
{
	static class AWTLCommandCoreTurret* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCommandCoreTurret*>(AWTLCommandCoreTurret::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommandCoreTurret.OnRep_TargetToFollow
// (Final, Native, Private)
// Parameters:
// class APawn*                       Previous                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCommandCoreTurret::OnRep_TargetToFollow(class APawn* Previous)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCoreTurret", "OnRep_TargetToFollow");

	Params::AWTLCommandCoreTurret_OnRep_TargetToFollow_Params Parms{};

	Parms.Previous = Previous;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandCoreTurret.K2_OnPawnKilled
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                       TargetPawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCommandCoreTurret::K2_OnPawnKilled(class APawn* TargetPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandCoreTurret", "K2_OnPawnKilled");

	Params::AWTLCommandCoreTurret_K2_OnPawnKilled_Params Parms{};

	Parms.TargetPawn = TargetPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLCommandSystem
// (None)

class UClass* UWTLCommandSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommandSystem");

	return Clss;
}


// WTLCommandSystem WTL.Default__WTLCommandSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommandSystem* UWTLCommandSystem::GetDefaultObj()
{
	static class UWTLCommandSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommandSystem*>(UWTLCommandSystem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommandSystem.CC_Weather_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Weather_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Weather_Help");

	Params::UWTLCommandSystem_CC_Weather_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Weather
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Weather(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Weather");

	Params::UWTLCommandSystem_CC_Weather_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_WE
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_WE(class AWTLPlayerController* Player, class AWTLCharacter* Character, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_WE");

	Params::UWTLCommandSystem_CC_WE_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_VisitPortal_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_VisitPortal_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_VisitPortal_Help");

	Params::UWTLCommandSystem_CC_VisitPortal_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_VisitPortal
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_VisitPortal(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_VisitPortal");

	Params::UWTLCommandSystem_CC_VisitPortal_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_VisitLocation_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_VisitLocation_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_VisitLocation_Help");

	Params::UWTLCommandSystem_CC_VisitLocation_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_VisitLocation
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_VisitLocation(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_VisitLocation");

	Params::UWTLCommandSystem_CC_VisitLocation_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_UseAdaptiveNetUpdateFrequency_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_UseAdaptiveNetUpdateFrequency_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_UseAdaptiveNetUpdateFrequency_Help");

	Params::UWTLCommandSystem_CC_UseAdaptiveNetUpdateFrequency_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_UseAdaptiveNetUpdateFrequency
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_UseAdaptiveNetUpdateFrequency(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_UseAdaptiveNetUpdateFrequency");

	Params::UWTLCommandSystem_CC_UseAdaptiveNetUpdateFrequency_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_UnvisitLocation_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_UnvisitLocation_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_UnvisitLocation_Help");

	Params::UWTLCommandSystem_CC_UnvisitLocation_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_UnvisitLocation
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_UnvisitLocation(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_UnvisitLocation");

	Params::UWTLCommandSystem_CC_UnvisitLocation_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Test
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Test(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Test");

	Params::UWTLCommandSystem_CC_Test_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_TeleportCharacter_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_TeleportCharacter_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_TeleportCharacter_Help");

	Params::UWTLCommandSystem_CC_TeleportCharacter_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_TeleportCharacter
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_TeleportCharacter(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_TeleportCharacter");

	Params::UWTLCommandSystem_CC_TeleportCharacter_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Teleport_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Teleport_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Teleport_Help");

	Params::UWTLCommandSystem_CC_Teleport_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Teleport
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Teleport(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Teleport");

	Params::UWTLCommandSystem_CC_Teleport_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SystemMessage_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SystemMessage_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SystemMessage_Help");

	Params::UWTLCommandSystem_CC_SystemMessage_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SystemMessage
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SystemMessage(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SystemMessage");

	Params::UWTLCommandSystem_CC_SystemMessage_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SystemEvent_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SystemEvent_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SystemEvent_Help");

	Params::UWTLCommandSystem_CC_SystemEvent_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SystemEvent
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SystemEvent(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SystemEvent");

	Params::UWTLCommandSystem_CC_SystemEvent_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SteamConsumeTimeout_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SteamConsumeTimeout_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SteamConsumeTimeout_Help");

	Params::UWTLCommandSystem_CC_SteamConsumeTimeout_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SteamConsumeTimeout
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SteamConsumeTimeout(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SteamConsumeTimeout");

	Params::UWTLCommandSystem_CC_SteamConsumeTimeout_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Sprint_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Sprint_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Sprint_Help");

	Params::UWTLCommandSystem_CC_Sprint_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Sprint
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Sprint(class AWTLPlayerController* Player, TArray<class FString>& Params, class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Sprint");

	Params::UWTLCommandSystem_CC_Sprint_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;
	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Spectate_Help
// (Final, Native, Public)
// Parameters:

void UWTLCommandSystem::CC_Spectate_Help()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Spectate_Help");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Spectate
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Spectate(class AWTLPlayerController* Player, TArray<class FString>* Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Spectate");

	Params::UWTLCommandSystem_CC_Spectate_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Params != nullptr)
		*Params = std::move(Parms.Params);

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Spawn
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Spawn(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Spawn");

	Params::UWTLCommandSystem_CC_Spawn_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SlotMachine_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SlotMachine_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SlotMachine_Help");

	Params::UWTLCommandSystem_CC_SlotMachine_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SlotMachine
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SlotMachine(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SlotMachine");

	Params::UWTLCommandSystem_CC_SlotMachine_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetWeaponExperience_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetWeaponExperience_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetWeaponExperience_Help");

	Params::UWTLCommandSystem_CC_SetWeaponExperience_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetWeaponExperience
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetWeaponExperience(class AWTLPlayerController* Player, class AWTLCharacter* Character, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetWeaponExperience");

	Params::UWTLCommandSystem_CC_SetWeaponExperience_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetThirst_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetThirst_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetThirst_Help");

	Params::UWTLCommandSystem_CC_SetThirst_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetThirst
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetThirst(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetThirst");

	Params::UWTLCommandSystem_CC_SetThirst_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetSurvivalExperience_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetSurvivalExperience_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetSurvivalExperience_Help");

	Params::UWTLCommandSystem_CC_SetSurvivalExperience_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetSurvivalExperience
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetSurvivalExperience(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetSurvivalExperience");

	Params::UWTLCommandSystem_CC_SetSurvivalExperience_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetSpectatorMode_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetSpectatorMode_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetSpectatorMode_Help");

	Params::UWTLCommandSystem_CC_SetSpectatorMode_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetSpectatorMode
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetSpectatorMode(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetSpectatorMode");

	Params::UWTLCommandSystem_CC_SetSpectatorMode_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetReputation_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetReputation_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetReputation_Help");

	Params::UWTLCommandSystem_CC_SetReputation_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetReputation
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetReputation(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetReputation");

	Params::UWTLCommandSystem_CC_SetReputation_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetRepairExperience_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetRepairExperience_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetRepairExperience_Help");

	Params::UWTLCommandSystem_CC_SetRepairExperience_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetRepairExperience
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetRepairExperience(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetRepairExperience");

	Params::UWTLCommandSystem_CC_SetRepairExperience_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetPvPMode_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetPvPMode_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetPvPMode_Help");

	Params::UWTLCommandSystem_CC_SetPvPMode_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetPvPMode
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetPvPMode(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetPvPMode");

	Params::UWTLCommandSystem_CC_SetPvPMode_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetMiningExperience_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetMiningExperience_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetMiningExperience_Help");

	Params::UWTLCommandSystem_CC_SetMiningExperience_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetMiningExperience
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetMiningExperience(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetMiningExperience");

	Params::UWTLCommandSystem_CC_SetMiningExperience_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetMedicExperience_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetMedicExperience_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetMedicExperience_Help");

	Params::UWTLCommandSystem_CC_SetMedicExperience_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetMedicExperience
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetMedicExperience(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetMedicExperience");

	Params::UWTLCommandSystem_CC_SetMedicExperience_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetItemCondition_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetItemCondition_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetItemCondition_Help");

	Params::UWTLCommandSystem_CC_SetItemCondition_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetItemCondition
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetItemCondition(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetItemCondition");

	Params::UWTLCommandSystem_CC_SetItemCondition_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetHunger_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetHunger_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetHunger_Help");

	Params::UWTLCommandSystem_CC_SetHunger_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetHunger
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetHunger(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetHunger");

	Params::UWTLCommandSystem_CC_SetHunger_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetGroup_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetGroup_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetGroup_Help");

	Params::UWTLCommandSystem_CC_SetGroup_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetGroup
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetGroup(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetGroup");

	Params::UWTLCommandSystem_CC_SetGroup_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetFaction_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetFaction_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetFaction_Help");

	Params::UWTLCommandSystem_CC_SetFaction_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetFaction
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetFaction(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetFaction");

	Params::UWTLCommandSystem_CC_SetFaction_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetEnergy
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetEnergy(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetEnergy");

	Params::UWTLCommandSystem_CC_SetEnergy_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetCustomizationPart_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetCustomizationPart_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetCustomizationPart_Help");

	Params::UWTLCommandSystem_CC_SetCustomizationPart_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetCustomizationPart
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetCustomizationPart(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetCustomizationPart");

	Params::UWTLCommandSystem_CC_SetCustomizationPart_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetCraftExperience_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetCraftExperience_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetCraftExperience_Help");

	Params::UWTLCommandSystem_CC_SetCraftExperience_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetCraftExperience
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetCraftExperience(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetCraftExperience");

	Params::UWTLCommandSystem_CC_SetCraftExperience_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetCondition
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetCondition(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetCondition");

	Params::UWTLCommandSystem_CC_SetCondition_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetClass_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetClass_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetClass_Help");

	Params::UWTLCommandSystem_CC_SetClass_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetClass
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetClass(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetClass");

	Params::UWTLCommandSystem_CC_SetClass_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SetClan_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SetClan_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetClan_Help");

	Params::UWTLCommandSystem_CC_SetClan_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SetClan
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SetClan(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SetClan");

	Params::UWTLCommandSystem_CC_SetClan_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SendLootBox_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SendLootBox_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SendLootBox_Help");

	Params::UWTLCommandSystem_CC_SendLootBox_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SendLootBox
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SendLootBox(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SendLootBox");

	Params::UWTLCommandSystem_CC_SendLootBox_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_SafeZone_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_SafeZone_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SafeZone_Help");

	Params::UWTLCommandSystem_CC_SafeZone_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_SafeZone
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_SafeZone(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_SafeZone");

	Params::UWTLCommandSystem_CC_SafeZone_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Revoke_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Revoke_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Revoke_Help");

	Params::UWTLCommandSystem_CC_Revoke_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Revoke
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Revoke(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Revoke");

	Params::UWTLCommandSystem_CC_Revoke_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Reputation_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Reputation_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Reputation_Help");

	Params::UWTLCommandSystem_CC_Reputation_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Reputation
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Reputation(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Reputation");

	Params::UWTLCommandSystem_CC_Reputation_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_RepairAll_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_RepairAll_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RepairAll_Help");

	Params::UWTLCommandSystem_CC_RepairAll_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_RepairAll
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_RepairAll(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RepairAll");

	Params::UWTLCommandSystem_CC_RepairAll_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_RemovePDAModule_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_RemovePDAModule_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RemovePDAModule_Help");

	Params::UWTLCommandSystem_CC_RemovePDAModule_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_RemovePDAModule
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_RemovePDAModule(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RemovePDAModule");

	Params::UWTLCommandSystem_CC_RemovePDAModule_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_RecoverStamina_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_RecoverStamina_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RecoverStamina_Help");

	Params::UWTLCommandSystem_CC_RecoverStamina_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_RecoverStamina
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_RecoverStamina(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RecoverStamina");

	Params::UWTLCommandSystem_CC_RecoverStamina_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_RecoverHP_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_RecoverHP_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RecoverHP_Help");

	Params::UWTLCommandSystem_CC_RecoverHP_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_RecoverHP
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_RecoverHP(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RecoverHP");

	Params::UWTLCommandSystem_CC_RecoverHP_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_RecoverHealth_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_RecoverHealth_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RecoverHealth_Help");

	Params::UWTLCommandSystem_CC_RecoverHealth_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_RecoverHealth
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_RecoverHealth(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RecoverHealth");

	Params::UWTLCommandSystem_CC_RecoverHealth_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_RecoverAll_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_RecoverAll_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RecoverAll_Help");

	Params::UWTLCommandSystem_CC_RecoverAll_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_RecoverAll
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_RecoverAll(class AWTLPlayerController* Player, class AWTLCharacter* Character, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RecoverAll");

	Params::UWTLCommandSystem_CC_RecoverAll_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_RCS_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_RCS_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RCS_Help");

	Params::UWTLCommandSystem_CC_RCS_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_RCS
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_RCS(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_RCS");

	Params::UWTLCommandSystem_CC_RCS_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Quest_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Quest_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Quest_Help");

	Params::UWTLCommandSystem_CC_Quest_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Quest
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Quest(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Quest");

	Params::UWTLCommandSystem_CC_Quest_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_PVP_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_PVP_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_PVP_Help");

	Params::UWTLCommandSystem_CC_PVP_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_PVP
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_PVP(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_PVP");

	Params::UWTLCommandSystem_CC_PVP_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ProjectX
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ProjectX(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ProjectX");

	Params::UWTLCommandSystem_CC_ProjectX_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_MSpawner_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_MSpawner_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_MSpawner_Help");

	Params::UWTLCommandSystem_CC_MSpawner_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_MSpawner
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_MSpawner(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_MSpawner");

	Params::UWTLCommandSystem_CC_MSpawner_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_MoveToLocation_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_MoveToLocation_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_MoveToLocation_Help");

	Params::UWTLCommandSystem_CC_MoveToLocation_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_MoveToLocation
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_MoveToLocation(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_MoveToLocation");

	Params::UWTLCommandSystem_CC_MoveToLocation_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Monster_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Monster_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Monster_Help");

	Params::UWTLCommandSystem_CC_Monster_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Monster
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Monster(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Monster");

	Params::UWTLCommandSystem_CC_Monster_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_MaxConnectionsPerServerFrame_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_MaxConnectionsPerServerFrame_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_MaxConnectionsPerServerFrame_Help");

	Params::UWTLCommandSystem_CC_MaxConnectionsPerServerFrame_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_MaxConnectionsPerServerFrame
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_MaxConnectionsPerServerFrame(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_MaxConnectionsPerServerFrame");

	Params::UWTLCommandSystem_CC_MaxConnectionsPerServerFrame_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_MarkAsPieceOfShit_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_MarkAsPieceOfShit_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_MarkAsPieceOfShit_Help");

	Params::UWTLCommandSystem_CC_MarkAsPieceOfShit_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_MarkAsPieceOfShit
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_MarkAsPieceOfShit(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_MarkAsPieceOfShit");

	Params::UWTLCommandSystem_CC_MarkAsPieceOfShit_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Mail_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Mail_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Mail_Help");

	Params::UWTLCommandSystem_CC_Mail_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Mail
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Mail(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Mail");

	Params::UWTLCommandSystem_CC_Mail_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ListPlayers_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_ListPlayers_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ListPlayers_Help");

	Params::UWTLCommandSystem_CC_ListPlayers_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_ListPlayers
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ListPlayers(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ListPlayers");

	Params::UWTLCommandSystem_CC_ListPlayers_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Kit_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Kit_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Kit_Help");

	Params::UWTLCommandSystem_CC_Kit_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Kit
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Kit(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Kit");

	Params::UWTLCommandSystem_CC_Kit_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_KillAllNPC
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_KillAllNPC(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_KillAllNPC");

	Params::UWTLCommandSystem_CC_KillAllNPC_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Kill_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Kill_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Kill_Help");

	Params::UWTLCommandSystem_CC_Kill_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Kill
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Kill(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Kill");

	Params::UWTLCommandSystem_CC_Kill_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Kick_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Kick_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Kick_Help");

	Params::UWTLCommandSystem_CC_Kick_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Kick
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Kick(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Kick");

	Params::UWTLCommandSystem_CC_Kick_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_JunkMachine_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_JunkMachine_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_JunkMachine_Help");

	Params::UWTLCommandSystem_CC_JunkMachine_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_JunkMachine
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_JunkMachine(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_JunkMachine");

	Params::UWTLCommandSystem_CC_JunkMachine_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GS_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GS_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GS_Help");

	Params::UWTLCommandSystem_CC_GS_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GS
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GS(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GS");

	Params::UWTLCommandSystem_CC_GS_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Grant_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Grant_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Grant_Help");

	Params::UWTLCommandSystem_CC_Grant_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Grant
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Grant(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Grant");

	Params::UWTLCommandSystem_CC_Grant_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GodMode_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GodMode_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GodMode_Help");

	Params::UWTLCommandSystem_CC_GodMode_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GodMode
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GodMode(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GodMode");

	Params::UWTLCommandSystem_CC_GodMode_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_God
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_God(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_God");

	Params::UWTLCommandSystem_CC_God_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GM
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GM(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GM");

	Params::UWTLCommandSystem_CC_GM_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GLO_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GLO_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GLO_Help");

	Params::UWTLCommandSystem_CC_GLO_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GLO
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GLO(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GLO");

	Params::UWTLCommandSystem_CC_GLO_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GL
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GL(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GL");

	Params::UWTLCommandSystem_CC_GL_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GiveScore_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GiveScore_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveScore_Help");

	Params::UWTLCommandSystem_CC_GiveScore_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GiveScore
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GiveScore(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveScore");

	Params::UWTLCommandSystem_CC_GiveScore_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GiveMoney_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GiveMoney_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveMoney_Help");

	Params::UWTLCommandSystem_CC_GiveMoney_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GiveMoney
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GiveMoney(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveMoney");

	Params::UWTLCommandSystem_CC_GiveMoney_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GiveLevel_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GiveLevel_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveLevel_Help");

	Params::UWTLCommandSystem_CC_GiveLevel_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GiveLevel
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GiveLevel(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveLevel");

	Params::UWTLCommandSystem_CC_GiveLevel_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GiveItem_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GiveItem_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveItem_Help");

	Params::UWTLCommandSystem_CC_GiveItem_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GiveItem
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GiveItem(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveItem");

	Params::UWTLCommandSystem_CC_GiveItem_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GiveExperience_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GiveExperience_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveExperience_Help");

	Params::UWTLCommandSystem_CC_GiveExperience_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GiveExperience
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GiveExperience(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveExperience");

	Params::UWTLCommandSystem_CC_GiveExperience_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GiveClanSkill_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GiveClanSkill_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveClanSkill_Help");

	Params::UWTLCommandSystem_CC_GiveClanSkill_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GiveClanSkill
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GiveClanSkill(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveClanSkill");

	Params::UWTLCommandSystem_CC_GiveClanSkill_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GiveClanScore_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GiveClanScore_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveClanScore_Help");

	Params::UWTLCommandSystem_CC_GiveClanScore_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GiveClanScore
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GiveClanScore(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GiveClanScore");

	Params::UWTLCommandSystem_CC_GiveClanScore_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GI
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GI(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GI");

	Params::UWTLCommandSystem_CC_GI_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GetMeshInfo_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GetMeshInfo_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GetMeshInfo_Help");

	Params::UWTLCommandSystem_CC_GetMeshInfo_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GetMeshInfo
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GetMeshInfo(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GetMeshInfo");

	Params::UWTLCommandSystem_CC_GetMeshInfo_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_GetAccountID
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_GetAccountID(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GetAccountID");

	Params::UWTLCommandSystem_CC_GetAccountID_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_GC
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_GC(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_GC");

	Params::UWTLCommandSystem_CC_GC_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ForceInformer_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_ForceInformer_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ForceInformer_Help");

	Params::UWTLCommandSystem_CC_ForceInformer_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_ForceInformer
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ForceInformer(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ForceInformer");

	Params::UWTLCommandSystem_CC_ForceInformer_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_FillChat
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_FillChat(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_FillChat");

	Params::UWTLCommandSystem_CC_FillChat_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ExecList_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_ExecList_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ExecList_Help");

	Params::UWTLCommandSystem_CC_ExecList_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_ExecList
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ExecList(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ExecList");

	Params::UWTLCommandSystem_CC_ExecList_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ExecCmd_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_ExecCmd_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ExecCmd_Help");

	Params::UWTLCommandSystem_CC_ExecCmd_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_ExecCmd
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ExecCmd(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ExecCmd");

	Params::UWTLCommandSystem_CC_ExecCmd_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Exec_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Exec_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Exec_Help");

	Params::UWTLCommandSystem_CC_Exec_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Exec
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Exec(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Exec");

	Params::UWTLCommandSystem_CC_Exec_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Events_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Events_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Events_Help");

	Params::UWTLCommandSystem_CC_Events_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Events
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Events(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Events");

	Params::UWTLCommandSystem_CC_Events_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Energy
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Energy(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Energy");

	Params::UWTLCommandSystem_CC_Energy_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_EnemyNPC_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_EnemyNPC_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_EnemyNPC_Help");

	Params::UWTLCommandSystem_CC_EnemyNPC_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_EnemyNPC
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_EnemyNPC(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_EnemyNPC");

	Params::UWTLCommandSystem_CC_EnemyNPC_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_DropMode_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_DropMode_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_DropMode_Help");

	Params::UWTLCommandSystem_CC_DropMode_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_DropMode
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_DropMode(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_DropMode");

	Params::UWTLCommandSystem_CC_DropMode_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Drone
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Drone(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Drone");

	Params::UWTLCommandSystem_CC_Drone_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_DrainPointEnergy_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_DrainPointEnergy_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_DrainPointEnergy_Help");

	Params::UWTLCommandSystem_CC_DrainPointEnergy_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_DrainPointEnergy
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_DrainPointEnergy(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_DrainPointEnergy");

	Params::UWTLCommandSystem_CC_DrainPointEnergy_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_CurrentWeather_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_CurrentWeather_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_CurrentWeather_Help");

	Params::UWTLCommandSystem_CC_CurrentWeather_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_CurrentWeather
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_CurrentWeather(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_CurrentWeather");

	Params::UWTLCommandSystem_CC_CurrentWeather_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_Craft_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_Craft_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Craft_Help");

	Params::UWTLCommandSystem_CC_Craft_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_Craft
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_Craft(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_Craft");

	Params::UWTLCommandSystem_CC_Craft_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_CommandCore_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_CommandCore_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_CommandCore_Help");

	Params::UWTLCommandSystem_CC_CommandCore_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_CommandCore
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_CommandCore(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_CommandCore");

	Params::UWTLCommandSystem_CC_CommandCore_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ClearSkills_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_ClearSkills_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ClearSkills_Help");

	Params::UWTLCommandSystem_CC_ClearSkills_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_ClearSkills
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ClearSkills(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ClearSkills");

	Params::UWTLCommandSystem_CC_ClearSkills_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ClearExperience_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_ClearExperience_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ClearExperience_Help");

	Params::UWTLCommandSystem_CC_ClearExperience_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_ClearExperience
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ClearExperience(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ClearExperience");

	Params::UWTLCommandSystem_CC_ClearExperience_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ClearClanSkills_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_ClearClanSkills_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ClearClanSkills_Help");

	Params::UWTLCommandSystem_CC_ClearClanSkills_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_ClearClanSkills
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ClearClanSkills(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ClearClanSkills");

	Params::UWTLCommandSystem_CC_ClearClanSkills_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ClearChat
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ClearChat(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ClearChat");

	Params::UWTLCommandSystem_CC_ClearChat_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ChangeWeather_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_ChangeWeather_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ChangeWeather_Help");

	Params::UWTLCommandSystem_CC_ChangeWeather_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_ChangeWeather
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ChangeWeather(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ChangeWeather");

	Params::UWTLCommandSystem_CC_ChangeWeather_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ChangeSex_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_ChangeSex_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ChangeSex_Help");

	Params::UWTLCommandSystem_CC_ChangeSex_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_ChangeSex
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ChangeSex(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ChangeSex");

	Params::UWTLCommandSystem_CC_ChangeSex_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_ChangeClass_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_ChangeClass_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ChangeClass_Help");

	Params::UWTLCommandSystem_CC_ChangeClass_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_ChangeClass
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_ChangeClass(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_ChangeClass");

	Params::UWTLCommandSystem_CC_ChangeClass_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_BlockMonsterSpawnOnFortificationCapture_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_BlockMonsterSpawnOnFortificationCapture_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_BlockMonsterSpawnOnFortificationCapture_Help");

	Params::UWTLCommandSystem_CC_BlockMonsterSpawnOnFortificationCapture_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_BlockMonsterSpawnOnFortificationCapture
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_BlockMonsterSpawnOnFortificationCapture(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_BlockMonsterSpawnOnFortificationCapture");

	Params::UWTLCommandSystem_CC_BlockMonsterSpawnOnFortificationCapture_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_BecomeClanLeader_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_BecomeClanLeader_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_BecomeClanLeader_Help");

	Params::UWTLCommandSystem_CC_BecomeClanLeader_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_BecomeClanLeader
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_BecomeClanLeader(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_BecomeClanLeader");

	Params::UWTLCommandSystem_CC_BecomeClanLeader_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_BecomeClanLead_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_BecomeClanLead_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_BecomeClanLead_Help");

	Params::UWTLCommandSystem_CC_BecomeClanLead_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_BecomeClanLead
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_BecomeClanLead(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_BecomeClanLead");

	Params::UWTLCommandSystem_CC_BecomeClanLead_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_AssignItemToFastAccessSlot_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_AssignItemToFastAccessSlot_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AssignItemToFastAccessSlot_Help");

	Params::UWTLCommandSystem_CC_AssignItemToFastAccessSlot_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_AssignItemToFastAccessSlot
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_AssignItemToFastAccessSlot(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AssignItemToFastAccessSlot");

	Params::UWTLCommandSystem_CC_AssignItemToFastAccessSlot_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_AirDrop
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_AirDrop(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AirDrop");

	Params::UWTLCommandSystem_CC_AirDrop_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_AddPDAModule_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_AddPDAModule_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AddPDAModule_Help");

	Params::UWTLCommandSystem_CC_AddPDAModule_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_AddPDAModule
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLPlayerState*             PlayerState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_AddPDAModule(class AWTLPlayerController* Player, class AWTLPlayerState* PlayerState, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AddPDAModule");

	Params::UWTLCommandSystem_CC_AddPDAModule_Params Parms{};

	Parms.Player = Player;
	Parms.PlayerState = PlayerState;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_AddEffect_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_AddEffect_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AddEffect_Help");

	Params::UWTLCommandSystem_CC_AddEffect_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_AddEffect
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_AddEffect(class AWTLPlayerController* Player, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AddEffect");

	Params::UWTLCommandSystem_CC_AddEffect_Params Parms{};

	Parms.Player = Player;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_AccountInventory_Help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_AccountInventory_Help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AccountInventory_Help");

	Params::UWTLCommandSystem_CC_AccountInventory_Help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_AccountInventory
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_AccountInventory(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AccountInventory");

	Params::UWTLCommandSystem_CC_AccountInventory_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommandSystem.CC_AccountBalanceChange_help
// (Final, Native, Public)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommandSystem::CC_AccountBalanceChange_help(class AWTLPlayerController* Player)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AccountBalanceChange_help");

	Params::UWTLCommandSystem_CC_AccountBalanceChange_help_Params Parms{};

	Parms.Player = Player;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommandSystem.CC_AccountBalanceChange
// (Final, Native, Public, HasOutParams)
// Parameters:
// class AWTLPlayerController*        Player                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>              Params                                                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommandSystem::CC_AccountBalanceChange(class AWTLPlayerController* Player, class AWTLCharacter* Character, TArray<class FString>& Params)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommandSystem", "CC_AccountBalanceChange");

	Params::UWTLCommandSystem_CC_AccountBalanceChange_Params Parms{};

	Parms.Player = Player;
	Parms.Character = Character;
	Parms.Params = Params;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLWidgetBase
// (None)

class UClass* UWTLWidgetBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLWidgetBase");

	return Clss;
}


// WTLWidgetBase WTL.Default__WTLWidgetBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLWidgetBase* UWTLWidgetBase::GetDefaultObj()
{
	static class UWTLWidgetBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLWidgetBase*>(UWTLWidgetBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLWidgetBase.Update
// (Native, Public)
// Parameters:

void UWTLWidgetBase::Update()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLWidgetBase", "Update");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonActionWaiting
// (None)

class UClass* UWTLCommonActionWaiting::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonActionWaiting");

	return Clss;
}


// WTLCommonActionWaiting WTL.Default__WTLCommonActionWaiting
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonActionWaiting* UWTLCommonActionWaiting::GetDefaultObj()
{
	static class UWTLCommonActionWaiting* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonActionWaiting*>(UWTLCommonActionWaiting::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonAlphaSectionProgressBar
// (None)

class UClass* UWTLCommonAlphaSectionProgressBar::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonAlphaSectionProgressBar");

	return Clss;
}


// WTLCommonAlphaSectionProgressBar WTL.Default__WTLCommonAlphaSectionProgressBar
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonAlphaSectionProgressBar* UWTLCommonAlphaSectionProgressBar::GetDefaultObj()
{
	static class UWTLCommonAlphaSectionProgressBar* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonAlphaSectionProgressBar*>(UWTLCommonAlphaSectionProgressBar::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonAlphaSectionProgressBarItem
// (None)

class UClass* UWTLCommonAlphaSectionProgressBarItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonAlphaSectionProgressBarItem");

	return Clss;
}


// WTLCommonAlphaSectionProgressBarItem WTL.Default__WTLCommonAlphaSectionProgressBarItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonAlphaSectionProgressBarItem* UWTLCommonAlphaSectionProgressBarItem::GetDefaultObj()
{
	static class UWTLCommonAlphaSectionProgressBarItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonAlphaSectionProgressBarItem*>(UWTLCommonAlphaSectionProgressBarItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonBase
// (None)

class UClass* UWTLCommonBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonBase");

	return Clss;
}


// WTLCommonBase WTL.Default__WTLCommonBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonBase* UWTLCommonBase::GetDefaultObj()
{
	static class UWTLCommonBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonBase*>(UWTLCommonBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonButton
// (None)

class UClass* UWTLCommonButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonButton");

	return Clss;
}


// WTLCommonButton WTL.Default__WTLCommonButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonButton* UWTLCommonButton::GetDefaultObj()
{
	static class UWTLCommonButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonButton*>(UWTLCommonButton::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonButton.OnButtonUnhovered
// (Native, Protected)
// Parameters:

void UWTLCommonButton::OnButtonUnhovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonButton", "OnButtonUnhovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonButton.OnButtonReleased
// (Native, Protected)
// Parameters:

void UWTLCommonButton::OnButtonReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonButton", "OnButtonReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonButton.OnButtonPressed
// (Native, Protected)
// Parameters:

void UWTLCommonButton::OnButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonButton", "OnButtonPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonButton.OnButtonHovered
// (Native, Protected)
// Parameters:

void UWTLCommonButton::OnButtonHovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonButton", "OnButtonHovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonButton.OnButtonClicked
// (Native, Protected)
// Parameters:

void UWTLCommonButton::OnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonButton", "OnButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonWindowBase
// (None)

class UClass* UWTLCommonWindowBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonWindowBase");

	return Clss;
}


// WTLCommonWindowBase WTL.Default__WTLCommonWindowBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonWindowBase* UWTLCommonWindowBase::GetDefaultObj()
{
	static class UWTLCommonWindowBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonWindowBase*>(UWTLCommonWindowBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonWindowBase.OnCloseBtnClicked
// (Native, Protected)
// Parameters:

void UWTLCommonWindowBase::OnCloseBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonWindowBase", "OnCloseBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonWindowBase.Close
// (Native, Protected)
// Parameters:

void UWTLCommonWindowBase::Close()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonWindowBase", "Close");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonCharacterPreviewWindow
// (None)

class UClass* UWTLCommonCharacterPreviewWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonCharacterPreviewWindow");

	return Clss;
}


// WTLCommonCharacterPreviewWindow WTL.Default__WTLCommonCharacterPreviewWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonCharacterPreviewWindow* UWTLCommonCharacterPreviewWindow::GetDefaultObj()
{
	static class UWTLCommonCharacterPreviewWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonCharacterPreviewWindow*>(UWTLCommonCharacterPreviewWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonCharacterRotator
// (None)

class UClass* UWTLCommonCharacterRotator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonCharacterRotator");

	return Clss;
}


// WTLCommonCharacterRotator WTL.Default__WTLCommonCharacterRotator
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonCharacterRotator* UWTLCommonCharacterRotator::GetDefaultObj()
{
	static class UWTLCommonCharacterRotator* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonCharacterRotator*>(UWTLCommonCharacterRotator::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonCheckBox
// (None)

class UClass* UWTLCommonCheckBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonCheckBox");

	return Clss;
}


// WTLCommonCheckBox WTL.Default__WTLCommonCheckBox
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonCheckBox* UWTLCommonCheckBox::GetDefaultObj()
{
	static class UWTLCommonCheckBox* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonCheckBox*>(UWTLCommonCheckBox::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonCheckBox.OnUnhovered
// (Native, Protected)
// Parameters:

void UWTLCommonCheckBox::OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCheckBox", "OnUnhovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonCheckBox.OnHovered
// (Native, Protected)
// Parameters:

void UWTLCommonCheckBox::OnHovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCheckBox", "OnHovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonCheckBox.OnCheckBoxStateChanged
// (Native, Protected)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonCheckBox::OnCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCheckBox", "OnCheckBoxStateChanged");

	Params::UWTLCommonCheckBox_OnCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonClickedItem
// (None)

class UClass* UWTLCommonClickedItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonClickedItem");

	return Clss;
}


// WTLCommonClickedItem WTL.Default__WTLCommonClickedItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonClickedItem* UWTLCommonClickedItem::GetDefaultObj()
{
	static class UWTLCommonClickedItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonClickedItem*>(UWTLCommonClickedItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonClickedItem.OnBackgroundBorderMouseButtonDown
// (Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonClickedItem::OnBackgroundBorderMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonClickedItem", "OnBackgroundBorderMouseButtonDown");

	Params::UWTLCommonClickedItem_OnBackgroundBorderMouseButtonDown_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonColorButton
// (None)

class UClass* UWTLCommonColorButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonColorButton");

	return Clss;
}


// WTLCommonColorButton WTL.Default__WTLCommonColorButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonColorButton* UWTLCommonColorButton::GetDefaultObj()
{
	static class UWTLCommonColorButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonColorButton*>(UWTLCommonColorButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonColorPicker
// (None)

class UClass* UWTLCommonColorPicker::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonColorPicker");

	return Clss;
}


// WTLCommonColorPicker WTL.Default__WTLCommonColorPicker
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonColorPicker* UWTLCommonColorPicker::GetDefaultObj()
{
	static class UWTLCommonColorPicker* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonColorPicker*>(UWTLCommonColorPicker::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonColorPicker.OnOKBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonColorPicker::OnOKBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonColorPicker", "OnOKBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonColorPicker.OnColorPickedColorChanged
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FLinearColor                ChangedColor                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonColorPicker::OnColorPickedColorChanged(struct FLinearColor& ChangedColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonColorPicker", "OnColorPickedColorChanged");

	Params::UWTLCommonColorPicker_OnColorPickedColorChanged_Params Parms{};

	Parms.ChangedColor = ChangedColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonColorPicker.OnCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonColorPicker::OnCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonColorPicker", "OnCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonColorPresetItem
// (None)

class UClass* UWTLCommonColorPresetItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonColorPresetItem");

	return Clss;
}


// WTLCommonColorPresetItem WTL.Default__WTLCommonColorPresetItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonColorPresetItem* UWTLCommonColorPresetItem::GetDefaultObj()
{
	static class UWTLCommonColorPresetItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonColorPresetItem*>(UWTLCommonColorPresetItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonColorPresets
// (None)

class UClass* UWTLCommonColorPresets::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonColorPresets");

	return Clss;
}


// WTLCommonColorPresets WTL.Default__WTLCommonColorPresets
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonColorPresets* UWTLCommonColorPresets::GetDefaultObj()
{
	static class UWTLCommonColorPresets* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonColorPresets*>(UWTLCommonColorPresets::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonColorPresets.OnColorPresetItemClicked
// (Final, Native, Private, HasDefaults)
// Parameters:
// int32                              Number                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                PresetColor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                PreviewColor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonColorPresets::OnColorPresetItemClicked(int32 Number, const struct FLinearColor& PresetColor, const struct FLinearColor& PreviewColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonColorPresets", "OnColorPresetItemClicked");

	Params::UWTLCommonColorPresets_OnColorPresetItemClicked_Params Parms{};

	Parms.Number = Number;
	Parms.PresetColor = PresetColor;
	Parms.PreviewColor = PreviewColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonComboBoxString
// (None)

class UClass* UWTLCommonComboBoxString::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonComboBoxString");

	return Clss;
}


// WTLCommonComboBoxString WTL.Default__WTLCommonComboBoxString
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonComboBoxString* UWTLCommonComboBoxString::GetDefaultObj()
{
	static class UWTLCommonComboBoxString* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonComboBoxString*>(UWTLCommonComboBoxString::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonComboBoxString.OnSelectionChangedEvent
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedItem                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonComboBoxString::OnSelectionChangedEvent(const class FString& SelectedItem, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonComboBoxString", "OnSelectionChangedEvent");

	Params::UWTLCommonComboBoxString_OnSelectionChangedEvent_Params Parms{};

	Parms.SelectedItem = SelectedItem;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonComboBoxString.OnOpeningEvent
// (Final, Native, Private)
// Parameters:

void UWTLCommonComboBoxString::OnOpeningEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonComboBoxString", "OnOpeningEvent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonMessageDialog
// (None)

class UClass* UWTLCommonMessageDialog::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonMessageDialog");

	return Clss;
}


// WTLCommonMessageDialog WTL.Default__WTLCommonMessageDialog
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonMessageDialog* UWTLCommonMessageDialog::GetDefaultObj()
{
	static class UWTLCommonMessageDialog* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonMessageDialog*>(UWTLCommonMessageDialog::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonMessageDialog.OnDialogBtnClicked
// (Final, Native, Private)
// Parameters:
// bool                               IsBoundAnyLogic                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonMessageDialog::OnDialogBtnClicked(bool IsBoundAnyLogic)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonMessageDialog", "OnDialogBtnClicked");

	Params::UWTLCommonMessageDialog_OnDialogBtnClicked_Params Parms{};

	Parms.IsBoundAnyLogic = IsBoundAnyLogic;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonMessageDialog.Hide
// (Final, Native, Public)
// Parameters:

void UWTLCommonMessageDialog::Hide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonMessageDialog", "Hide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonConfirmationDialog
// (None)

class UClass* UWTLCommonConfirmationDialog::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonConfirmationDialog");

	return Clss;
}


// WTLCommonConfirmationDialog WTL.Default__WTLCommonConfirmationDialog
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonConfirmationDialog* UWTLCommonConfirmationDialog::GetDefaultObj()
{
	static class UWTLCommonConfirmationDialog* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonConfirmationDialog*>(UWTLCommonConfirmationDialog::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonCoreHackingWindow
// (None)

class UClass* UWTLCommonCoreHackingWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonCoreHackingWindow");

	return Clss;
}


// WTLCommonCoreHackingWindow WTL.Default__WTLCommonCoreHackingWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonCoreHackingWindow* UWTLCommonCoreHackingWindow::GetDefaultObj()
{
	static class UWTLCommonCoreHackingWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonCoreHackingWindow*>(UWTLCommonCoreHackingWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonCoreHackingWindow.OnCoreCaptured
// (Final, Native, Public)
// Parameters:

void UWTLCommonCoreHackingWindow::OnCoreCaptured()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCoreHackingWindow", "OnCoreCaptured");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonCoreHackingWindow.OnCharacterDied
// (Final, Native, Protected)
// Parameters:

void UWTLCommonCoreHackingWindow::OnCharacterDied()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCoreHackingWindow", "OnCharacterDied");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonCoreHackingWindow.OnCaptureEnded
// (Final, Native, Protected)
// Parameters:

void UWTLCommonCoreHackingWindow::OnCaptureEnded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCoreHackingWindow", "OnCaptureEnded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonCountdownSlider
// (None)

class UClass* UWTLCommonCountdownSlider::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonCountdownSlider");

	return Clss;
}


// WTLCommonCountdownSlider WTL.Default__WTLCommonCountdownSlider
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonCountdownSlider* UWTLCommonCountdownSlider::GetDefaultObj()
{
	static class UWTLCommonCountdownSlider* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonCountdownSlider*>(UWTLCommonCountdownSlider::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonCountdownWindow
// (None)

class UClass* UWTLCommonCountdownWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonCountdownWindow");

	return Clss;
}


// WTLCommonCountdownWindow WTL.Default__WTLCommonCountdownWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonCountdownWindow* UWTLCommonCountdownWindow::GetDefaultObj()
{
	static class UWTLCommonCountdownWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonCountdownWindow*>(UWTLCommonCountdownWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonCountdownWindow.UpdateCountdown
// (Final, Native, Private)
// Parameters:

void UWTLCommonCountdownWindow::UpdateCountdown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCountdownWindow", "UpdateCountdown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonCountdownWindow.UpdateBlockCancelButton
// (Final, Native, Private)
// Parameters:

void UWTLCommonCountdownWindow::UpdateBlockCancelButton()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCountdownWindow", "UpdateBlockCancelButton");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonCountdownWindow.OnCancelBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLCommonCountdownWindow::OnCancelBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCountdownWindow", "OnCancelBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonCreditsAmount
// (None)

class UClass* UWTLCommonCreditsAmount::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonCreditsAmount");

	return Clss;
}


// WTLCommonCreditsAmount WTL.Default__WTLCommonCreditsAmount
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonCreditsAmount* UWTLCommonCreditsAmount::GetDefaultObj()
{
	static class UWTLCommonCreditsAmount* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonCreditsAmount*>(UWTLCommonCreditsAmount::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonCreditsAmount.OnAccountBalanceIncreased
// (Final, Native, Private)
// Parameters:
// int32                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentBalance                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonCreditsAmount::OnAccountBalanceIncreased(int32 Delta, int32 CurrentBalance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCreditsAmount", "OnAccountBalanceIncreased");

	Params::UWTLCommonCreditsAmount_OnAccountBalanceIncreased_Params Parms{};

	Parms.Delta = Delta;
	Parms.CurrentBalance = CurrentBalance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonCreditsAmount.OnAccountBalanceChanged
// (Final, Native, Private)
// Parameters:
// int32                              Balance                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonCreditsAmount::OnAccountBalanceChanged(int32 Balance)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonCreditsAmount", "OnAccountBalanceChanged");

	Params::UWTLCommonCreditsAmount_OnAccountBalanceChanged_Params Parms{};

	Parms.Balance = Balance;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonCreditsAmountWithTopUp
// (None)

class UClass* UWTLCommonCreditsAmountWithTopUp::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonCreditsAmountWithTopUp");

	return Clss;
}


// WTLCommonCreditsAmountWithTopUp WTL.Default__WTLCommonCreditsAmountWithTopUp
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonCreditsAmountWithTopUp* UWTLCommonCreditsAmountWithTopUp::GetDefaultObj()
{
	static class UWTLCommonCreditsAmountWithTopUp* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonCreditsAmountWithTopUp*>(UWTLCommonCreditsAmountWithTopUp::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLItemManipulationWidget
// (None)

class UClass* UWTLItemManipulationWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLItemManipulationWidget");

	return Clss;
}


// WTLItemManipulationWidget WTL.Default__WTLItemManipulationWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLItemManipulationWidget* UWTLItemManipulationWidget::GetDefaultObj()
{
	static class UWTLItemManipulationWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLItemManipulationWidget*>(UWTLItemManipulationWidget::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonDeminingWindow
// (None)

class UClass* UWTLCommonDeminingWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonDeminingWindow");

	return Clss;
}


// WTLCommonDeminingWindow WTL.Default__WTLCommonDeminingWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonDeminingWindow* UWTLCommonDeminingWindow::GetDefaultObj()
{
	static class UWTLCommonDeminingWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonDeminingWindow*>(UWTLCommonDeminingWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonDeminingWindow.OnShowOrHideScissors
// (Final, Native, Protected)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonDeminingWindow::OnShowOrHideScissors(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonDeminingWindow", "OnShowOrHideScissors");

	Params::UWTLCommonDeminingWindow_OnShowOrHideScissors_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonDeminingWindow.OnDemined
// (Final, Native, Protected)
// Parameters:

void UWTLCommonDeminingWindow::OnDemined()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonDeminingWindow", "OnDemined");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonDeminingWindow.OnCharacterDied
// (Final, Native, Protected)
// Parameters:

void UWTLCommonDeminingWindow::OnCharacterDied()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonDeminingWindow", "OnCharacterDied");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonFormattedTextBlock
// (None)

class UClass* UWTLCommonFormattedTextBlock::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonFormattedTextBlock");

	return Clss;
}


// WTLCommonFormattedTextBlock WTL.Default__WTLCommonFormattedTextBlock
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonFormattedTextBlock* UWTLCommonFormattedTextBlock::GetDefaultObj()
{
	static class UWTLCommonFormattedTextBlock* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonFormattedTextBlock*>(UWTLCommonFormattedTextBlock::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonTextButton
// (None)

class UClass* UWTLCommonTextButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonTextButton");

	return Clss;
}


// WTLCommonTextButton WTL.Default__WTLCommonTextButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonTextButton* UWTLCommonTextButton::GetDefaultObj()
{
	static class UWTLCommonTextButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonTextButton*>(UWTLCommonTextButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonHotkeyButton
// (None)

class UClass* UWTLCommonHotkeyButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonHotkeyButton");

	return Clss;
}


// WTLCommonHotkeyButton WTL.Default__WTLCommonHotkeyButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonHotkeyButton* UWTLCommonHotkeyButton::GetDefaultObj()
{
	static class UWTLCommonHotkeyButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonHotkeyButton*>(UWTLCommonHotkeyButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonHoveredItem
// (None)

class UClass* UWTLCommonHoveredItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonHoveredItem");

	return Clss;
}


// WTLCommonHoveredItem WTL.Default__WTLCommonHoveredItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonHoveredItem* UWTLCommonHoveredItem::GetDefaultObj()
{
	static class UWTLCommonHoveredItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonHoveredItem*>(UWTLCommonHoveredItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonImageButton
// (None)

class UClass* UWTLCommonImageButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonImageButton");

	return Clss;
}


// WTLCommonImageButton WTL.Default__WTLCommonImageButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonImageButton* UWTLCommonImageButton::GetDefaultObj()
{
	static class UWTLCommonImageButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonImageButton*>(UWTLCommonImageButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonItemInformation
// (None)

class UClass* UWTLCommonItemInformation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonItemInformation");

	return Clss;
}


// WTLCommonItemInformation WTL.Default__WTLCommonItemInformation
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonItemInformation* UWTLCommonItemInformation::GetDefaultObj()
{
	static class UWTLCommonItemInformation* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonItemInformation*>(UWTLCommonItemInformation::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonItemInformationWindow
// (None)

class UClass* UWTLCommonItemInformationWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonItemInformationWindow");

	return Clss;
}


// WTLCommonItemInformationWindow WTL.Default__WTLCommonItemInformationWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonItemInformationWindow* UWTLCommonItemInformationWindow::GetDefaultObj()
{
	static class UWTLCommonItemInformationWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonItemInformationWindow*>(UWTLCommonItemInformationWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonItemPreview
// (None)

class UClass* UWTLCommonItemPreview::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonItemPreview");

	return Clss;
}


// WTLCommonItemPreview WTL.Default__WTLCommonItemPreview
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonItemPreview* UWTLCommonItemPreview::GetDefaultObj()
{
	static class UWTLCommonItemPreview* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonItemPreview*>(UWTLCommonItemPreview::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonItemPreview.UpdateAutoRotate
// (Final, Native, Private)
// Parameters:

void UWTLCommonItemPreview::UpdateAutoRotate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "UpdateAutoRotate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonItemPreview.OnZoomOutBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonItemPreview::OnZoomOutBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnZoomOutBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonItemPreview.OnZoomInBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonItemPreview::OnZoomInBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnZoomInBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonItemPreview.OnRotateTopBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonItemPreview::OnRotateTopBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnRotateTopBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonItemPreview.OnRotateRightBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonItemPreview::OnRotateRightBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnRotateRightBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonItemPreview.OnRotateLeftBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonItemPreview::OnRotateLeftBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnRotateLeftBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonItemPreview.OnRotateDownBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonItemPreview::OnRotateDownBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnRotateDownBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonItemPreview.OnResetBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonItemPreview::OnResetBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnResetBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonItemPreview.OnPreviewMeshSwitcherValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonItemPreview::OnPreviewMeshSwitcherValueChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnPreviewMeshSwitcherValueChanged");

	Params::UWTLCommonItemPreview_OnPreviewMeshSwitcherValueChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonItemPreview.OnItemPreviewBorderMouseButtonDown
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                 ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UWTLCommonItemPreview::OnItemPreviewBorderMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnItemPreviewBorderMouseButtonDown");

	Params::UWTLCommonItemPreview_OnItemPreviewBorderMouseButtonDown_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCommonItemPreview.OnAutoRotateRightBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonItemPreview::OnAutoRotateRightBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnAutoRotateRightBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonItemPreview.OnAutoRotateLeftBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonItemPreview::OnAutoRotateLeftBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonItemPreview", "OnAutoRotateLeftBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonItemPreviewWindow
// (None)

class UClass* UWTLCommonItemPreviewWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonItemPreviewWindow");

	return Clss;
}


// WTLCommonItemPreviewWindow WTL.Default__WTLCommonItemPreviewWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonItemPreviewWindow* UWTLCommonItemPreviewWindow::GetDefaultObj()
{
	static class UWTLCommonItemPreviewWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonItemPreviewWindow*>(UWTLCommonItemPreviewWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonMapMarker
// (None)

class UClass* UWTLCommonMapMarker::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonMapMarker");

	return Clss;
}


// WTLCommonMapMarker WTL.Default__WTLCommonMapMarker
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonMapMarker* UWTLCommonMapMarker::GetDefaultObj()
{
	static class UWTLCommonMapMarker* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonMapMarker*>(UWTLCommonMapMarker::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonMapMarkerToolTipText
// (None)

class UClass* UWTLCommonMapMarkerToolTipText::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonMapMarkerToolTipText");

	return Clss;
}


// WTLCommonMapMarkerToolTipText WTL.Default__WTLCommonMapMarkerToolTipText
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonMapMarkerToolTipText* UWTLCommonMapMarkerToolTipText::GetDefaultObj()
{
	static class UWTLCommonMapMarkerToolTipText* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonMapMarkerToolTipText*>(UWTLCommonMapMarkerToolTipText::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonMessageDialogButton
// (None)

class UClass* UWTLCommonMessageDialogButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonMessageDialogButton");

	return Clss;
}


// WTLCommonMessageDialogButton WTL.Default__WTLCommonMessageDialogButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonMessageDialogButton* UWTLCommonMessageDialogButton::GetDefaultObj()
{
	static class UWTLCommonMessageDialogButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonMessageDialogButton*>(UWTLCommonMessageDialogButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonSelectedItem
// (None)

class UClass* UWTLCommonSelectedItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonSelectedItem");

	return Clss;
}


// WTLCommonSelectedItem WTL.Default__WTLCommonSelectedItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonSelectedItem* UWTLCommonSelectedItem::GetDefaultObj()
{
	static class UWTLCommonSelectedItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonSelectedItem*>(UWTLCommonSelectedItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonMicrotransactionItem
// (None)

class UClass* UWTLCommonMicrotransactionItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonMicrotransactionItem");

	return Clss;
}


// WTLCommonMicrotransactionItem WTL.Default__WTLCommonMicrotransactionItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonMicrotransactionItem* UWTLCommonMicrotransactionItem::GetDefaultObj()
{
	static class UWTLCommonMicrotransactionItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonMicrotransactionItem*>(UWTLCommonMicrotransactionItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonMicrotransactionWindow
// (None)

class UClass* UWTLCommonMicrotransactionWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonMicrotransactionWindow");

	return Clss;
}


// WTLCommonMicrotransactionWindow WTL.Default__WTLCommonMicrotransactionWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonMicrotransactionWindow* UWTLCommonMicrotransactionWindow::GetDefaultObj()
{
	static class UWTLCommonMicrotransactionWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonMicrotransactionWindow*>(UWTLCommonMicrotransactionWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonMicrotransactionWindow.OnPremiumBonusesButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonMicrotransactionWindow::OnPremiumBonusesButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonMicrotransactionWindow", "OnPremiumBonusesButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonMicrotransactionWindow.OnBuyPremiumResult
// (Final, Native, Private)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonMicrotransactionWindow::OnBuyPremiumResult(bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonMicrotransactionWindow", "OnBuyPremiumResult");

	Params::UWTLCommonMicrotransactionWindow_OnBuyPremiumResult_Params Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonMicrotransactionWindow.OnBuyPremiumConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLCommonMicrotransactionWindow::OnBuyPremiumConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonMicrotransactionWindow", "OnBuyPremiumConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonMicrotransactionWindow.OnBuyPremium
// (Final, Native, Private)
// Parameters:
// int32                              PremiumDaysCount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Price                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonMicrotransactionWindow::OnBuyPremium(int32 PremiumDaysCount, int32 Price)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonMicrotransactionWindow", "OnBuyPremium");

	Params::UWTLCommonMicrotransactionWindow_OnBuyPremium_Params Parms{};

	Parms.PremiumDaysCount = PremiumDaysCount;
	Parms.Price = Price;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonMicrotransactionWindow.OnBuyCredits
// (Final, Native, Private)
// Parameters:
// uint64                             StoreItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonMicrotransactionWindow::OnBuyCredits(uint64 StoreItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonMicrotransactionWindow", "OnBuyCredits");

	Params::UWTLCommonMicrotransactionWindow_OnBuyCredits_Params Parms{};

	Parms.StoreItemID = StoreItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonNotificationItem
// (None)

class UClass* UWTLCommonNotificationItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonNotificationItem");

	return Clss;
}


// WTLCommonNotificationItem WTL.Default__WTLCommonNotificationItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonNotificationItem* UWTLCommonNotificationItem::GetDefaultObj()
{
	static class UWTLCommonNotificationItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonNotificationItem*>(UWTLCommonNotificationItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonNotificator
// (None)

class UClass* UWTLCommonNotificator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonNotificator");

	return Clss;
}


// WTLCommonNotificator WTL.Default__WTLCommonNotificator
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonNotificator* UWTLCommonNotificator::GetDefaultObj()
{
	static class UWTLCommonNotificator* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonNotificator*>(UWTLCommonNotificator::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonNotificator.OnChildsCountChange
// (Final, Native, Protected)
// Parameters:

void UWTLCommonNotificator::OnChildsCountChange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonNotificator", "OnChildsCountChange");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonOptions
// (None)

class UClass* UWTLCommonOptions::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonOptions");

	return Clss;
}


// WTLCommonOptions WTL.Default__WTLCommonOptions
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonOptions* UWTLCommonOptions::GetDefaultObj()
{
	static class UWTLCommonOptions* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonOptions*>(UWTLCommonOptions::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonOptions.ShowNextApplySettingsMessage
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::ShowNextApplySettingsMessage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "ShowNextApplySettingsMessage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.ResetCurrentSetting
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::ResetCurrentSetting()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "ResetCurrentSetting");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.ResetAllSettings
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::ResetAllSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "ResetAllSettings");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnTabBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonOptions::OnTabBtnClicked(uint8 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnTabBtnClicked");

	Params::UWTLCommonOptions_OnTabBtnClicked_Params Parms{};

	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnResetBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::OnResetBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnResetBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnResetAllBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::OnResetAllBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnResetAllBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnOkBtnClickedConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::OnOkBtnClickedConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnOkBtnClickedConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnOKBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::OnOKBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnOKBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnExperimentalTextureStreamingValueOnOKNotConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::OnExperimentalTextureStreamingValueOnOKNotConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnExperimentalTextureStreamingValueOnOKNotConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnExperimentalTextureStreamingValueOnApplyNotConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::OnExperimentalTextureStreamingValueOnApplyNotConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnExperimentalTextureStreamingValueOnApplyNotConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnCrosshairColorSelection
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FLinearColor                CurrentColor                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGeometry                   Geometry                                                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               InMouseEvent                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonOptions::OnCrosshairColorSelection(struct FLinearColor& CurrentColor, struct FGeometry& Geometry, struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnCrosshairColorSelection");

	Params::UWTLCommonOptions_OnCrosshairColorSelection_Params Parms{};

	Parms.CurrentColor = CurrentColor;
	Parms.Geometry = Geometry;
	Parms.InMouseEvent = InMouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnCrosshairColorPickingCanceled
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::OnCrosshairColorPickingCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnCrosshairColorPickingCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnCrosshairColorPicked
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FLinearColor                PickedColor                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonOptions::OnCrosshairColorPicked(struct FLinearColor& PickedColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnCrosshairColorPicked");

	Params::UWTLCommonOptions_OnCrosshairColorPicked_Params Parms{};

	Parms.PickedColor = PickedColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnCrosshairColorChanged
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FLinearColor                ChangedColor                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonOptions::OnCrosshairColorChanged(struct FLinearColor& ChangedColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnCrosshairColorChanged");

	Params::UWTLCommonOptions_OnCrosshairColorChanged_Params Parms{};

	Parms.ChangedColor = ChangedColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::OnCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnApplySettingsConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::OnApplySettingsConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnApplySettingsConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.OnApplyBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonOptions::OnApplyBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "OnApplyBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonOptions.ApplyAllSettings
// (Final, Native, Private)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLCommonOptions::ApplyAllSettings()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonOptions", "ApplyAllSettings");

	Params::UWTLCommonOptions_ApplyAllSettings_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLCommonSwitcher
// (None)

class UClass* UWTLCommonSwitcher::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonSwitcher");

	return Clss;
}


// WTLCommonSwitcher WTL.Default__WTLCommonSwitcher
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonSwitcher* UWTLCommonSwitcher::GetDefaultObj()
{
	static class UWTLCommonSwitcher* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonSwitcher*>(UWTLCommonSwitcher::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonSwitcher.OnPreviousButtonClicked
// (Native, Protected)
// Parameters:

void UWTLCommonSwitcher::OnPreviousButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSwitcher", "OnPreviousButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonSwitcher.OnNextButtonClicked
// (Native, Protected)
// Parameters:

void UWTLCommonSwitcher::OnNextButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSwitcher", "OnNextButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonSwitcher.OnButtonPressed
// (Final, Native, Private)
// Parameters:

void UWTLCommonSwitcher::OnButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSwitcher", "OnButtonPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonSwitcher.OnButtonHovered
// (Final, Native, Private)
// Parameters:

void UWTLCommonSwitcher::OnButtonHovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSwitcher", "OnButtonHovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonPageSwitcher
// (None)

class UClass* UWTLCommonPageSwitcher::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonPageSwitcher");

	return Clss;
}


// WTLCommonPageSwitcher WTL.Default__WTLCommonPageSwitcher
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonPageSwitcher* UWTLCommonPageSwitcher::GetDefaultObj()
{
	static class UWTLCommonPageSwitcher* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonPageSwitcher*>(UWTLCommonPageSwitcher::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonParameterName
// (None)

class UClass* UWTLCommonParameterName::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonParameterName");

	return Clss;
}


// WTLCommonParameterName WTL.Default__WTLCommonParameterName
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonParameterName* UWTLCommonParameterName::GetDefaultObj()
{
	static class UWTLCommonParameterName* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonParameterName*>(UWTLCommonParameterName::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonParameterPointSpin
// (None)

class UClass* UWTLCommonParameterPointSpin::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonParameterPointSpin");

	return Clss;
}


// WTLCommonParameterPointSpin WTL.Default__WTLCommonParameterPointSpin
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonParameterPointSpin* UWTLCommonParameterPointSpin::GetDefaultObj()
{
	static class UWTLCommonParameterPointSpin* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonParameterPointSpin*>(UWTLCommonParameterPointSpin::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonPopupMenu
// (None)

class UClass* UWTLCommonPopupMenu::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonPopupMenu");

	return Clss;
}


// WTLCommonPopupMenu WTL.Default__WTLCommonPopupMenu
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonPopupMenu* UWTLCommonPopupMenu::GetDefaultObj()
{
	static class UWTLCommonPopupMenu* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonPopupMenu*>(UWTLCommonPopupMenu::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonPopupMenuButton
// (None)

class UClass* UWTLCommonPopupMenuButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonPopupMenuButton");

	return Clss;
}


// WTLCommonPopupMenuButton WTL.Default__WTLCommonPopupMenuButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonPopupMenuButton* UWTLCommonPopupMenuButton::GetDefaultObj()
{
	static class UWTLCommonPopupMenuButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonPopupMenuButton*>(UWTLCommonPopupMenuButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonPremiumBonusesWindow
// (None)

class UClass* UWTLCommonPremiumBonusesWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonPremiumBonusesWindow");

	return Clss;
}


// WTLCommonPremiumBonusesWindow WTL.Default__WTLCommonPremiumBonusesWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonPremiumBonusesWindow* UWTLCommonPremiumBonusesWindow::GetDefaultObj()
{
	static class UWTLCommonPremiumBonusesWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonPremiumBonusesWindow*>(UWTLCommonPremiumBonusesWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonPremiumButton
// (None)

class UClass* UWTLCommonPremiumButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonPremiumButton");

	return Clss;
}


// WTLCommonPremiumButton WTL.Default__WTLCommonPremiumButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonPremiumButton* UWTLCommonPremiumButton::GetDefaultObj()
{
	static class UWTLCommonPremiumButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonPremiumButton*>(UWTLCommonPremiumButton::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonPremiumButton.OnInAppPaymentResult
// (Final, Native, Private)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonPremiumButton::OnInAppPaymentResult(bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonPremiumButton", "OnInAppPaymentResult");

	Params::UWTLCommonPremiumButton_OnInAppPaymentResult_Params Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonQuestInfo
// (None)

class UClass* UWTLCommonQuestInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonQuestInfo");

	return Clss;
}


// WTLCommonQuestInfo WTL.Default__WTLCommonQuestInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonQuestInfo* UWTLCommonQuestInfo::GetDefaultObj()
{
	static class UWTLCommonQuestInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonQuestInfo*>(UWTLCommonQuestInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonSexButton
// (None)

class UClass* UWTLCommonSexButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonSexButton");

	return Clss;
}


// WTLCommonSexButton WTL.Default__WTLCommonSexButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonSexButton* UWTLCommonSexButton::GetDefaultObj()
{
	static class UWTLCommonSexButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonSexButton*>(UWTLCommonSexButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonSortButton
// (None)

class UClass* UWTLCommonSortButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonSortButton");

	return Clss;
}


// WTLCommonSortButton WTL.Default__WTLCommonSortButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonSortButton* UWTLCommonSortButton::GetDefaultObj()
{
	static class UWTLCommonSortButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonSortButton*>(UWTLCommonSortButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonSpinBox
// (None)

class UClass* UWTLCommonSpinBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonSpinBox");

	return Clss;
}


// WTLCommonSpinBox WTL.Default__WTLCommonSpinBox
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonSpinBox* UWTLCommonSpinBox::GetDefaultObj()
{
	static class UWTLCommonSpinBox* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonSpinBox*>(UWTLCommonSpinBox::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonSpinBox.OnUpButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonSpinBox::OnUpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSpinBox", "OnUpButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonSpinBox.OnDownButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonSpinBox::OnDownButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSpinBox", "OnDownButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonSpinBox.OnCountNumberTextBoxValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonSpinBox::OnCountNumberTextBoxValueChanged(int32 CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSpinBox", "OnCountNumberTextBoxValueChanged");

	Params::UWTLCommonSpinBox_OnCountNumberTextBoxValueChanged_Params Parms{};

	Parms.CurrentValue = CurrentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonSpinBox.OnCountNumberTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonSpinBox::OnCountNumberTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSpinBox", "OnCountNumberTextBoxTextCommitted");

	Params::UWTLCommonSpinBox_OnCountNumberTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonStore
// (None)

class UClass* UWTLCommonStore::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStore");

	return Clss;
}


// WTLCommonStore WTL.Default__WTLCommonStore
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStore* UWTLCommonStore::GetDefaultObj()
{
	static class UWTLCommonStore* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStore*>(UWTLCommonStore::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonStore.ShowAccountInventoryTutorialMessage
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::ShowAccountInventoryTutorialMessage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "ShowAccountInventoryTutorialMessage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.SendCode
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::SendCode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "SendCode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnTopUpCredits
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnTopUpCredits()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnTopUpCredits");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnTagClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        TagText                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnTagClicked(class FText& TagText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnTagClicked");

	Params::UWTLCommonStore_OnTagClicked_Params Parms{};

	Parms.TagText = TagText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnStoreItemsUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FWTLStoreItem>       StoreItems                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnStoreItemsUpdated(TArray<struct FWTLStoreItem>& StoreItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnStoreItemsUpdated");

	Params::UWTLCommonStore_OnStoreItemsUpdated_Params Parms{};

	Parms.StoreItems = StoreItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnStoreItemClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLStoreItem               StoreItemData                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UWTLCommonStoreItem*         StoreItem                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnStoreItemClicked(struct FWTLStoreItem& StoreItemData, class UWTLCommonStoreItem* StoreItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnStoreItemClicked");

	Params::UWTLCommonStore_OnStoreItemClicked_Params Parms{};

	Parms.StoreItemData = StoreItemData;
	Parms.StoreItem = StoreItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnSortingComboBoxStringSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedItem                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnSortingComboBoxStringSelectionChanged(const class FString& SelectedItem, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnSortingComboBoxStringSelectionChanged");

	Params::UWTLCommonStore_OnSortingComboBoxStringSelectionChanged_Params Parms{};

	Parms.SelectedItem = SelectedItem;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnSearchTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnSearchTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnSearchTextBoxTextChanged");

	Params::UWTLCommonStore_OnSearchTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnPurchaseStoreItems
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLInAppPurchaseResult     InAppPurchaseResult                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnPurchaseStoreItems(struct FWTLInAppPurchaseResult& InAppPurchaseResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnPurchaseStoreItems");

	Params::UWTLCommonStore_OnPurchaseStoreItems_Params Parms{};

	Parms.InAppPurchaseResult = InAppPurchaseResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnItemTypeButtonClicked
// (Final, Native, Private)
// Parameters:
// enum class EWTLStoreItemType       StoreItemType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnItemTypeButtonClicked(enum class EWTLStoreItemType StoreItemType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnItemTypeButtonClicked");

	Params::UWTLCommonStore_OnItemTypeButtonClicked_Params Parms{};

	Parms.StoreItemType = StoreItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnItemsScrollBoxScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnItemsScrollBoxScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnItemsScrollBoxScrolled");

	Params::UWTLCommonStore_OnItemsScrollBoxScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnItemsOffersScrollBoxScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnItemsOffersScrollBoxScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnItemsOffersScrollBoxScrolled");

	Params::UWTLCommonStore_OnItemsOffersScrollBoxScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnItemPreviewButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnItemPreviewButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnItemPreviewButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnItemInformationButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnItemInformationButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnItemInformationButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnExitButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnExitButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnExitButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCountInCartButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnCountInCartButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCountInCartButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCodeCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnCodeCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCodeCommitted");

	Params::UWTLCommonStore_OnCodeCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCodeCannotBeSended
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnCodeCannotBeSended()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCodeCannotBeSended");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCodeCanBeSended
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnCodeCanBeSended()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCodeCanBeSended");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCodeActivationResult
// (Final, Native, Private)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnCodeActivationResult(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCodeActivationResult");

	Params::UWTLCommonStore_OnCodeActivationResult_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCodeActivateButtonPressed
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnCodeActivateButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCodeActivateButtonPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCheckoutConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnCheckoutConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCheckoutConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCheckoutButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnCheckoutButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCheckoutButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCharacterPreviewButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnCharacterPreviewButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCharacterPreviewButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCartScrollBoxScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnCartScrollBoxScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCartScrollBoxScrolled");

	Params::UWTLCommonStore_OnCartScrollBoxScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCartItemRemoved
// (Final, Native, Private)
// Parameters:
// uint64                             CartItemID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWTLCommonStoreCartItem*     StoreCartItem                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnCartItemRemoved(uint64 CartItemID, class UWTLCommonStoreCartItem* StoreCartItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCartItemRemoved");

	Params::UWTLCommonStore_OnCartItemRemoved_Params Parms{};

	Parms.CartItemID = CartItemID;
	Parms.StoreCartItem = StoreCartItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCartItemCountChanged
// (Final, Native, Private)
// Parameters:
// uint64                             CartItemID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnCartItemCountChanged(uint64 CartItemID, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCartItemCountChanged");

	Params::UWTLCommonStore_OnCartItemCountChanged_Params Parms{};

	Parms.CartItemID = CartItemID;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCartItemClicked
// (Final, Native, Private)
// Parameters:
// uint64                             CartItemID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnCartItemClicked(uint64 CartItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCartItemClicked");

	Params::UWTLCommonStore_OnCartItemClicked_Params Parms{};

	Parms.CartItemID = CartItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnCartButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnCartButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnCartButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnBackButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnBackButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnAddToCartButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnAddToCartButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnAddToCartButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnAddStoreItemToCart
// (Final, Native, Private)
// Parameters:
// uint64                             StoreItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::OnAddStoreItemToCart(uint64 StoreItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnAddStoreItemToCart");

	Params::UWTLCommonStore_OnAddStoreItemToCart_Params Parms{};

	Parms.StoreItemID = StoreItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.OnAccountInventoryButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStore::OnAccountInventoryButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "OnAccountInventoryButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStore.K2_OnCodeActivationResult
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStore::K2_OnCodeActivationResult(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStore", "K2_OnCodeActivationResult");

	Params::UWTLCommonStore_K2_OnCodeActivationResult_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLCommonStoreBundleInfoItem
// (None)

class UClass* UWTLCommonStoreBundleInfoItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreBundleInfoItem");

	return Clss;
}


// WTLCommonStoreBundleInfoItem WTL.Default__WTLCommonStoreBundleInfoItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreBundleInfoItem* UWTLCommonStoreBundleInfoItem::GetDefaultObj()
{
	static class UWTLCommonStoreBundleInfoItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreBundleInfoItem*>(UWTLCommonStoreBundleInfoItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreButton
// (None)

class UClass* UWTLCommonStoreButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreButton");

	return Clss;
}


// WTLCommonStoreButton WTL.Default__WTLCommonStoreButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreButton* UWTLCommonStoreButton::GetDefaultObj()
{
	static class UWTLCommonStoreButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreButton*>(UWTLCommonStoreButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreCartItem
// (None)

class UClass* UWTLCommonStoreCartItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreCartItem");

	return Clss;
}


// WTLCommonStoreCartItem WTL.Default__WTLCommonStoreCartItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreCartItem* UWTLCommonStoreCartItem::GetDefaultObj()
{
	static class UWTLCommonStoreCartItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreCartItem*>(UWTLCommonStoreCartItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonStoreCartItem.OnRemoveButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStoreCartItem::OnRemoveButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStoreCartItem", "OnRemoveButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStoreCartItem.OnItemImageLoaded
// (Final, Native, Public)
// Parameters:
// class UTexture2D*                  Texture                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStoreCartItem::OnItemImageLoaded(class UTexture2D* Texture)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStoreCartItem", "OnItemImageLoaded");

	Params::UWTLCommonStoreCartItem_OnItemImageLoaded_Params Parms{};

	Parms.Texture = Texture;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStoreCartItem.OnCountSpinBoxValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStoreCartItem::OnCountSpinBoxValueChanged(int32 CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStoreCartItem", "OnCountSpinBoxValueChanged");

	Params::UWTLCommonStoreCartItem_OnCountSpinBoxValueChanged_Params Parms{};

	Parms.CurrentValue = CurrentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonStoreCountSpinBox
// (None)

class UClass* UWTLCommonStoreCountSpinBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreCountSpinBox");

	return Clss;
}


// WTLCommonStoreCountSpinBox WTL.Default__WTLCommonStoreCountSpinBox
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreCountSpinBox* UWTLCommonStoreCountSpinBox::GetDefaultObj()
{
	static class UWTLCommonStoreCountSpinBox* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreCountSpinBox*>(UWTLCommonStoreCountSpinBox::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreCurrentCharacterParameter
// (None)

class UClass* UWTLCommonStoreCurrentCharacterParameter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreCurrentCharacterParameter");

	return Clss;
}


// WTLCommonStoreCurrentCharacterParameter WTL.Default__WTLCommonStoreCurrentCharacterParameter
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreCurrentCharacterParameter* UWTLCommonStoreCurrentCharacterParameter::GetDefaultObj()
{
	static class UWTLCommonStoreCurrentCharacterParameter* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreCurrentCharacterParameter*>(UWTLCommonStoreCurrentCharacterParameter::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreItemBase
// (None)

class UClass* UWTLCommonStoreItemBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreItemBase");

	return Clss;
}


// WTLCommonStoreItemBase WTL.Default__WTLCommonStoreItemBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreItemBase* UWTLCommonStoreItemBase::GetDefaultObj()
{
	static class UWTLCommonStoreItemBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreItemBase*>(UWTLCommonStoreItemBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreItem
// (None)

class UClass* UWTLCommonStoreItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreItem");

	return Clss;
}


// WTLCommonStoreItem WTL.Default__WTLCommonStoreItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreItem* UWTLCommonStoreItem::GetDefaultObj()
{
	static class UWTLCommonStoreItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreItem*>(UWTLCommonStoreItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonStoreItem.OnAddToCartButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStoreItem::OnAddToCartButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStoreItem", "OnAddToCartButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonStoreItemBundleInfo
// (None)

class UClass* UWTLCommonStoreItemBundleInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreItemBundleInfo");

	return Clss;
}


// WTLCommonStoreItemBundleInfo WTL.Default__WTLCommonStoreItemBundleInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreItemBundleInfo* UWTLCommonStoreItemBundleInfo::GetDefaultObj()
{
	static class UWTLCommonStoreItemBundleInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreItemBundleInfo*>(UWTLCommonStoreItemBundleInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreItemDescription
// (None)

class UClass* UWTLCommonStoreItemDescription::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreItemDescription");

	return Clss;
}


// WTLCommonStoreItemDescription WTL.Default__WTLCommonStoreItemDescription
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreItemDescription* UWTLCommonStoreItemDescription::GetDefaultObj()
{
	static class UWTLCommonStoreItemDescription* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreItemDescription*>(UWTLCommonStoreItemDescription::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreItemRequirements
// (None)

class UClass* UWTLCommonStoreItemRequirements::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreItemRequirements");

	return Clss;
}


// WTLCommonStoreItemRequirements WTL.Default__WTLCommonStoreItemRequirements
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreItemRequirements* UWTLCommonStoreItemRequirements::GetDefaultObj()
{
	static class UWTLCommonStoreItemRequirements* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreItemRequirements*>(UWTLCommonStoreItemRequirements::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreItemSimilarItems
// (None)

class UClass* UWTLCommonStoreItemSimilarItems::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreItemSimilarItems");

	return Clss;
}


// WTLCommonStoreItemSimilarItems WTL.Default__WTLCommonStoreItemSimilarItems
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreItemSimilarItems* UWTLCommonStoreItemSimilarItems::GetDefaultObj()
{
	static class UWTLCommonStoreItemSimilarItems* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreItemSimilarItems*>(UWTLCommonStoreItemSimilarItems::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonStoreItemSimilarItems.OnStoreItemClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLStoreItem               StoreItemData                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UWTLCommonStoreItem*         StoreItem                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStoreItemSimilarItems::OnStoreItemClicked(struct FWTLStoreItem& StoreItemData, class UWTLCommonStoreItem* StoreItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStoreItemSimilarItems", "OnStoreItemClicked");

	Params::UWTLCommonStoreItemSimilarItems_OnStoreItemClicked_Params Parms{};

	Parms.StoreItemData = StoreItemData;
	Parms.StoreItem = StoreItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStoreItemSimilarItems.OnPreviousButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStoreItemSimilarItems::OnPreviousButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStoreItemSimilarItems", "OnPreviousButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStoreItemSimilarItems.OnNextButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonStoreItemSimilarItems::OnNextButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStoreItemSimilarItems", "OnNextButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonStoreItemSimilarItems.OnAddStoreItemToCart
// (Final, Native, Private)
// Parameters:
// uint64                             StoreItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonStoreItemSimilarItems::OnAddStoreItemToCart(uint64 StoreItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStoreItemSimilarItems", "OnAddStoreItemToCart");

	Params::UWTLCommonStoreItemSimilarItems_OnAddStoreItemToCart_Params Parms{};

	Parms.StoreItemID = StoreItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonStoreItemTags
// (None)

class UClass* UWTLCommonStoreItemTags::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreItemTags");

	return Clss;
}


// WTLCommonStoreItemTags WTL.Default__WTLCommonStoreItemTags
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreItemTags* UWTLCommonStoreItemTags::GetDefaultObj()
{
	static class UWTLCommonStoreItemTags* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreItemTags*>(UWTLCommonStoreItemTags::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonStoreItemTags.OnTagButtonClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        TagText                                                          (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonStoreItemTags::OnTagButtonClicked(class FText& TagText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonStoreItemTags", "OnTagButtonClicked");

	Params::UWTLCommonStoreItemTags_OnTagButtonClicked_Params Parms{};

	Parms.TagText = TagText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonStoreItemTooltip
// (None)

class UClass* UWTLCommonStoreItemTooltip::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreItemTooltip");

	return Clss;
}


// WTLCommonStoreItemTooltip WTL.Default__WTLCommonStoreItemTooltip
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreItemTooltip* UWTLCommonStoreItemTooltip::GetDefaultObj()
{
	static class UWTLCommonStoreItemTooltip* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreItemTooltip*>(UWTLCommonStoreItemTooltip::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonTypeButton
// (None)

class UClass* UWTLCommonTypeButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonTypeButton");

	return Clss;
}


// WTLCommonTypeButton WTL.Default__WTLCommonTypeButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonTypeButton* UWTLCommonTypeButton::GetDefaultObj()
{
	static class UWTLCommonTypeButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonTypeButton*>(UWTLCommonTypeButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreItemTypeButton
// (None)

class UClass* UWTLCommonStoreItemTypeButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreItemTypeButton");

	return Clss;
}


// WTLCommonStoreItemTypeButton WTL.Default__WTLCommonStoreItemTypeButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreItemTypeButton* UWTLCommonStoreItemTypeButton::GetDefaultObj()
{
	static class UWTLCommonStoreItemTypeButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreItemTypeButton*>(UWTLCommonStoreItemTypeButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreItemWeaponTypeBonusInfo
// (None)

class UClass* UWTLCommonStoreItemWeaponTypeBonusInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreItemWeaponTypeBonusInfo");

	return Clss;
}


// WTLCommonStoreItemWeaponTypeBonusInfo WTL.Default__WTLCommonStoreItemWeaponTypeBonusInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreItemWeaponTypeBonusInfo* UWTLCommonStoreItemWeaponTypeBonusInfo::GetDefaultObj()
{
	static class UWTLCommonStoreItemWeaponTypeBonusInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreItemWeaponTypeBonusInfo*>(UWTLCommonStoreItemWeaponTypeBonusInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStorePremiumItem
// (None)

class UClass* UWTLCommonStorePremiumItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStorePremiumItem");

	return Clss;
}


// WTLCommonStorePremiumItem WTL.Default__WTLCommonStorePremiumItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStorePremiumItem* UWTLCommonStorePremiumItem::GetDefaultObj()
{
	static class UWTLCommonStorePremiumItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStorePremiumItem*>(UWTLCommonStorePremiumItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonStoreTagButton
// (None)

class UClass* UWTLCommonStoreTagButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonStoreTagButton");

	return Clss;
}


// WTLCommonStoreTagButton WTL.Default__WTLCommonStoreTagButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonStoreTagButton* UWTLCommonStoreTagButton::GetDefaultObj()
{
	static class UWTLCommonStoreTagButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonStoreTagButton*>(UWTLCommonStoreTagButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonSuggestionList
// (None)

class UClass* UWTLCommonSuggestionList::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonSuggestionList");

	return Clss;
}


// WTLCommonSuggestionList WTL.Default__WTLCommonSuggestionList
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonSuggestionList* UWTLCommonSuggestionList::GetDefaultObj()
{
	static class UWTLCommonSuggestionList* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonSuggestionList*>(UWTLCommonSuggestionList::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonSuggestionList.OnSuggestionsScrollBoxUserScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonSuggestionList::OnSuggestionsScrollBoxUserScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSuggestionList", "OnSuggestionsScrollBoxUserScrolled");

	Params::UWTLCommonSuggestionList_OnSuggestionsScrollBoxUserScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonSuggestionList.OnSelected
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Suggestion                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonSuggestionList::OnSelected(class FText& Suggestion)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSuggestionList", "OnSelected");

	Params::UWTLCommonSuggestionList_OnSelected_Params Parms{};

	Parms.Suggestion = Suggestion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonSuggestionText
// (None)

class UClass* UWTLCommonSuggestionText::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonSuggestionText");

	return Clss;
}


// WTLCommonSuggestionText WTL.Default__WTLCommonSuggestionText
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonSuggestionText* UWTLCommonSuggestionText::GetDefaultObj()
{
	static class UWTLCommonSuggestionText* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonSuggestionText*>(UWTLCommonSuggestionText::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonSuggestionTextBox
// (None)

class UClass* UWTLCommonSuggestionTextBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonSuggestionTextBox");

	return Clss;
}


// WTLCommonSuggestionTextBox WTL.Default__WTLCommonSuggestionTextBox
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonSuggestionTextBox* UWTLCommonSuggestionTextBox::GetDefaultObj()
{
	static class UWTLCommonSuggestionTextBox* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonSuggestionTextBox*>(UWTLCommonSuggestionTextBox::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonSuggestionTextBox.OnTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonSuggestionTextBox::OnTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSuggestionTextBox", "OnTextBoxTextChanged");

	Params::UWTLCommonSuggestionTextBox_OnTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonSuggestionTextBox.OnSelectedSuggestion
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Suggestion                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonSuggestionTextBox::OnSelectedSuggestion(class FText& Suggestion)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSuggestionTextBox", "OnSelectedSuggestion");

	Params::UWTLCommonSuggestionTextBox_OnSelectedSuggestion_Params Parms{};

	Parms.Suggestion = Suggestion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonSuggestionTextBox.OnGetUserMenuContentEvent
// (Final, Native, Private)
// Parameters:
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UWTLCommonSuggestionTextBox::OnGetUserMenuContentEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonSuggestionTextBox", "OnGetUserMenuContentEvent");

	Params::UWTLCommonSuggestionTextBox_OnGetUserMenuContentEvent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLCommonTabButton
// (None)

class UClass* UWTLCommonTabButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonTabButton");

	return Clss;
}


// WTLCommonTabButton WTL.Default__WTLCommonTabButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonTabButton* UWTLCommonTabButton::GetDefaultObj()
{
	static class UWTLCommonTabButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonTabButton*>(UWTLCommonTabButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonText
// (None)

class UClass* UWTLCommonText::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonText");

	return Clss;
}


// WTLCommonText WTL.Default__WTLCommonText
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonText* UWTLCommonText::GetDefaultObj()
{
	static class UWTLCommonText* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonText*>(UWTLCommonText::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonTextCheckBox
// (None)

class UClass* UWTLCommonTextCheckBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonTextCheckBox");

	return Clss;
}


// WTLCommonTextCheckBox WTL.Default__WTLCommonTextCheckBox
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonTextCheckBox* UWTLCommonTextCheckBox::GetDefaultObj()
{
	static class UWTLCommonTextCheckBox* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonTextCheckBox*>(UWTLCommonTextCheckBox::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonTextCheckBox.OnCheckBoxButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonTextCheckBox::OnCheckBoxButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonTextCheckBox", "OnCheckBoxButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonTicker
// (None)

class UClass* UWTLCommonTicker::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonTicker");

	return Clss;
}


// WTLCommonTicker WTL.Default__WTLCommonTicker
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonTicker* UWTLCommonTicker::GetDefaultObj()
{
	static class UWTLCommonTicker* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonTicker*>(UWTLCommonTicker::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonTicker.SetText
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonTicker::SetText(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonTicker", "SetText");

	Params::UWTLCommonTicker_SetText_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonTicker.SetColor
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// struct FSlateColor                 Color                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLCommonTicker::SetColor(struct FSlateColor& Color)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonTicker", "SetColor");

	Params::UWTLCommonTicker_SetColor_Params Parms{};

	Parms.Color = Color;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonTicker.ResetColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UWTLCommonTicker::ResetColor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonTicker", "ResetColor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonToggleSwitcher
// (None)

class UClass* UWTLCommonToggleSwitcher::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonToggleSwitcher");

	return Clss;
}


// WTLCommonToggleSwitcher WTL.Default__WTLCommonToggleSwitcher
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonToggleSwitcher* UWTLCommonToggleSwitcher::GetDefaultObj()
{
	static class UWTLCommonToggleSwitcher* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonToggleSwitcher*>(UWTLCommonToggleSwitcher::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonToolTipText
// (None)

class UClass* UWTLCommonToolTipText::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonToolTipText");

	return Clss;
}


// WTLCommonToolTipText WTL.Default__WTLCommonToolTipText
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonToolTipText* UWTLCommonToolTipText::GetDefaultObj()
{
	static class UWTLCommonToolTipText* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonToolTipText*>(UWTLCommonToolTipText::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonTopUpCreditsSmallButton
// (None)

class UClass* UWTLCommonTopUpCreditsSmallButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonTopUpCreditsSmallButton");

	return Clss;
}


// WTLCommonTopUpCreditsSmallButton WTL.Default__WTLCommonTopUpCreditsSmallButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonTopUpCreditsSmallButton* UWTLCommonTopUpCreditsSmallButton::GetDefaultObj()
{
	static class UWTLCommonTopUpCreditsSmallButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonTopUpCreditsSmallButton*>(UWTLCommonTopUpCreditsSmallButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCommonTutorialWindow
// (None)

class UClass* UWTLCommonTutorialWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonTutorialWindow");

	return Clss;
}


// WTLCommonTutorialWindow WTL.Default__WTLCommonTutorialWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonTutorialWindow* UWTLCommonTutorialWindow::GetDefaultObj()
{
	static class UWTLCommonTutorialWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonTutorialWindow*>(UWTLCommonTutorialWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCommonTutorialWindow.OnPreviousBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonTutorialWindow::OnPreviousBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonTutorialWindow", "OnPreviousBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonTutorialWindow.OnNextBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLCommonTutorialWindow::OnNextBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonTutorialWindow", "OnNextBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCommonTutorialWindow.OnDoNotShowAgainCheckBoxCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLCommonTutorialWindow::OnDoNotShowAgainCheckBoxCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCommonTutorialWindow", "OnDoNotShowAgainCheckBoxCheckStateChanged");

	Params::UWTLCommonTutorialWindow_OnDoNotShowAgainCheckBoxCheckStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLCommonURLButton
// (None)

class UClass* UWTLCommonURLButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCommonURLButton");

	return Clss;
}


// WTLCommonURLButton WTL.Default__WTLCommonURLButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCommonURLButton* UWTLCommonURLButton::GetDefaultObj()
{
	static class UWTLCommonURLButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCommonURLButton*>(UWTLCommonURLButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLConsole
// (None)

class UClass* UWTLConsole::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLConsole");

	return Clss;
}


// WTLConsole WTL.Default__WTLConsole
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLConsole* UWTLConsole::GetDefaultObj()
{
	static class UWTLConsole* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLConsole*>(UWTLConsole::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLControlledAnimInstance
// (None)

class UClass* UWTLControlledAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLControlledAnimInstance");

	return Clss;
}


// WTLControlledAnimInstance WTL.Default__WTLControlledAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLControlledAnimInstance* UWTLControlledAnimInstance::GetDefaultObj()
{
	static class UWTLControlledAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLControlledAnimInstance*>(UWTLControlledAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLControlledDrone
// (Actor, Pawn)

class UClass* AWTLControlledDrone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLControlledDrone");

	return Clss;
}


// WTLControlledDrone WTL.Default__WTLControlledDrone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLControlledDrone* AWTLControlledDrone::GetDefaultObj()
{
	static class AWTLControlledDrone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLControlledDrone*>(AWTLControlledDrone::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLControlledDrone.Server_UpdateCameraPitch
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_UpdateCameraPitch(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_UpdateCameraPitch");

	Params::AWTLControlledDrone_Server_UpdateCameraPitch_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_ShowPreparingToUseSecondAbility
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_ShowPreparingToUseSecondAbility(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_ShowPreparingToUseSecondAbility");

	Params::AWTLControlledDrone_Server_ShowPreparingToUseSecondAbility_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_ShowPreparingToUseMainAbility
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_ShowPreparingToUseMainAbility(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_ShowPreparingToUseMainAbility");

	Params::AWTLControlledDrone_Server_ShowPreparingToUseMainAbility_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_SetDroneRotationYaw
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                              ClientYaw                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_SetDroneRotationYaw(float ClientYaw)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_SetDroneRotationYaw");

	Params::AWTLControlledDrone_Server_SetDroneRotationYaw_Params Parms{};

	Parms.ClientYaw = ClientYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_SetBrake
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_SetBrake(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_SetBrake");

	Params::AWTLControlledDrone_Server_SetBrake_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_OnUseSecondAbility
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                     CameraDirection                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_OnUseSecondAbility(const struct FVector& CameraDirection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_OnUseSecondAbility");

	Params::AWTLControlledDrone_Server_OnUseSecondAbility_Params Parms{};

	Parms.CameraDirection = CameraDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_OnUseMainAbility
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                     ActualDronePosition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_OnUseMainAbility(const struct FVector& ActualDronePosition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_OnUseMainAbility");

	Params::AWTLControlledDrone_Server_OnUseMainAbility_Params Parms{};

	Parms.ActualDronePosition = ActualDronePosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_OnUseHorn
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLControlledDrone::Server_OnUseHorn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_OnUseHorn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_OnStartSelfDestruction
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLControlledDrone::Server_OnStartSelfDestruction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_OnStartSelfDestruction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_AddYawInput
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_AddYawInput(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_AddYawInput");

	Params::AWTLControlledDrone_Server_AddYawInput_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_AddMoveUpInput
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_AddMoveUpInput(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_AddMoveUpInput");

	Params::AWTLControlledDrone_Server_AddMoveUpInput_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_AddMoveRightInput
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_AddMoveRightInput(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_AddMoveRightInput");

	Params::AWTLControlledDrone_Server_AddMoveRightInput_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Server_AddMoveForwardInput
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Server_AddMoveForwardInput(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Server_AddMoveForwardInput");

	Params::AWTLControlledDrone_Server_AddMoveForwardInput_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.OnRep_ShowPreparing
// (Final, Native, Private)
// Parameters:

void AWTLControlledDrone::OnRep_ShowPreparing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "OnRep_ShowPreparing");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.NetMulticast_StartUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLControlledDrone::NetMulticast_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "NetMulticast_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.NetMulticast_OnUseSecondAbility
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FVector                     CameraDirection                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::NetMulticast_OnUseSecondAbility(const struct FVector& CameraDirection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "NetMulticast_OnUseSecondAbility");

	Params::AWTLControlledDrone_NetMulticast_OnUseSecondAbility_Params Parms{};

	Parms.CameraDirection = CameraDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.NetMulticast_OnUseMainAbility
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FVector                     CameraDirection                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::NetMulticast_OnUseMainAbility(const struct FVector& CameraDirection)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "NetMulticast_OnUseMainAbility");

	Params::AWTLControlledDrone_NetMulticast_OnUseMainAbility_Params Parms{};

	Parms.CameraDirection = CameraDirection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.NetMulticast_OnUseHorn
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLControlledDrone::NetMulticast_OnUseHorn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "NetMulticast_OnUseHorn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.K2_StartUse
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLControlledDrone::K2_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "K2_StartUse");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLControlledDrone.K2_ShowPreparing
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Show                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledDrone::K2_ShowPreparing(bool Show)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "K2_ShowPreparing");

	Params::AWTLControlledDrone_K2_ShowPreparing_Params Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLControlledDrone.GetCaptureComponentWorldRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                    ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

struct FRotator AWTLControlledDrone::GetCaptureComponentWorldRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "GetCaptureComponentWorldRotation");

	Params::AWTLControlledDrone_GetCaptureComponentWorldRotation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLControlledDrone.GetAngleBetweenCameraAndBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLControlledDrone::GetAngleBetweenCameraAndBody()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "GetAngleBetweenCameraAndBody");

	Params::AWTLControlledDrone_GetAngleBetweenCameraAndBody_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLControlledDrone.Client_ShowScanningResult
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:
// TArray<struct FWTLMarkerMemoryElement>Markers                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLControlledDrone::Client_ShowScanningResult(TArray<struct FWTLMarkerMemoryElement>& Markers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Client_ShowScanningResult");

	Params::AWTLControlledDrone_Client_ShowScanningResult_Params Parms{};

	Parms.Markers = Markers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDrone.Client_DestroyDrone
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:

void AWTLControlledDrone::Client_DestroyDrone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDrone", "Client_DestroyDrone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLControlledDroneScreen
// (None)

class UClass* UWTLControlledDroneScreen::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLControlledDroneScreen");

	return Clss;
}


// WTLControlledDroneScreen WTL.Default__WTLControlledDroneScreen
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLControlledDroneScreen* UWTLControlledDroneScreen::GetDefaultObj()
{
	static class UWTLControlledDroneScreen* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLControlledDroneScreen*>(UWTLControlledDroneScreen::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLControlledDroneScreen.ShowScanningResult
// (Final, Native, Protected)
// Parameters:
// int32                              MarkersNum                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLControlledDroneScreen::ShowScanningResult(int32 MarkersNum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDroneScreen", "ShowScanningResult");

	Params::UWTLControlledDroneScreen_ShowScanningResult_Params Parms{};

	Parms.MarkersNum = MarkersNum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDroneScreen.ShowHit
// (Final, Native, Protected)
// Parameters:

void UWTLControlledDroneScreen::ShowHit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDroneScreen", "ShowHit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledDroneScreen.K2_ShowScanningResult
// (Event, Public, BlueprintEvent)
// Parameters:

void UWTLControlledDroneScreen::K2_ShowScanningResult()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDroneScreen", "K2_ShowScanningResult");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLControlledDroneScreen.K2_ShowHit
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Show                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLControlledDroneScreen::K2_ShowHit(bool Show)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDroneScreen", "K2_ShowHit");

	Params::UWTLControlledDroneScreen_K2_ShowHit_Params Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLControlledDroneScreen.K2_ShowGlitch
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Show                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLControlledDroneScreen::K2_ShowGlitch(bool Show)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledDroneScreen", "K2_ShowGlitch");

	Params::UWTLControlledDroneScreen_K2_ShowGlitch_Params Parms{};

	Parms.Show = Show;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLMonsterPawn
// (Actor, Pawn)

class UClass* AWTLMonsterPawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterPawn");

	return Clss;
}


// WTLMonsterPawn WTL.Default__WTLMonsterPawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMonsterPawn* AWTLMonsterPawn::GetDefaultObj()
{
	static class AWTLMonsterPawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMonsterPawn*>(AWTLMonsterPawn::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMonsterPawn.TargetEntersSafeZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::TargetEntersSafeZone(class AWTLCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "TargetEntersSafeZone");

	Params::AWTLMonsterPawn_TargetEntersSafeZone_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SpawnProjectile
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                  SpawnTransform                                                   (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TSubclassOf<class AWTLMonsterProjectile>ProjectileClass                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLMonsterProjectile*       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLMonsterProjectile* AWTLMonsterPawn::SpawnProjectile(const struct FTransform& SpawnTransform, TSubclassOf<class AWTLMonsterProjectile> ProjectileClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SpawnProjectile");

	Params::AWTLMonsterPawn_SpawnProjectile_Params Parms{};

	Parms.SpawnTransform = SpawnTransform;
	Parms.ProjectileClass = ProjectileClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.SetVisibleEnemy
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      NewVisibleEnemy                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetVisibleEnemy(class AActor* NewVisibleEnemy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetVisibleEnemy");

	Params::AWTLMonsterPawn_SetVisibleEnemy_Params Parms{};

	Parms.NewVisibleEnemy = NewVisibleEnemy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetUseAccelerationForPaths
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLMonsterAcceleration EAcceleration                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetUseAccelerationForPaths(bool Value, enum class EWTLMonsterAcceleration EAcceleration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetUseAccelerationForPaths");

	Params::AWTLMonsterPawn_SetUseAccelerationForPaths_Params Parms{};

	Parms.Value = Value;
	Parms.EAcceleration = EAcceleration;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetStealthMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetStealthMode(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetStealthMode");

	Params::AWTLMonsterPawn_SetStealthMode_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetStateDeath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLMonsterStateDeath   State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetStateDeath(enum class EWTLMonsterStateDeath State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetStateDeath");

	Params::AWTLMonsterPawn_SetStateDeath_Params Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetRegenerateHealthPerSecond
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetRegenerateHealthPerSecond(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetRegenerateHealthPerSecond");

	Params::AWTLMonsterPawn_SetRegenerateHealthPerSecond_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetReactionToEMPWeapon
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetReactionToEMPWeapon(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetReactionToEMPWeapon");

	Params::AWTLMonsterPawn_SetReactionToEMPWeapon_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetReactionOnElectronicBait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetReactionOnElectronicBait(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetReactionOnElectronicBait");

	Params::AWTLMonsterPawn_SetReactionOnElectronicBait_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetMovementMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLMonsterMovementMode Mode                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetMovementMode(enum class EWTLMonsterMovementMode Mode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetMovementMode");

	Params::AWTLMonsterPawn_SetMovementMode_Params Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetMonsterRank
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              RankValue                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetMonsterRank(int32 RankValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetMonsterRank");

	Params::AWTLMonsterPawn_SetMonsterRank_Params Parms{};

	Parms.RankValue = RankValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetLootAbility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetLootAbility(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetLootAbility");

	Params::AWTLMonsterPawn_SetLootAbility_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetLifetime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Delta                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetLifetime(float Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetLifetime");

	Params::AWTLMonsterPawn_SetLifetime_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetLifespanAfterDeath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetLifespanAfterDeath(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetLifespanAfterDeath");

	Params::AWTLMonsterPawn_SetLifespanAfterDeath_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetIsInvulnerable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetIsInvulnerable(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetIsInvulnerable");

	Params::AWTLMonsterPawn_SetIsInvulnerable_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetHealth(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetHealth");

	Params::AWTLMonsterPawn_SetHealth_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetFaction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLFaction             MonsterFaction                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetFaction(enum class EWTLFaction MonsterFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetFaction");

	Params::AWTLMonsterPawn_SetFaction_Params Parms{};

	Parms.MonsterFaction = MonsterFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetEventPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLEventPoint*              EventPoint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetEventPoint(class AWTLEventPoint* EventPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetEventPoint");

	Params::AWTLMonsterPawn_SetEventPoint_Params Parms{};

	Parms.EventPoint = EventPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetCurrentRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                    Rotation                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetCurrentRotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetCurrentRotation");

	Params::AWTLMonsterPawn_SetCurrentRotation_Params Parms{};

	Parms.Rotation = Rotation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetBlackBoardState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLMonsterState        State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetBlackBoardState(enum class EWTLMonsterState State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetBlackBoardState");

	Params::AWTLMonsterPawn_SetBlackBoardState_Params Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.SetApplyWeaponTypeDamageMultipliers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::SetApplyWeaponTypeDamageMultipliers(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "SetApplyWeaponTypeDamageMultipliers");

	Params::AWTLMonsterPawn_SetApplyWeaponTypeDamageMultipliers_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.Server_SetMovementMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLMonsterMovementMode Mode                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::Server_SetMovementMode(enum class EWTLMonsterMovementMode Mode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "Server_SetMovementMode");

	Params::AWTLMonsterPawn_Server_SetMovementMode_Params Parms{};

	Parms.Mode = Mode;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.Server_PossesBackToCharacter_PlayerInput
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void AWTLMonsterPawn::Server_PossesBackToCharacter_PlayerInput()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "Server_PossesBackToCharacter_PlayerInput");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.Server_OnClientMove
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize         Location                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Yaw                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Pitch                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::Server_OnClientMove(const struct FVector_NetQuantize& Location, float Yaw, float Pitch)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "Server_OnClientMove");

	Params::AWTLMonsterPawn_Server_OnClientMove_Params Parms{};

	Parms.Location = Location;
	Parms.Yaw = Yaw;
	Parms.Pitch = Pitch;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.RunIdle
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                              Duration                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::RunIdle(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "RunIdle");

	Params::AWTLMonsterPawn_RunIdle_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Duration != nullptr)
		*Duration = Parms.Duration;

}


// Function WTL.WTLMonsterPawn.RunAvailableAdditiveFarAttack
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                              Duration                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::RunAvailableAdditiveFarAttack(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "RunAvailableAdditiveFarAttack");

	Params::AWTLMonsterPawn_RunAvailableAdditiveFarAttack_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Duration != nullptr)
		*Duration = Parms.Duration;

}


// Function WTL.WTLMonsterPawn.RunAvailableAdditiveAction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// float                              Duration                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::RunAvailableAdditiveAction(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "RunAvailableAdditiveAction");

	Params::AWTLMonsterPawn_RunAvailableAdditiveAction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Duration != nullptr)
		*Duration = Parms.Duration;

}


// Function WTL.WTLMonsterPawn.RunAdditiveAction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EWTLMonsterActionType   ActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::RunAdditiveAction(enum class EWTLMonsterActionType ActionType, float* Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "RunAdditiveAction");

	Params::AWTLMonsterPawn_RunAdditiveAction_Params Parms{};

	Parms.ActionType = ActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Duration != nullptr)
		*Duration = Parms.Duration;

}


// Function WTL.WTLMonsterPawn.RunAction
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EWTLMonsterActionType   ActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Duration                                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::RunAction(enum class EWTLMonsterActionType ActionType, float* Duration)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "RunAction");

	Params::AWTLMonsterPawn_RunAction_Params Parms{};

	Parms.ActionType = ActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Duration != nullptr)
		*Duration = Parms.Duration;

}


// Function WTL.WTLMonsterPawn.RemoveCharacterFromListTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::RemoveCharacterFromListTargets(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "RemoveCharacterFromListTargets");

	Params::AWTLMonsterPawn_RemoveCharacterFromListTargets_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.OnTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              DeltaTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnTick");

	Params::AWTLMonsterPawn_OnTick_Params Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.OnStunned
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsStunned                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnStunned(bool IsStunned)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnStunned");

	Params::AWTLMonsterPawn_OnStunned_Params Parms{};

	Parms.IsStunned = IsStunned;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.OnStealthModeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnStealthModeChanged(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnStealthModeChanged");

	Params::AWTLMonsterPawn_OnStealthModeChanged_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.OnServerDeathBpEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FWTLMonsterDeathData        DeathData                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnServerDeathBpEvent(const struct FWTLMonsterDeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnServerDeathBpEvent");

	Params::AWTLMonsterPawn_OnServerDeathBpEvent_Params Parms{};

	Parms.DeathData = DeathData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.OnReplicatedMovement
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              DeltaTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnReplicatedMovement(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnReplicatedMovement");

	Params::AWTLMonsterPawn_OnReplicatedMovement_Params Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.OnRep_StorageContent
// (Final, Native, Protected)
// Parameters:

void AWTLMonsterPawn::OnRep_StorageContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnRep_StorageContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.OnRep_Stamina
// (Final, Native, Protected)
// Parameters:

void AWTLMonsterPawn::OnRep_Stamina()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnRep_Stamina");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.OnRep_ShortMovementInfo
// (Final, Native, Protected)
// Parameters:

void AWTLMonsterPawn::OnRep_ShortMovementInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnRep_ShortMovementInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.OnRep_MovementMode
// (Final, Native, Protected)
// Parameters:

void AWTLMonsterPawn::OnRep_MovementMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnRep_MovementMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.OnRep_IsInStealthMode
// (Final, Native, Protected)
// Parameters:

void AWTLMonsterPawn::OnRep_IsInStealthMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnRep_IsInStealthMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.OnRep_Health
// (Final, Native, Protected)
// Parameters:

void AWTLMonsterPawn::OnRep_Health()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnRep_Health");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.OnMonsterKillOnClient
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMonsterPawn::OnMonsterKillOnClient()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnMonsterKillOnClient");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMonsterPawn.OnHealthChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnHealthChanged(float Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnHealthChanged");

	Params::AWTLMonsterPawn_OnHealthChanged_Params Parms{};

	Parms.Delta = Delta;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.OnElectronicBait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnElectronicBait(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnElectronicBait");

	Params::AWTLMonsterPawn_OnElectronicBait_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.OnDeathEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                       Killer                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnDeathEvent(class APawn* Killer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnDeathEvent");

	Params::AWTLMonsterPawn_OnDeathEvent_Params Parms{};

	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.OnDeathBpEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FWTLMonsterDeathData        DeathData                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnDeathBpEvent(const struct FWTLMonsterDeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnDeathBpEvent");

	Params::AWTLMonsterPawn_OnDeathBpEvent_Params Parms{};

	Parms.DeathData = DeathData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.OnCurrentActionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLMonsterActionType   NewAction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLMonsterActionType   PreviousAction                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnCurrentActionChanged(enum class EWTLMonsterActionType NewAction, enum class EWTLMonsterActionType PreviousAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnCurrentActionChanged");

	Params::AWTLMonsterPawn_OnCurrentActionChanged_Params Parms{};

	Parms.NewAction = NewAction;
	Parms.PreviousAction = PreviousAction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.OnCharacterDestroy
// (Final, Native, Protected)
// Parameters:
// class AWTLCharacter*               PCharacter                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnCharacterDestroy(class AWTLCharacter* PCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnCharacterDestroy");

	Params::AWTLMonsterPawn_OnCharacterDestroy_Params Parms{};

	Parms.PCharacter = PCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.OnBurst
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FWTLMonsterDeathData        DeathData                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnBurst(const struct FWTLMonsterDeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnBurst");

	Params::AWTLMonsterPawn_OnBurst_Params Parms{};

	Parms.DeathData = DeathData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.OnActionTrigger
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        ActionName                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::OnActionTrigger(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "OnActionTrigger");

	Params::AWTLMonsterPawn_OnActionTrigger_Params Parms{};

	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.NetMulticast_SetBlackboardState
// (Net, NetReliable, Native, Event, NetMulticast, Protected, BlueprintCallable)
// Parameters:
// enum class EWTLMonsterState        BlackboardState                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::NetMulticast_SetBlackboardState(enum class EWTLMonsterState BlackboardState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "NetMulticast_SetBlackboardState");

	Params::AWTLMonsterPawn_NetMulticast_SetBlackboardState_Params Parms{};

	Parms.BlackboardState = BlackboardState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.NetMulticast_PlayAdditiveAction
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// enum class EWTLMonsterActionType   ActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::NetMulticast_PlayAdditiveAction(enum class EWTLMonsterActionType ActionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "NetMulticast_PlayAdditiveAction");

	Params::AWTLMonsterPawn_NetMulticast_PlayAdditiveAction_Params Parms{};

	Parms.ActionType = ActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.NetMulticast_PlayAction
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// enum class EWTLMonsterActionType   ActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              IdleAnimIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::NetMulticast_PlayAction(enum class EWTLMonsterActionType ActionType, uint8 IdleAnimIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "NetMulticast_PlayAction");

	Params::AWTLMonsterPawn_NetMulticast_PlayAction_Params Parms{};

	Parms.ActionType = ActionType;
	Parms.IdleAnimIndex = IdleAnimIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.NetMulticast_OnDeath
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector                     DeathPosition                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         ActorRotation                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         MeshRotation                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLMonsterDeathData        DeathData                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::NetMulticast_OnDeath(struct FVector& DeathPosition, const struct FVector_NetQuantize& ActorRotation, const struct FVector_NetQuantize& MeshRotation, const struct FWTLMonsterDeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "NetMulticast_OnDeath");

	Params::AWTLMonsterPawn_NetMulticast_OnDeath_Params Parms{};

	Parms.DeathPosition = DeathPosition;
	Parms.ActorRotation = ActorRotation;
	Parms.MeshRotation = MeshRotation;
	Parms.DeathData = DeathData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.KillMonster
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              KillTimeout                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::KillMonster(float KillTimeout)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "KillMonster");

	Params::AWTLMonsterPawn_KillMonster_Params Parms{};

	Parms.KillTimeout = KillTimeout;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.K2_SetMonsterSpawner
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLMonsterSpawner*          Spawner                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::K2_SetMonsterSpawner(class AWTLMonsterSpawner* Spawner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "K2_SetMonsterSpawner");

	Params::AWTLMonsterPawn_K2_SetMonsterSpawner_Params Parms{};

	Parms.Spawner = Spawner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.K2_SetHighlightState
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::K2_SetHighlightState(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "K2_SetHighlightState");

	Params::AWTLMonsterPawn_K2_SetHighlightState_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.K2_OnElectronicBait
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                      Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::K2_OnElectronicBait(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "K2_OnElectronicBait");

	Params::AWTLMonsterPawn_K2_OnElectronicBait_Params Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.K2_OnDeathEvent
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMonsterPawn::K2_OnDeathEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "K2_OnDeathEvent");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMonsterPawn.K2_OnConditionShieldChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::K2_OnConditionShieldChanged(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "K2_OnConditionShieldChanged");

	Params::AWTLMonsterPawn_K2_OnConditionShieldChanged_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.K2_OnClientBulletHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class APawn*                       DamageInstigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// int32                              WeaponID                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              AmmoID                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::K2_OnClientBulletHit(class APawn* DamageInstigator, struct FHitResult& HitResult, int32 WeaponID, int32 AmmoID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "K2_OnClientBulletHit");

	Params::AWTLMonsterPawn_K2_OnClientBulletHit_Params Parms{};

	Parms.DamageInstigator = DamageInstigator;
	Parms.HitResult = HitResult;
	Parms.WeaponID = WeaponID;
	Parms.AmmoID = AmmoID;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.K2_OnChangeFaction
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLFaction             NewFaction                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             OldFaction                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::K2_OnChangeFaction(enum class EWTLFaction NewFaction, enum class EWTLFaction OldFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "K2_OnChangeFaction");

	Params::AWTLMonsterPawn_K2_OnChangeFaction_Params Parms{};

	Parms.NewFaction = NewFaction;
	Parms.OldFaction = OldFaction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.K2_OnBeginPlayFinish
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMonsterPawn::K2_OnBeginPlayFinish()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "K2_OnBeginPlayFinish");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMonsterPawn.K2_OnApplyDamageToShield
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class APawn*                       DamageInstigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// int32                              WeaponID                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              AmmoID                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageValue                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::K2_OnApplyDamageToShield(class APawn* DamageInstigator, struct FHitResult& HitResult, int32 WeaponID, int32 AmmoID, float DamageValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "K2_OnApplyDamageToShield");

	Params::AWTLMonsterPawn_K2_OnApplyDamageToShield_Params Parms{};

	Parms.DamageInstigator = DamageInstigator;
	Parms.HitResult = HitResult;
	Parms.WeaponID = WeaponID;
	Parms.AmmoID = AmmoID;
	Parms.DamageValue = DamageValue;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawn.K2_GetMonsterSpawner
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLMonsterSpawner*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLMonsterSpawner* AWTLMonsterPawn::K2_GetMonsterSpawner()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "K2_GetMonsterSpawner");

	Params::AWTLMonsterPawn_K2_GetMonsterSpawner_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsWasStunned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsWasStunned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsWasStunned");

	Params::AWTLMonsterPawn_IsWasStunned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsVisible
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsVisible()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsVisible");

	Params::AWTLMonsterPawn_IsVisible_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsReactionToEMPWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsReactionToEMPWeapon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsReactionToEMPWeapon");

	Params::AWTLMonsterPawn_IsReactionToEMPWeapon_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsInAdditiveAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsInAdditiveAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsInAdditiveAction");

	Params::AWTLMonsterPawn_IsInAdditiveAction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsGroundDrone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsGroundDrone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsGroundDrone");

	Params::AWTLMonsterPawn_IsGroundDrone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsFlyingDrone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsFlyingDrone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsFlyingDrone");

	Params::AWTLMonsterPawn_IsFlyingDrone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsEnoughStaminaForAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLMonsterActionType   ActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsEnoughStaminaForAction(enum class EWTLMonsterActionType ActionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsEnoughStaminaForAction");

	Params::AWTLMonsterPawn_IsEnoughStaminaForAction_Params Parms{};

	Parms.ActionType = ActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsDrone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsDrone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsDrone");

	Params::AWTLMonsterPawn_IsDrone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsDetectOnMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsDetectOnMap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsDetectOnMap");

	Params::AWTLMonsterPawn_IsDetectOnMap_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsDead()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsDead");

	Params::AWTLMonsterPawn_IsDead_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsCharacterInBlackList
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsCharacterInBlackList(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsCharacterInBlackList");

	Params::AWTLMonsterPawn_IsCharacterInBlackList_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsCanBeLooted
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsCanBeLooted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsCanBeLooted");

	Params::AWTLMonsterPawn_IsCanBeLooted_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsApplyWeaponTypeDamageMultipliers
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsApplyWeaponTypeDamageMultipliers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsApplyWeaponTypeDamageMultipliers");

	Params::AWTLMonsterPawn_IsApplyWeaponTypeDamageMultipliers_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.IsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IsAlive");

	Params::AWTLMonsterPawn_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.InterruptIdleState
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMonsterPawn::InterruptIdleState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "InterruptIdleState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.InterruptCurrentAction
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMonsterPawn::InterruptCurrentAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "InterruptCurrentAction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.IncrementStamina
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::IncrementStamina(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IncrementStamina");

	Params::AWTLMonsterPawn_IncrementStamina_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.IncrementShield
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::IncrementShield(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IncrementShield");

	Params::AWTLMonsterPawn_IncrementShield_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.IncrementLevelOfStun
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::IncrementLevelOfStun(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IncrementLevelOfStun");

	Params::AWTLMonsterPawn_IncrementLevelOfStun_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.IncrementHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::IncrementHealth(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "IncrementHealth");

	Params::AWTLMonsterPawn_IncrementHealth_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.GetStateDeath
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLMonsterStateDeath   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLMonsterStateDeath AWTLMonsterPawn::GetStateDeath()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetStateDeath");

	Params::AWTLMonsterPawn_GetStateDeath_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetStamina
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetStamina()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetStamina");

	Params::AWTLMonsterPawn_GetStamina_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetRemotePitch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetRemotePitch()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetRemotePitch");

	Params::AWTLMonsterPawn_GetRemotePitch_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetReactionOnSafeZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::GetReactionOnSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetReactionOnSafeZone");

	Params::AWTLMonsterPawn_GetReactionOnSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetReactionOnElectronicBait
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::GetReactionOnElectronicBait()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetReactionOnElectronicBait");

	Params::AWTLMonsterPawn_GetReactionOnElectronicBait_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetOldHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetOldHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetOldHealth");

	Params::AWTLMonsterPawn_GetOldHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetMovementMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLMonsterMovementMode ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLMonsterMovementMode AWTLMonsterPawn::GetMovementMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetMovementMode");

	Params::AWTLMonsterPawn_GetMovementMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetMonsterRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AWTLMonsterPawn::GetMonsterRank()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetMonsterRank");

	Params::AWTLMonsterPawn_GetMonsterRank_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetMonsterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLMonsterPawn::GetMonsterID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetMonsterID");

	Params::AWTLMonsterPawn_GetMonsterID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetMaxHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetMaxHealth");

	Params::AWTLMonsterPawn_GetMaxHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetMasterMonsterID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLMonsterPawn::GetMasterMonsterID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetMasterMonsterID");

	Params::AWTLMonsterPawn_GetMasterMonsterID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetLifetime
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetLifetime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetLifetime");

	Params::AWTLMonsterPawn_GetLifetime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetHumanReadableName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLMonsterPawn::GetHumanReadableName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetHumanReadableName");

	Params::AWTLMonsterPawn_GetHumanReadableName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetHealthLost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetHealthLost()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetHealthLost");

	Params::AWTLMonsterPawn_GetHealthLost_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetHealth");

	Params::AWTLMonsterPawn_GetHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLMonsterPawn::GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetFaction");

	Params::AWTLMonsterPawn_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetEventPoint
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLEventPoint*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLEventPoint* AWTLMonsterPawn::GetEventPoint(enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetEventPoint");

	Params::AWTLMonsterPawn_GetEventPoint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetDangerLevelMultiplier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetDangerLevelMultiplier()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetDangerLevelMultiplier");

	Params::AWTLMonsterPawn_GetDangerLevelMultiplier_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetDangerLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetDangerLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetDangerLevel");

	Params::AWTLMonsterPawn_GetDangerLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetCurrentLevelOfStun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetCurrentLevelOfStun()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetCurrentLevelOfStun");

	Params::AWTLMonsterPawn_GetCurrentLevelOfStun_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetCurrentDamageVisualizationValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::GetCurrentDamageVisualizationValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetCurrentDamageVisualizationValue");

	Params::AWTLMonsterPawn_GetCurrentDamageVisualizationValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetCurrentAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLMonsterActionType   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLMonsterActionType AWTLMonsterPawn::GetCurrentAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetCurrentAction");

	Params::AWTLMonsterPawn_GetCurrentAction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetConditionShield
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLMonsterPawn::GetConditionShield()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetConditionShield");

	Params::AWTLMonsterPawn_GetConditionShield_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetCharacterFromListVisibleTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLMonsterFindingVisibleCharacterTypeType                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* AWTLMonsterPawn::GetCharacterFromListVisibleTargets(class AWTLCharacter* Character, enum class EWTLMonsterFindingVisibleCharacterType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetCharacterFromListVisibleTargets");

	Params::AWTLMonsterPawn_GetCharacterFromListVisibleTargets_Params Parms{};

	Parms.Character = Character;
	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetCharacterFromListTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLMonsterFindingCharacterTypeType                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InRadius                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* AWTLMonsterPawn::GetCharacterFromListTargets(class AWTLCharacter* Character, enum class EWTLMonsterFindingCharacterType Type, float InRadius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetCharacterFromListTargets");

	Params::AWTLMonsterPawn_GetCharacterFromListTargets_Params Parms{};

	Parms.Character = Character;
	Parms.Type = Type;
	Parms.InRadius = InRadius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.GetAvailableActions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               bExceptMainAttack                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<enum class EWTLMonsterActionType>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<enum class EWTLMonsterActionType> AWTLMonsterPawn::GetAvailableActions(bool bExceptMainAttack)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "GetAvailableActions");

	Params::AWTLMonsterPawn_GetAvailableActions_Params Parms{};

	Parms.bExceptMainAttack = bExceptMainAttack;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.DecrementShield
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::DecrementShield(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "DecrementShield");

	Params::AWTLMonsterPawn_DecrementShield_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.DecrementHealth
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::DecrementHealth(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "DecrementHealth");

	Params::AWTLMonsterPawn_DecrementHealth_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.ClearListTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMonsterPawn::ClearListTargets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "ClearListTargets");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.CheckListVisibleTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMonsterPawn::CheckListVisibleTargets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "CheckListVisibleTargets");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.CheckListTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMonsterPawn::CheckListTargets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "CheckListTargets");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.CanUseShield
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::CanUseShield()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "CanUseShield");

	Params::AWTLMonsterPawn_CanUseShield_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.CanUseBrains
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::CanUseBrains()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "CanUseBrains");

	Params::AWTLMonsterPawn_CanUseBrains_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.CanUseAdditiveAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::CanUseAdditiveAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "CanUseAdditiveAction");

	Params::AWTLMonsterPawn_CanUseAdditiveAction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.CanBeStunned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterPawn::CanBeStunned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "CanBeStunned");

	Params::AWTLMonsterPawn_CanBeStunned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.BranchCanUseBrains
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EWTLBPCheckResult       Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::BranchCanUseBrains(enum class EWTLBPCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "BranchCanUseBrains");

	Params::AWTLMonsterPawn_BranchCanUseBrains_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLMonsterPawn.ApplyEffectToCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::ApplyEffectToCharacter(class AWTLCharacter* Character, enum class EWTLCharacterEffectType EffectType, float Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "ApplyEffectToCharacter");

	Params::AWTLMonsterPawn_ApplyEffectToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.EffectType = EffectType;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.ApplyDamageToCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        BoneName                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>     DamageType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLMonsterAttackModificatorDamageModificator                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageMultiplier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyExpectedEffects                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLColliderType        ColliderType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseArmor                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawn::ApplyDamageToCharacter(class AWTLCharacter* Character, class FName BoneName, TSubclassOf<class UDamageType> DamageType, enum class EWTLMonsterAttackModificator DamageModificator, float DamageMultiplier, bool ApplyExpectedEffects, enum class EWTLColliderType ColliderType, bool UseArmor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "ApplyDamageToCharacter");

	Params::AWTLMonsterPawn_ApplyDamageToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.BoneName = BoneName;
	Parms.DamageType = DamageType;
	Parms.DamageModificator = DamageModificator;
	Parms.DamageMultiplier = DamageMultiplier;
	Parms.ApplyExpectedEffects = ApplyExpectedEffects;
	Parms.ColliderType = ColliderType;
	Parms.UseArmor = UseArmor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.ApplyDamageToAIInterface
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      TargetActor                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UDamageType>     DamageType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLMonsterAttackModificatorDamageModificator                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageMultiplier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyExpectedEffects                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLColliderType        ColliderType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseArmor                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* AWTLMonsterPawn::ApplyDamageToAIInterface(class AActor* TargetActor, TSubclassOf<class UDamageType> DamageType, enum class EWTLMonsterAttackModificator DamageModificator, float DamageMultiplier, bool ApplyExpectedEffects, enum class EWTLColliderType ColliderType, bool UseArmor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "ApplyDamageToAIInterface");

	Params::AWTLMonsterPawn_ApplyDamageToAIInterface_Params Parms{};

	Parms.TargetActor = TargetActor;
	Parms.DamageType = DamageType;
	Parms.DamageModificator = DamageModificator;
	Parms.DamageMultiplier = DamageMultiplier;
	Parms.ApplyExpectedEffects = ApplyExpectedEffects;
	Parms.ColliderType = ColliderType;
	Parms.UseArmor = UseArmor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawn.AddTargetToBlacklist
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Delay                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageMultiplier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::AddTargetToBlacklist(class AWTLCharacter* Target, float Delay, float DamageMultiplier)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "AddTargetToBlacklist");

	Params::AWTLMonsterPawn_AddTargetToBlacklist_Params Parms{};

	Parms.Target = Target;
	Parms.Delay = Delay;
	Parms.DamageMultiplier = DamageMultiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawn.AddCharacterToListTargets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Damage                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawn::AddCharacterToListTargets(class AWTLCharacter* Character, float Damage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawn", "AddCharacterToListTargets");

	Params::AWTLMonsterPawn_AddCharacterToListTargets_Params Parms{};

	Parms.Character = Character;
	Parms.Damage = Damage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLControlledMonsterPawn
// (Actor, Pawn)

class UClass* AWTLControlledMonsterPawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLControlledMonsterPawn");

	return Clss;
}


// WTLControlledMonsterPawn WTL.Default__WTLControlledMonsterPawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLControlledMonsterPawn* AWTLControlledMonsterPawn::GetDefaultObj()
{
	static class AWTLControlledMonsterPawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLControlledMonsterPawn*>(AWTLControlledMonsterPawn::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLControlledMonsterPawn.RunActionControlled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLControlledActionKeyTypeActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLControlledMonsterPawn::RunActionControlled(enum class EWTLControlledActionKeyType ActionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "RunActionControlled");

	Params::AWTLControlledMonsterPawn_RunActionControlled_Params Parms{};

	Parms.ActionType = ActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLControlledMonsterPawn.PlayAnimationControlled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLControlledActionKeyTypeActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::PlayAnimationControlled(enum class EWTLControlledActionKeyType ActionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "PlayAnimationControlled");

	Params::AWTLControlledMonsterPawn_PlayAnimationControlled_Params Parms{};

	Parms.ActionType = ActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledMonsterPawn.OnAction_PlayerInput
// (Final, Native, Public)
// Parameters:
// enum class EWTLControlledActionKeyTypeActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::OnAction_PlayerInput(enum class EWTLControlledActionKeyType ActionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "OnAction_PlayerInput");

	Params::AWTLControlledMonsterPawn_OnAction_PlayerInput_Params Parms{};

	Parms.ActionType = ActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledMonsterPawn.NetMulticast_OnDeathControlled
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// struct FVector                     DeathPosition                                                    (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         ActorRotation                                                    (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         MeshRotation                                                     (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLMonsterDeathData        DeathData                                                        (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::NetMulticast_OnDeathControlled(struct FVector& DeathPosition, const struct FVector_NetQuantize& ActorRotation, const struct FVector_NetQuantize& MeshRotation, const struct FWTLMonsterDeathData& DeathData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "NetMulticast_OnDeathControlled");

	Params::AWTLControlledMonsterPawn_NetMulticast_OnDeathControlled_Params Parms{};

	Parms.DeathPosition = DeathPosition;
	Parms.ActorRotation = ActorRotation;
	Parms.MeshRotation = MeshRotation;
	Parms.DeathData = DeathData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledMonsterPawn.K2_OnLevelUp
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              NewLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::K2_OnLevelUp(int32 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "K2_OnLevelUp");

	Params::AWTLControlledMonsterPawn_K2_OnLevelUp_Params Parms{};

	Parms.NewLevel = NewLevel;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLControlledMonsterPawn.K2_OnActionTriggerNotification
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        ActionName                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::K2_OnActionTriggerNotification(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "K2_OnActionTriggerNotification");

	Params::AWTLControlledMonsterPawn_K2_OnActionTriggerNotification_Params Parms{};

	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLControlledMonsterPawn.K2_OnAction_PlayerInput
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLControlledActionKeyTypeActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::K2_OnAction_PlayerInput(enum class EWTLControlledActionKeyType ActionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "K2_OnAction_PlayerInput");

	Params::AWTLControlledMonsterPawn_K2_OnAction_PlayerInput_Params Parms{};

	Parms.ActionType = ActionType;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLControlledMonsterPawn.K2_On_DrawToCanvas
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCanvas*                     Canvas                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ScaleUI                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsHUDHidden                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::K2_On_DrawToCanvas(class UCanvas* Canvas, float ScaleUI, float DeltaTime, bool bIsHUDHidden)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "K2_On_DrawToCanvas");

	Params::AWTLControlledMonsterPawn_K2_On_DrawToCanvas_Params Parms{};

	Parms.Canvas = Canvas;
	Parms.ScaleUI = ScaleUI;
	Parms.DeltaTime = DeltaTime;
	Parms.bIsHUDHidden = bIsHUDHidden;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLControlledMonsterPawn.IsRecoveryActionCompleted
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EWTLControlledActionKeyTypeActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLControlledMonsterPawn::IsRecoveryActionCompleted(enum class EWTLControlledActionKeyType ActionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "IsRecoveryActionCompleted");

	Params::AWTLControlledMonsterPawn_IsRecoveryActionCompleted_Params Parms{};

	Parms.ActionType = ActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLControlledMonsterPawn.InterruptAction
// (Native, Public, BlueprintCallable)
// Parameters:

void AWTLControlledMonsterPawn::InterruptAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "InterruptAction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledMonsterPawn.GetCurrentCooldown
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EWTLControlledActionKeyTypeActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLControlledMonsterPawn::GetCurrentCooldown(enum class EWTLControlledActionKeyType ActionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "GetCurrentCooldown");

	Params::AWTLControlledMonsterPawn_GetCurrentCooldown_Params Parms{};

	Parms.ActionType = ActionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLControlledMonsterPawn.GetActionInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EWTLControlledActionKeyTypeReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLControlledActionKeyType AWTLControlledMonsterPawn::GetActionInProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "GetActionInProgress");

	Params::AWTLControlledMonsterPawn_GetActionInProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLControlledMonsterPawn.Client_SetActionDelay
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::Client_SetActionDelay(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "Client_SetActionDelay");

	Params::AWTLControlledMonsterPawn_Client_SetActionDelay_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledMonsterPawn.Client_OnNightvisionStateChanged
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bIsEnabled                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::Client_OnNightvisionStateChanged(bool bIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "Client_OnNightvisionStateChanged");

	Params::AWTLControlledMonsterPawn_Client_OnNightvisionStateChanged_Params Parms{};

	Parms.bIsEnabled = bIsEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledMonsterPawn.CanRunAction
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EWTLControlledActionKeyTypeActionType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CheckAnimation                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLControlledMonsterPawn::CanRunAction(enum class EWTLControlledActionKeyType ActionType, bool CheckAnimation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "CanRunAction");

	Params::AWTLControlledMonsterPawn_CanRunAction_Params Parms{};

	Parms.ActionType = ActionType;
	Parms.CheckAnimation = CheckAnimation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLControlledMonsterPawn.C2S_OnAction
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// uint8                              Number                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::C2S_OnAction(uint8 Number)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "C2S_OnAction");

	Params::AWTLControlledMonsterPawn_C2S_OnAction_Params Parms{};

	Parms.Number = Number;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLControlledMonsterPawn.ApplyDamageInCone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class UDamageType>     DamageType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              StuffDamageMultiplier                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DamageMultiplier                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ApplyExpectedEffects                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              AttackRadius                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfAnglePitch                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              HalfAngleYaw                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DamageAll                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLColliderType        ColliderType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseArmor                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLControlledMonsterPawn::ApplyDamageInCone(TSubclassOf<class UDamageType> DamageType, float StuffDamageMultiplier, float DamageMultiplier, bool ApplyExpectedEffects, float AttackRadius, float HalfAnglePitch, float HalfAngleYaw, bool DamageAll, enum class EWTLColliderType ColliderType, bool UseArmor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLControlledMonsterPawn", "ApplyDamageInCone");

	Params::AWTLControlledMonsterPawn_ApplyDamageInCone_Params Parms{};

	Parms.DamageType = DamageType;
	Parms.StuffDamageMultiplier = StuffDamageMultiplier;
	Parms.DamageMultiplier = DamageMultiplier;
	Parms.ApplyExpectedEffects = ApplyExpectedEffects;
	Parms.AttackRadius = AttackRadius;
	Parms.HalfAnglePitch = HalfAnglePitch;
	Parms.HalfAngleYaw = HalfAngleYaw;
	Parms.DamageAll = DamageAll;
	Parms.ColliderType = ColliderType;
	Parms.UseArmor = UseArmor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLControlledMonsterSpawnPoint
// (Actor)

class UClass* AWTLControlledMonsterSpawnPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLControlledMonsterSpawnPoint");

	return Clss;
}


// WTLControlledMonsterSpawnPoint WTL.Default__WTLControlledMonsterSpawnPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLControlledMonsterSpawnPoint* AWTLControlledMonsterSpawnPoint::GetDefaultObj()
{
	static class AWTLControlledMonsterSpawnPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLControlledMonsterSpawnPoint*>(AWTLControlledMonsterSpawnPoint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLCoreHackingPreviewRoom
// (Actor)

class UClass* AWTLCoreHackingPreviewRoom::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCoreHackingPreviewRoom");

	return Clss;
}


// WTLCoreHackingPreviewRoom WTL.Default__WTLCoreHackingPreviewRoom
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCoreHackingPreviewRoom* AWTLCoreHackingPreviewRoom::GetDefaultObj()
{
	static class AWTLCoreHackingPreviewRoom* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCoreHackingPreviewRoom*>(AWTLCoreHackingPreviewRoom::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCoreHackingPreviewRoom.OnTestButtonPressed
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLCoreHackingPreviewRoom::OnTestButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "OnTestButtonPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCoreHackingPreviewRoom.OnSwitchButtonPressed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCoreHackingPreviewRoom::OnSwitchButtonPressed(uint8 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "OnSwitchButtonPressed");

	Params::AWTLCoreHackingPreviewRoom_OnSwitchButtonPressed_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCoreHackingPreviewRoom.OnHackingResult
// (Final, Native, Private)
// Parameters:
// uint8                              Result                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCoreHackingPreviewRoom::OnHackingResult(uint8 Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "OnHackingResult");

	Params::AWTLCoreHackingPreviewRoom_OnHackingResult_Params Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCoreHackingPreviewRoom.OnCaptureEnded
// (Final, Native, Public)
// Parameters:

void AWTLCoreHackingPreviewRoom::OnCaptureEnded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "OnCaptureEnded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCoreHackingPreviewRoom.K2_UpdateSwitchState
// (Event, Public, BlueprintEvent)
// Parameters:
// uint8                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCoreHackingPreviewRoom::K2_UpdateSwitchState(uint8 Index, bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "K2_UpdateSwitchState");

	Params::AWTLCoreHackingPreviewRoom_K2_UpdateSwitchState_Params Parms{};

	Parms.Index = Index;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCoreHackingPreviewRoom.K2_OnTestButtonPressed
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLCoreHackingPreviewRoom::K2_OnTestButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "K2_OnTestButtonPressed");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLCoreHackingPreviewRoom.K2_OnLineTrace
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                     Position                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCoreHackingPreviewRoom::K2_OnLineTrace(const struct FVector& Position)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "K2_OnLineTrace");

	Params::AWTLCoreHackingPreviewRoom_K2_OnLineTrace_Params Parms{};

	Parms.Position = Position;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCoreHackingPreviewRoom.K2_OnComponentPressed
// (Event, Public, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCoreHackingPreviewRoom::K2_OnComponentPressed(class UPrimitiveComponent* HitComponent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "K2_OnComponentPressed");

	Params::AWTLCoreHackingPreviewRoom_K2_OnComponentPressed_Params Parms{};

	Parms.HitComponent = HitComponent;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCoreHackingPreviewRoom.K2_IsSuccess
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCoreHackingPreviewRoom::K2_IsSuccess(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "K2_IsSuccess");

	Params::AWTLCoreHackingPreviewRoom_K2_IsSuccess_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCoreHackingPreviewRoom.K2_HightlightStateIndicator
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLCoreHackingPreviewRoom::K2_HightlightStateIndicator()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "K2_HightlightStateIndicator");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLCoreHackingPreviewRoom.K2_HighlightIndicator
// (Event, Public, BlueprintEvent)
// Parameters:
// uint8                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCoreHackingPreviewRoom::K2_HighlightIndicator(uint8 Index, bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "K2_HighlightIndicator");

	Params::AWTLCoreHackingPreviewRoom_K2_HighlightIndicator_Params Parms{};

	Parms.Index = Index;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCoreHackingPreviewRoom.K2_GetViewTexture2D
// (Event, Public, BlueprintEvent)
// Parameters:
// class UTexture2D*                  InTexture                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*                  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTexture2D* AWTLCoreHackingPreviewRoom::K2_GetViewTexture2D(class UTexture2D* InTexture)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCoreHackingPreviewRoom", "K2_GetViewTexture2D");

	Params::AWTLCoreHackingPreviewRoom_K2_GetViewTexture2D_Params Parms{};

	Parms.InTexture = InTexture;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Class WTL.WTLCraftObject
// (Actor)

class UClass* AWTLCraftObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCraftObject");

	return Clss;
}


// WTLCraftObject WTL.Default__WTLCraftObject
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLCraftObject* AWTLCraftObject::GetDefaultObj()
{
	static class AWTLCraftObject* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLCraftObject*>(AWTLCraftObject::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLCraftObject.SetIsActive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCraftObject::SetIsActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCraftObject", "SetIsActive");

	Params::AWTLCraftObject_SetIsActive_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCraftObject.OnRep_IsActive
// (Final, Native, Protected)
// Parameters:

void AWTLCraftObject::OnRep_IsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCraftObject", "OnRep_IsActive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLCraftObject.OnIsActiveChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCraftObject::OnIsActiveChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCraftObject", "OnIsActiveChanged");

	Params::AWTLCraftObject_OnIsActiveChanged_Params Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCraftObject.GetIsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLCraftObject::GetIsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCraftObject", "GetIsActive");

	Params::AWTLCraftObject_GetIsActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLCraftObject.BPStartCraftProcess
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              CraftTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLCraftObject::BPStartCraftProcess(float CraftTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCraftObject", "BPStartCraftProcess");

	Params::AWTLCraftObject_BPStartCraftProcess_Params Parms{};

	Parms.CraftTime = CraftTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLCraftObject.BPCraftProcessCompleted
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLCraftObject::BPCraftProcessCompleted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLCraftObject", "BPCraftProcessCompleted");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLCustomizationSystem
// (None)

class UClass* UWTLCustomizationSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLCustomizationSystem");

	return Clss;
}


// WTLCustomizationSystem WTL.Default__WTLCustomizationSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLCustomizationSystem* UWTLCustomizationSystem::GetDefaultObj()
{
	static class UWTLCustomizationSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLCustomizationSystem*>(UWTLCustomizationSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLDamageSystem
// (None)

class UClass* UWTLDamageSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDamageSystem");

	return Clss;
}


// WTLDamageSystem WTL.Default__WTLDamageSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLDamageSystem* UWTLDamageSystem::GetDefaultObj()
{
	static class UWTLDamageSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLDamageSystem*>(UWTLDamageSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLDatabaseAdapter
// (None)

class UClass* UWTLDatabaseAdapter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDatabaseAdapter");

	return Clss;
}


// WTLDatabaseAdapter WTL.Default__WTLDatabaseAdapter
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLDatabaseAdapter* UWTLDatabaseAdapter::GetDefaultObj()
{
	static class UWTLDatabaseAdapter* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLDatabaseAdapter*>(UWTLDatabaseAdapter::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLDataTable
// (None)

class UClass* UWTLDataTable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDataTable");

	return Clss;
}


// WTLDataTable WTL.Default__WTLDataTable
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLDataTable* UWTLDataTable::GetDefaultObj()
{
	static class UWTLDataTable* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLDataTable*>(UWTLDataTable::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLDaytimeBasedFMODAmbientSound
// (Actor)

class UClass* AWTLDaytimeBasedFMODAmbientSound::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDaytimeBasedFMODAmbientSound");

	return Clss;
}


// WTLDaytimeBasedFMODAmbientSound WTL.Default__WTLDaytimeBasedFMODAmbientSound
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDaytimeBasedFMODAmbientSound* AWTLDaytimeBasedFMODAmbientSound::GetDefaultObj()
{
	static class AWTLDaytimeBasedFMODAmbientSound* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDaytimeBasedFMODAmbientSound*>(AWTLDaytimeBasedFMODAmbientSound::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLDebugHelper
// (None)

class UClass* UWTLDebugHelper::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDebugHelper");

	return Clss;
}


// WTLDebugHelper WTL.Default__WTLDebugHelper
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLDebugHelper* UWTLDebugHelper::GetDefaultObj()
{
	static class UWTLDebugHelper* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLDebugHelper*>(UWTLDebugHelper::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLDeminingActivity
// (Actor)

class UClass* AWTLDeminingActivity::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDeminingActivity");

	return Clss;
}


// WTLDeminingActivity WTL.Default__WTLDeminingActivity
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDeminingActivity* AWTLDeminingActivity::GetDefaultObj()
{
	static class AWTLDeminingActivity* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDeminingActivity*>(AWTLDeminingActivity::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLDeminingActivity.Server_OnCutWire
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDeminingActivity::Server_OnCutWire(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingActivity", "Server_OnCutWire");

	Params::AWTLDeminingActivity_Server_OnCutWire_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDeminingActivity.OnRep_WiresList
// (Final, Native, Protected)
// Parameters:

void AWTLDeminingActivity::OnRep_WiresList()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingActivity", "OnRep_WiresList");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDeminingActivity.OnRep_RemainingTimer
// (Final, Native, Protected)
// Parameters:

void AWTLDeminingActivity::OnRep_RemainingTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingActivity", "OnRep_RemainingTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDeminingActivity.OnCharacterDied
// (Final, Native, Protected)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDeminingActivity::OnCharacterDied(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingActivity", "OnCharacterDied");

	Params::AWTLDeminingActivity_OnCharacterDied_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDeminingActivity.Client_OnWireCutted
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDeminingActivity::Client_OnWireCutted(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingActivity", "Client_OnWireCutted");

	Params::AWTLDeminingActivity_Client_OnWireCutted_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLDynamicReplicatedActor
// (Actor)

class UClass* AWTLDynamicReplicatedActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDynamicReplicatedActor");

	return Clss;
}


// WTLDynamicReplicatedActor WTL.Default__WTLDynamicReplicatedActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDynamicReplicatedActor* AWTLDynamicReplicatedActor::GetDefaultObj()
{
	static class AWTLDynamicReplicatedActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDynamicReplicatedActor*>(AWTLDynamicReplicatedActor::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLThrowingDeviceProjectile
// (Actor)

class UClass* AWTLThrowingDeviceProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLThrowingDeviceProjectile");

	return Clss;
}


// WTLThrowingDeviceProjectile WTL.Default__WTLThrowingDeviceProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLThrowingDeviceProjectile* AWTLThrowingDeviceProjectile::GetDefaultObj()
{
	static class AWTLThrowingDeviceProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLThrowingDeviceProjectile*>(AWTLThrowingDeviceProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLThrowingDeviceProjectile.OnRep_ReplicatedInitialSpeed
// (Final, Native, Protected)
// Parameters:

void AWTLThrowingDeviceProjectile::OnRep_ReplicatedInitialSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDeviceProjectile", "OnRep_ReplicatedInitialSpeed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDeviceProjectile.OnRep_IsActive
// (Final, Native, Protected)
// Parameters:

void AWTLThrowingDeviceProjectile::OnRep_IsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDeviceProjectile", "OnRep_IsActive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDeviceProjectile.OnHit
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLThrowingDeviceProjectile::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDeviceProjectile", "OnHit");

	Params::AWTLThrowingDeviceProjectile_OnHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDeviceProjectile.IsUnderWater
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLThrowingDeviceProjectile::IsUnderWater()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDeviceProjectile", "IsUnderWater");

	Params::AWTLThrowingDeviceProjectile_IsUnderWater_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLThrowingDeviceProjectile.BPActivate
// (Event, Protected, BlueprintEvent)
// Parameters:

void AWTLThrowingDeviceProjectile::BPActivate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDeviceProjectile", "BPActivate");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLDeminingGrenadeProjectile
// (Actor)

class UClass* AWTLDeminingGrenadeProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDeminingGrenadeProjectile");

	return Clss;
}


// WTLDeminingGrenadeProjectile WTL.Default__WTLDeminingGrenadeProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDeminingGrenadeProjectile* AWTLDeminingGrenadeProjectile::GetDefaultObj()
{
	static class AWTLDeminingGrenadeProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDeminingGrenadeProjectile*>(AWTLDeminingGrenadeProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLDeminingGrenadeProjectile.OnSphereBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLDeminingGrenadeProjectile::OnSphereBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingGrenadeProjectile", "OnSphereBeginOverlap");

	Params::AWTLDeminingGrenadeProjectile_OnSphereBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLItemManipulationRoom
// (Actor)

class UClass* AWTLItemManipulationRoom::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLItemManipulationRoom");

	return Clss;
}


// WTLItemManipulationRoom WTL.Default__WTLItemManipulationRoom
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLItemManipulationRoom* AWTLItemManipulationRoom::GetDefaultObj()
{
	static class AWTLItemManipulationRoom* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLItemManipulationRoom*>(AWTLItemManipulationRoom::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLItemManipulationRoom.K2_HitLocation
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                     HitLocation                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLItemManipulationRoom::K2_HitLocation(const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemManipulationRoom", "K2_HitLocation");

	Params::AWTLItemManipulationRoom_K2_HitLocation_Params Parms{};

	Parms.HitLocation = HitLocation;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLDeminingPreviewRoom
// (Actor)

class UClass* AWTLDeminingPreviewRoom::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDeminingPreviewRoom");

	return Clss;
}


// WTLDeminingPreviewRoom WTL.Default__WTLDeminingPreviewRoom
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDeminingPreviewRoom* AWTLDeminingPreviewRoom::GetDefaultObj()
{
	static class AWTLDeminingPreviewRoom* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDeminingPreviewRoom*>(AWTLDeminingPreviewRoom::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLDeminingPreviewRoom.OnWireCutted
// (Final, Native, Private)
// Parameters:
// int32                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDeminingPreviewRoom::OnWireCutted(int32 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingPreviewRoom", "OnWireCutted");

	Params::AWTLDeminingPreviewRoom_OnWireCutted_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDeminingPreviewRoom.OnReminingTimerChanged
// (Final, Native, Private)
// Parameters:
// float                              Timer                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDeminingPreviewRoom::OnReminingTimerChanged(float Timer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingPreviewRoom", "OnReminingTimerChanged");

	Params::AWTLDeminingPreviewRoom_OnReminingTimerChanged_Params Parms{};

	Parms.Timer = Timer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDeminingPreviewRoom.OnDeminingWiresListChanged
// (Final, Native, Private)
// Parameters:
// TArray<uint8>                      List                                                             (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLDeminingPreviewRoom::OnDeminingWiresListChanged(const TArray<uint8>& List)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingPreviewRoom", "OnDeminingWiresListChanged");

	Params::AWTLDeminingPreviewRoom_OnDeminingWiresListChanged_Params Parms{};

	Parms.List = List;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDeminingPreviewRoom.K2_RemainingTimerChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDeminingPreviewRoom::K2_RemainingTimerChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingPreviewRoom", "K2_RemainingTimerChanged");

	Params::AWTLDeminingPreviewRoom_K2_RemainingTimerChanged_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLDeminingPreviewRoom.K2_CombinationSelected
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<uint8>                      Combination                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLDeminingPreviewRoom::K2_CombinationSelected(TArray<uint8>& Combination)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingPreviewRoom", "K2_CombinationSelected");

	Params::AWTLDeminingPreviewRoom_K2_CombinationSelected_Params Parms{};

	Parms.Combination = Combination;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLDeminingPreviewRoom.GetRemainingTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLDeminingPreviewRoom::GetRemainingTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingPreviewRoom", "GetRemainingTime");

	Params::AWTLDeminingPreviewRoom_GetRemainingTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDeminingPreviewRoom.GetOwnerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLDeminingPreviewRoom::GetOwnerName()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingPreviewRoom", "GetOwnerName");

	Params::AWTLDeminingPreviewRoom_GetOwnerName_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDeminingPreviewRoom.GetOwnerFaction
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLDeminingPreviewRoom::GetOwnerFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDeminingPreviewRoom", "GetOwnerFaction");

	Params::AWTLDeminingPreviewRoom_GetOwnerFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLDetector
// (Actor)

class UClass* AWTLDetector::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDetector");

	return Clss;
}


// WTLDetector WTL.Default__WTLDetector
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDetector* AWTLDetector::GetDefaultObj()
{
	static class AWTLDetector* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDetector*>(AWTLDetector::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLDetector.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLDetector::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLDetector::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.Server_SetUsingModeIndex
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              UsingModeIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDetector::Server_SetUsingModeIndex(uint8 UsingModeIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "Server_SetUsingModeIndex");

	Params::AWTLDetector_Server_SetUsingModeIndex_Params Parms{};

	Parms.UsingModeIndex = UsingModeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.Server_SearchPlaceableStuffs
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLDetector::Server_SearchPlaceableStuffs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "Server_SearchPlaceableStuffs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.Server_SearchPawns
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLDetector::Server_SearchPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "Server_SearchPawns");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.Server_SearchMines
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLDetector::Server_SearchMines()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "Server_SearchMines");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.OnRep_IsActive
// (Final, Native, Private)
// Parameters:

void AWTLDetector::OnRep_IsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "OnRep_IsActive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.OnRep_Disable
// (Final, Native, Private)
// Parameters:

void AWTLDetector::OnRep_Disable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "OnRep_Disable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.OnRep_CurrentMode
// (Final, Native, Private)
// Parameters:

void AWTLDetector::OnRep_CurrentMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "OnRep_CurrentMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.NetMulticast_StopUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLDetector::NetMulticast_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "NetMulticast_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.NetMulticast_SetMode
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AWTLDetector::NetMulticast_SetMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "NetMulticast_SetMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.NetMulticast_OnUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDetector::NetMulticast_OnUse(enum class EWTLUsableItemUseType UseType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "NetMulticast_OnUse");

	Params::AWTLDetector_NetMulticast_OnUse_Params Parms{};

	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.NetMulticast_DeviceShaking
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLDetector::NetMulticast_DeviceShaking()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "NetMulticast_DeviceShaking");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.GetEnergyValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLDetector::GetEnergyValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "GetEnergyValue");

	Params::AWTLDetector_GetEnergyValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDetector.GetCurrentMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLDetectorMode        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLDetectorMode AWTLDetector::GetCurrentMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "GetCurrentMode");

	Params::AWTLDetector_GetCurrentMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDetector.GetActorsOnDisplayCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLDetector::GetActorsOnDisplayCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "GetActorsOnDisplayCount");

	Params::AWTLDetector_GetActorsOnDisplayCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDetector.Client_SetMode
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLDetector::Client_SetMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "Client_SetMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.Client_SearchPlaceableStuffs
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:

void AWTLDetector::Client_SearchPlaceableStuffs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "Client_SearchPlaceableStuffs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.Client_SearchPawns
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:

void AWTLDetector::Client_SearchPawns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "Client_SearchPawns");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.Client_SearchMines
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:

void AWTLDetector::Client_SearchMines()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "Client_SearchMines");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetector.BPUpdateInformationOnDisplay
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLDetector::BPUpdateInformationOnDisplay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "BPUpdateInformationOnDisplay");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLDetector.BPStartUse
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLDetector::BPStartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "BPStartUse");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLDetector.BPShowInterference
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              InterferenceTime                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDetector::BPShowInterference(float InterferenceTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "BPShowInterference");

	Params::AWTLDetector_BPShowInterference_Params Parms{};

	Parms.InterferenceTime = InterferenceTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLDetector.BPFinishUse
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLDetector::BPFinishUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "BPFinishUse");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLDetector.BPDrawPlaceableStuffOnDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                      VisibleActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsFriendly                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDetector::BPDrawPlaceableStuffOnDisplay(class AActor* VisibleActor, bool IsFriendly)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "BPDrawPlaceableStuffOnDisplay");

	Params::AWTLDetector_BPDrawPlaceableStuffOnDisplay_Params Parms{};

	Parms.VisibleActor = VisibleActor;
	Parms.IsFriendly = IsFriendly;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLDetector.BPDrawPawnOnDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                      VisibleActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsHuman                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsFriendly                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDetector::BPDrawPawnOnDisplay(class AActor* VisibleActor, bool IsHuman, bool IsFriendly)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "BPDrawPawnOnDisplay");

	Params::AWTLDetector_BPDrawPawnOnDisplay_Params Parms{};

	Parms.VisibleActor = VisibleActor;
	Parms.IsHuman = IsHuman;
	Parms.IsFriendly = IsFriendly;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLDetector.BPDrawMineOnDisplay
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                      VisibleActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsFriendly                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLDetector::BPDrawMineOnDisplay(class AActor* VisibleActor, bool IsFriendly)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetector", "BPDrawMineOnDisplay");

	Params::AWTLDetector_BPDrawMineOnDisplay_Params Parms{};

	Parms.VisibleActor = VisibleActor;
	Parms.IsFriendly = IsFriendly;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLDetonator
// (Actor)

class UClass* AWTLDetonator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDetonator");

	return Clss;
}


// WTLDetonator WTL.Default__WTLDetonator
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDetonator* AWTLDetonator::GetDefaultObj()
{
	static class AWTLDetonator* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDetonator*>(AWTLDetonator::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLDetonator.NetMulticast_StartUse
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLDetonator::NetMulticast_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetonator", "NetMulticast_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDetonator.K2_OnOpened
// (Event, Protected, BlueprintEvent)
// Parameters:

void AWTLDetonator::K2_OnOpened()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDetonator", "K2_OnOpened");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLDoor
// (Actor)

class UClass* AWTLDoor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDoor");

	return Clss;
}


// WTLDoor WTL.Default__WTLDoor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDoor* AWTLDoor::GetDefaultObj()
{
	static class AWTLDoor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDoor*>(AWTLDoor::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLDoor.OnRep_bIsOpened
// (Final, Native, Public)
// Parameters:

void AWTLDoor::OnRep_bIsOpened()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDoor", "OnRep_bIsOpened");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLDroneDisplay
// (Actor)

class UClass* AWTLDroneDisplay::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDroneDisplay");

	return Clss;
}


// WTLDroneDisplay WTL.Default__WTLDroneDisplay
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDroneDisplay* AWTLDroneDisplay::GetDefaultObj()
{
	static class AWTLDroneDisplay* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDroneDisplay*>(AWTLDroneDisplay::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLDroneTargetWidget
// (None)

class UClass* UWTLDroneTargetWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDroneTargetWidget");

	return Clss;
}


// WTLDroneTargetWidget WTL.Default__WTLDroneTargetWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLDroneTargetWidget* UWTLDroneTargetWidget::GetDefaultObj()
{
	static class UWTLDroneTargetWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLDroneTargetWidget*>(UWTLDroneTargetWidget::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLLevelScriptActor
// (Actor)

class UClass* AWTLLevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLevelScriptActor");

	return Clss;
}


// WTLLevelScriptActor WTL.Default__WTLLevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLLevelScriptActor* AWTLLevelScriptActor::GetDefaultObj()
{
	static class AWTLLevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLLevelScriptActor*>(AWTLLevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLLevelScriptActor.NetMulticastReliable_OnMeleeHit
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         HitLocation                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal   ImpactNormal                                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        HitSurface                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Scale                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLevelScriptActor::NetMulticastReliable_OnMeleeHit(class UPrimitiveComponent* HitComponent, const struct FVector_NetQuantize& HitLocation, const struct FVector_NetQuantizeNormal& ImpactNormal, enum class EPhysicalSurface HitSurface, float Scale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLevelScriptActor", "NetMulticastReliable_OnMeleeHit");

	Params::AWTLLevelScriptActor_NetMulticastReliable_OnMeleeHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.HitLocation = HitLocation;
	Parms.ImpactNormal = ImpactNormal;
	Parms.HitSurface = HitSurface;
	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLevelScriptActor.NetMulticast_OnCharacterTeleported
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLevelScriptActor::NetMulticast_OnCharacterTeleported(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLevelScriptActor", "NetMulticast_OnCharacterTeleported");

	Params::AWTLLevelScriptActor_NetMulticast_OnCharacterTeleported_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLevelScriptActor.IsNightVolumetric
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLLevelScriptActor::IsNightVolumetric()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLevelScriptActor", "IsNightVolumetric");

	Params::AWTLLevelScriptActor_IsNightVolumetric_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLLevelScriptActor.IsNight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLLevelScriptActor::IsNight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLevelScriptActor", "IsNight");

	Params::AWTLLevelScriptActor_IsNight_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLLevelScriptActor.IsDayVolumetric
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLLevelScriptActor::IsDayVolumetric()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLevelScriptActor", "IsDayVolumetric");

	Params::AWTLLevelScriptActor_IsDayVolumetric_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLLevelScriptActor.IsDay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLLevelScriptActor::IsDay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLevelScriptActor", "IsDay");

	Params::AWTLLevelScriptActor_IsDay_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLLevelScriptActor.FindSafeZone
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              SafeZoneID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLSafeZone*                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLSafeZone* AWTLLevelScriptActor::FindSafeZone(int32 SafeZoneID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLevelScriptActor", "FindSafeZone");

	Params::AWTLLevelScriptActor_FindSafeZone_Params Parms{};

	Parms.SafeZoneID = SafeZoneID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLLevelScriptActor.FindCraftObject
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              CraftObjectID                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCraftObject*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCraftObject* AWTLLevelScriptActor::FindCraftObject(int32 CraftObjectID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLevelScriptActor", "FindCraftObject");

	Params::AWTLLevelScriptActor_FindCraftObject_Params Parms{};

	Parms.CraftObjectID = CraftObjectID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLLocationLevelScriptActor
// (Actor)

class UClass* AWTLLocationLevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLocationLevelScriptActor");

	return Clss;
}


// WTLLocationLevelScriptActor WTL.Default__WTLLocationLevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLLocationLevelScriptActor* AWTLLocationLevelScriptActor::GetDefaultObj()
{
	static class AWTLLocationLevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLLocationLevelScriptActor*>(AWTLLocationLevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLLocationLevelScriptActor.OnStreamingLevelsLoaded
// (Final, Native, Public)
// Parameters:

void AWTLLocationLevelScriptActor::OnStreamingLevelsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "OnStreamingLevelsLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.OnLevelLoaded
// (Final, Native, Private)
// Parameters:

void AWTLLocationLevelScriptActor::OnLevelLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "OnLevelLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.OnDedicatedServerMessage
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                      MessageType                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MessageData                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLocationLevelScriptActor::OnDedicatedServerMessage(const class FString& MessageType, const class FString& MessageData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "OnDedicatedServerMessage");

	Params::AWTLLocationLevelScriptActor_OnDedicatedServerMessage_Params Parms{};

	Parms.MessageType = MessageType;
	Parms.MessageData = MessageData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLLocationLevelScriptActor.NetworkControllerOnScriptedEventReceivedEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLLocationLevelScriptActor::NetworkControllerOnScriptedEventReceivedEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "NetworkControllerOnScriptedEventReceivedEvent");

	Params::AWTLLocationLevelScriptActor_NetworkControllerOnScriptedEventReceivedEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.NetworkControllerOnGetWorldTimeResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLLocationLevelScriptActor::NetworkControllerOnGetWorldTimeResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "NetworkControllerOnGetWorldTimeResponse");

	Params::AWTLLocationLevelScriptActor_NetworkControllerOnGetWorldTimeResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.NetworkControllerOnDisconnected
// (Final, Native, Private)
// Parameters:

void AWTLLocationLevelScriptActor::NetworkControllerOnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "NetworkControllerOnDisconnected");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.NetworkControllerOnDedicatedServerMessageEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLLocationLevelScriptActor::NetworkControllerOnDedicatedServerMessageEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "NetworkControllerOnDedicatedServerMessageEvent");

	Params::AWTLLocationLevelScriptActor_NetworkControllerOnDedicatedServerMessageEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.NetworkControllerOnDedicatedServerAuthorizationResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLLocationLevelScriptActor::NetworkControllerOnDedicatedServerAuthorizationResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "NetworkControllerOnDedicatedServerAuthorizationResponse");

	Params::AWTLLocationLevelScriptActor_NetworkControllerOnDedicatedServerAuthorizationResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.NetworkControllerOnConnectError
// (Final, Native, Private)
// Parameters:
// class FString                      ErrorInfo                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLocationLevelScriptActor::NetworkControllerOnConnectError(const class FString& ErrorInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "NetworkControllerOnConnectError");

	Params::AWTLLocationLevelScriptActor_NetworkControllerOnConnectError_Params Parms{};

	Parms.ErrorInfo = ErrorInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.NetworkControllerOnConnected
// (Final, Native, Private)
// Parameters:

void AWTLLocationLevelScriptActor::NetworkControllerOnConnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "NetworkControllerOnConnected");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.NetworkControllerOnCharacterLeaveLocationEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLLocationLevelScriptActor::NetworkControllerOnCharacterLeaveLocationEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "NetworkControllerOnCharacterLeaveLocationEvent");

	Params::AWTLLocationLevelScriptActor_NetworkControllerOnCharacterLeaveLocationEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.NetworkControllerOnCharacterEntersLocationEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLLocationLevelScriptActor::NetworkControllerOnCharacterEntersLocationEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "NetworkControllerOnCharacterEntersLocationEvent");

	Params::AWTLLocationLevelScriptActor_NetworkControllerOnCharacterEntersLocationEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLocationLevelScriptActor.IsAllLevelsLoaded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLLocationLevelScriptActor::IsAllLevelsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLocationLevelScriptActor", "IsAllLevelsLoaded");

	Params::AWTLLocationLevelScriptActor_IsAllLevelsLoaded_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLDynamicSkyLevelScriptActor
// (Actor)

class UClass* AWTLDynamicSkyLevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLDynamicSkyLevelScriptActor");

	return Clss;
}


// WTLDynamicSkyLevelScriptActor WTL.Default__WTLDynamicSkyLevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLDynamicSkyLevelScriptActor* AWTLDynamicSkyLevelScriptActor::GetDefaultObj()
{
	static class AWTLDynamicSkyLevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLDynamicSkyLevelScriptActor*>(AWTLDynamicSkyLevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLDynamicSkyLevelScriptActor.OnRep_WeatherChanged
// (Final, Native, Private)
// Parameters:

void AWTLDynamicSkyLevelScriptActor::OnRep_WeatherChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDynamicSkyLevelScriptActor", "OnRep_WeatherChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDynamicSkyLevelScriptActor.OnRep_DesiredWindSpeed
// (Final, Native, Private)
// Parameters:

void AWTLDynamicSkyLevelScriptActor::OnRep_DesiredWindSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDynamicSkyLevelScriptActor", "OnRep_DesiredWindSpeed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDynamicSkyLevelScriptActor.OnRep_DesiredWindActiveTime
// (Final, Native, Private)
// Parameters:

void AWTLDynamicSkyLevelScriptActor::OnRep_DesiredWindActiveTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDynamicSkyLevelScriptActor", "OnRep_DesiredWindActiveTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDynamicSkyLevelScriptActor.NetworkControllerOnWeatherChangeEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLDynamicSkyLevelScriptActor::NetworkControllerOnWeatherChangeEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDynamicSkyLevelScriptActor", "NetworkControllerOnWeatherChangeEvent");

	Params::AWTLDynamicSkyLevelScriptActor_NetworkControllerOnWeatherChangeEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLDynamicSkyLevelScriptActor.GetUndergroundMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLDynamicSkyLevelScriptActor::GetUndergroundMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDynamicSkyLevelScriptActor", "GetUndergroundMode");

	Params::AWTLDynamicSkyLevelScriptActor_GetUndergroundMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLDynamicSkyLevelScriptActor.ChangeWeather
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLWeatherType         WeatherType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLDynamicSkyLevelScriptActor::ChangeWeather(enum class EWTLWeatherType WeatherType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLDynamicSkyLevelScriptActor", "ChangeWeather");

	Params::AWTLDynamicSkyLevelScriptActor_ChangeWeather_Params Parms{};

	Parms.WeatherType = WeatherType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLEconomicsSystem
// (None)

class UClass* UWTLEconomicsSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEconomicsSystem");

	return Clss;
}


// WTLEconomicsSystem WTL.Default__WTLEconomicsSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLEconomicsSystem* UWTLEconomicsSystem::GetDefaultObj()
{
	static class UWTLEconomicsSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLEconomicsSystem*>(UWTLEconomicsSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLEffectVolume
// (Actor)

class UClass* AWTLEffectVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEffectVolume");

	return Clss;
}


// WTLEffectVolume WTL.Default__WTLEffectVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEffectVolume* AWTLEffectVolume::GetDefaultObj()
{
	static class AWTLEffectVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEffectVolume*>(AWTLEffectVolume::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLElectricCoil
// (Actor)

class UClass* AWTLElectricCoil::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLElectricCoil");

	return Clss;
}


// WTLElectricCoil WTL.Default__WTLElectricCoil
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLElectricCoil* AWTLElectricCoil::GetDefaultObj()
{
	static class AWTLElectricCoil* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLElectricCoil*>(AWTLElectricCoil::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLElectricCoil.OnRep_TargetActor
// (Final, Native, Private)
// Parameters:

void AWTLElectricCoil::OnRep_TargetActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "OnRep_TargetActor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLElectricCoil.OnRep_StuffIsCharged
// (Final, Native, Private)
// Parameters:

void AWTLElectricCoil::OnRep_StuffIsCharged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "OnRep_StuffIsCharged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLElectricCoil.OnRep_Energy
// (Final, Native, Private)
// Parameters:

void AWTLElectricCoil::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "OnRep_Energy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLElectricCoil.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLElectricCoil::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "OnEndOverlap");

	Params::AWTLElectricCoil_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLElectricCoil.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLElectricCoil::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "OnBeginOverlap");

	Params::AWTLElectricCoil_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLElectricCoil.BPSetEnergyValueOnMaterial
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLElectricCoil::BPSetEnergyValueOnMaterial(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "BPSetEnergyValueOnMaterial");

	Params::AWTLElectricCoil_BPSetEnergyValueOnMaterial_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLElectricCoil.BPSetCondition
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLElectricCoil::BPSetCondition(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "BPSetCondition");

	Params::AWTLElectricCoil_BPSetCondition_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLElectricCoil.BPSetBeam
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                     Start                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     EndPoint                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLElectricCoil::BPSetBeam(const struct FVector& Start, const struct FVector& EndPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "BPSetBeam");

	Params::AWTLElectricCoil_BPSetBeam_Params Parms{};

	Parms.Start = Start;
	Parms.EndPoint = EndPoint;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLElectricCoil.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLElectricCoil::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "AIInterface_IsInSafeZone");

	Params::AWTLElectricCoil_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectricCoil.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLElectricCoil::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "AIInterface_IsCanBeAttacked");

	Params::AWTLElectricCoil_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectricCoil.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLElectricCoil::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "AIInterface_IsAlive");

	Params::AWTLElectricCoil_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectricCoil.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLElectricCoil::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "AIInterface_GetVelocity");

	Params::AWTLElectricCoil_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectricCoil.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLElectricCoil::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "AIInterface_GetGroupID");

	Params::AWTLElectricCoil_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectricCoil.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLElectricCoil::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectricCoil", "AIInterface_GetFaction");

	Params::AWTLElectricCoil_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLElectronicBait
// (Actor)

class UClass* AWTLElectronicBait::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLElectronicBait");

	return Clss;
}


// WTLElectronicBait WTL.Default__WTLElectronicBait
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLElectronicBait* AWTLElectronicBait::GetDefaultObj()
{
	static class AWTLElectronicBait* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLElectronicBait*>(AWTLElectronicBait::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLElectronicBait.OnRep_Energy
// (Final, Native, Private)
// Parameters:

void AWTLElectronicBait::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "OnRep_Energy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLElectronicBait.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLElectronicBait::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "OnEndOverlap");

	Params::AWTLElectronicBait_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLElectronicBait.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLElectronicBait::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "OnBeginOverlap");

	Params::AWTLElectronicBait_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLElectronicBait.BPGetEnergy
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLElectronicBait::BPGetEnergy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "BPGetEnergy");

	Params::AWTLElectronicBait_BPGetEnergy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectronicBait.BPGetCondition
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLElectronicBait::BPGetCondition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "BPGetCondition");

	Params::AWTLElectronicBait_BPGetCondition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectronicBait.BPCharged
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLElectronicBait::BPCharged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "BPCharged");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLElectronicBait.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLElectronicBait::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "AIInterface_IsInSafeZone");

	Params::AWTLElectronicBait_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectronicBait.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLElectronicBait::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "AIInterface_IsCanBeAttacked");

	Params::AWTLElectronicBait_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectronicBait.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLElectronicBait::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "AIInterface_IsAlive");

	Params::AWTLElectronicBait_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectronicBait.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLElectronicBait::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "AIInterface_GetVelocity");

	Params::AWTLElectronicBait_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectronicBait.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLElectronicBait::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "AIInterface_GetGroupID");

	Params::AWTLElectronicBait_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLElectronicBait.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLElectronicBait::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLElectronicBait", "AIInterface_GetFaction");

	Params::AWTLElectronicBait_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLGrenadeLauncherProjectile
// (Actor)

class UClass* AWTLGrenadeLauncherProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGrenadeLauncherProjectile");

	return Clss;
}


// WTLGrenadeLauncherProjectile WTL.Default__WTLGrenadeLauncherProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLGrenadeLauncherProjectile* AWTLGrenadeLauncherProjectile::GetDefaultObj()
{
	static class AWTLGrenadeLauncherProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLGrenadeLauncherProjectile*>(AWTLGrenadeLauncherProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLGrenadeLauncherProjectile.SetExplosionFX
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AActor>          NewExplosion                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::SetExplosionFX(TSubclassOf<class AActor> NewExplosion)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "SetExplosionFX");

	Params::AWTLGrenadeLauncherProjectile_SetExplosionFX_Params Parms{};

	Parms.NewExplosion = NewExplosion;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGrenadeLauncherProjectile.Server_RequestStatisticsForHit
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AActor*                      HitActor                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::Server_RequestStatisticsForHit(class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "Server_RequestStatisticsForHit");

	Params::AWTLGrenadeLauncherProjectile_Server_RequestStatisticsForHit_Params Parms{};

	Parms.HitActor = HitActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGrenadeLauncherProjectile.Server_RequestExplode
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize         ExplosionPosition                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::Server_RequestExplode(const struct FVector_NetQuantize& ExplosionPosition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "Server_RequestExplode");

	Params::AWTLGrenadeLauncherProjectile_Server_RequestExplode_Params Parms{};

	Parms.ExplosionPosition = ExplosionPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGrenadeLauncherProjectile.OnHit
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "OnHit");

	Params::AWTLGrenadeLauncherProjectile_OnHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGrenadeLauncherProjectile.NetMulticast_OnExplosion
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// struct FVector_NetQuantize         ExplosionPosition                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::NetMulticast_OnExplosion(const struct FVector_NetQuantize& ExplosionPosition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "NetMulticast_OnExplosion");

	Params::AWTLGrenadeLauncherProjectile_NetMulticast_OnExplosion_Params Parms{};

	Parms.ExplosionPosition = ExplosionPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGrenadeLauncherProjectile.GetWeaponDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              MinDamage                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxDamage                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::GetWeaponDamage(float* MinDamage, float* MaxDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "GetWeaponDamage");

	Params::AWTLGrenadeLauncherProjectile_GetWeaponDamage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (MinDamage != nullptr)
		*MinDamage = Parms.MinDamage;

	if (MaxDamage != nullptr)
		*MaxDamage = Parms.MaxDamage;

}


// Function WTL.WTLGrenadeLauncherProjectile.GetProjectileDamage
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              MinDamage                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxDamage                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::GetProjectileDamage(float* MinDamage, float* MaxDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "GetProjectileDamage");

	Params::AWTLGrenadeLauncherProjectile_GetProjectileDamage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (MinDamage != nullptr)
		*MinDamage = Parms.MinDamage;

	if (MaxDamage != nullptr)
		*MaxDamage = Parms.MaxDamage;

}


// Function WTL.WTLGrenadeLauncherProjectile.Explode
// (Final, Native, Private)
// Parameters:

void AWTLGrenadeLauncherProjectile::Explode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "Explode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGrenadeLauncherProjectile.BPOnPawnHit
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                       Pawn                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        NearestBone                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::BPOnPawnHit(class APawn* Pawn, class FName NearestBone)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "BPOnPawnHit");

	Params::AWTLGrenadeLauncherProjectile_BPOnPawnHit_Params Parms{};

	Parms.Pawn = Pawn;
	Parms.NearestBone = NearestBone;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLGrenadeLauncherProjectile.BPOnExplode
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLGrenadeLauncherProjectile::BPOnExplode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "BPOnExplode");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLGrenadeLauncherProjectile.BPOnApplyShrapnelDamageToMonster
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ActualDamage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::BPOnApplyShrapnelDamageToMonster(class AWTLMonsterPawn* Monster, float ActualDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "BPOnApplyShrapnelDamageToMonster");

	Params::AWTLGrenadeLauncherProjectile_BPOnApplyShrapnelDamageToMonster_Params Parms{};

	Parms.Monster = Monster;
	Parms.ActualDamage = ActualDamage;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLGrenadeLauncherProjectile.BPOnApplyShrapnelDamageToEnemyNPC
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLEnemyNPC*                EnemyNPC                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ActualDamage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::BPOnApplyShrapnelDamageToEnemyNPC(class AWTLEnemyNPC* EnemyNPC, float ActualDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "BPOnApplyShrapnelDamageToEnemyNPC");

	Params::AWTLGrenadeLauncherProjectile_BPOnApplyShrapnelDamageToEnemyNPC_Params Parms{};

	Parms.EnemyNPC = EnemyNPC;
	Parms.ActualDamage = ActualDamage;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLGrenadeLauncherProjectile.BPOnApplyShrapnelDamageToCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ActualDamage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::BPOnApplyShrapnelDamageToCharacter(class AWTLCharacter* Character, float ActualDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "BPOnApplyShrapnelDamageToCharacter");

	Params::AWTLGrenadeLauncherProjectile_BPOnApplyShrapnelDamageToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ActualDamage = ActualDamage;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLGrenadeLauncherProjectile.ApplyShrapnel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              ShrapnelCountMin                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ShrapnelCountMax                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ShrapnelDamageMin                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ShrapnelDamageMax                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ShrapnelRadius                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ShrapnelRagdollImpulseMultiplier                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ShrapnelUseReliableHitEvent                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLGrenadeLauncherProjectile::ApplyShrapnel(int32 ShrapnelCountMin, int32 ShrapnelCountMax, float ShrapnelDamageMin, float ShrapnelDamageMax, float ShrapnelRadius, float ShrapnelRagdollImpulseMultiplier, bool ShrapnelUseReliableHitEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "ApplyShrapnel");

	Params::AWTLGrenadeLauncherProjectile_ApplyShrapnel_Params Parms{};

	Parms.ShrapnelCountMin = ShrapnelCountMin;
	Parms.ShrapnelCountMax = ShrapnelCountMax;
	Parms.ShrapnelDamageMin = ShrapnelDamageMin;
	Parms.ShrapnelDamageMax = ShrapnelDamageMax;
	Parms.ShrapnelRadius = ShrapnelRadius;
	Parms.ShrapnelRagdollImpulseMultiplier = ShrapnelRagdollImpulseMultiplier;
	Parms.ShrapnelUseReliableHitEvent = ShrapnelUseReliableHitEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGrenadeLauncherProjectile.ApplyExplosionDamageInZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UStaticMeshComponent*        DamageZone                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinDamage                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxDamage                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeLauncherProjectile::ApplyExplosionDamageInZone(class UStaticMeshComponent* DamageZone, float MinDamage, float MaxDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "ApplyExplosionDamageInZone");

	Params::AWTLGrenadeLauncherProjectile_ApplyExplosionDamageInZone_Params Parms{};

	Parms.DamageZone = DamageZone;
	Parms.MinDamage = MinDamage;
	Parms.MaxDamage = MaxDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGrenadeLauncherProjectile.ApplyExplosionDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              ExplosionRadius                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinDamage                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxDamage                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLGrenadeLauncherProjectile::ApplyExplosionDamage(float ExplosionRadius, float MinDamage, float MaxDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeLauncherProjectile", "ApplyExplosionDamage");

	Params::AWTLGrenadeLauncherProjectile_ApplyExplosionDamage_Params Parms{};

	Parms.ExplosionRadius = ExplosionRadius;
	Parms.MinDamage = MinDamage;
	Parms.MaxDamage = MaxDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLEMPGrenadeLauncherProjectile
// (Actor)

class UClass* AWTLEMPGrenadeLauncherProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEMPGrenadeLauncherProjectile");

	return Clss;
}


// WTLEMPGrenadeLauncherProjectile WTL.Default__WTLEMPGrenadeLauncherProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEMPGrenadeLauncherProjectile* AWTLEMPGrenadeLauncherProjectile::GetDefaultObj()
{
	static class AWTLEMPGrenadeLauncherProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEMPGrenadeLauncherProjectile*>(AWTLEMPGrenadeLauncherProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLEMPGrenadeLauncherProjectile.OnRep_Activate
// (Final, Native, Protected)
// Parameters:

void AWTLEMPGrenadeLauncherProjectile::OnRep_Activate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEMPGrenadeLauncherProjectile", "OnRep_Activate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEMPGrenadeLauncherProjectile.BPActivate
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLEMPGrenadeLauncherProjectile::BPActivate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEMPGrenadeLauncherProjectile", "BPActivate");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLEMPWeaponProjectile
// (Actor)

class UClass* AWTLEMPWeaponProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEMPWeaponProjectile");

	return Clss;
}


// WTLEMPWeaponProjectile WTL.Default__WTLEMPWeaponProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEMPWeaponProjectile* AWTLEMPWeaponProjectile::GetDefaultObj()
{
	static class AWTLEMPWeaponProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEMPWeaponProjectile*>(AWTLEMPWeaponProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLEMPWeaponProjectile.OnRep_Activate
// (Final, Native, Protected)
// Parameters:

void AWTLEMPWeaponProjectile::OnRep_Activate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEMPWeaponProjectile", "OnRep_Activate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLEnemyAIController
// (Actor)

class UClass* AWTLEnemyAIController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEnemyAIController");

	return Clss;
}


// WTLEnemyAIController WTL.Default__WTLEnemyAIController
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEnemyAIController* AWTLEnemyAIController::GetDefaultObj()
{
	static class AWTLEnemyAIController* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEnemyAIController*>(AWTLEnemyAIController::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLEnemyAIController.RestartBehaviour
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLEnemyAIController::RestartBehaviour()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "RestartBehaviour");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyAIController.OnTouchSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyAIController::OnTouchSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnTouchSenseUpdated");

	Params::AWTLEnemyAIController_OnTouchSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEnemyAIController.OnTeamSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyAIController::OnTeamSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnTeamSenseUpdated");

	Params::AWTLEnemyAIController_OnTeamSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEnemyAIController.OnSightSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyAIController::OnSightSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnSightSenseUpdated");

	Params::AWTLEnemyAIController_OnSightSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEnemyAIController.OnPredictionUpdate
// (Final, Native, Private)
// Parameters:

void AWTLEnemyAIController::OnPredictionUpdate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnPredictionUpdate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyAIController.OnPredictionSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyAIController::OnPredictionSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnPredictionSenseUpdated");

	Params::AWTLEnemyAIController_OnPredictionSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEnemyAIController.OnPerceptionUpdated
// (Final, Native, Public, HasOutParams)
// Parameters:
// TArray<class AActor*>              UpdatedActors                                                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLEnemyAIController::OnPerceptionUpdated(TArray<class AActor*>& UpdatedActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnPerceptionUpdated");

	Params::AWTLEnemyAIController_OnPerceptionUpdated_Params Parms{};

	Parms.UpdatedActors = UpdatedActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyAIController.OnPawnKilled
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                       VictimPawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyAIController::OnPawnKilled(class APawn* VictimPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnPawnKilled");

	Params::AWTLEnemyAIController_OnPawnKilled_Params Parms{};

	Parms.VictimPawn = VictimPawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEnemyAIController.OnHearingSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyAIController::OnHearingSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnHearingSenseUpdated");

	Params::AWTLEnemyAIController_OnHearingSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEnemyAIController.OnDealedDamageToPawn
// (Event, Public, BlueprintEvent)
// Parameters:
// class APawn*                       VictimPawn                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyAIController::OnDealedDamageToPawn(class APawn* VictimPawn, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnDealedDamageToPawn");

	Params::AWTLEnemyAIController_OnDealedDamageToPawn_Params Parms{};

	Parms.VictimPawn = VictimPawn;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEnemyAIController.OnDamageSenseUpdated
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                      StimulusInstigator                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     StimulusLocation                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyAIController::OnDamageSenseUpdated(class AActor* StimulusInstigator, const struct FVector& StimulusLocation, bool State, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnDamageSenseUpdated");

	Params::AWTLEnemyAIController_OnDamageSenseUpdated_Params Parms{};

	Parms.StimulusInstigator = StimulusInstigator;
	Parms.StimulusLocation = StimulusLocation;
	Parms.State = State;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEnemyAIController.OnActorPerceptionUpdated
// (Final, Native, Public)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAIStimulus                 Stimulus                                                         (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLEnemyAIController::OnActorPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "OnActorPerceptionUpdated");

	Params::AWTLEnemyAIController_OnActorPerceptionUpdated_Params Parms{};

	Parms.Actor = Actor;
	Parms.Stimulus = Stimulus;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyAIController.K2_GetGenericTeamID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FGenericTeamId              ReturnValue                                                      (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FGenericTeamId AWTLEnemyAIController::K2_GetGenericTeamID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "K2_GetGenericTeamID");

	Params::AWTLEnemyAIController_K2_GetGenericTeamID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyAIController.IsEnemy
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                       InPawn                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyAIController::IsEnemy(class APawn* InPawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "IsEnemy");

	Params::AWTLEnemyAIController_IsEnemy_Params Parms{};

	Parms.InPawn = InPawn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyAIController.IsActorInSight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyAIController::IsActorInSight(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "IsActorInSight");

	Params::AWTLEnemyAIController_IsActorInSight_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyAIController.GetRelevantInterestPointForTarget
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     InterestPoint                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      SenseClass                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyAIController::GetRelevantInterestPointForTarget(class AActor* Actor, struct FVector* InterestPoint, class UClass** SenseClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "GetRelevantInterestPointForTarget");

	Params::AWTLEnemyAIController_GetRelevantInterestPointForTarget_Params Parms{};

	Parms.Actor = Actor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (InterestPoint != nullptr)
		*InterestPoint = std::move(Parms.InterestPoint);

	if (SenseClass != nullptr)
		*SenseClass = Parms.SenseClass;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyAIController.GetPredictionEvetns
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FWTLSenseEventInfo>  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FWTLSenseEventInfo> AWTLEnemyAIController::GetPredictionEvetns()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "GetPredictionEvetns");

	Params::AWTLEnemyAIController_GetPredictionEvetns_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyAIController.GetNoiseEvents
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FWTLTaggedSenseEventInfo>ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FWTLTaggedSenseEventInfo> AWTLEnemyAIController::GetNoiseEvents()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "GetNoiseEvents");

	Params::AWTLEnemyAIController_GetNoiseEvents_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyAIController.GetNearestTargetInSight
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      Target                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bGetEnemy                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyAIController::GetNearestTargetInSight(class AActor** Target, bool bGetEnemy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "GetNearestTargetInSight");

	Params::AWTLEnemyAIController_GetNearestTargetInSight_Params Parms{};

	Parms.bGetEnemy = bGetEnemy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Target != nullptr)
		*Target = Parms.Target;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyAIController.GetLatestInterestPoint
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     InterestPoint                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                      SenseClass                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyAIController::GetLatestInterestPoint(struct FVector* InterestPoint, class UClass** SenseClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "GetLatestInterestPoint");

	Params::AWTLEnemyAIController_GetLatestInterestPoint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (InterestPoint != nullptr)
		*InterestPoint = std::move(Parms.InterestPoint);

	if (SenseClass != nullptr)
		*SenseClass = Parms.SenseClass;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyAIController.GetLatestFireNoiseLocation
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     FireLocation                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyAIController::GetLatestFireNoiseLocation(struct FVector* FireLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "GetLatestFireNoiseLocation");

	Params::AWTLEnemyAIController_GetLatestFireNoiseLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (FireLocation != nullptr)
		*FireLocation = std::move(Parms.FireLocation);

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyAIController.GetDamageEvents
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FWTLSenseEventInfo>  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<struct FWTLSenseEventInfo> AWTLEnemyAIController::GetDamageEvents()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "GetDamageEvents");

	Params::AWTLEnemyAIController_GetDamageEvents_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyAIController.GetActorsInSight
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AActor*>              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> AWTLEnemyAIController::GetActorsInSight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyAIController", "GetActorsInSight");

	Params::AWTLEnemyAIController_GetActorsInSight_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLHumanoidAnimInstance
// (None)

class UClass* UWTLHumanoidAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHumanoidAnimInstance");

	return Clss;
}


// WTLHumanoidAnimInstance WTL.Default__WTLHumanoidAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHumanoidAnimInstance* UWTLHumanoidAnimInstance::GetDefaultObj()
{
	static class UWTLHumanoidAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHumanoidAnimInstance*>(UWTLHumanoidAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLEnemyHumanoidAnimInstance
// (None)

class UClass* UWTLEnemyHumanoidAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEnemyHumanoidAnimInstance");

	return Clss;
}


// WTLEnemyHumanoidAnimInstance WTL.Default__WTLEnemyHumanoidAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLEnemyHumanoidAnimInstance* UWTLEnemyHumanoidAnimInstance::GetDefaultObj()
{
	static class UWTLEnemyHumanoidAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLEnemyHumanoidAnimInstance*>(UWTLEnemyHumanoidAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLEnemyNPC
// (Actor, Pawn)

class UClass* AWTLEnemyNPC::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEnemyNPC");

	return Clss;
}


// WTLEnemyNPC WTL.Default__WTLEnemyNPC
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEnemyNPC* AWTLEnemyNPC::GetDefaultObj()
{
	static class AWTLEnemyNPC* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEnemyNPC*>(AWTLEnemyNPC::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLEnemyNPC.UnequipWeapon
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               bFullReload                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEnemyNPC::UnequipWeapon(bool bFullReload)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "UnequipWeapon");

	Params::AWTLEnemyNPC_UnequipWeapon_Params Parms{};

	Parms.bFullReload = bFullReload;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.StopUse
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLEnemyNPC::StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.StartUse
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLEnemyNPC::StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.SetCanUseFlashlight
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyNPC::SetCanUseFlashlight(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "SetCanUseFlashlight");

	Params::AWTLEnemyNPC_SetCanUseFlashlight_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.Reload
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLEnemyNPC::Reload()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "Reload");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.PlayVoiceEvent
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLEnemyNPCExclamationTypeVoiceEventType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Chance                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInterruptCurrent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyNPC::PlayVoiceEvent(enum class EWTLEnemyNPCExclamationType VoiceEventType, float Chance, bool bInterruptCurrent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "PlayVoiceEvent");

	Params::AWTLEnemyNPC_PlayVoiceEvent_Params Parms{};

	Parms.VoiceEventType = VoiceEventType;
	Parms.Chance = Chance;
	Parms.bInterruptCurrent = bInterruptCurrent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.OnRep_UsableItemInHands
// (Final, Native, Private)
// Parameters:

void AWTLEnemyNPC::OnRep_UsableItemInHands()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "OnRep_UsableItemInHands");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.OnRep_LastTakeHitInfo
// (Final, Native, Private)
// Parameters:

void AWTLEnemyNPC::OnRep_LastTakeHitInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "OnRep_LastTakeHitInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.OnRep_IsWeaponEmpty
// (Final, Native, Private)
// Parameters:

void AWTLEnemyNPC::OnRep_IsWeaponEmpty()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "OnRep_IsWeaponEmpty");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.OnRep_CurrentState
// (Final, Native, Private)
// Parameters:

void AWTLEnemyNPC::OnRep_CurrentState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "OnRep_CurrentState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.OnNPCKillOnClient
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLEnemyNPC::OnNPCKillOnClient()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "OnNPCKillOnClient");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLEnemyNPC.NetMulticast_PlayVoiceEvent
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// enum class EWTLEnemyNPCExclamationTypeExclamationType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInterruptCurrent                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyNPC::NetMulticast_PlayVoiceEvent(enum class EWTLEnemyNPCExclamationType ExclamationType, bool bInterruptCurrent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "NetMulticast_PlayVoiceEvent");

	Params::AWTLEnemyNPC_NetMulticast_PlayVoiceEvent_Params Parms{};

	Parms.ExclamationType = ExclamationType;
	Parms.bInterruptCurrent = bInterruptCurrent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.IsDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyNPC::IsDead()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "IsDead");

	Params::AWTLEnemyNPC_IsDead_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.IsActionInProgress
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyNPC::IsActionInProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "IsActionInProgress");

	Params::AWTLEnemyNPC_IsActionInProgress_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetWeaponRecoilSafeTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEnemyNPC::GetWeaponRecoilSafeTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetWeaponRecoilSafeTime");

	Params::AWTLEnemyNPC_GetWeaponRecoilSafeTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetWeaponPauseBetweenUse
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEnemyNPC::GetWeaponPauseBetweenUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetWeaponPauseBetweenUse");

	Params::AWTLEnemyNPC_GetWeaponPauseBetweenUse_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetWeaponEffectiveDistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEnemyNPC::GetWeaponEffectiveDistance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetWeaponEffectiveDistance");

	Params::AWTLEnemyNPC_GetWeaponEffectiveDistance_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLAITeam              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLAITeam AWTLEnemyNPC::GetTeam()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetTeam");

	Params::AWTLEnemyNPC_GetTeam_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEnemyNPC::GetMaxHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetMaxHealth");

	Params::AWTLEnemyNPC_GetMaxHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetIsWeaponWithAutomaticFireMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyNPC::GetIsWeaponWithAutomaticFireMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetIsWeaponWithAutomaticFireMode");

	Params::AWTLEnemyNPC_GetIsWeaponWithAutomaticFireMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetIsWeaponFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyNPC::GetIsWeaponFull()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetIsWeaponFull");

	Params::AWTLEnemyNPC_GetIsWeaponFull_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetIsWeaponEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyNPC::GetIsWeaponEmpty()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetIsWeaponEmpty");

	Params::AWTLEnemyNPC_GetIsWeaponEmpty_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetIsItemEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyNPC::GetIsItemEquipped()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetIsItemEquipped");

	Params::AWTLEnemyNPC_GetIsItemEquipped_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEnemyNPC::GetHealth()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetHealth");

	Params::AWTLEnemyNPC_GetHealth_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.GetHandsState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLHandsState          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLHandsState AWTLEnemyNPC::GetHandsState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "GetHandsState");

	Params::AWTLEnemyNPC_GetHandsState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.EquipWeapon
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEnemyNPC::EquipWeapon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "EquipWeapon");

	Params::AWTLEnemyNPC_EquipWeapon_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.EnemyHasEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEnemyNPC::EnemyHasEffect(enum class EWTLCharacterEffectType EffectType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "EnemyHasEffect");

	Params::AWTLEnemyNPC_EnemyHasEffect_Params Parms{};

	Parms.EffectType = EffectType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEnemyNPC.DestroyNPC
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLEnemyNPC::DestroyNPC()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "DestroyNPC");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.ApplyMedicine
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              MedicineID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyNPC::ApplyMedicine(int32 MedicineID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "ApplyMedicine");

	Params::AWTLEnemyNPC_ApplyMedicine_Params Parms{};

	Parms.MedicineID = MedicineID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEnemyNPC.AddCharacterEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyNPC::AddCharacterEffect(enum class EWTLCharacterEffectType EffectType, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPC", "AddCharacterEffect");

	Params::AWTLEnemyNPC_AddCharacterEffect_Params Parms{};

	Parms.EffectType = EffectType;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLEnemyNPCDrop
// (Actor)

class UClass* AWTLEnemyNPCDrop::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEnemyNPCDrop");

	return Clss;
}


// WTLEnemyNPCDrop WTL.Default__WTLEnemyNPCDrop
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEnemyNPCDrop* AWTLEnemyNPCDrop::GetDefaultObj()
{
	static class AWTLEnemyNPCDrop* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEnemyNPCDrop*>(AWTLEnemyNPCDrop::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLEnemyNPCSpawner
// (Actor)

class UClass* AWTLEnemyNPCSpawner::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEnemyNPCSpawner");

	return Clss;
}


// WTLEnemyNPCSpawner WTL.Default__WTLEnemyNPCSpawner
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEnemyNPCSpawner* AWTLEnemyNPCSpawner::GetDefaultObj()
{
	static class AWTLEnemyNPCSpawner* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEnemyNPCSpawner*>(AWTLEnemyNPCSpawner::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLEnemyNPCSpawner.OnEnemyNPCDied
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLEnemyNPC*                EnemyNPC                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       Killer                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyNPCSpawner::OnEnemyNPCDied(class AWTLEnemyNPC* EnemyNPC, class APawn* Killer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPCSpawner", "OnEnemyNPCDied");

	Params::AWTLEnemyNPCSpawner_OnEnemyNPCDied_Params Parms{};

	Parms.EnemyNPC = EnemyNPC;
	Parms.Killer = Killer;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEnemyNPCSpawner.OnBeforeSpawnWave
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLEnemyNPCSpawner::OnBeforeSpawnWave()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPCSpawner", "OnBeforeSpawnWave");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLEnemyNPCSpawner.OnAllEnemyNPCDied
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLEnemyNPCSpawner::OnAllEnemyNPCDied()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPCSpawner", "OnAllEnemyNPCDied");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLEnemyNPCSpawner.OnAfterSpawnWave
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLEnemyNPCSpawner::OnAfterSpawnWave()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPCSpawner", "OnAfterSpawnWave");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLEnemyNPCSpawner.K2_OnEnemyNPCSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLEnemyNPC*                EnemyNPC                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEnemyNPCSpawner::K2_OnEnemyNPCSpawned(class AWTLEnemyNPC* EnemyNPC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnemyNPCSpawner", "K2_OnEnemyNPCSpawned");

	Params::AWTLEnemyNPCSpawner_K2_OnEnemyNPCSpawned_Params Parms{};

	Parms.EnemyNPC = EnemyNPC;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLEnemyNPCSpawnPoint
// (Actor)

class UClass* AWTLEnemyNPCSpawnPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEnemyNPCSpawnPoint");

	return Clss;
}


// WTLEnemyNPCSpawnPoint WTL.Default__WTLEnemyNPCSpawnPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEnemyNPCSpawnPoint* AWTLEnemyNPCSpawnPoint::GetDefaultObj()
{
	static class AWTLEnemyNPCSpawnPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEnemyNPCSpawnPoint*>(AWTLEnemyNPCSpawnPoint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLThrowingDevice
// (Actor)

class UClass* AWTLThrowingDevice::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLThrowingDevice");

	return Clss;
}


// WTLThrowingDevice WTL.Default__WTLThrowingDevice
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLThrowingDevice* AWTLThrowingDevice::GetDefaultObj()
{
	static class AWTLThrowingDevice* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLThrowingDevice*>(AWTLThrowingDevice::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLThrowingDevice.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLThrowingDevice::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLThrowingDevice::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.Server_ResetThrowingDevice
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLThrowingDevice::Server_ResetThrowingDevice()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "Server_ResetThrowingDevice");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.OnRep_QuickThrow
// (Final, Native, Private)
// Parameters:

void AWTLThrowingDevice::OnRep_QuickThrow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "OnRep_QuickThrow");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.NetMulticast_ResetDevice
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// class AWTLCharacter*               DeviceOwner                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLThrowingDevice::NetMulticast_ResetDevice(class AWTLCharacter* DeviceOwner)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "NetMulticast_ResetDevice");

	Params::AWTLThrowingDevice_NetMulticast_ResetDevice_Params Parms{};

	Parms.DeviceOwner = DeviceOwner;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.NetMulticast_QuickThrow
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLThrowingDevice::NetMulticast_QuickThrow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "NetMulticast_QuickThrow");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.NetMulticast_OnStopUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLThrowingDevice::NetMulticast_OnStopUse(enum class EWTLUsableItemUseType UseType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "NetMulticast_OnStopUse");

	Params::AWTLThrowingDevice_NetMulticast_OnStopUse_Params Parms{};

	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.NetMulticast_OnStartUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLThrowingDevice::NetMulticast_OnStartUse(enum class EWTLUsableItemUseType UseType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "NetMulticast_OnStartUse");

	Params::AWTLThrowingDevice_NetMulticast_OnStartUse_Params Parms{};

	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.GetReadyToThrow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLThrowingDevice::GetReadyToThrow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "GetReadyToThrow");

	Params::AWTLThrowingDevice_GetReadyToThrow_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLThrowingDevice.Client_ShowCountdownWidget
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint16                             WeaponID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TimeValue                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ThrowSpeed                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLThrowingDevice::Client_ShowCountdownWidget(uint16 WeaponID, float TimeValue, enum class EWTLUsableItemUseType UseType, float ThrowSpeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "Client_ShowCountdownWidget");

	Params::AWTLThrowingDevice_Client_ShowCountdownWidget_Params Parms{};

	Parms.WeaponID = WeaponID;
	Parms.TimeValue = TimeValue;
	Parms.UseType = UseType;
	Parms.ThrowSpeed = ThrowSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.Client_ResetDevice
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLThrowingDevice::Client_ResetDevice()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "Client_ResetDevice");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.Client_HideCountdownWidget
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLThrowingDevice::Client_HideCountdownWidget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "Client_HideCountdownWidget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLThrowingDevice.BPDeactivate
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLThrowingDevice::BPDeactivate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "BPDeactivate");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLThrowingDevice.BPActivationProcess
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLThrowingDevice::BPActivationProcess()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLThrowingDevice", "BPActivationProcess");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLEnergyShield
// (Actor)

class UClass* AWTLEnergyShield::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEnergyShield");

	return Clss;
}


// WTLEnergyShield WTL.Default__WTLEnergyShield
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEnergyShield* AWTLEnergyShield::GetDefaultObj()
{
	static class AWTLEnergyShield* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEnergyShield*>(AWTLEnergyShield::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLEnergyShieldProjectile
// (Actor)

class UClass* AWTLEnergyShieldProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEnergyShieldProjectile");

	return Clss;
}


// WTLEnergyShieldProjectile WTL.Default__WTLEnergyShieldProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEnergyShieldProjectile* AWTLEnergyShieldProjectile::GetDefaultObj()
{
	static class AWTLEnergyShieldProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEnergyShieldProjectile*>(AWTLEnergyShieldProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLEnergyShieldProjectile.OnRep_DestroyInWater
// (Final, Native, Private)
// Parameters:

void AWTLEnergyShieldProjectile::OnRep_DestroyInWater()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEnergyShieldProjectile", "OnRep_DestroyInWater");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLEventPoint
// (Actor)

class UClass* AWTLEventPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLEventPoint");

	return Clss;
}


// WTLEventPoint WTL.Default__WTLEventPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLEventPoint* AWTLEventPoint::GetDefaultObj()
{
	static class AWTLEventPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLEventPoint*>(AWTLEventPoint::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLEventPoint.TryStart
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// enum class EWTLBPActionResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEventPoint::TryStart(enum class EWTLBPActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "TryStart");

	Params::AWTLEventPoint_TryStart_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLEventPoint.RegisterMonsterTakenDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEventPoint::RegisterMonsterTakenDamage(class AWTLMonsterPawn* Monster)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "RegisterMonsterTakenDamage");

	Params::AWTLEventPoint_RegisterMonsterTakenDamage_Params Parms{};

	Parms.Monster = Monster;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEventPoint.OnRep_InProgress
// (Final, Native, Protected)
// Parameters:

void AWTLEventPoint::OnRep_InProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "OnRep_InProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEventPoint.OnRep_EventTasks
// (Final, Native, Protected)
// Parameters:

void AWTLEventPoint::OnRep_EventTasks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "OnRep_EventTasks");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEventPoint.K2_OnStart
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLEventPoint::K2_OnStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "K2_OnStart");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLEventPoint.K2_OnFinish
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Successful                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEventPoint::K2_OnFinish(bool Successful)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "K2_OnFinish");

	Params::AWTLEventPoint_K2_OnFinish_Params Parms{};

	Parms.Successful = Successful;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEventPoint.K2_OnEventTaskCompleted
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              TaskIndex                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEventPoint::K2_OnEventTaskCompleted(int32 TaskIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "K2_OnEventTaskCompleted");

	Params::AWTLEventPoint_K2_OnEventTaskCompleted_Params Parms{};

	Parms.TaskIndex = TaskIndex;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEventPoint.K2_OnCharacterLeave
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEventPoint::K2_OnCharacterLeave(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "K2_OnCharacterLeave");

	Params::AWTLEventPoint_K2_OnCharacterLeave_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEventPoint.K2_OnCharacterEnter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEventPoint::K2_OnCharacterEnter(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "K2_OnCharacterEnter");

	Params::AWTLEventPoint_K2_OnCharacterEnter_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLEventPoint.K2_IsReadyToStart
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEventPoint::K2_IsReadyToStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "K2_IsReadyToStart");

	Params::AWTLEventPoint_K2_IsReadyToStart_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.IsReadyToStart
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEventPoint::IsReadyToStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "IsReadyToStart");

	Params::AWTLEventPoint_IsReadyToStart_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.IsInitialized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEventPoint::IsInitialized()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "IsInitialized");

	Params::AWTLEventPoint_IsInitialized_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.IncrementTaskValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              TaskIndex                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Delta                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEventPoint::IncrementTaskValue(int32 TaskIndex, int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "IncrementTaskValue");

	Params::AWTLEventPoint_IncrementTaskValue_Params Parms{};

	Parms.TaskIndex = TaskIndex;
	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEventPoint.GiveRewardToCharacters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class AWTLCharacter*>       Characters                                                       (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLEventPoint::GiveRewardToCharacters(const TArray<class AWTLCharacter*>& Characters)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GiveRewardToCharacters");

	Params::AWTLEventPoint_GiveRewardToCharacters_Params Parms{};

	Parms.Characters = Characters;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEventPoint.GiveRewardToCharacter
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEventPoint::GiveRewardToCharacter(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GiveRewardToCharacter");

	Params::AWTLEventPoint_GiveRewardToCharacter_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEventPoint.GetTotalProgressPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEventPoint::GetTotalProgressPercent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GetTotalProgressPercent");

	Params::AWTLEventPoint_GetTotalProgressPercent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.GetTimeLeftSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEventPoint::GetTimeLeftSeconds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GetTimeLeftSeconds");

	Params::AWTLEventPoint_GetTimeLeftSeconds_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.GetTimeLeft
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTimespan                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FTimespan AWTLEventPoint::GetTimeLeft()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GetTimeLeft");

	Params::AWTLEventPoint_GetTimeLeft_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.GetStartChance
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEventPoint::GetStartChance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GetStartChance");

	Params::AWTLEventPoint_GetStartChance_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.GetNextAvailableTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime AWTLEventPoint::GetNextAvailableTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GetNextAvailableTime");

	Params::AWTLEventPoint_GetNextAvailableTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.GetMonsterDamagePercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLEventPoint::GetMonsterDamagePercent(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GetMonsterDamagePercent");

	Params::AWTLEventPoint_GetMonsterDamagePercent_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.GetID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLEventPoint::GetID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GetID");

	Params::AWTLEventPoint_GetID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.GetEventEndTime
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FDateTime                   ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime AWTLEventPoint::GetEventEndTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GetEventEndTime");

	Params::AWTLEventPoint_GetEventEndTime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.GetCharactersInRange
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AWTLCharacter*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLCharacter*> AWTLEventPoint::GetCharactersInRange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GetCharactersInRange");

	Params::AWTLEventPoint_GetCharactersInRange_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.GetCharactersCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLEventPoint::GetCharactersCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GetCharactersCount");

	Params::AWTLEventPoint_GetCharactersCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.GenerateNewAvailableTime
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLEventPoint::GenerateNewAvailableTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "GenerateNewAvailableTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEventPoint.ForceStart
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLEventPoint::ForceStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "ForceStart");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEventPoint.ForceFinish
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Succeessful                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               GiveReward                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEventPoint::ForceFinish(bool Succeessful, bool GiveReward)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "ForceFinish");

	Params::AWTLEventPoint_ForceFinish_Params Parms{};

	Parms.Succeessful = Succeessful;
	Parms.GiveReward = GiveReward;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEventPoint.ForceCharacterEntersZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CheckCanJoinEvent                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLEventPoint::ForceCharacterEntersZone(class AWTLCharacter* Character, bool CheckCanJoinEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "ForceCharacterEntersZone");

	Params::AWTLEventPoint_ForceCharacterEntersZone_Params Parms{};

	Parms.Character = Character;
	Parms.CheckCanJoinEvent = CheckCanJoinEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLEventPoint.CharacterJoinedEvent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEventPoint::CharacterJoinedEvent(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "CharacterJoinedEvent");

	Params::AWTLEventPoint_CharacterJoinedEvent_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLEventPoint.CharacterCanJoinEvent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLEventPoint::CharacterCanJoinEvent(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLEventPoint", "CharacterCanJoinEvent");

	Params::AWTLEventPoint_CharacterCanJoinEvent_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLExperienceSystem
// (None)

class UClass* UWTLExperienceSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLExperienceSystem");

	return Clss;
}


// WTLExperienceSystem WTL.Default__WTLExperienceSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLExperienceSystem* UWTLExperienceSystem::GetDefaultObj()
{
	static class UWTLExperienceSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLExperienceSystem*>(UWTLExperienceSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSocialNetworkAdapter
// (None)

class UClass* UWTLSocialNetworkAdapter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSocialNetworkAdapter");

	return Clss;
}


// WTLSocialNetworkAdapter WTL.Default__WTLSocialNetworkAdapter
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSocialNetworkAdapter* UWTLSocialNetworkAdapter::GetDefaultObj()
{
	static class UWTLSocialNetworkAdapter* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSocialNetworkAdapter*>(UWTLSocialNetworkAdapter::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLFacebookSocialNetworkAdapter
// (None)

class UClass* UWTLFacebookSocialNetworkAdapter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFacebookSocialNetworkAdapter");

	return Clss;
}


// WTLFacebookSocialNetworkAdapter WTL.Default__WTLFacebookSocialNetworkAdapter
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLFacebookSocialNetworkAdapter* UWTLFacebookSocialNetworkAdapter::GetDefaultObj()
{
	static class UWTLFacebookSocialNetworkAdapter* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLFacebookSocialNetworkAdapter*>(UWTLFacebookSocialNetworkAdapter::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLFish
// (Actor)

class UClass* AWTLFish::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFish");

	return Clss;
}


// WTLFish WTL.Default__WTLFish
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFish* AWTLFish::GetDefaultObj()
{
	static class AWTLFish* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFish*>(AWTLFish::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLFish.OnRep_FishState
// (Final, Native, Private)
// Parameters:

void AWTLFish::OnRep_FishState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFish", "OnRep_FishState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFish.NetMulticast_OnCathed
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:

void AWTLFish::NetMulticast_OnCathed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFish", "NetMulticast_OnCathed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFish.K2_OnFishStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLFishState           State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFish::K2_OnFishStateChanged(enum class EWTLFishState State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFish", "K2_OnFishStateChanged");

	Params::AWTLFish_K2_OnFishStateChanged_Params Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLFish.K2_OnCathed
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLFish::K2_OnCathed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFish", "K2_OnCathed");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLFishingActivity
// (Actor)

class UClass* AWTLFishingActivity::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFishingActivity");

	return Clss;
}


// WTLFishingActivity WTL.Default__WTLFishingActivity
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFishingActivity* AWTLFishingActivity::GetDefaultObj()
{
	static class AWTLFishingActivity* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFishingActivity*>(AWTLFishingActivity::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLFishingActivity.Server_StopPullFish
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLFishingActivity::Server_StopPullFish()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "Server_StopPullFish");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.Server_StartPullFish
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLFishingActivity::Server_StartPullFish()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "Server_StartPullFish");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.ResetAndDestroy
// (Final, Native, Protected)
// Parameters:

void AWTLFishingActivity::ResetAndDestroy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "ResetAndDestroy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.OnRep_Shake
// (Final, Native, Private)
// Parameters:

void AWTLFishingActivity::OnRep_Shake()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "OnRep_Shake");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.OnRep_Resistance
// (Final, Native, Private)
// Parameters:

void AWTLFishingActivity::OnRep_Resistance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "OnRep_Resistance");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.OnRep_Pulling
// (Final, Native, Private)
// Parameters:

void AWTLFishingActivity::OnRep_Pulling()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "OnRep_Pulling");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.OnRep_FishState
// (Final, Native, Private)
// Parameters:

void AWTLFishingActivity::OnRep_FishState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "OnRep_FishState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.OnRep_Fish
// (Final, Native, Private)
// Parameters:

void AWTLFishingActivity::OnRep_Fish()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "OnRep_Fish");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.OnCharacterDied
// (Final, Native, Protected)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFishingActivity::OnCharacterDied(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "OnCharacterDied");

	Params::AWTLFishingActivity_OnCharacterDied_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.GetCharacterTiltX
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLFishingActivity::GetCharacterTiltX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "GetCharacterTiltX");

	Params::AWTLFishingActivity_GetCharacterTiltX_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFishingActivity.Client_StartFishing
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLFishingActivity::Client_StartFishing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "Client_StartFishing");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.Client_OnFishSpawned
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLFishingActivity::Client_OnFishSpawned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "Client_OnFishSpawned");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.Client_OnFishingEnded
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLFishingActivity::Client_OnFishingEnded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "Client_OnFishingEnded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.Client_FishingLineBroke
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLFishingActivity::Client_FishingLineBroke()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "Client_FishingLineBroke");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.Client_FishingFinished
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLFishingActivity::Client_FishingFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "Client_FishingFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingActivity.Client_CanNotFishing
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLFishingActivity::Client_CanNotFishing()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingActivity", "Client_CanNotFishing");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLFishingItem
// (Actor)

class UClass* AWTLFishingItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFishingItem");

	return Clss;
}


// WTLFishingItem WTL.Default__WTLFishingItem
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFishingItem* AWTLFishingItem::GetDefaultObj()
{
	static class AWTLFishingItem* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFishingItem*>(AWTLFishingItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLFishingItem.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLFishingItem::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLFishingItem::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.Server_ChangeHorizontalAlpha
// (Final, Net, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// float                              Alpha                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFishingItem::Server_ChangeHorizontalAlpha(float Alpha)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "Server_ChangeHorizontalAlpha");

	Params::AWTLFishingItem_Server_ChangeHorizontalAlpha_Params Parms{};

	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.OnRep_MouseDeltaX
// (Final, Native, Private)
// Parameters:

void AWTLFishingItem::OnRep_MouseDeltaX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "OnRep_MouseDeltaX");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.OnRep_FloatVisibility
// (Final, Native, Private)
// Parameters:

void AWTLFishingItem::OnRep_FloatVisibility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "OnRep_FloatVisibility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.OnRep_FloatLocation
// (Final, Native, Private)
// Parameters:

void AWTLFishingItem::OnRep_FloatLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "OnRep_FloatLocation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.OnRep_FishingActivity
// (Final, Native, Private)
// Parameters:

void AWTLFishingItem::OnRep_FishingActivity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "OnRep_FishingActivity");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.OnRep_CathedFishID
// (Final, Native, Private)
// Parameters:

void AWTLFishingItem::OnRep_CathedFishID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "OnRep_CathedFishID");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.OnActivityDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                      DestroyedActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFishingItem::OnActivityDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "OnActivityDestroyed");

	Params::AWTLFishingItem_OnActivityDestroyed_Params Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.NowIsPulling
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLFishingItem::NowIsPulling()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "NowIsPulling");

	Params::AWTLFishingItem_NowIsPulling_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFishingItem.NetMulticast_ResetAll
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// bool                               AttachFish                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFishingItem::NetMulticast_ResetAll(bool AttachFish)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "NetMulticast_ResetAll");

	Params::AWTLFishingItem_NetMulticast_ResetAll_Params Parms{};

	Parms.AttachFish = AttachFish;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.NetMulticast_PlayAnimation
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLFishingMontageType  MontageType                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFishingItem::NetMulticast_PlayAnimation(enum class EWTLFishingMontageType MontageType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "NetMulticast_PlayAnimation");

	Params::AWTLFishingItem_NetMulticast_PlayAnimation_Params Parms{};

	Parms.MontageType = MontageType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.NetMulticast_MakeHit
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLFishingItem::NetMulticast_MakeHit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "NetMulticast_MakeHit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingItem.K2_SimulateRope
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Simulate                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFishingItem::K2_SimulateRope(bool Simulate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "K2_SimulateRope");

	Params::AWTLFishingItem_K2_SimulateRope_Params Parms{};

	Parms.Simulate = Simulate;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLFishingItem.K2_OnFishCatched
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsSuccess                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFishingItem::K2_OnFishCatched(bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "K2_OnFishCatched");

	Params::AWTLFishingItem_K2_OnFishCatched_Params Parms{};

	Parms.IsSuccess = IsSuccess;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLFishingItem.K2_DeatachRopeEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFishingItem::K2_DeatachRopeEnd(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "K2_DeatachRopeEnd");

	Params::AWTLFishingItem_K2_DeatachRopeEnd_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLFishingItem.GetVisualResistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLFishingItem::GetVisualResistance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "GetVisualResistance");

	Params::AWTLFishingItem_GetVisualResistance_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFishingItem.GetResistance
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLFishingItem::GetResistance()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "GetResistance");

	Params::AWTLFishingItem_GetResistance_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFishingItem.GetMouseHorizontalAlpha
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLFishingItem::GetMouseHorizontalAlpha()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "GetMouseHorizontalAlpha");

	Params::AWTLFishingItem_GetMouseHorizontalAlpha_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFishingItem.GetFloatLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLFishingItem::GetFloatLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingItem", "GetFloatLocation");

	Params::AWTLFishingItem_GetFloatLocation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLFishingVolume
// (Actor)

class UClass* AWTLFishingVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFishingVolume");

	return Clss;
}


// WTLFishingVolume WTL.Default__WTLFishingVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFishingVolume* AWTLFishingVolume::GetDefaultObj()
{
	static class AWTLFishingVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFishingVolume*>(AWTLFishingVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLFishingVolume.OnVolumeEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFishingVolume::OnVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingVolume", "OnVolumeEndOverlap");

	Params::AWTLFishingVolume_OnVolumeEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFishingVolume.OnVolumeBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLFishingVolume::OnVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFishingVolume", "OnVolumeBeginOverlap");

	Params::AWTLFishingVolume_OnVolumeBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLFlashlightMountComponent
// (SceneComponent)

class UClass* UWTLFlashlightMountComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFlashlightMountComponent");

	return Clss;
}


// WTLFlashlightMountComponent WTL.Default__WTLFlashlightMountComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLFlashlightMountComponent* UWTLFlashlightMountComponent::GetDefaultObj()
{
	static class UWTLFlashlightMountComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLFlashlightMountComponent*>(UWTLFlashlightMountComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLFlashlightMountComponent.Server_Toggle
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void UWTLFlashlightMountComponent::Server_Toggle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFlashlightMountComponent", "Server_Toggle");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLFloatingPawnMovement
// (None)

class UClass* UWTLFloatingPawnMovement::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFloatingPawnMovement");

	return Clss;
}


// WTLFloatingPawnMovement WTL.Default__WTLFloatingPawnMovement
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLFloatingPawnMovement* UWTLFloatingPawnMovement::GetDefaultObj()
{
	static class UWTLFloatingPawnMovement* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLFloatingPawnMovement*>(UWTLFloatingPawnMovement::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLFMODCharacterVoiceComponent
// (SceneComponent)

class UClass* UWTLFMODCharacterVoiceComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFMODCharacterVoiceComponent");

	return Clss;
}


// WTLFMODCharacterVoiceComponent WTL.Default__WTLFMODCharacterVoiceComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLFMODCharacterVoiceComponent* UWTLFMODCharacterVoiceComponent::GetDefaultObj()
{
	static class UWTLFMODCharacterVoiceComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLFMODCharacterVoiceComponent*>(UWTLFMODCharacterVoiceComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLFMODReverbZone
// (Actor)

class UClass* AWTLFMODReverbZone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFMODReverbZone");

	return Clss;
}


// WTLFMODReverbZone WTL.Default__WTLFMODReverbZone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFMODReverbZone* AWTLFMODReverbZone::GetDefaultObj()
{
	static class AWTLFMODReverbZone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFMODReverbZone*>(AWTLFMODReverbZone::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLFMODReverbZone.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFMODReverbZone::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFMODReverbZone", "OnEndOverlap");

	Params::AWTLFMODReverbZone_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFMODReverbZone.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLFMODReverbZone::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFMODReverbZone", "OnBeginOverlap");

	Params::AWTLFMODReverbZone_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLFortificationEnemyNPCSpawner
// (Actor)

class UClass* AWTLFortificationEnemyNPCSpawner::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFortificationEnemyNPCSpawner");

	return Clss;
}


// WTLFortificationEnemyNPCSpawner WTL.Default__WTLFortificationEnemyNPCSpawner
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFortificationEnemyNPCSpawner* AWTLFortificationEnemyNPCSpawner::GetDefaultObj()
{
	static class AWTLFortificationEnemyNPCSpawner* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFortificationEnemyNPCSpawner*>(AWTLFortificationEnemyNPCSpawner::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLFortificationEnemyNPCSpawner.UpdateOwnerFaction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLFaction             Faction                                                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFortificationEnemyNPCSpawner::UpdateOwnerFaction(enum class EWTLFaction Faction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationEnemyNPCSpawner", "UpdateOwnerFaction");

	Params::AWTLFortificationEnemyNPCSpawner_UpdateOwnerFaction_Params Parms{};

	Parms.Faction = Faction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLFortificationSafeZoneAnimScriptInstance
// (None)

class UClass* UWTLFortificationSafeZoneAnimScriptInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFortificationSafeZoneAnimScriptInstance");

	return Clss;
}


// WTLFortificationSafeZoneAnimScriptInstance WTL.Default__WTLFortificationSafeZoneAnimScriptInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLFortificationSafeZoneAnimScriptInstance* UWTLFortificationSafeZoneAnimScriptInstance::GetDefaultObj()
{
	static class UWTLFortificationSafeZoneAnimScriptInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLFortificationSafeZoneAnimScriptInstance*>(UWTLFortificationSafeZoneAnimScriptInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSafeZone
// (Actor)

class UClass* AWTLSafeZone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSafeZone");

	return Clss;
}


// WTLSafeZone WTL.Default__WTLSafeZone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSafeZone* AWTLSafeZone::GetDefaultObj()
{
	static class AWTLSafeZone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSafeZone*>(AWTLSafeZone::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSafeZone.SetFaction
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLFaction             Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSafeZone::SetFaction(enum class EWTLFaction Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSafeZone", "SetFaction");

	Params::AWTLSafeZone_SetFaction_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSafeZone.OnTriggerVolumeEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSafeZone::OnTriggerVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSafeZone", "OnTriggerVolumeEndOverlap");

	Params::AWTLSafeZone_OnTriggerVolumeEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSafeZone.OnTriggerVolumeBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLSafeZone::OnTriggerVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSafeZone", "OnTriggerVolumeBeginOverlap");

	Params::AWTLSafeZone_OnTriggerVolumeBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSafeZone.OnRep_Faction
// (Final, Native, Private)
// Parameters:

void AWTLSafeZone::OnRep_Faction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSafeZone", "OnRep_Faction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSafeZone.OnRep_Active
// (Final, Native, Private)
// Parameters:

void AWTLSafeZone::OnRep_Active()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSafeZone", "OnRep_Active");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSafeZone.GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLSafeZone::GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSafeZone", "GetFaction");

	Params::AWTLSafeZone_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLSafeZone.EnabledSafeZone
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLSafeZone::EnabledSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSafeZone", "EnabledSafeZone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSafeZone.DisableSafeZone
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLSafeZone::DisableSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSafeZone", "DisableSafeZone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSafeZone.CheckCharacterInZone
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLSafeZone::CheckCharacterInZone(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSafeZone", "CheckCharacterInZone");

	Params::AWTLSafeZone_CheckCharacterInZone_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLFortificationSafeZone
// (Actor)

class UClass* AWTLFortificationSafeZone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFortificationSafeZone");

	return Clss;
}


// WTLFortificationSafeZone WTL.Default__WTLFortificationSafeZone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFortificationSafeZone* AWTLFortificationSafeZone::GetDefaultObj()
{
	static class AWTLFortificationSafeZone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFortificationSafeZone*>(AWTLFortificationSafeZone::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLFortificationSafeZoneJammer
// (Actor)

class UClass* AWTLFortificationSafeZoneJammer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFortificationSafeZoneJammer");

	return Clss;
}


// WTLFortificationSafeZoneJammer WTL.Default__WTLFortificationSafeZoneJammer
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFortificationSafeZoneJammer* AWTLFortificationSafeZoneJammer::GetDefaultObj()
{
	static class AWTLFortificationSafeZoneJammer* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFortificationSafeZoneJammer*>(AWTLFortificationSafeZoneJammer::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLFortificationSafeZoneJammer.OnStateChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLFortificationJammerStateNewState                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFortificationSafeZoneJammer::OnStateChanged(enum class EWTLFortificationJammerState NewState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationSafeZoneJammer", "OnStateChanged");

	Params::AWTLFortificationSafeZoneJammer_OnStateChanged_Params Parms{};

	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLFortificationSafeZoneJammer.OnRep_State
// (Final, Native, Private)
// Parameters:

void AWTLFortificationSafeZoneJammer::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationSafeZoneJammer", "OnRep_State");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLFortificationSafeZoneJammer.GetState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFortificationJammerStateReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFortificationJammerState AWTLFortificationSafeZoneJammer::GetState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationSafeZoneJammer", "GetState");

	Params::AWTLFortificationSafeZoneJammer_GetState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationSafeZoneJammer.GetNearestCommandCore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLFortificationCommandCore*ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLFortificationCommandCore* AWTLFortificationSafeZoneJammer::GetNearestCommandCore()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationSafeZoneJammer", "GetNearestCommandCore");

	Params::AWTLFortificationSafeZoneJammer_GetNearestCommandCore_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationSafeZoneJammer.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLFortificationSafeZoneJammer::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationSafeZoneJammer", "AIInterface_IsInSafeZone");

	Params::AWTLFortificationSafeZoneJammer_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationSafeZoneJammer.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLFortificationSafeZoneJammer::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationSafeZoneJammer", "AIInterface_IsCanBeAttacked");

	Params::AWTLFortificationSafeZoneJammer_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationSafeZoneJammer.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLFortificationSafeZoneJammer::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationSafeZoneJammer", "AIInterface_IsAlive");

	Params::AWTLFortificationSafeZoneJammer_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationSafeZoneJammer.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLFortificationSafeZoneJammer::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationSafeZoneJammer", "AIInterface_GetVelocity");

	Params::AWTLFortificationSafeZoneJammer_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationSafeZoneJammer.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLFortificationSafeZoneJammer::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationSafeZoneJammer", "AIInterface_GetGroupID");

	Params::AWTLFortificationSafeZoneJammer_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLFortificationSafeZoneJammer.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLFortificationSafeZoneJammer::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFortificationSafeZoneJammer", "AIInterface_GetFaction");

	Params::AWTLFortificationSafeZoneJammer_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLFractionFlag
// (Actor)

class UClass* AWTLFractionFlag::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFractionFlag");

	return Clss;
}


// WTLFractionFlag WTL.Default__WTLFractionFlag
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFractionFlag* AWTLFractionFlag::GetDefaultObj()
{
	static class AWTLFractionFlag* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFractionFlag*>(AWTLFractionFlag::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLFractionFlag.UpdateFactionInfluence
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              FactionValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              InfluenceValue                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFractionFlag::UpdateFactionInfluence(float FactionValue, float InfluenceValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFractionFlag", "UpdateFactionInfluence");

	Params::AWTLFractionFlag_UpdateFactionInfluence_Params Parms{};

	Parms.FactionValue = FactionValue;
	Parms.InfluenceValue = InfluenceValue;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLFractionFlag.Client_SetFactionInfluence
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// enum class EWTLFaction             Faction                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Influence                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLFractionFlag::Client_SetFactionInfluence(enum class EWTLFaction Faction, float Influence)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLFractionFlag", "Client_SetFactionInfluence");

	Params::AWTLFractionFlag_Client_SetFactionInfluence_Params Parms{};

	Parms.Faction = Faction;
	Parms.Influence = Influence;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLFurnace
// (Actor)

class UClass* AWTLFurnace::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLFurnace");

	return Clss;
}


// WTLFurnace WTL.Default__WTLFurnace
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLFurnace* AWTLFurnace::GetDefaultObj()
{
	static class AWTLFurnace* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLFurnace*>(AWTLFurnace::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLGameInstance
// (None)

class UClass* UWTLGameInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGameInstance");

	return Clss;
}


// WTLGameInstance WTL.Default__WTLGameInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLGameInstance* UWTLGameInstance::GetDefaultObj()
{
	static class UWTLGameInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLGameInstance*>(UWTLGameInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLGameInstance.Tick
// (Final, Native, Private)
// Parameters:
// float                              DeltaTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLGameInstance::Tick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "Tick");

	Params::UWTLGameInstance_Tick_Params Parms{};

	Parms.DeltaTime = DeltaTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGameInstance.SyncAccountInfoTimer
// (Final, Native, Private)
// Parameters:

void UWTLGameInstance::SyncAccountInfoTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "SyncAccountInfoTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.SetCanSendCode
// (Final, Native, Private)
// Parameters:

void UWTLGameInstance::SetCanSendCode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "SetCanSendCode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnUpdateClanLeader
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnUpdateClanLeader(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnUpdateClanLeader");

	Params::UWTLGameInstance_OnUpdateClanLeader_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnUpdateClanDescription
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnUpdateClanDescription(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnUpdateClanDescription");

	Params::UWTLGameInstance_OnUpdateClanDescription_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnUpdateClan
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnUpdateClan(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnUpdateClan");

	Params::UWTLGameInstance_OnUpdateClan_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnSyncAccountInfoResultEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnSyncAccountInfoResultEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnSyncAccountInfoResultEvent");

	Params::UWTLGameInstance_OnSyncAccountInfoResultEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnRemoveClanSkill
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnRemoveClanSkill(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnRemoveClanSkill");

	Params::UWTLGameInstance_OnRemoveClanSkill_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnRemoveClanMemberRequestEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnRemoveClanMemberRequestEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnRemoveClanMemberRequestEvent");

	Params::UWTLGameInstance_OnRemoveClanMemberRequestEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnRemoveClanMember
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnRemoveClanMember(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnRemoveClanMember");

	Params::UWTLGameInstance_OnRemoveClanMember_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnPurchaseStoreItemsResultEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnPurchaseStoreItemsResultEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnPurchaseStoreItemsResultEvent");

	Params::UWTLGameInstance_OnPurchaseStoreItemsResultEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnNewClanMemberRequestEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnNewClanMemberRequestEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnNewClanMemberRequestEvent");

	Params::UWTLGameInstance_OnNewClanMemberRequestEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnNewClanMember
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnNewClanMember(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnNewClanMember");

	Params::UWTLGameInstance_OnNewClanMember_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnLoadTransitionMap
// (Final, Native, Private)
// Parameters:

void UWTLGameInstance::OnLoadTransitionMap()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnLoadTransitionMap");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnInAppPaymentResultEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnInAppPaymentResultEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnInAppPaymentResultEvent");

	Params::UWTLGameInstance_OnInAppPaymentResultEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnGetSteamInventoryItemDefinitionsResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnGetSteamInventoryItemDefinitionsResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnGetSteamInventoryItemDefinitionsResponse");

	Params::UWTLGameInstance_OnGetSteamInventoryItemDefinitionsResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnGetClanMemberRequestListResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnGetClanMemberRequestListResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnGetClanMemberRequestListResponse");

	Params::UWTLGameInstance_OnGetClanMemberRequestListResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnGetClanListResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnGetClanListResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnGetClanListResponse");

	Params::UWTLGameInstance_OnGetClanListResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnGetAccountAchievementsPercentageResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnGetAccountAchievementsPercentageResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnGetAccountAchievementsPercentageResponse");

	Params::UWTLGameInstance_OnGetAccountAchievementsPercentageResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnEACServerMessageEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnEACServerMessageEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnEACServerMessageEvent");

	Params::UWTLGameInstance_OnEACServerMessageEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnDisconnected
// (Final, Native, Private)
// Parameters:

void UWTLGameInstance::OnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnDisconnected");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnDeleteClan
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnDeleteClan(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnDeleteClan");

	Params::UWTLGameInstance_OnDeleteClan_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnConnected
// (Final, Native, Private)
// Parameters:

void UWTLGameInstance::OnConnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnConnected");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnCodeActivationResultEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnCodeActivationResultEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnCodeActivationResultEvent");

	Params::UWTLGameInstance_OnCodeActivationResultEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnClanScoreChange
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnClanScoreChange(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnClanScoreChange");

	Params::UWTLGameInstance_OnClanScoreChange_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnCharacterMoveToLocationEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnCharacterMoveToLocationEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnCharacterMoveToLocationEvent");

	Params::UWTLGameInstance_OnCharacterMoveToLocationEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnAddClanSkill
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnAddClanSkill(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnAddClanSkill");

	Params::UWTLGameInstance_OnAddClanSkill_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnAddClan
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnAddClan(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnAddClan");

	Params::UWTLGameInstance_OnAddClan_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnAccountStatisticsParameterUpdate
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnAccountStatisticsParameterUpdate(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnAccountStatisticsParameterUpdate");

	Params::UWTLGameInstance_OnAccountStatisticsParameterUpdate_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnAccountInventoryItems
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnAccountInventoryItems(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnAccountInventoryItems");

	Params::UWTLGameInstance_OnAccountInventoryItems_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnAccountBalanceChangedEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnAccountBalanceChangedEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnAccountBalanceChangedEvent");

	Params::UWTLGameInstance_OnAccountBalanceChangedEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnAccountAchievementsTrigger
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnAccountAchievementsTrigger(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnAccountAchievementsTrigger");

	Params::UWTLGameInstance_OnAccountAchievementsTrigger_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameInstance.OnAccountAchievementsAndStatsReceived
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLGameInstance::OnAccountAchievementsAndStatsReceived(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameInstance", "OnAccountAchievementsAndStatsReceived");

	Params::UWTLGameInstance_OnAccountAchievementsAndStatsReceived_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLGameMode
// (Actor)

class UClass* AWTLGameMode::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGameMode");

	return Clss;
}


// WTLGameMode WTL.Default__WTLGameMode
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLGameMode* AWTLGameMode::GetDefaultObj()
{
	static class AWTLGameMode* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLGameMode*>(AWTLGameMode::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLGameMode.Server_MarkCharacterAsMovedThroughPortal
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGameMode::Server_MarkCharacterAsMovedThroughPortal(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameMode", "Server_MarkCharacterAsMovedThroughPortal");

	Params::AWTLGameMode_Server_MarkCharacterAsMovedThroughPortal_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameMode.OnCharacterGotMoney
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameMode::OnCharacterGotMoney(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameMode", "OnCharacterGotMoney");

	Params::AWTLGameMode_OnCharacterGotMoney_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLGameModeZone
// (Actor)

class UClass* AWTLGameModeZone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGameModeZone");

	return Clss;
}


// WTLGameModeZone WTL.Default__WTLGameModeZone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLGameModeZone* AWTLGameModeZone::GetDefaultObj()
{
	static class AWTLGameModeZone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLGameModeZone*>(AWTLGameModeZone::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLGameModeZone.OnVolumeEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGameModeZone::OnVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameModeZone", "OnVolumeEndOverlap");

	Params::AWTLGameModeZone_OnVolumeEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameModeZone.OnVolumeBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLGameModeZone::OnVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameModeZone", "OnVolumeBeginOverlap");

	Params::AWTLGameModeZone_OnVolumeBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameModeZone.IsZoneEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLGameModeZone::IsZoneEnabled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameModeZone", "IsZoneEnabled");

	Params::AWTLGameModeZone_IsZoneEnabled_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGameModeZone.EnableZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLGameModeZone::EnableZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameModeZone", "EnableZone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameModeZone.DisableZone
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLGameModeZone::DisableZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameModeZone", "DisableZone");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLGameNetworkManager
// (Actor)

class UClass* AWTLGameNetworkManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGameNetworkManager");

	return Clss;
}


// WTLGameNetworkManager WTL.Default__WTLGameNetworkManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLGameNetworkManager* AWTLGameNetworkManager::GetDefaultObj()
{
	static class AWTLGameNetworkManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLGameNetworkManager*>(AWTLGameNetworkManager::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLGameSession
// (Actor)

class UClass* AWTLGameSession::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGameSession");

	return Clss;
}


// WTLGameSession WTL.Default__WTLGameSession
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLGameSession* AWTLGameSession::GetDefaultObj()
{
	static class AWTLGameSession* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLGameSession*>(AWTLGameSession::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLGameState
// (Actor)

class UClass* AWTLGameState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGameState");

	return Clss;
}


// WTLGameState WTL.Default__WTLGameState
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLGameState* AWTLGameState::GetDefaultObj()
{
	static class AWTLGameState* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLGameState*>(AWTLGameState::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLGameState.OnWorldConfigChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnWorldConfigChanged(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnWorldConfigChanged");

	Params::AWTLGameState_OnWorldConfigChanged_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnUpdateGroup
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnUpdateGroup(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnUpdateGroup");

	Params::AWTLGameState_OnUpdateGroup_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnUnmuteCharacter
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnUnmuteCharacter(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnUnmuteCharacter");

	Params::AWTLGameState_OnUnmuteCharacter_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnSyncAccountInfoResult
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnSyncAccountInfoResult(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnSyncAccountInfoResult");

	Params::AWTLGameState_OnSyncAccountInfoResult_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnServerEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnServerEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnServerEvent");

	Params::AWTLGameState_OnServerEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnRep_ServerKeepAlive
// (Final, Native, Private)
// Parameters:

void AWTLGameState::OnRep_ServerKeepAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnRep_ServerKeepAlive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnRep_ServerEventInfo
// (Final, Native, Private)
// Parameters:

void AWTLGameState::OnRep_ServerEventInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnRep_ServerEventInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnRep_PlayersInfo
// (Final, Native, Private)
// Parameters:

void AWTLGameState::OnRep_PlayersInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnRep_PlayersInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnRep_KillsStatsInfo
// (Final, Native, Private)
// Parameters:

void AWTLGameState::OnRep_KillsStatsInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnRep_KillsStatsInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnRep_CurrentRadioTrack
// (Final, Native, Public)
// Parameters:

void AWTLGameState::OnRep_CurrentRadioTrack()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnRep_CurrentRadioTrack");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnRemoveMailPackage
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnRemoveMailPackage(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnRemoveMailPackage");

	Params::AWTLGameState_OnRemoveMailPackage_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnPutItemToAccountInventoryResult
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnPutItemToAccountInventoryResult(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnPutItemToAccountInventoryResult");

	Params::AWTLGameState_OnPutItemToAccountInventoryResult_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnNewCharacterMailMessage
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnNewCharacterMailMessage(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnNewCharacterMailMessage");

	Params::AWTLGameState_OnNewCharacterMailMessage_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnMuteCharacter
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnMuteCharacter(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnMuteCharacter");

	Params::AWTLGameState_OnMuteCharacter_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnMasterServerConsoleCommand
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnMasterServerConsoleCommand(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnMasterServerConsoleCommand");

	Params::AWTLGameState_OnMasterServerConsoleCommand_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnInAppPaymentResult
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnInAppPaymentResult(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnInAppPaymentResult");

	Params::AWTLGameState_OnInAppPaymentResult_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnGetItemFromAccountInventoryResult
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnGetItemFromAccountInventoryResult(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnGetItemFromAccountInventoryResult");

	Params::AWTLGameState_OnGetItemFromAccountInventoryResult_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnDeleteGroup
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnDeleteGroup(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnDeleteGroup");

	Params::AWTLGameState_OnDeleteGroup_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnAddMailPackage
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnAddMailPackage(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnAddMailPackage");

	Params::AWTLGameState_OnAddMailPackage_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnAddGroup
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnAddGroup(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnAddGroup");

	Params::AWTLGameState_OnAddGroup_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.OnAccountInventoryItems
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLGameState::OnAccountInventoryItems(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "OnAccountInventoryItems");

	Params::AWTLGameState_OnAccountInventoryItems_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGameState.GetPlayerArrayInRadius
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                     Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AWTLCharacter*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLCharacter*> AWTLGameState::GetPlayerArrayInRadius(struct FVector& Location, float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "GetPlayerArrayInRadius");

	Params::AWTLGameState_GetPlayerArrayInRadius_Params Parms{};

	Parms.Location = Location;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGameState.GetPlaceableStuffArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AWTLPlaceableStuff*>  ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLPlaceableStuff*> AWTLGameState::GetPlaceableStuffArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "GetPlaceableStuffArray");

	Params::AWTLGameState_GetPlaceableStuffArray_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGameState.GetMonsterArrayInRadius
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                     Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AWTLMonsterPawn*>     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLMonsterPawn*> AWTLGameState::GetMonsterArrayInRadius(struct FVector& Location, float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "GetMonsterArrayInRadius");

	Params::AWTLGameState_GetMonsterArrayInRadius_Params Parms{};

	Parms.Location = Location;
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGameState.GetMonsterArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AWTLMonsterPawn*>     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLMonsterPawn*> AWTLGameState::GetMonsterArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "GetMonsterArray");

	Params::AWTLGameState_GetMonsterArray_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGameState.GetCharacterArray
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class AWTLCharacter*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLCharacter*> AWTLGameState::GetCharacterArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGameState", "GetCharacterArray");

	Params::AWTLGameState_GetCharacterArray_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLGameUserSettings
// (None)

class UClass* UWTLGameUserSettings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGameUserSettings");

	return Clss;
}


// WTLGameUserSettings WTL.Default__WTLGameUserSettings
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLGameUserSettings* UWTLGameUserSettings::GetDefaultObj()
{
	static class UWTLGameUserSettings* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLGameUserSettings*>(UWTLGameUserSettings::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLGameViewportClient
// (None)

class UClass* UWTLGameViewportClient::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGameViewportClient");

	return Clss;
}


// WTLGameViewportClient WTL.Default__WTLGameViewportClient
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLGameViewportClient* UWTLGameViewportClient::GetDefaultObj()
{
	static class UWTLGameViewportClient* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLGameViewportClient*>(UWTLGameViewportClient::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLGasGrenadeLauncherProjectile
// (Actor)

class UClass* AWTLGasGrenadeLauncherProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGasGrenadeLauncherProjectile");

	return Clss;
}


// WTLGasGrenadeLauncherProjectile WTL.Default__WTLGasGrenadeLauncherProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLGasGrenadeLauncherProjectile* AWTLGasGrenadeLauncherProjectile::GetDefaultObj()
{
	static class AWTLGasGrenadeLauncherProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLGasGrenadeLauncherProjectile*>(AWTLGasGrenadeLauncherProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLGasGrenadeLauncherProjectile.OnRep_ParticleProgress
// (Final, Native, Public)
// Parameters:

void AWTLGasGrenadeLauncherProjectile::OnRep_ParticleProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeLauncherProjectile", "OnRep_ParticleProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeLauncherProjectile.OnRep_ExplodeLocation
// (Final, Native, Public)
// Parameters:

void AWTLGasGrenadeLauncherProjectile::OnRep_ExplodeLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeLauncherProjectile", "OnRep_ExplodeLocation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeLauncherProjectile.OnRep_DestroyParticles
// (Final, Native, Private)
// Parameters:

void AWTLGasGrenadeLauncherProjectile::OnRep_DestroyParticles()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeLauncherProjectile", "OnRep_DestroyParticles");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeLauncherProjectile.OnRep_CollisionProgress
// (Final, Native, Public)
// Parameters:

void AWTLGasGrenadeLauncherProjectile::OnRep_CollisionProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeLauncherProjectile", "OnRep_CollisionProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeLauncherProjectile.OnComponentHit
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLGasGrenadeLauncherProjectile::OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeLauncherProjectile", "OnComponentHit");

	Params::AWTLGasGrenadeLauncherProjectile_OnComponentHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeLauncherProjectile.EndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGasGrenadeLauncherProjectile::EndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeLauncherProjectile", "EndOverlap");

	Params::AWTLGasGrenadeLauncherProjectile_EndOverlap_Params Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeLauncherProjectile.BeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLGasGrenadeLauncherProjectile::BeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeLauncherProjectile", "BeginOverlap");

	Params::AWTLGasGrenadeLauncherProjectile_BeginOverlap_Params Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMissileWeaponProjectile
// (Actor)

class UClass* AWTLMissileWeaponProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMissileWeaponProjectile");

	return Clss;
}


// WTLMissileWeaponProjectile WTL.Default__WTLMissileWeaponProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMissileWeaponProjectile* AWTLMissileWeaponProjectile::GetDefaultObj()
{
	static class AWTLMissileWeaponProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMissileWeaponProjectile*>(AWTLMissileWeaponProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMissileWeaponProjectile.OnRep_ReplicatedInitialSpeed
// (Final, Native, Private)
// Parameters:

void AWTLMissileWeaponProjectile::OnRep_ReplicatedInitialSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeaponProjectile", "OnRep_ReplicatedInitialSpeed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMissileWeaponProjectile.OnHit
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMissileWeaponProjectile::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeaponProjectile", "OnHit");

	Params::AWTLMissileWeaponProjectile_OnHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLGrenadeProjectile
// (Actor)

class UClass* AWTLGrenadeProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGrenadeProjectile");

	return Clss;
}


// WTLGrenadeProjectile WTL.Default__WTLGrenadeProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLGrenadeProjectile* AWTLGrenadeProjectile::GetDefaultObj()
{
	static class AWTLGrenadeProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLGrenadeProjectile*>(AWTLGrenadeProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLGrenadeProjectile.Server_RequestExplode
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FVector_NetQuantize         ExplosionPosition                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeProjectile::Server_RequestExplode(const struct FVector_NetQuantize& ExplosionPosition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeProjectile", "Server_RequestExplode");

	Params::AWTLGrenadeProjectile_Server_RequestExplode_Params Parms{};

	Parms.ExplosionPosition = ExplosionPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGrenadeProjectile.NetMulticast_OnExplosion
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector_NetQuantize         ExplosionPosition                                                (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ExplosionDamage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    Rotator                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AWTLGrenadeProjectile::NetMulticast_OnExplosion(const struct FVector_NetQuantize& ExplosionPosition, float ExplosionDamage, const struct FRotator& Rotator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeProjectile", "NetMulticast_OnExplosion");

	Params::AWTLGrenadeProjectile_NetMulticast_OnExplosion_Params Parms{};

	Parms.ExplosionPosition = ExplosionPosition;
	Parms.ExplosionDamage = ExplosionDamage;
	Parms.Rotator = Rotator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGrenadeProjectile.GetUnprotectedCharacters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AWTLCharacter*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLCharacter*> AWTLGrenadeProjectile::GetUnprotectedCharacters()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeProjectile", "GetUnprotectedCharacters");

	Params::AWTLGrenadeProjectile_GetUnprotectedCharacters_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGrenadeProjectile.GetProtectedPlaceableStuffs
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AActor*>              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> AWTLGrenadeProjectile::GetProtectedPlaceableStuffs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeProjectile", "GetProtectedPlaceableStuffs");

	Params::AWTLGrenadeProjectile_GetProtectedPlaceableStuffs_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGrenadeProjectile.GetProtectedCharacters
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class AWTLCharacter*>       ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AWTLCharacter*> AWTLGrenadeProjectile::GetProtectedCharacters()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeProjectile", "GetProtectedCharacters");

	Params::AWTLGrenadeProjectile_GetProtectedCharacters_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGrenadeProjectile.BPOnExplode
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLGrenadeProjectile::BPOnExplode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeProjectile", "BPOnExplode");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLGrenadeProjectile.BPOnApplyShrapnelDamageToMonster
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ActualDamage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeProjectile::BPOnApplyShrapnelDamageToMonster(class AWTLMonsterPawn* Monster, float ActualDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeProjectile", "BPOnApplyShrapnelDamageToMonster");

	Params::AWTLGrenadeProjectile_BPOnApplyShrapnelDamageToMonster_Params Parms{};

	Parms.Monster = Monster;
	Parms.ActualDamage = ActualDamage;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLGrenadeProjectile.BPOnApplyShrapnelDamageToEnemyNPC
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLEnemyNPC*                EnemyNPC                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ActualDamage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeProjectile::BPOnApplyShrapnelDamageToEnemyNPC(class AWTLEnemyNPC* EnemyNPC, float ActualDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeProjectile", "BPOnApplyShrapnelDamageToEnemyNPC");

	Params::AWTLGrenadeProjectile_BPOnApplyShrapnelDamageToEnemyNPC_Params Parms{};

	Parms.EnemyNPC = EnemyNPC;
	Parms.ActualDamage = ActualDamage;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLGrenadeProjectile.BPOnApplyShrapnelDamageToCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ActualDamage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGrenadeProjectile::BPOnApplyShrapnelDamageToCharacter(class AWTLCharacter* Character, float ActualDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGrenadeProjectile", "BPOnApplyShrapnelDamageToCharacter");

	Params::AWTLGrenadeProjectile_BPOnApplyShrapnelDamageToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ActualDamage = ActualDamage;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLGasGrenadeProjectile
// (Actor)

class UClass* AWTLGasGrenadeProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGasGrenadeProjectile");

	return Clss;
}


// WTLGasGrenadeProjectile WTL.Default__WTLGasGrenadeProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLGasGrenadeProjectile* AWTLGasGrenadeProjectile::GetDefaultObj()
{
	static class AWTLGasGrenadeProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLGasGrenadeProjectile*>(AWTLGasGrenadeProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLGasGrenadeProjectile.OnRep_ParticleProgress
// (Final, Native, Public)
// Parameters:

void AWTLGasGrenadeProjectile::OnRep_ParticleProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeProjectile", "OnRep_ParticleProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeProjectile.OnRep_ExplodeLocation
// (Final, Native, Public)
// Parameters:

void AWTLGasGrenadeProjectile::OnRep_ExplodeLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeProjectile", "OnRep_ExplodeLocation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeProjectile.OnRep_DestroyParticles
// (Final, Native, Private)
// Parameters:

void AWTLGasGrenadeProjectile::OnRep_DestroyParticles()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeProjectile", "OnRep_DestroyParticles");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeProjectile.OnRep_CollisionProgress
// (Final, Native, Public)
// Parameters:

void AWTLGasGrenadeProjectile::OnRep_CollisionProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeProjectile", "OnRep_CollisionProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeProjectile.EndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGasGrenadeProjectile::EndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeProjectile", "EndOverlap");

	Params::AWTLGasGrenadeProjectile_EndOverlap_Params Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGasGrenadeProjectile.BeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLGasGrenadeProjectile::BeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGasGrenadeProjectile", "BeginOverlap");

	Params::AWTLGasGrenadeProjectile_BeginOverlap_Params Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLGeoSystem
// (None)

class UClass* UWTLGeoSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGeoSystem");

	return Clss;
}


// WTLGeoSystem WTL.Default__WTLGeoSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLGeoSystem* UWTLGeoSystem::GetDefaultObj()
{
	static class UWTLGeoSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLGeoSystem*>(UWTLGeoSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLGlobalLevelObject
// (Actor)

class UClass* AWTLGlobalLevelObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLGlobalLevelObject");

	return Clss;
}


// WTLGlobalLevelObject WTL.Default__WTLGlobalLevelObject
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLGlobalLevelObject* AWTLGlobalLevelObject::GetDefaultObj()
{
	static class AWTLGlobalLevelObject* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLGlobalLevelObject*>(AWTLGlobalLevelObject::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLGlobalLevelObject.SetStateInfoString
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ParamName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Value                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGlobalLevelObject::SetStateInfoString(const class FString& ParamName, const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "SetStateInfoString");

	Params::AWTLGlobalLevelObject_SetStateInfoString_Params Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGlobalLevelObject.SetStateInfoInt32
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ParamName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGlobalLevelObject::SetStateInfoInt32(const class FString& ParamName, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "SetStateInfoInt32");

	Params::AWTLGlobalLevelObject_SetStateInfoInt32_Params Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGlobalLevelObject.SetStateInfoFloat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ParamName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGlobalLevelObject::SetStateInfoFloat(const class FString& ParamName, float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "SetStateInfoFloat");

	Params::AWTLGlobalLevelObject_SetStateInfoFloat_Params Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGlobalLevelObject.SetStateInfoBool
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ParamName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGlobalLevelObject::SetStateInfoBool(const class FString& ParamName, bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "SetStateInfoBool");

	Params::AWTLGlobalLevelObject_SetStateInfoBool_Params Parms{};

	Parms.ParamName = ParamName;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGlobalLevelObject.OnStateRestored
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLGlobalLevelObject::OnStateRestored()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "OnStateRestored");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGlobalLevelObject.OnRep_State
// (Native, Protected)
// Parameters:
// int32                              OldState                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLGlobalLevelObject::OnRep_State(int32 OldState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "OnRep_State");

	Params::AWTLGlobalLevelObject_OnRep_State_Params Parms{};

	Parms.OldState = OldState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGlobalLevelObject.GetStateInfoString
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ParamName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      DefaultValue                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLGlobalLevelObject::GetStateInfoString(const class FString& ParamName, const class FString& DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "GetStateInfoString");

	Params::AWTLGlobalLevelObject_GetStateInfoString_Params Parms{};

	Parms.ParamName = ParamName;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGlobalLevelObject.GetStateInfoInt64
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ParamName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                              DefaultValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int64                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int64 AWTLGlobalLevelObject::GetStateInfoInt64(const class FString& ParamName, int64 DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "GetStateInfoInt64");

	Params::AWTLGlobalLevelObject_GetStateInfoInt64_Params Parms{};

	Parms.ParamName = ParamName;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGlobalLevelObject.GetStateInfoInt32
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ParamName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              DefaultValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLGlobalLevelObject::GetStateInfoInt32(const class FString& ParamName, int32 DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "GetStateInfoInt32");

	Params::AWTLGlobalLevelObject_GetStateInfoInt32_Params Parms{};

	Parms.ParamName = ParamName;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGlobalLevelObject.GetStateInfoFloat
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ParamName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DefaultValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLGlobalLevelObject::GetStateInfoFloat(const class FString& ParamName, float DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "GetStateInfoFloat");

	Params::AWTLGlobalLevelObject_GetStateInfoFloat_Params Parms{};

	Parms.ParamName = ParamName;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGlobalLevelObject.GetStateInfoBool
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FString                      ParamName                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DefaultValue                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLGlobalLevelObject::GetStateInfoBool(const class FString& ParamName, bool DefaultValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "GetStateInfoBool");

	Params::AWTLGlobalLevelObject_GetStateInfoBool_Params Parms{};

	Parms.ParamName = ParamName;
	Parms.DefaultValue = DefaultValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLGlobalLevelObject.ForceSaveState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLGlobalLevelObject::ForceSaveState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "ForceSaveState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGlobalLevelObject.ForceLoadState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLGlobalLevelObject::ForceLoadState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "ForceLoadState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLGlobalLevelObject.BPPrepareStateInfo
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLGlobalLevelObject::BPPrepareStateInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "BPPrepareStateInfo");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLGlobalLevelObject.BPOnStateRestored
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLGlobalLevelObject::BPOnStateRestored()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "BPOnStateRestored");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLGlobalLevelObject.BPOnResetData
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLGlobalLevelObject::BPOnResetData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLGlobalLevelObject", "BPOnResetData");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLHealingDrone
// (Actor, Pawn)

class UClass* AWTLHealingDrone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHealingDrone");

	return Clss;
}


// WTLHealingDrone WTL.Default__WTLHealingDrone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLHealingDrone* AWTLHealingDrone::GetDefaultObj()
{
	static class AWTLHealingDrone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLHealingDrone*>(AWTLHealingDrone::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHealingItem
// (Actor)

class UClass* AWTLHealingItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHealingItem");

	return Clss;
}


// WTLHealingItem WTL.Default__WTLHealingItem
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLHealingItem* AWTLHealingItem::GetDefaultObj()
{
	static class AWTLHealingItem* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLHealingItem*>(AWTLHealingItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHealingItem.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLHealingItem::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLHealingItem::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.Server_SetCharacterInFocus
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AWTLCharacter*               NewCharacter                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bAddNewHealer                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHealingItem::Server_SetCharacterInFocus(class AWTLCharacter* NewCharacter, bool bAddNewHealer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "Server_SetCharacterInFocus");

	Params::AWTLHealingItem_Server_SetCharacterInFocus_Params Parms{};

	Parms.NewCharacter = NewCharacter;
	Parms.bAddNewHealer = bAddNewHealer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.Server_MakeDamageToMonster
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHealingItem::Server_MakeDamageToMonster(class AWTLMonsterPawn* Monster)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "Server_MakeDamageToMonster");

	Params::AWTLHealingItem_Server_MakeDamageToMonster_Params Parms{};

	Parms.Monster = Monster;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.Server_HealingProcess
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AWTLCharacter*               NewCharacter                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bAddNewHealer                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHealingItem::Server_HealingProcess(class AWTLCharacter* NewCharacter, bool bAddNewHealer)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "Server_HealingProcess");

	Params::AWTLHealingItem_Server_HealingProcess_Params Parms{};

	Parms.NewCharacter = NewCharacter;
	Parms.bAddNewHealer = bAddNewHealer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.OnRep_SpawnEffectsNearCharacter
// (Final, Native, Public)
// Parameters:

void AWTLHealingItem::OnRep_SpawnEffectsNearCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "OnRep_SpawnEffectsNearCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.OnRep_MonsterInFocus
// (Final, Native, Public)
// Parameters:

void AWTLHealingItem::OnRep_MonsterInFocus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "OnRep_MonsterInFocus");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.OnRep_IsCharged
// (Final, Native, Public)
// Parameters:

void AWTLHealingItem::OnRep_IsCharged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "OnRep_IsCharged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.OnRep_EnergyValue
// (Final, Native, Public)
// Parameters:

void AWTLHealingItem::OnRep_EnergyValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "OnRep_EnergyValue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.OnRep_DeactivateAllEffects
// (Final, Native, Public)
// Parameters:

void AWTLHealingItem::OnRep_DeactivateAllEffects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "OnRep_DeactivateAllEffects");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.OnRep_CharacterInFocus
// (Final, Native, Public)
// Parameters:

void AWTLHealingItem::OnRep_CharacterInFocus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "OnRep_CharacterInFocus");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.NetMulticast_OnUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHealingItem::NetMulticast_OnUse(enum class EWTLUsableItemUseType UseType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "NetMulticast_OnUse");

	Params::AWTLHealingItem_NetMulticast_OnUse_Params Parms{};

	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.Client_SetEnergyOnMaterial
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:

void AWTLHealingItem::Client_SetEnergyOnMaterial()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "Client_SetEnergyOnMaterial");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.Client_EffectsUnderWater
// (Net, Native, Event, Public, NetClient)
// Parameters:

void AWTLHealingItem::Client_EffectsUnderWater()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "Client_EffectsUnderWater");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.Client_Charge
// (Final, Net, Native, Event, Private, NetClient)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHealingItem::Client_Charge(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "Client_Charge");

	Params::AWTLHealingItem_Client_Charge_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealingItem.BPSetLightOnMuzzle
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHealingItem::BPSetLightOnMuzzle(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "BPSetLightOnMuzzle");

	Params::AWTLHealingItem_BPSetLightOnMuzzle_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLHealingItem.BPSetEnergyOnMaterial
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHealingItem::BPSetEnergyOnMaterial(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "BPSetEnergyOnMaterial");

	Params::AWTLHealingItem_BPSetEnergyOnMaterial_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLHealingItem.BPSetBeamsEndPoint
// (Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                     EndPoint                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHealingItem::BPSetBeamsEndPoint(const struct FVector& EndPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "BPSetBeamsEndPoint");

	Params::AWTLHealingItem_BPSetBeamsEndPoint_Params Parms{};

	Parms.EndPoint = EndPoint;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLHealingItem.BPEffectsUnderWater
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLHealingItem::BPEffectsUnderWater()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "BPEffectsUnderWater");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLHealingItem.BPDeactivateEffects
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLHealingItem::BPDeactivateEffects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "BPDeactivateEffects");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLHealingItem.BPChargeItem
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHealingItem::BPChargeItem(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealingItem", "BPChargeItem");

	Params::AWTLHealingItem_BPChargeItem_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLHealthVolume
// (Actor)

class UClass* AWTLHealthVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHealthVolume");

	return Clss;
}


// WTLHealthVolume WTL.Default__WTLHealthVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLHealthVolume* AWTLHealthVolume::GetDefaultObj()
{
	static class AWTLHealthVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLHealthVolume*>(AWTLHealthVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHealthVolume.OnVolumeEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHealthVolume::OnVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealthVolume", "OnVolumeEndOverlap");

	Params::AWTLHealthVolume_OnVolumeEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHealthVolume.OnVolumeBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLHealthVolume::OnVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHealthVolume", "OnVolumeBeginOverlap");

	Params::AWTLHealthVolume_OnVolumeBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDBase
// (Actor)

class UClass* AWTLHUDBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBase");

	return Clss;
}


// WTLHUDBase WTL.Default__WTLHUDBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLHUDBase* AWTLHUDBase::GetDefaultObj()
{
	static class AWTLHUDBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLHUDBase*>(AWTLHUDBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUD
// (Actor)

class UClass* AWTLHUD::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUD");

	return Clss;
}


// WTLHUD WTL.Default__WTLHUD
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLHUD* AWTLHUD::GetDefaultObj()
{
	static class AWTLHUD* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLHUD*>(AWTLHUD::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUD.OnArenaMatchStarted
// (Final, Native, Private)
// Parameters:

void AWTLHUD::OnArenaMatchStarted()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUD", "OnArenaMatchStarted");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUD.OnArenaMatchEnded
// (Final, Native, Private, HasOutParams)
// Parameters:
// enum class EWTLFaction             WinningFaction                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLArenaLeaderboardRecord>Leaderboard                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLHUD::OnArenaMatchEnded(enum class EWTLFaction WinningFaction, TArray<struct FWTLArenaLeaderboardRecord>& Leaderboard)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUD", "OnArenaMatchEnded");

	Params::AWTLHUD_OnArenaMatchEnded_Params Parms{};

	Parms.WinningFaction = WinningFaction;
	Parms.Leaderboard = Leaderboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDWidgetBase
// (None)

class UClass* UWTLHUDWidgetBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDWidgetBase");

	return Clss;
}


// WTLHUDWidgetBase WTL.Default__WTLHUDWidgetBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDWidgetBase* UWTLHUDWidgetBase::GetDefaultObj()
{
	static class UWTLHUDWidgetBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDWidgetBase*>(UWTLHUDWidgetBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDInteractiveWidget
// (None)

class UClass* UWTLHUDInteractiveWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDInteractiveWidget");

	return Clss;
}


// WTLHUDInteractiveWidget WTL.Default__WTLHUDInteractiveWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDInteractiveWidget* UWTLHUDInteractiveWidget::GetDefaultObj()
{
	static class UWTLHUDInteractiveWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDInteractiveWidget*>(UWTLHUDInteractiveWidget::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDAccountInventory
// (None)

class UClass* UWTLHUDAccountInventory::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDAccountInventory");

	return Clss;
}


// WTLHUDAccountInventory WTL.Default__WTLHUDAccountInventory
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDAccountInventory* UWTLHUDAccountInventory::GetDefaultObj()
{
	static class UWTLHUDAccountInventory* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDAccountInventory*>(UWTLHUDAccountInventory::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDAccountInventoryDropArea
// (None)

class UClass* UWTLHUDAccountInventoryDropArea::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDAccountInventoryDropArea");

	return Clss;
}


// WTLHUDAccountInventoryDropArea WTL.Default__WTLHUDAccountInventoryDropArea
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDAccountInventoryDropArea* UWTLHUDAccountInventoryDropArea::GetDefaultObj()
{
	static class UWTLHUDAccountInventoryDropArea* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDAccountInventoryDropArea*>(UWTLHUDAccountInventoryDropArea::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemTypeSlot
// (None)

class UClass* UWTLHUDItemTypeSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemTypeSlot");

	return Clss;
}


// WTLHUDItemTypeSlot WTL.Default__WTLHUDItemTypeSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemTypeSlot* UWTLHUDItemTypeSlot::GetDefaultObj()
{
	static class UWTLHUDItemTypeSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemTypeSlot*>(UWTLHUDItemTypeSlot::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDItemTypeSlot.ViewItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemTypeSlot::ViewItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemTypeSlot", "ViewItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemTypeSlot.ShowItemInformation
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemTypeSlot::ShowItemInformation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemTypeSlot", "ShowItemInformation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemTypeSlot.ReadItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemTypeSlot::ReadItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemTypeSlot", "ReadItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemTypeSlot.OnMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsOpen                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemTypeSlot::OnMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemTypeSlot", "OnMenuOpenChanged");

	Params::UWTLHUDItemTypeSlot_OnMenuOpenChanged_Params Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemTypeSlot.OnGetItemMenuContent
// (Final, Native, Private)
// Parameters:
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UWTLHUDItemTypeSlot::OnGetItemMenuContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemTypeSlot", "OnGetItemMenuContent");

	Params::UWTLHUDItemTypeSlot_OnGetItemMenuContent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLHUDAccountInventorySlot
// (None)

class UClass* UWTLHUDAccountInventorySlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDAccountInventorySlot");

	return Clss;
}


// WTLHUDAccountInventorySlot WTL.Default__WTLHUDAccountInventorySlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDAccountInventorySlot* UWTLHUDAccountInventorySlot::GetDefaultObj()
{
	static class UWTLHUDAccountInventorySlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDAccountInventorySlot*>(UWTLHUDAccountInventorySlot::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDAccountInventorySlot.TakeItemFromAccountInventory
// (Final, Native, Private)
// Parameters:

void UWTLHUDAccountInventorySlot::TakeItemFromAccountInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDAccountInventorySlot", "TakeItemFromAccountInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDWindowBase
// (None)

class UClass* UWTLHUDWindowBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDWindowBase");

	return Clss;
}


// WTLHUDWindowBase WTL.Default__WTLHUDWindowBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDWindowBase* UWTLHUDWindowBase::GetDefaultObj()
{
	static class UWTLHUDWindowBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDWindowBase*>(UWTLHUDWindowBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDAccountInventoryWindow
// (None)

class UClass* UWTLHUDAccountInventoryWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDAccountInventoryWindow");

	return Clss;
}


// WTLHUDAccountInventoryWindow WTL.Default__WTLHUDAccountInventoryWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDAccountInventoryWindow* UWTLHUDAccountInventoryWindow::GetDefaultObj()
{
	static class UWTLHUDAccountInventoryWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDAccountInventoryWindow*>(UWTLHUDAccountInventoryWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDAccountInventoryWindow.TakeItemConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDAccountInventoryWindow::TakeItemConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDAccountInventoryWindow", "TakeItemConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDAccountInventoryWindow.PutItemConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDAccountInventoryWindow::PutItemConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDAccountInventoryWindow", "PutItemConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDAccountInventoryWindow.OnUpdateItemsButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDAccountInventoryWindow::OnUpdateItemsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDAccountInventoryWindow", "OnUpdateItemsButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDAccountInventoryWindow.OnItemsScrollBoxUserScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDAccountInventoryWindow::OnItemsScrollBoxUserScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDAccountInventoryWindow", "OnItemsScrollBoxUserScrolled");

	Params::UWTLHUDAccountInventoryWindow_OnItemsScrollBoxUserScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDAccountInventoryWindow.OnAccountInventoryItemsUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FWTLAccountInventoryItem>AccountInventoryItems                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDAccountInventoryWindow::OnAccountInventoryItemsUpdated(TArray<struct FWTLAccountInventoryItem>& AccountInventoryItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDAccountInventoryWindow", "OnAccountInventoryItemsUpdated");

	Params::UWTLHUDAccountInventoryWindow_OnAccountInventoryItemsUpdated_Params Parms{};

	Parms.AccountInventoryItems = AccountInventoryItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDAchievementUnlocked
// (None)

class UClass* UWTLHUDAchievementUnlocked::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDAchievementUnlocked");

	return Clss;
}


// WTLHUDAchievementUnlocked WTL.Default__WTLHUDAchievementUnlocked
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDAchievementUnlocked* UWTLHUDAchievementUnlocked::GetDefaultObj()
{
	static class UWTLHUDAchievementUnlocked* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDAchievementUnlocked*>(UWTLHUDAchievementUnlocked::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDAchievementUnlocked.OnShowAnimationFinished
// (Final, Native, Private)
// Parameters:

void UWTLHUDAchievementUnlocked::OnShowAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDAchievementUnlocked", "OnShowAnimationFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDAchievementUnlocked.OnHideAnimationFinished
// (Final, Native, Private)
// Parameters:

void UWTLHUDAchievementUnlocked::OnHideAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDAchievementUnlocked", "OnHideAnimationFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDActionTimer
// (None)

class UClass* UWTLHUDActionTimer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDActionTimer");

	return Clss;
}


// WTLHUDActionTimer WTL.Default__WTLHUDActionTimer
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDActionTimer* UWTLHUDActionTimer::GetDefaultObj()
{
	static class UWTLHUDActionTimer* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDActionTimer*>(UWTLHUDActionTimer::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDActionTimer.OnReadyAnimationFinished
// (Final, Native, Private)
// Parameters:

void UWTLHUDActionTimer::OnReadyAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDActionTimer", "OnReadyAnimationFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDActionTimer.OnCountdownSliderFinished
// (Final, Native, Private)
// Parameters:

void UWTLHUDActionTimer::OnCountdownSliderFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDActionTimer", "OnCountdownSliderFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDInfoWidget
// (None)

class UClass* UWTLHUDInfoWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDInfoWidget");

	return Clss;
}


// WTLHUDInfoWidget WTL.Default__WTLHUDInfoWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDInfoWidget* UWTLHUDInfoWidget::GetDefaultObj()
{
	static class UWTLHUDInfoWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDInfoWidget*>(UWTLHUDInfoWidget::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDActiveQuestInfo
// (None)

class UClass* UWTLHUDActiveQuestInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDActiveQuestInfo");

	return Clss;
}


// WTLHUDActiveQuestInfo WTL.Default__WTLHUDActiveQuestInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDActiveQuestInfo* UWTLHUDActiveQuestInfo::GetDefaultObj()
{
	static class UWTLHUDActiveQuestInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDActiveQuestInfo*>(UWTLHUDActiveQuestInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDArenaRewardWindow
// (None)

class UClass* UWTLHUDArenaRewardWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDArenaRewardWindow");

	return Clss;
}


// WTLHUDArenaRewardWindow WTL.Default__WTLHUDArenaRewardWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDArenaRewardWindow* UWTLHUDArenaRewardWindow::GetDefaultObj()
{
	static class UWTLHUDArenaRewardWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDArenaRewardWindow*>(UWTLHUDArenaRewardWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDArenaState
// (None)

class UClass* UWTLHUDArenaState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDArenaState");

	return Clss;
}


// WTLHUDArenaState WTL.Default__WTLHUDArenaState
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDArenaState* UWTLHUDArenaState::GetDefaultObj()
{
	static class UWTLHUDArenaState* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDArenaState*>(UWTLHUDArenaState::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDArenaState.OnArenaMatchEnded
// (Final, Native, Private, HasOutParams)
// Parameters:
// enum class EWTLFaction             WinningFaction                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLArenaLeaderboardRecord>Leaderboard                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDArenaState::OnArenaMatchEnded(enum class EWTLFaction WinningFaction, TArray<struct FWTLArenaLeaderboardRecord>& Leaderboard)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDArenaState", "OnArenaMatchEnded");

	Params::UWTLHUDArenaState_OnArenaMatchEnded_Params Parms{};

	Parms.WinningFaction = WinningFaction;
	Parms.Leaderboard = Leaderboard;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDArenaStateItem
// (None)

class UClass* UWTLHUDArenaStateItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDArenaStateItem");

	return Clss;
}


// WTLHUDArenaStateItem WTL.Default__WTLHUDArenaStateItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDArenaStateItem* UWTLHUDArenaStateItem::GetDefaultObj()
{
	static class UWTLHUDArenaStateItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDArenaStateItem*>(UWTLHUDArenaStateItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDArenaStateLeaderboardWindow
// (None)

class UClass* UWTLHUDArenaStateLeaderboardWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDArenaStateLeaderboardWindow");

	return Clss;
}


// WTLHUDArenaStateLeaderboardWindow WTL.Default__WTLHUDArenaStateLeaderboardWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDArenaStateLeaderboardWindow* UWTLHUDArenaStateLeaderboardWindow::GetDefaultObj()
{
	static class UWTLHUDArenaStateLeaderboardWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDArenaStateLeaderboardWindow*>(UWTLHUDArenaStateLeaderboardWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDArenaStateLeaderboardWindow.OnFactionsLeaderboardsListScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDArenaStateLeaderboardWindow::OnFactionsLeaderboardsListScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDArenaStateLeaderboardWindow", "OnFactionsLeaderboardsListScrolled");

	Params::UWTLHUDArenaStateLeaderboardWindow_OnFactionsLeaderboardsListScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDArenaStateLeaderboardWindowItem
// (None)

class UClass* UWTLHUDArenaStateLeaderboardWindowItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDArenaStateLeaderboardWindowItem");

	return Clss;
}


// WTLHUDArenaStateLeaderboardWindowItem WTL.Default__WTLHUDArenaStateLeaderboardWindowItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDArenaStateLeaderboardWindowItem* UWTLHUDArenaStateLeaderboardWindowItem::GetDefaultObj()
{
	static class UWTLHUDArenaStateLeaderboardWindowItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDArenaStateLeaderboardWindowItem*>(UWTLHUDArenaStateLeaderboardWindowItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDArenaStateLeaderboardWindowItemRecord
// (None)

class UClass* UWTLHUDArenaStateLeaderboardWindowItemRecord::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDArenaStateLeaderboardWindowItemRecord");

	return Clss;
}


// WTLHUDArenaStateLeaderboardWindowItemRecord WTL.Default__WTLHUDArenaStateLeaderboardWindowItemRecord
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDArenaStateLeaderboardWindowItemRecord* UWTLHUDArenaStateLeaderboardWindowItemRecord::GetDefaultObj()
{
	static class UWTLHUDArenaStateLeaderboardWindowItemRecord* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDArenaStateLeaderboardWindowItemRecord*>(UWTLHUDArenaStateLeaderboardWindowItemRecord::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemSlot
// (None)

class UClass* UWTLHUDItemSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemSlot");

	return Clss;
}


// WTLHUDItemSlot WTL.Default__WTLHUDItemSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemSlot* UWTLHUDItemSlot::GetDefaultObj()
{
	static class UWTLHUDItemSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemSlot*>(UWTLHUDItemSlot::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDItemSlot.ViewItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::ViewItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ViewItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.UseNewPassport
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::UseNewPassport()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "UseNewPassport");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.UseItemFromStorage
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::UseItemFromStorage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "UseItemFromStorage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.UseItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::UseItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "UseItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.UseGenderChangeConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::UseGenderChangeConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "UseGenderChangeConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.UseGenderChangeCertificate
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::UseGenderChangeCertificate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "UseGenderChangeCertificate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.UseClassCertificate
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::UseClassCertificate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "UseClassCertificate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.UnloadWeaponItemWithDropAmmoConfirm
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::UnloadWeaponItemWithDropAmmoConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "UnloadWeaponItemWithDropAmmoConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.UnloadWeaponItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::UnloadWeaponItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "UnloadWeaponItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.UnequipStuffItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::UnequipStuffItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "UnequipStuffItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.UnequipClothesItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::UnequipClothesItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "UnequipClothesItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.TakeFromStorage
// (Final, Native, Private)
// Parameters:
// bool                               IsTakeAll                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::TakeFromStorage(bool IsTakeAll)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "TakeFromStorage");

	Params::UWTLHUDItemSlot_TakeFromStorage_Params Parms{};

	Parms.IsTakeAll = IsTakeAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.TakeFromClanStorage
// (Final, Native, Private)
// Parameters:
// bool                               IsTakeAll                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::TakeFromClanStorage(bool IsTakeAll)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "TakeFromClanStorage");

	Params::UWTLHUDItemSlot_TakeFromClanStorage_Params Parms{};

	Parms.IsTakeAll = IsTakeAll;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.TakeFromAccountInventory
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::TakeFromAccountInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "TakeFromAccountInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.SplitItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::SplitItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "SplitItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.ShowItemShortInformation
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::ShowItemShortInformation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ShowItemShortInformation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.ShowItemInformation
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::ShowItemInformation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ShowItemInformation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.ShowDropItemConfirmation
// (Final, Native, Public)
// Parameters:

void UWTLHUDItemSlot::ShowDropItemConfirmation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ShowDropItemConfirmation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.ShowDestroyItemConfirmation
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::ShowDestroyItemConfirmation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ShowDestroyItemConfirmation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RepairWeaponByKitByWeaponID
// (Final, Native, Private)
// Parameters:
// uint64                             WeaponID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::RepairWeaponByKitByWeaponID(uint64 WeaponID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RepairWeaponByKitByWeaponID");

	Params::UWTLHUDItemSlot_RepairWeaponByKitByWeaponID_Params Parms{};

	Parms.WeaponID = WeaponID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RepairWeaponByKit
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RepairWeaponByKit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RepairWeaponByKit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RepairClothesByKitByClothesID
// (Final, Native, Private)
// Parameters:
// uint64                             ClothesID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::RepairClothesByKitByClothesID(uint64 ClothesID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RepairClothesByKitByClothesID");

	Params::UWTLHUDItemSlot_RepairClothesByKitByClothesID_Params Parms{};

	Parms.ClothesID = ClothesID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RepairClothesByKit
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RepairClothesByKit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RepairClothesByKit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RepairByRepairDeviceByItemID
// (Final, Native, Private)
// Parameters:
// uint64                             StuffID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::RepairByRepairDeviceByItemID(uint64 StuffID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RepairByRepairDeviceByItemID");

	Params::UWTLHUDItemSlot_RepairByRepairDeviceByItemID_Params Parms{};

	Parms.StuffID = StuffID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RepairByRepairDevice
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RepairByRepairDevice()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RepairByRepairDevice");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveWeaponPartFromExchange
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveWeaponPartFromExchange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveWeaponPartFromExchange");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveWeaponAttachmentByTypeID
// (Final, Native, Private)
// Parameters:
// uint64                             AttachmentTypeID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::RemoveWeaponAttachmentByTypeID(uint64 AttachmentTypeID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveWeaponAttachmentByTypeID");

	Params::UWTLHUDItemSlot_RemoveWeaponAttachmentByTypeID_Params Parms{};

	Parms.AttachmentTypeID = AttachmentTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveWeaponAttachmentBySlotTypeNumber
// (Final, Native, Private)
// Parameters:
// uint64                             WeaponAttachmentSlotTypeEnumNumber                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::RemoveWeaponAttachmentBySlotTypeNumber(uint64 WeaponAttachmentSlotTypeEnumNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveWeaponAttachmentBySlotTypeNumber");

	Params::UWTLHUDItemSlot_RemoveWeaponAttachmentBySlotTypeNumber_Params Parms{};

	Parms.WeaponAttachmentSlotTypeEnumNumber = WeaponAttachmentSlotTypeEnumNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveWeaponAttachmentBySlotType
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveWeaponAttachmentBySlotType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveWeaponAttachmentBySlotType");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveWeaponAttachment
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveWeaponAttachment()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveWeaponAttachment");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveSelfFromBaseActionStorage
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveSelfFromBaseActionStorage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveSelfFromBaseActionStorage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveFromStimulatorContainerSlot
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveFromStimulatorContainerSlot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveFromStimulatorContainerSlot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveFromModification
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveFromModification()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveFromModification");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveFromFastAccess
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveFromFastAccess()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveFromFastAccess");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveFromCustomization
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveFromCustomization()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveFromCustomization");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveFromBaseActionStorage
// (Final, Native, Private)
// Parameters:
// class UWTLHUDItemSlot*             ItemSlot                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::RemoveFromBaseActionStorage(class UWTLHUDItemSlot* ItemSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveFromBaseActionStorage");

	Params::UWTLHUDItemSlot_RemoveFromBaseActionStorage_Params Parms{};

	Parms.ItemSlot = ItemSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveArtefactItemFromContainer
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveArtefactItemFromContainer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveArtefactItemFromContainer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveAllWeaponAttachments
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveAllWeaponAttachments()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveAllWeaponAttachments");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.RemoveAllArmoredPlates
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::RemoveAllArmoredPlates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "RemoveAllArmoredPlates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.ReadItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::ReadItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ReadItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PutToAccountInventory
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::PutToAccountInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PutToAccountInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PutInStorage
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::PutInStorage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PutInStorage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PutInClanStorage
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::PutInClanStorage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PutInClanStorage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PlaceStuffItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::PlaceStuffItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PlaceStuffItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PlaceItemToStorageContent
// (Final, Native, Private)
// Parameters:
// bool                               IsClanStorage                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsCheckCount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWTLHUDItemSlot*             ItemSlot                                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLHUDItemSlot::PlaceItemToStorageContent(bool IsClanStorage, bool IsCheckCount, class UWTLHUDItemSlot* ItemSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PlaceItemToStorageContent");

	Params::UWTLHUDItemSlot_PlaceItemToStorageContent_Params Parms{};

	Parms.IsClanStorage = IsClanStorage;
	Parms.IsCheckCount = IsCheckCount;
	Parms.ItemSlot = ItemSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLHUDItemSlot.PlaceItemToClanStorage
// (Final, Native, Private)
// Parameters:
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::PlaceItemToClanStorage(const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PlaceItemToClanStorage");

	Params::UWTLHUDItemSlot_PlaceItemToClanStorage_Params Parms{};

	Parms.Description = Description;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PlaceArtefactItemInContainerByContainerID
// (Final, Native, Private)
// Parameters:
// uint64                             ContainerID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::PlaceArtefactItemInContainerByContainerID(uint64 ContainerID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PlaceArtefactItemInContainerByContainerID");

	Params::UWTLHUDItemSlot_PlaceArtefactItemInContainerByContainerID_Params Parms{};

	Parms.ContainerID = ContainerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PlaceArtefactItemInContainer
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::PlaceArtefactItemInContainer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PlaceArtefactItemInContainer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PickupItemFromClanStorage
// (Final, Native, Private)
// Parameters:
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::PickupItemFromClanStorage(const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PickupItemFromClanStorage");

	Params::UWTLHUDItemSlot_PickupItemFromClanStorage_Params Parms{};

	Parms.Description = Description;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PaintWeaponBySprayCanByWeaponID
// (Final, Native, Private)
// Parameters:
// uint64                             WeaponID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::PaintWeaponBySprayCanByWeaponID(uint64 WeaponID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PaintWeaponBySprayCanByWeaponID");

	Params::UWTLHUDItemSlot_PaintWeaponBySprayCanByWeaponID_Params Parms{};

	Parms.WeaponID = WeaponID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PaintWeaponBySprayCan
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::PaintWeaponBySprayCan()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PaintWeaponBySprayCan");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PaintItemWithSprayCanConfirm
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::PaintItemWithSprayCanConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PaintItemWithSprayCanConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PaintClothesBySprayCanByClothesID
// (Final, Native, Private)
// Parameters:
// uint64                             ClothesID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::PaintClothesBySprayCanByClothesID(uint64 ClothesID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PaintClothesBySprayCanByClothesID");

	Params::UWTLHUDItemSlot_PaintClothesBySprayCanByClothesID_Params Parms{};

	Parms.ClothesID = ClothesID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.PaintClothesBySprayCan
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::PaintClothesBySprayCan()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "PaintClothesBySprayCan");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.OpenExtractor
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::OpenExtractor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "OpenExtractor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.OpenArmoredPlatesWindow
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::OpenArmoredPlatesWindow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "OpenArmoredPlatesWindow");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.OnRepairItemByKitConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::OnRepairItemByKitConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "OnRepairItemByKitConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.OnRepairItemByKitConfirmationDialogHide
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::OnRepairItemByKitConfirmationDialogHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "OnRepairItemByKitConfirmationDialogHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.OnRepairByRepairDeviceConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::OnRepairByRepairDeviceConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "OnRepairByRepairDeviceConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.OnMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsOpen                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::OnMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "OnMenuOpenChanged");

	Params::UWTLHUDItemSlot_OnMenuOpenChanged_Params Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.OnGetItemMenuContent
// (Final, Native, Private)
// Parameters:
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UWTLHUDItemSlot::OnGetItemMenuContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "OnGetItemMenuContent");

	Params::UWTLHUDItemSlot_OnGetItemMenuContent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLHUDItemSlot.ModifyItemByKit
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::ModifyItemByKit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ModifyItemByKit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.LoadWeaponItemByAmmoID
// (Final, Native, Private)
// Parameters:
// uint64                             ID                                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::LoadWeaponItemByAmmoID(uint64 ID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "LoadWeaponItemByAmmoID");

	Params::UWTLHUDItemSlot_LoadWeaponItemByAmmoID_Params Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.LoadWeaponItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::LoadWeaponItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "LoadWeaponItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.LoadAmmoToWeaponItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::LoadAmmoToWeaponItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "LoadAmmoToWeaponItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.LoadAmmoToWeaponByWeaponID
// (Final, Native, Private)
// Parameters:
// uint64                             ID                                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::LoadAmmoToWeaponByWeaponID(uint64 ID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "LoadAmmoToWeaponByWeaponID");

	Params::UWTLHUDItemSlot_LoadAmmoToWeaponByWeaponID_Params Parms{};

	Parms.ID = ID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.InstallPDAModule
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::InstallPDAModule()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "InstallPDAModule");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.EquipStuffItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::EquipStuffItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "EquipStuffItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.EquipClothesItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::EquipClothesItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "EquipClothesItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.EngraveItem
// (Final, Native, Private)
// Parameters:
// class FString                      CustomizationName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::EngraveItem(const class FString& CustomizationName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "EngraveItem");

	Params::UWTLHUDItemSlot_EngraveItem_Params Parms{};

	Parms.CustomizationName = CustomizationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.DropItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::DropItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "DropItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.DestroyItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::DestroyItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "DestroyItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.CutFish
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::CutFish()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "CutFish");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.CombineItemWithItemID
// (Final, Native, Private)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::CombineItemWithItemID(uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "CombineItemWithItemID");

	Params::UWTLHUDItemSlot_CombineItemWithItemID_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.CombineItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::CombineItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "CombineItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.CloseExtractor
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::CloseExtractor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "CloseExtractor");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.ChargeStuffItemByEnergySourceItemByEnergySourceItemID
// (Final, Native, Private)
// Parameters:
// uint64                             EnergySourceItemID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::ChargeStuffItemByEnergySourceItemByEnergySourceItemID(uint64 EnergySourceItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ChargeStuffItemByEnergySourceItemByEnergySourceItemID");

	Params::UWTLHUDItemSlot_ChargeStuffItemByEnergySourceItemByEnergySourceItemID_Params Parms{};

	Parms.EnergySourceItemID = EnergySourceItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.ChargeStuffItemByEnergySourceItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::ChargeStuffItemByEnergySourceItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ChargeStuffItemByEnergySourceItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.ChargeEnergySourceItemToStuffItemByStuffItemID
// (Final, Native, Private)
// Parameters:
// uint64                             StuffItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::ChargeEnergySourceItemToStuffItemByStuffItemID(uint64 StuffItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ChargeEnergySourceItemToStuffItemByStuffItemID");

	Params::UWTLHUDItemSlot_ChargeEnergySourceItemToStuffItemByStuffItemID_Params Parms{};

	Parms.StuffItemID = StuffItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.ChargeEnergySourceItemToStuffItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::ChargeEnergySourceItemToStuffItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "ChargeEnergySourceItemToStuffItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.BreakWeaponItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::BreakWeaponItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "BreakWeaponItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AttachToWeaponByStuffItemID
// (Final, Native, Private)
// Parameters:
// uint64                             AttachmentID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::AttachToWeaponByStuffItemID(uint64 AttachmentID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AttachToWeaponByStuffItemID");

	Params::UWTLHUDItemSlot_AttachToWeaponByStuffItemID_Params Parms{};

	Parms.AttachmentID = AttachmentID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AttachToWeaponByStuffItem
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::AttachToWeaponByStuffItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AttachToWeaponByStuffItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AttachStuffItemToWeaponByWeaponID
// (Final, Native, Private)
// Parameters:
// uint64                             WeaponID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSlot::AttachStuffItemToWeaponByWeaponID(uint64 WeaponID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AttachStuffItemToWeaponByWeaponID");

	Params::UWTLHUDItemSlot_AttachStuffItemToWeaponByWeaponID_Params Parms{};

	Parms.WeaponID = WeaponID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AttachStuffItemToWeapon
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::AttachStuffItemToWeapon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AttachStuffItemToWeapon");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AssignToFastAccess
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::AssignToFastAccess()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AssignToFastAccess");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AddWeaponPartToExchange
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::AddWeaponPartToExchange()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AddWeaponPartToExchange");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AddToStimulatorContainerSlot
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::AddToStimulatorContainerSlot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AddToStimulatorContainerSlot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AddToCommission
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::AddToCommission()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AddToCommission");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AddToActionStorage
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::AddToActionStorage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AddToActionStorage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AddOnCustomization
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::AddOnCustomization()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AddOnCustomization");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSlot.AddForModification
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSlot::AddForModification()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSlot", "AddForModification");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDArmoredPlateSlot
// (None)

class UClass* UWTLHUDArmoredPlateSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDArmoredPlateSlot");

	return Clss;
}


// WTLHUDArmoredPlateSlot WTL.Default__WTLHUDArmoredPlateSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDArmoredPlateSlot* UWTLHUDArmoredPlateSlot::GetDefaultObj()
{
	static class UWTLHUDArmoredPlateSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDArmoredPlateSlot*>(UWTLHUDArmoredPlateSlot::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDArmoredPlateSlot.RemoveArmoredPlate
// (Final, Native, Private)
// Parameters:

void UWTLHUDArmoredPlateSlot::RemoveArmoredPlate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDArmoredPlateSlot", "RemoveArmoredPlate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDArmoredPlateSlot.InstallArmoredPlateByArmorPlateID
// (Final, Native, Private)
// Parameters:
// uint64                             ArmorPlateItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDArmoredPlateSlot::InstallArmoredPlateByArmorPlateID(uint64 ArmorPlateItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDArmoredPlateSlot", "InstallArmoredPlateByArmorPlateID");

	Params::UWTLHUDArmoredPlateSlot_InstallArmoredPlateByArmorPlateID_Params Parms{};

	Parms.ArmorPlateItemID = ArmorPlateItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDArmoredPlateSlot.InstallArmoredPlate
// (Final, Native, Private)
// Parameters:

void UWTLHUDArmoredPlateSlot::InstallArmoredPlate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDArmoredPlateSlot", "InstallArmoredPlate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDArmoredPlatesWindow
// (None)

class UClass* UWTLHUDArmoredPlatesWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDArmoredPlatesWindow");

	return Clss;
}


// WTLHUDArmoredPlatesWindow WTL.Default__WTLHUDArmoredPlatesWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDArmoredPlatesWindow* UWTLHUDArmoredPlatesWindow::GetDefaultObj()
{
	static class UWTLHUDArmoredPlatesWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDArmoredPlatesWindow*>(UWTLHUDArmoredPlatesWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDArmoredPlatesWindow.OnRemoveArmoredPlate
// (Final, Native, Private)
// Parameters:
// enum class EWTLArmorPlateType      ArmoredPlateType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDArmoredPlatesWindow::OnRemoveArmoredPlate(enum class EWTLArmorPlateType ArmoredPlateType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDArmoredPlatesWindow", "OnRemoveArmoredPlate");

	Params::UWTLHUDArmoredPlatesWindow_OnRemoveArmoredPlate_Params Parms{};

	Parms.ArmoredPlateType = ArmoredPlateType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDArmoredPlatesWindow.OnInstallArmoredPlate
// (Final, Native, Private)
// Parameters:
// enum class EWTLArmorPlateType      ArmoredPlateType                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ArmorPlateItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDArmoredPlatesWindow::OnInstallArmoredPlate(enum class EWTLArmorPlateType ArmoredPlateType, uint64 ArmorPlateItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDArmoredPlatesWindow", "OnInstallArmoredPlate");

	Params::UWTLHUDArmoredPlatesWindow_OnInstallArmoredPlate_Params Parms{};

	Parms.ArmoredPlateType = ArmoredPlateType;
	Parms.ArmorPlateItemID = ArmorPlateItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDArmorSlot
// (None)

class UClass* UWTLHUDArmorSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDArmorSlot");

	return Clss;
}


// WTLHUDArmorSlot WTL.Default__WTLHUDArmorSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDArmorSlot* UWTLHUDArmorSlot::GetDefaultObj()
{
	static class UWTLHUDArmorSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDArmorSlot*>(UWTLHUDArmorSlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDBadConnection
// (None)

class UClass* UWTLHUDBadConnection::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBadConnection");

	return Clss;
}


// WTLHUDBadConnection WTL.Default__WTLHUDBadConnection
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBadConnection* UWTLHUDBadConnection::GetDefaultObj()
{
	static class UWTLHUDBadConnection* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBadConnection*>(UWTLHUDBadConnection::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDBarter
// (None)

class UClass* UWTLHUDBarter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBarter");

	return Clss;
}


// WTLHUDBarter WTL.Default__WTLHUDBarter
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBarter* UWTLHUDBarter::GetDefaultObj()
{
	static class UWTLHUDBarter* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBarter*>(UWTLHUDBarter::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDBaseActionStorage
// (None)

class UClass* UWTLHUDBaseActionStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBaseActionStorage");

	return Clss;
}


// WTLHUDBaseActionStorage WTL.Default__WTLHUDBaseActionStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBaseActionStorage* UWTLHUDBaseActionStorage::GetDefaultObj()
{
	static class UWTLHUDBaseActionStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBaseActionStorage*>(UWTLHUDBaseActionStorage::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDBaseActionStorage.OnSlotRemove
// (Native, Protected)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsHasAnyItems                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDBaseActionStorage::OnSlotRemove(enum class EWTLItemType ItemType, uint64 ItemId, bool IsHasAnyItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBaseActionStorage", "OnSlotRemove");

	Params::UWTLHUDBaseActionStorage_OnSlotRemove_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.IsHasAnyItems = IsHasAnyItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBaseActionStorage.OnSlotAdd
// (Native, Protected)
// Parameters:
// class UWTLHUDInventorySlot*        InventorySlot                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDBaseActionStorage::OnSlotAdd(class UWTLHUDInventorySlot* InventorySlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBaseActionStorage", "OnSlotAdd");

	Params::UWTLHUDBaseActionStorage_OnSlotAdd_Params Parms{};

	Parms.InventorySlot = InventorySlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBaseActionStorage.OnActionBtnClick
// (Native, Protected)
// Parameters:

void UWTLHUDBaseActionStorage::OnActionBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBaseActionStorage", "OnActionBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBaseActionStorage.ActionConfirmed
// (Native, Protected)
// Parameters:

void UWTLHUDBaseActionStorage::ActionConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBaseActionStorage", "ActionConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDBarterStorage
// (None)

class UClass* UWTLHUDBarterStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBarterStorage");

	return Clss;
}


// WTLHUDBarterStorage WTL.Default__WTLHUDBarterStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBarterStorage* UWTLHUDBarterStorage::GetDefaultObj()
{
	static class UWTLHUDBarterStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBarterStorage*>(UWTLHUDBarterStorage::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDBarterStorage.OnReadyForBarterButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDBarterStorage::OnReadyForBarterButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBarterStorage", "OnReadyForBarterButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBarterStorage.OnMyTokensAmountTextBoxValueChange
// (Final, Native, Private)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDBarterStorage::OnMyTokensAmountTextBoxValueChange(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBarterStorage", "OnMyTokensAmountTextBoxValueChange");

	Params::UWTLHUDBarterStorage_OnMyTokensAmountTextBoxValueChange_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBarterStorage.OnMyTokensAmountTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDBarterStorage::OnMyTokensAmountTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBarterStorage", "OnMyTokensAmountTextBoxTextCommitted");

	Params::UWTLHUDBarterStorage_OnMyTokensAmountTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBarterStorage.OnHideAgreeForBarterWarning
// (Final, Native, Private)
// Parameters:

void UWTLHUDBarterStorage::OnHideAgreeForBarterWarning()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBarterStorage", "OnHideAgreeForBarterWarning");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBarterStorage.OnBarterDealChanged
// (Final, Native, Private)
// Parameters:

void UWTLHUDBarterStorage::OnBarterDealChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBarterStorage", "OnBarterDealChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDBarterWindow
// (None)

class UClass* UWTLHUDBarterWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBarterWindow");

	return Clss;
}


// WTLHUDBarterWindow WTL.Default__WTLHUDBarterWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBarterWindow* UWTLHUDBarterWindow::GetDefaultObj()
{
	static class UWTLHUDBarterWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBarterWindow*>(UWTLHUDBarterWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDBaseActionDropArea
// (None)

class UClass* UWTLHUDBaseActionDropArea::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBaseActionDropArea");

	return Clss;
}


// WTLHUDBaseActionDropArea WTL.Default__WTLHUDBaseActionDropArea
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBaseActionDropArea* UWTLHUDBaseActionDropArea::GetDefaultObj()
{
	static class UWTLHUDBaseActionDropArea* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBaseActionDropArea*>(UWTLHUDBaseActionDropArea::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDBaseActionDropArea.RemoveItemFromStorage
// (Native, Protected)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDBaseActionDropArea::RemoveItemFromStorage(uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBaseActionDropArea", "RemoveItemFromStorage");

	Params::UWTLHUDBaseActionDropArea_RemoveItemFromStorage_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBaseActionDropArea.DropItemToBuyStorageConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDBaseActionDropArea::DropItemToBuyStorageConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBaseActionDropArea", "DropItemToBuyStorageConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBaseActionDropArea.DropItemToBuyStorageCanceled
// (Final, Native, Private)
// Parameters:

void UWTLHUDBaseActionDropArea::DropItemToBuyStorageCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBaseActionDropArea", "DropItemToBuyStorageCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBaseActionDropArea.AddItemToStorage
// (Native, Protected)
// Parameters:
// class UWTLHUDInventorySlot*        Item                                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDBaseActionDropArea::AddItemToStorage(class UWTLHUDInventorySlot* Item)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBaseActionDropArea", "AddItemToStorage");

	Params::UWTLHUDBaseActionDropArea_AddItemToStorage_Params Parms{};

	Parms.Item = Item;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDBreakWeaponItem
// (None)

class UClass* UWTLHUDBreakWeaponItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBreakWeaponItem");

	return Clss;
}


// WTLHUDBreakWeaponItem WTL.Default__WTLHUDBreakWeaponItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBreakWeaponItem* UWTLHUDBreakWeaponItem::GetDefaultObj()
{
	static class UWTLHUDBreakWeaponItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBreakWeaponItem*>(UWTLHUDBreakWeaponItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDBreakWeaponItemWindow
// (None)

class UClass* UWTLHUDBreakWeaponItemWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBreakWeaponItemWindow");

	return Clss;
}


// WTLHUDBreakWeaponItemWindow WTL.Default__WTLHUDBreakWeaponItemWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBreakWeaponItemWindow* UWTLHUDBreakWeaponItemWindow::GetDefaultObj()
{
	static class UWTLHUDBreakWeaponItemWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBreakWeaponItemWindow*>(UWTLHUDBreakWeaponItemWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDBreakWeaponItemWindow.OnBreakConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDBreakWeaponItemWindow::OnBreakConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBreakWeaponItemWindow", "OnBreakConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBreakWeaponItemWindow.OnBreakBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDBreakWeaponItemWindow::OnBreakBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBreakWeaponItemWindow", "OnBreakBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDBulletinBoardItem
// (None)

class UClass* UWTLHUDBulletinBoardItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBulletinBoardItem");

	return Clss;
}


// WTLHUDBulletinBoardItem WTL.Default__WTLHUDBulletinBoardItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBulletinBoardItem* UWTLHUDBulletinBoardItem::GetDefaultObj()
{
	static class UWTLHUDBulletinBoardItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBulletinBoardItem*>(UWTLHUDBulletinBoardItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDBulletinBoardItem.OnTakeQuestBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDBulletinBoardItem::OnTakeQuestBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBulletinBoardItem", "OnTakeQuestBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBulletinBoardItem.OnDetailsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDBulletinBoardItem::OnDetailsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBulletinBoardItem", "OnDetailsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDBulletinBoardWindow
// (None)

class UClass* UWTLHUDBulletinBoardWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBulletinBoardWindow");

	return Clss;
}


// WTLHUDBulletinBoardWindow WTL.Default__WTLHUDBulletinBoardWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBulletinBoardWindow* UWTLHUDBulletinBoardWindow::GetDefaultObj()
{
	static class UWTLHUDBulletinBoardWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBulletinBoardWindow*>(UWTLHUDBulletinBoardWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDBulletinBoardWindow.OnUpdateAllowingTimerOut
// (Final, Native, Private)
// Parameters:

void UWTLHUDBulletinBoardWindow::OnUpdateAllowingTimerOut()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBulletinBoardWindow", "OnUpdateAllowingTimerOut");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBulletinBoardWindow.OnTakeQuestBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDBulletinBoardWindow::OnTakeQuestBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBulletinBoardWindow", "OnTakeQuestBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBulletinBoardWindow.OnBulletinBoardItemTakeQuestClicked
// (Final, Native, Private)
// Parameters:
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDBulletinBoardWindow::OnBulletinBoardItemTakeQuestClicked(int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBulletinBoardWindow", "OnBulletinBoardItemTakeQuestClicked");

	Params::UWTLHUDBulletinBoardWindow_OnBulletinBoardItemTakeQuestClicked_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBulletinBoardWindow.OnBulletinBoardItemDetailsClicked
// (Final, Native, Private)
// Parameters:
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDBulletinBoardWindow::OnBulletinBoardItemDetailsClicked(int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBulletinBoardWindow", "OnBulletinBoardItemDetailsClicked");

	Params::UWTLHUDBulletinBoardWindow_OnBulletinBoardItemDetailsClicked_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDBulletinBoardWindow.OnBackBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDBulletinBoardWindow::OnBackBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDBulletinBoardWindow", "OnBackBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDInventorySlot
// (None)

class UClass* UWTLHUDInventorySlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDInventorySlot");

	return Clss;
}


// WTLHUDInventorySlot WTL.Default__WTLHUDInventorySlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDInventorySlot* UWTLHUDInventorySlot::GetDefaultObj()
{
	static class UWTLHUDInventorySlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDInventorySlot*>(UWTLHUDInventorySlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDPriceSlot
// (None)

class UClass* UWTLHUDPriceSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDPriceSlot");

	return Clss;
}


// WTLHUDPriceSlot WTL.Default__WTLHUDPriceSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDPriceSlot* UWTLHUDPriceSlot::GetDefaultObj()
{
	static class UWTLHUDPriceSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDPriceSlot*>(UWTLHUDPriceSlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDBuySlot
// (None)

class UClass* UWTLHUDBuySlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBuySlot");

	return Clss;
}


// WTLHUDBuySlot WTL.Default__WTLHUDBuySlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBuySlot* UWTLHUDBuySlot::GetDefaultObj()
{
	static class UWTLHUDBuySlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBuySlot*>(UWTLHUDBuySlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDPriceStorage
// (None)

class UClass* UWTLHUDPriceStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDPriceStorage");

	return Clss;
}


// WTLHUDPriceStorage WTL.Default__WTLHUDPriceStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDPriceStorage* UWTLHUDPriceStorage::GetDefaultObj()
{
	static class UWTLHUDPriceStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDPriceStorage*>(UWTLHUDPriceStorage::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDBuyStorage
// (None)

class UClass* UWTLHUDBuyStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDBuyStorage");

	return Clss;
}


// WTLHUDBuyStorage WTL.Default__WTLHUDBuyStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDBuyStorage* UWTLHUDBuyStorage::GetDefaultObj()
{
	static class UWTLHUDBuyStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDBuyStorage*>(UWTLHUDBuyStorage::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDChangeClassWindow
// (None)

class UClass* UWTLHUDChangeClassWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDChangeClassWindow");

	return Clss;
}


// WTLHUDChangeClassWindow WTL.Default__WTLHUDChangeClassWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDChangeClassWindow* UWTLHUDChangeClassWindow::GetDefaultObj()
{
	static class UWTLHUDChangeClassWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDChangeClassWindow*>(UWTLHUDChangeClassWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDChangeClassWindow.OnChangeClassWindowItemClicked
// (Final, Native, Private)
// Parameters:
// enum class EWTLCharacterClass      SelectedCharacterClass                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDChangeClassWindow::OnChangeClassWindowItemClicked(enum class EWTLCharacterClass SelectedCharacterClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDChangeClassWindow", "OnChangeClassWindowItemClicked");

	Params::UWTLHUDChangeClassWindow_OnChangeClassWindowItemClicked_Params Parms{};

	Parms.SelectedCharacterClass = SelectedCharacterClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDChangeClassWindow.OnChangeClassConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDChangeClassWindow::OnChangeClassConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDChangeClassWindow", "OnChangeClassConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDChangeClassWindow.OnChangeClassButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDChangeClassWindow::OnChangeClassButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDChangeClassWindow", "OnChangeClassButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDChangeClassWindowItem
// (None)

class UClass* UWTLHUDChangeClassWindowItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDChangeClassWindowItem");

	return Clss;
}


// WTLHUDChangeClassWindowItem WTL.Default__WTLHUDChangeClassWindowItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDChangeClassWindowItem* UWTLHUDChangeClassWindowItem::GetDefaultObj()
{
	static class UWTLHUDChangeClassWindowItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDChangeClassWindowItem*>(UWTLHUDChangeClassWindowItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDCharacterEffectInfluence
// (None)

class UClass* UWTLHUDCharacterEffectInfluence::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCharacterEffectInfluence");

	return Clss;
}


// WTLHUDCharacterEffectInfluence WTL.Default__WTLHUDCharacterEffectInfluence
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCharacterEffectInfluence* UWTLHUDCharacterEffectInfluence::GetDefaultObj()
{
	static class UWTLHUDCharacterEffectInfluence* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCharacterEffectInfluence*>(UWTLHUDCharacterEffectInfluence::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDCharacterEquipment
// (None)

class UClass* UWTLHUDCharacterEquipment::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCharacterEquipment");

	return Clss;
}


// WTLHUDCharacterEquipment WTL.Default__WTLHUDCharacterEquipment
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCharacterEquipment* UWTLHUDCharacterEquipment::GetDefaultObj()
{
	static class UWTLHUDCharacterEquipment* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCharacterEquipment*>(UWTLHUDCharacterEquipment::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDCharacterEquipment.OnThirstTutorialButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCharacterEquipment::OnThirstTutorialButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCharacterEquipment", "OnThirstTutorialButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCharacterEquipment.OnHungerTutorialButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCharacterEquipment::OnHungerTutorialButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCharacterEquipment", "OnHungerTutorialButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCharacterEquipment.OnCharacterRotatorRotateStop
// (Final, Native, Private)
// Parameters:

void UWTLHUDCharacterEquipment::OnCharacterRotatorRotateStop()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCharacterEquipment", "OnCharacterRotatorRotateStop");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCharacterEquipment.OnCharacterRotatorRotateStart
// (Final, Native, Private)
// Parameters:

void UWTLHUDCharacterEquipment::OnCharacterRotatorRotateStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCharacterEquipment", "OnCharacterRotatorRotateStart");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCharacterEquipment.OnCharacterPreviewCheckBoxCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDCharacterEquipment::OnCharacterPreviewCheckBoxCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCharacterEquipment", "OnCharacterPreviewCheckBoxCheckStateChanged");

	Params::UWTLHUDCharacterEquipment_OnCharacterPreviewCheckBoxCheckStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDCharacterInfoWindow
// (None)

class UClass* UWTLHUDCharacterInfoWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCharacterInfoWindow");

	return Clss;
}


// WTLHUDCharacterInfoWindow WTL.Default__WTLHUDCharacterInfoWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCharacterInfoWindow* UWTLHUDCharacterInfoWindow::GetDefaultObj()
{
	static class UWTLHUDCharacterInfoWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCharacterInfoWindow*>(UWTLHUDCharacterInfoWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDCharacterInfoWindow.OnSendMessageBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDCharacterInfoWindow::OnSendMessageBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCharacterInfoWindow", "OnSendMessageBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCharacterInfoWindow.OnSendInviteToGroupBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDCharacterInfoWindow::OnSendInviteToGroupBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCharacterInfoWindow", "OnSendInviteToGroupBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCharacterInfoWindow.OnClanImageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCharacterInfoWindow::OnClanImageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCharacterInfoWindow", "OnClanImageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDChatSmileButton
// (None)

class UClass* UWTLHUDChatSmileButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDChatSmileButton");

	return Clss;
}


// WTLHUDChatSmileButton WTL.Default__WTLHUDChatSmileButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDChatSmileButton* UWTLHUDChatSmileButton::GetDefaultObj()
{
	static class UWTLHUDChatSmileButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDChatSmileButton*>(UWTLHUDChatSmileButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDChatTabButton
// (None)

class UClass* UWTLHUDChatTabButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDChatTabButton");

	return Clss;
}


// WTLHUDChatTabButton WTL.Default__WTLHUDChatTabButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDChatTabButton* UWTLHUDChatTabButton::GetDefaultObj()
{
	static class UWTLHUDChatTabButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDChatTabButton*>(UWTLHUDChatTabButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDClanInfoWindow
// (None)

class UClass* UWTLHUDClanInfoWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanInfoWindow");

	return Clss;
}


// WTLHUDClanInfoWindow WTL.Default__WTLHUDClanInfoWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanInfoWindow* UWTLHUDClanInfoWindow::GetDefaultObj()
{
	static class UWTLHUDClanInfoWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanInfoWindow*>(UWTLHUDClanInfoWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDClanStorage
// (None)

class UClass* UWTLHUDClanStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStorage");

	return Clss;
}


// WTLHUDClanStorage WTL.Default__WTLHUDClanStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStorage* UWTLHUDClanStorage::GetDefaultObj()
{
	static class UWTLHUDClanStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStorage*>(UWTLHUDClanStorage::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDClanStorageLogItem
// (None)

class UClass* UWTLHUDClanStorageLogItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStorageLogItem");

	return Clss;
}


// WTLHUDClanStorageLogItem WTL.Default__WTLHUDClanStorageLogItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStorageLogItem* UWTLHUDClanStorageLogItem::GetDefaultObj()
{
	static class UWTLHUDClanStorageLogItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStorageLogItem*>(UWTLHUDClanStorageLogItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDClanStoragePolicyGroupItem
// (None)

class UClass* UWTLHUDClanStoragePolicyGroupItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStoragePolicyGroupItem");

	return Clss;
}


// WTLHUDClanStoragePolicyGroupItem WTL.Default__WTLHUDClanStoragePolicyGroupItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStoragePolicyGroupItem* UWTLHUDClanStoragePolicyGroupItem::GetDefaultObj()
{
	static class UWTLHUDClanStoragePolicyGroupItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStoragePolicyGroupItem*>(UWTLHUDClanStoragePolicyGroupItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDClanStoragePolicyGroupItem.OnCanTakeCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStoragePolicyGroupItem::OnCanTakeCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStoragePolicyGroupItem", "OnCanTakeCheckBoxStateChanged");

	Params::UWTLHUDClanStoragePolicyGroupItem_OnCanTakeCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStoragePolicyGroupItem.OnCanPutCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStoragePolicyGroupItem::OnCanPutCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStoragePolicyGroupItem", "OnCanPutCheckBoxStateChanged");

	Params::UWTLHUDClanStoragePolicyGroupItem_OnCanPutCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDClanStoragePolicyWindow
// (None)

class UClass* UWTLHUDClanStoragePolicyWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStoragePolicyWindow");

	return Clss;
}


// WTLHUDClanStoragePolicyWindow WTL.Default__WTLHUDClanStoragePolicyWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStoragePolicyWindow* UWTLHUDClanStoragePolicyWindow::GetDefaultObj()
{
	static class UWTLHUDClanStoragePolicyWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStoragePolicyWindow*>(UWTLHUDClanStoragePolicyWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDClanStoragePolicyWindow.OnPolicyGroupItemCanTakeCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStoragePolicyWindow::OnPolicyGroupItemCanTakeCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStoragePolicyWindow", "OnPolicyGroupItemCanTakeCheckBoxStateChanged");

	Params::UWTLHUDClanStoragePolicyWindow_OnPolicyGroupItemCanTakeCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStoragePolicyWindow.OnPolicyGroupItemCanPutCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStoragePolicyWindow::OnPolicyGroupItemCanPutCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStoragePolicyWindow", "OnPolicyGroupItemCanPutCheckBoxStateChanged");

	Params::UWTLHUDClanStoragePolicyWindow_OnPolicyGroupItemCanPutCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStoragePolicyWindow.OnCanTakeAllCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStoragePolicyWindow::OnCanTakeAllCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStoragePolicyWindow", "OnCanTakeAllCheckBoxStateChanged");

	Params::UWTLHUDClanStoragePolicyWindow_OnCanTakeAllCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStoragePolicyWindow.OnCanPutAllCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStoragePolicyWindow::OnCanPutAllCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStoragePolicyWindow", "OnCanPutAllCheckBoxStateChanged");

	Params::UWTLHUDClanStoragePolicyWindow_OnCanPutAllCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStoragePolicyWindow.OnApplyBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStoragePolicyWindow::OnApplyBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStoragePolicyWindow", "OnApplyBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDClanStorageSlot
// (None)

class UClass* UWTLHUDClanStorageSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStorageSlot");

	return Clss;
}


// WTLHUDClanStorageSlot WTL.Default__WTLHUDClanStorageSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStorageSlot* UWTLHUDClanStorageSlot::GetDefaultObj()
{
	static class UWTLHUDClanStorageSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStorageSlot*>(UWTLHUDClanStorageSlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDClanStorageTabButton
// (None)

class UClass* UWTLHUDClanStorageTabButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStorageTabButton");

	return Clss;
}


// WTLHUDClanStorageTabButton WTL.Default__WTLHUDClanStorageTabButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStorageTabButton* UWTLHUDClanStorageTabButton::GetDefaultObj()
{
	static class UWTLHUDClanStorageTabButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStorageTabButton*>(UWTLHUDClanStorageTabButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDClanStorageTabBuyWindow
// (None)

class UClass* UWTLHUDClanStorageTabBuyWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStorageTabBuyWindow");

	return Clss;
}


// WTLHUDClanStorageTabBuyWindow WTL.Default__WTLHUDClanStorageTabBuyWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStorageTabBuyWindow* UWTLHUDClanStorageTabBuyWindow::GetDefaultObj()
{
	static class UWTLHUDClanStorageTabBuyWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStorageTabBuyWindow*>(UWTLHUDClanStorageTabBuyWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDClanStorageTabBuyWindow.OnBuyConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageTabBuyWindow::OnBuyConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageTabBuyWindow", "OnBuyConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageTabBuyWindow.OnBuyButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageTabBuyWindow::OnBuyButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageTabBuyWindow", "OnBuyButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDClanStorageTabImageItem
// (None)

class UClass* UWTLHUDClanStorageTabImageItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStorageTabImageItem");

	return Clss;
}


// WTLHUDClanStorageTabImageItem WTL.Default__WTLHUDClanStorageTabImageItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStorageTabImageItem* UWTLHUDClanStorageTabImageItem::GetDefaultObj()
{
	static class UWTLHUDClanStorageTabImageItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStorageTabImageItem*>(UWTLHUDClanStorageTabImageItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDClanStorageTabImageSelectWindow
// (None)

class UClass* UWTLHUDClanStorageTabImageSelectWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStorageTabImageSelectWindow");

	return Clss;
}


// WTLHUDClanStorageTabImageSelectWindow WTL.Default__WTLHUDClanStorageTabImageSelectWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStorageTabImageSelectWindow* UWTLHUDClanStorageTabImageSelectWindow::GetDefaultObj()
{
	static class UWTLHUDClanStorageTabImageSelectWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStorageTabImageSelectWindow*>(UWTLHUDClanStorageTabImageSelectWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDClanStorageTabImageSelectWindow.OnTabImageItemClicked
// (Final, Native, Private)
// Parameters:
// uint8                              ImageIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStorageTabImageSelectWindow::OnTabImageItemClicked(uint8 ImageIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageTabImageSelectWindow", "OnTabImageItemClicked");

	Params::UWTLHUDClanStorageTabImageSelectWindow_OnTabImageItemClicked_Params Parms{};

	Parms.ImageIndex = ImageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageTabImageSelectWindow.OnApplyBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageTabImageSelectWindow::OnApplyBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageTabImageSelectWindow", "OnApplyBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDClanStorageTabSettingsItem
// (None)

class UClass* UWTLHUDClanStorageTabSettingsItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStorageTabSettingsItem");

	return Clss;
}


// WTLHUDClanStorageTabSettingsItem WTL.Default__WTLHUDClanStorageTabSettingsItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStorageTabSettingsItem* UWTLHUDClanStorageTabSettingsItem::GetDefaultObj()
{
	static class UWTLHUDClanStorageTabSettingsItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStorageTabSettingsItem*>(UWTLHUDClanStorageTabSettingsItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDClanStorageTabSettingsItem.OnTabNameTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        InText                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDClanStorageTabSettingsItem::OnTabNameTextBoxTextChanged(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageTabSettingsItem", "OnTabNameTextBoxTextChanged");

	Params::UWTLHUDClanStorageTabSettingsItem_OnTabNameTextBoxTextChanged_Params Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageTabSettingsItem.OnTabImageMouseButtonDown
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                 ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UWTLHUDClanStorageTabSettingsItem::OnTabImageMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageTabSettingsItem", "OnTabImageMouseButtonDown");

	Params::UWTLHUDClanStorageTabSettingsItem_OnTabImageMouseButtonDown_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLHUDClanStorageTabSettingsItem.OnTabDescriptionTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        InText                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDClanStorageTabSettingsItem::OnTabDescriptionTextBoxTextChanged(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageTabSettingsItem", "OnTabDescriptionTextBoxTextChanged");

	Params::UWTLHUDClanStorageTabSettingsItem_OnTabDescriptionTextBoxTextChanged_Params Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageTabSettingsItem.OnPreviousImageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageTabSettingsItem::OnPreviousImageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageTabSettingsItem", "OnPreviousImageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageTabSettingsItem.OnNextImageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageTabSettingsItem::OnNextImageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageTabSettingsItem", "OnNextImageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageTabSettingsItem.OnConfigureAccessPolicyBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageTabSettingsItem::OnConfigureAccessPolicyBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageTabSettingsItem", "OnConfigureAccessPolicyBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDClanStorageTabStorage
// (None)

class UClass* UWTLHUDClanStorageTabStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStorageTabStorage");

	return Clss;
}


// WTLHUDClanStorageTabStorage WTL.Default__WTLHUDClanStorageTabStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStorageTabStorage* UWTLHUDClanStorageTabStorage::GetDefaultObj()
{
	static class UWTLHUDClanStorageTabStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStorageTabStorage*>(UWTLHUDClanStorageTabStorage::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDInteractiveSlotsStorage
// (None)

class UClass* UWTLHUDInteractiveSlotsStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDInteractiveSlotsStorage");

	return Clss;
}


// WTLHUDInteractiveSlotsStorage WTL.Default__WTLHUDInteractiveSlotsStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDInteractiveSlotsStorage* UWTLHUDInteractiveSlotsStorage::GetDefaultObj()
{
	static class UWTLHUDInteractiveSlotsStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDInteractiveSlotsStorage*>(UWTLHUDInteractiveSlotsStorage::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDClanStorageWindow
// (None)

class UClass* UWTLHUDClanStorageWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDClanStorageWindow");

	return Clss;
}


// WTLHUDClanStorageWindow WTL.Default__WTLHUDClanStorageWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDClanStorageWindow* UWTLHUDClanStorageWindow::GetDefaultObj()
{
	static class UWTLHUDClanStorageWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDClanStorageWindow*>(UWTLHUDClanStorageWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDClanStorageWindow.OnWithdrawTokensBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnWithdrawTokensBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnWithdrawTokensBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnUniteAllItemsBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnUniteAllItemsBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnUniteAllItemsBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnTabSettingsInfoChanged
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnTabSettingsInfoChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnTabSettingsInfoChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnTabBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStorageWindow::OnTabBtnClicked(uint8 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnTabBtnClicked");

	Params::UWTLHUDClanStorageWindow_OnTabBtnClicked_Params Parms{};

	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnSettingsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnSettingsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnSettingsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnPreviousLogPageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnPreviousLogPageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnPreviousLogPageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnOptimizeItemsBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnOptimizeItemsBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnOptimizeItemsBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnNPCActorActiveStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStorageWindow::OnNPCActorActiveStateChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnNPCActorActiveStateChanged");

	Params::UWTLHUDClanStorageWindow_OnNPCActorActiveStateChanged_Params Parms{};

	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnNextLogPageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnNextLogPageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnNextLogPageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnLogTypeTabButtonClicked
// (Final, Native, Private)
// Parameters:
// uint8                              LogTypeIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStorageWindow::OnLogTypeTabButtonClicked(uint8 LogTypeIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnLogTypeTabButtonClicked");

	Params::UWTLHUDClanStorageWindow_OnLogTypeTabButtonClicked_Params Parms{};

	Parms.LogTypeIndex = LogTypeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnLogTabSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStorageWindow::OnLogTabSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnLogTabSelectionChanged");

	Params::UWTLHUDClanStorageWindow_OnLogTabSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnLogOperationTypeSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStorageWindow::OnLogOperationTypeSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnLogOperationTypeSelectionChanged");

	Params::UWTLHUDClanStorageWindow_OnLogOperationTypeSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnLogItemsPerPageSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStorageWindow::OnLogItemsPerPageSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnLogItemsPerPageSelectionChanged");

	Params::UWTLHUDClanStorageWindow_OnLogItemsPerPageSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnLogDataChanged
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnLogDataChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnLogDataChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnLogCharacterNameTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDClanStorageWindow::OnLogCharacterNameTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnLogCharacterNameTextCommitted");

	Params::UWTLHUDClanStorageWindow_OnLogCharacterNameTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnLogBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnLogBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnLogBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnDepositTokensBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnDepositTokensBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnDepositTokensBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnContentChanged
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnContentChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnContentChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnClanStorageSlotDragDetected
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnClanStorageSlotDragDetected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnClanStorageSlotDragDetected");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnClanStorageSlotDragCancelled
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnClanStorageSlotDragCancelled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnClanStorageSlotDragCancelled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnBuyStorageTabConfirm
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnBuyStorageTabConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnBuyStorageTabConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnBackBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnBackBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnBackBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDClanStorageWindow.OnApplySettingsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDClanStorageWindow::OnApplySettingsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDClanStorageWindow", "OnApplySettingsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDCommentaryWindow
// (None)

class UClass* UWTLHUDCommentaryWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCommentaryWindow");

	return Clss;
}


// WTLHUDCommentaryWindow WTL.Default__WTLHUDCommentaryWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCommentaryWindow* UWTLHUDCommentaryWindow::GetDefaultObj()
{
	static class UWTLHUDCommentaryWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCommentaryWindow*>(UWTLHUDCommentaryWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDCommentaryWindow.OnOKBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommentaryWindow::OnOKBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommentaryWindow", "OnOKBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommentaryWindow.OnCommentaryTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDCommentaryWindow::OnCommentaryTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommentaryWindow", "OnCommentaryTextBoxCommitted");

	Params::UWTLHUDCommentaryWindow_OnCommentaryTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommentaryWindow.OnCommentaryTextBoxChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        InText                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDCommentaryWindow::OnCommentaryTextBoxChanged(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommentaryWindow", "OnCommentaryTextBoxChanged");

	Params::UWTLHUDCommentaryWindow_OnCommentaryTextBoxChanged_Params Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDCommissionAddUpdateWindow
// (None)

class UClass* UWTLHUDCommissionAddUpdateWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCommissionAddUpdateWindow");

	return Clss;
}


// WTLHUDCommissionAddUpdateWindow WTL.Default__WTLHUDCommissionAddUpdateWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCommissionAddUpdateWindow* UWTLHUDCommissionAddUpdateWindow::GetDefaultObj()
{
	static class UWTLHUDCommissionAddUpdateWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCommissionAddUpdateWindow*>(UWTLHUDCommissionAddUpdateWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDCommissionAddUpdateWindow.OnPriceTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDCommissionAddUpdateWindow::OnPriceTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionAddUpdateWindow", "OnPriceTextBoxTextCommitted");

	Params::UWTLHUDCommissionAddUpdateWindow_OnPriceTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionAddUpdateWindow.OnPriceTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDCommissionAddUpdateWindow::OnPriceTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionAddUpdateWindow", "OnPriceTextBoxTextChanged");

	Params::UWTLHUDCommissionAddUpdateWindow_OnPriceTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionAddUpdateWindow.OnMinBuyCountTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDCommissionAddUpdateWindow::OnMinBuyCountTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionAddUpdateWindow", "OnMinBuyCountTextBoxTextCommitted");

	Params::UWTLHUDCommissionAddUpdateWindow_OnMinBuyCountTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionAddUpdateWindow.OnBtnMaxDaysUpClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionAddUpdateWindow::OnBtnMaxDaysUpClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionAddUpdateWindow", "OnBtnMaxDaysUpClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionAddUpdateWindow.OnBtnMaxDaysDownClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionAddUpdateWindow::OnBtnMaxDaysDownClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionAddUpdateWindow", "OnBtnMaxDaysDownClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionAddUpdateWindow.OnBtnDaysUpClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionAddUpdateWindow::OnBtnDaysUpClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionAddUpdateWindow", "OnBtnDaysUpClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionAddUpdateWindow.OnBtnDaysDownClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionAddUpdateWindow::OnBtnDaysDownClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionAddUpdateWindow", "OnBtnDaysDownClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionAddUpdateWindow.OnActionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionAddUpdateWindow::OnActionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionAddUpdateWindow", "OnActionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDCommissionDropArea
// (None)

class UClass* UWTLHUDCommissionDropArea::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCommissionDropArea");

	return Clss;
}


// WTLHUDCommissionDropArea WTL.Default__WTLHUDCommissionDropArea
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCommissionDropArea* UWTLHUDCommissionDropArea::GetDefaultObj()
{
	static class UWTLHUDCommissionDropArea* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCommissionDropArea*>(UWTLHUDCommissionDropArea::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDCommissionList
// (None)

class UClass* UWTLHUDCommissionList::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCommissionList");

	return Clss;
}


// WTLHUDCommissionList WTL.Default__WTLHUDCommissionList
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCommissionList* UWTLHUDCommissionList::GetDefaultObj()
{
	static class UWTLHUDCommissionList* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCommissionList*>(UWTLHUDCommissionList::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDCommissionList.OnWarningBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionList::OnWarningBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionList", "OnWarningBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionList.OnUpdateCommissionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionList::OnUpdateCommissionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionList", "OnUpdateCommissionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionList.OnTakeCommissionMoneyBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionList::OnTakeCommissionMoneyBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionList", "OnTakeCommissionMoneyBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionList.OnRemoveItemFromCommissionConfirm
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionList::OnRemoveItemFromCommissionConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionList", "OnRemoveItemFromCommissionConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionList.OnRemoveItemFromCommissionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionList::OnRemoveItemFromCommissionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionList", "OnRemoveItemFromCommissionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionList.OnMessageDialogHide
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionList::OnMessageDialogHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionList", "OnMessageDialogHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionList.OnCommissionListItemClicked
// (Final, Native, Private)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDCommissionList::OnCommissionListItemClicked(enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionList", "OnCommissionListItemClicked");

	Params::UWTLHUDCommissionList_OnCommissionListItemClicked_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionList.OnAddItemDropped
// (Final, Native, Private)
// Parameters:
// enum class EWTLItemType            ListItemType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ListItemID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             ListItemTypeID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ListItemCount                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWTLHUDItemSlot*             DroppedItemSlot                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDCommissionList::OnAddItemDropped(enum class EWTLItemType ListItemType, uint64 ListItemID, uint16 ListItemTypeID, int32 ListItemCount, class UWTLHUDItemSlot* DroppedItemSlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionList", "OnAddItemDropped");

	Params::UWTLHUDCommissionList_OnAddItemDropped_Params Parms{};

	Parms.ListItemType = ListItemType;
	Parms.ListItemID = ListItemID;
	Parms.ListItemTypeID = ListItemTypeID;
	Parms.ListItemCount = ListItemCount;
	Parms.DroppedItemSlot = DroppedItemSlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionList.OnAddItemConfirm
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionList::OnAddItemConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionList", "OnAddItemConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDCommissionListItem
// (None)

class UClass* UWTLHUDCommissionListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCommissionListItem");

	return Clss;
}


// WTLHUDCommissionListItem WTL.Default__WTLHUDCommissionListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCommissionListItem* UWTLHUDCommissionListItem::GetDefaultObj()
{
	static class UWTLHUDCommissionListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCommissionListItem*>(UWTLHUDCommissionListItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDSellStorageBase
// (None)

class UClass* UWTLHUDSellStorageBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSellStorageBase");

	return Clss;
}


// WTLHUDSellStorageBase WTL.Default__WTLHUDSellStorageBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSellStorageBase* UWTLHUDSellStorageBase::GetDefaultObj()
{
	static class UWTLHUDSellStorageBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSellStorageBase*>(UWTLHUDSellStorageBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDSellStorageBase.SelectItemTypeCategory
// (Native, Protected)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDSellStorageBase::SelectItemTypeCategory(enum class EWTLItemType ItemType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageBase", "SelectItemTypeCategory");

	Params::UWTLHUDSellStorageBase_SelectItemTypeCategory_Params Parms{};

	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageBase.OnWeaponCaliberSelectionChanged
// (Native, Protected)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDSellStorageBase::OnWeaponCaliberSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageBase", "OnWeaponCaliberSelectionChanged");

	Params::UWTLHUDSellStorageBase_OnWeaponCaliberSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageBase.OnTabBtnClicked
// (Native, Protected)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDSellStorageBase::OnTabBtnClicked(enum class EWTLItemType ItemType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageBase", "OnTabBtnClicked");

	Params::UWTLHUDSellStorageBase_OnTabBtnClicked_Params Parms{};

	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageBase.OnSellItemsChanged
// (Native, Protected)
// Parameters:

void UWTLHUDSellStorageBase::OnSellItemsChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageBase", "OnSellItemsChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageBase.OnItemSubTypeSelectionChanged
// (Native, Protected)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDSellStorageBase::OnItemSubTypeSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageBase", "OnItemSubTypeSelectionChanged");

	Params::UWTLHUDSellStorageBase_OnItemSubTypeSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageBase.OnItemSortSelectionChanged
// (Native, Protected)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDSellStorageBase::OnItemSortSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageBase", "OnItemSortSelectionChanged");

	Params::UWTLHUDSellStorageBase_OnItemSortSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageBase.OnBuyItemConfirmed
// (Native, Protected)
// Parameters:

void UWTLHUDSellStorageBase::OnBuyItemConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageBase", "OnBuyItemConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageBase.OnBuyItemCanceled
// (Final, Native, Protected)
// Parameters:

void UWTLHUDSellStorageBase::OnBuyItemCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageBase", "OnBuyItemCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageBase.OnBuyItem
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FWTLSellItemInfo            SellItemInfo                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               bIsCannotUseItem                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDSellStorageBase::OnBuyItem(struct FWTLSellItemInfo& SellItemInfo, bool bIsCannotUseItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageBase", "OnBuyItem");

	Params::UWTLHUDSellStorageBase_OnBuyItem_Params Parms{};

	Parms.SellItemInfo = SellItemInfo;
	Parms.bIsCannotUseItem = bIsCannotUseItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageBase.BuyItem
// (Final, Native, Protected)
// Parameters:

void UWTLHUDSellStorageBase::BuyItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageBase", "BuyItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDCommissionSellStorage
// (None)

class UClass* UWTLHUDCommissionSellStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCommissionSellStorage");

	return Clss;
}


// WTLHUDCommissionSellStorage WTL.Default__WTLHUDCommissionSellStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCommissionSellStorage* UWTLHUDCommissionSellStorage::GetDefaultObj()
{
	static class UWTLHUDCommissionSellStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCommissionSellStorage*>(UWTLHUDCommissionSellStorage::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDCommissionSellStorage.OnUpdateDelay
// (Final, Native, Private)
// Parameters:

void UWTLHUDCommissionSellStorage::OnUpdateDelay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionSellStorage", "OnUpdateDelay");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionSellStorage.OnPageSwitched
// (Final, Native, Private)
// Parameters:
// int32                              CurrentPageIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDCommissionSellStorage::OnPageSwitched(int32 CurrentPageIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionSellStorage", "OnPageSwitched");

	Params::UWTLHUDCommissionSellStorage_OnPageSwitched_Params Parms{};

	Parms.CurrentPageIndex = CurrentPageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCommissionSellStorage.OnItemsPerPageSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDCommissionSellStorage::OnItemsPerPageSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCommissionSellStorage", "OnItemsPerPageSelectionChanged");

	Params::UWTLHUDCommissionSellStorage_OnItemsPerPageSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDContentInventory
// (None)

class UClass* UWTLHUDContentInventory::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDContentInventory");

	return Clss;
}


// WTLHUDContentInventory WTL.Default__WTLHUDContentInventory
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDContentInventory* UWTLHUDContentInventory::GetDefaultObj()
{
	static class UWTLHUDContentInventory* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDContentInventory*>(UWTLHUDContentInventory::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDContentInventoryStorage
// (None)

class UClass* UWTLHUDContentInventoryStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDContentInventoryStorage");

	return Clss;
}


// WTLHUDContentInventoryStorage WTL.Default__WTLHUDContentInventoryStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDContentInventoryStorage* UWTLHUDContentInventoryStorage::GetDefaultObj()
{
	static class UWTLHUDContentInventoryStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDContentInventoryStorage*>(UWTLHUDContentInventoryStorage::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDContentInventoryStorage.TakeAllConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDContentInventoryStorage::TakeAllConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "TakeAllConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnUniteAllItemsBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDContentInventoryStorage::OnUniteAllItemsBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnUniteAllItemsBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnTakeAllBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDContentInventoryStorage::OnTakeAllBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnTakeAllBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnStorageScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDContentInventoryStorage::OnStorageScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnStorageScrolled");

	Params::UWTLHUDContentInventoryStorage_OnStorageScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnRemoveStashBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDContentInventoryStorage::OnRemoveStashBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnRemoveStashBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnPutGiftBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDContentInventoryStorage::OnPutGiftBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnPutGiftBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnOptimizeItemsBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDContentInventoryStorage::OnOptimizeItemsBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnOptimizeItemsBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnObjectDestroyed
// (Final, Native, Private)
// Parameters:

void UWTLHUDContentInventoryStorage::OnObjectDestroyed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnObjectDestroyed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnNPCActorActiveStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDContentInventoryStorage::OnNPCActorActiveStateChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnNPCActorActiveStateChanged");

	Params::UWTLHUDContentInventoryStorage_OnNPCActorActiveStateChanged_Params Parms{};

	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnExtinguishCampfireBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDContentInventoryStorage::OnExtinguishCampfireBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnExtinguishCampfireBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnContentChanged
// (Final, Native, Private)
// Parameters:

void UWTLHUDContentInventoryStorage::OnContentChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnContentChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDContentInventoryStorage.OnCampfireWasExtinguish
// (Final, Native, Private)
// Parameters:

void UWTLHUDContentInventoryStorage::OnCampfireWasExtinguish()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDContentInventoryStorage", "OnCampfireWasExtinguish");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDCraft
// (None)

class UClass* UWTLHUDCraft::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCraft");

	return Clss;
}


// WTLHUDCraft WTL.Default__WTLHUDCraft
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCraft* UWTLHUDCraft::GetDefaultObj()
{
	static class UWTLHUDCraft* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCraft*>(UWTLHUDCraft::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDNeedCountSlot
// (None)

class UClass* UWTLHUDNeedCountSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDNeedCountSlot");

	return Clss;
}


// WTLHUDNeedCountSlot WTL.Default__WTLHUDNeedCountSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDNeedCountSlot* UWTLHUDNeedCountSlot::GetDefaultObj()
{
	static class UWTLHUDNeedCountSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDNeedCountSlot*>(UWTLHUDNeedCountSlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDCraftIngredientSlot
// (None)

class UClass* UWTLHUDCraftIngredientSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCraftIngredientSlot");

	return Clss;
}


// WTLHUDCraftIngredientSlot WTL.Default__WTLHUDCraftIngredientSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCraftIngredientSlot* UWTLHUDCraftIngredientSlot::GetDefaultObj()
{
	static class UWTLHUDCraftIngredientSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCraftIngredientSlot*>(UWTLHUDCraftIngredientSlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDCraftInstrumentIcon
// (None)

class UClass* UWTLHUDCraftInstrumentIcon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCraftInstrumentIcon");

	return Clss;
}


// WTLHUDCraftInstrumentIcon WTL.Default__WTLHUDCraftInstrumentIcon
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCraftInstrumentIcon* UWTLHUDCraftInstrumentIcon::GetDefaultObj()
{
	static class UWTLHUDCraftInstrumentIcon* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCraftInstrumentIcon*>(UWTLHUDCraftInstrumentIcon::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDCraftInstrumentInfo
// (None)

class UClass* UWTLHUDCraftInstrumentInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCraftInstrumentInfo");

	return Clss;
}


// WTLHUDCraftInstrumentInfo WTL.Default__WTLHUDCraftInstrumentInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCraftInstrumentInfo* UWTLHUDCraftInstrumentInfo::GetDefaultObj()
{
	static class UWTLHUDCraftInstrumentInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCraftInstrumentInfo*>(UWTLHUDCraftInstrumentInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDCraftResultSlot
// (None)

class UClass* UWTLHUDCraftResultSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCraftResultSlot");

	return Clss;
}


// WTLHUDCraftResultSlot WTL.Default__WTLHUDCraftResultSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCraftResultSlot* UWTLHUDCraftResultSlot::GetDefaultObj()
{
	static class UWTLHUDCraftResultSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCraftResultSlot*>(UWTLHUDCraftResultSlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDCraftWindow
// (None)

class UClass* UWTLHUDCraftWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCraftWindow");

	return Clss;
}


// WTLHUDCraftWindow WTL.Default__WTLHUDCraftWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCraftWindow* UWTLHUDCraftWindow::GetDefaultObj()
{
	static class UWTLHUDCraftWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCraftWindow*>(UWTLHUDCraftWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDCraftWindow.OnCraftWindowItemClicked
// (Final, Native, Private)
// Parameters:
// int32                              CraftItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDCraftWindow::OnCraftWindowItemClicked(int32 CraftItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCraftWindow", "OnCraftWindowItemClicked");

	Params::UWTLHUDCraftWindow_OnCraftWindowItemClicked_Params Parms{};

	Parms.CraftItemID = CraftItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCraftWindow.OnCraftObjectActiveStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDCraftWindow::OnCraftObjectActiveStateChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCraftWindow", "OnCraftObjectActiveStateChanged");

	Params::UWTLHUDCraftWindow_OnCraftObjectActiveStateChanged_Params Parms{};

	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDCraftWindow.OnBtnCreateClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDCraftWindow::OnBtnCreateClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDCraftWindow", "OnBtnCreateClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDCraftWindowItem
// (None)

class UClass* UWTLHUDCraftWindowItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCraftWindowItem");

	return Clss;
}


// WTLHUDCraftWindowItem WTL.Default__WTLHUDCraftWindowItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCraftWindowItem* UWTLHUDCraftWindowItem::GetDefaultObj()
{
	static class UWTLHUDCraftWindowItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCraftWindowItem*>(UWTLHUDCraftWindowItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDCrosshair
// (None)

class UClass* UWTLHUDCrosshair::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDCrosshair");

	return Clss;
}


// WTLHUDCrosshair WTL.Default__WTLHUDCrosshair
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDCrosshair* UWTLHUDCrosshair::GetDefaultObj()
{
	static class UWTLHUDCrosshair* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDCrosshair*>(UWTLHUDCrosshair::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDDamagePointer
// (None)

class UClass* UWTLHUDDamagePointer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDDamagePointer");

	return Clss;
}


// WTLHUDDamagePointer WTL.Default__WTLHUDDamagePointer
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDDamagePointer* UWTLHUDDamagePointer::GetDefaultObj()
{
	static class UWTLHUDDamagePointer* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDDamagePointer*>(UWTLHUDDamagePointer::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDDamagePointerItem
// (None)

class UClass* UWTLHUDDamagePointerItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDDamagePointerItem");

	return Clss;
}


// WTLHUDDamagePointerItem WTL.Default__WTLHUDDamagePointerItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDDamagePointerItem* UWTLHUDDamagePointerItem::GetDefaultObj()
{
	static class UWTLHUDDamagePointerItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDDamagePointerItem*>(UWTLHUDDamagePointerItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDDraggedSlot
// (None)

class UClass* UWTLHUDDraggedSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDDraggedSlot");

	return Clss;
}


// WTLHUDDraggedSlot WTL.Default__WTLHUDDraggedSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDDraggedSlot* UWTLHUDDraggedSlot::GetDefaultObj()
{
	static class UWTLHUDDraggedSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDDraggedSlot*>(UWTLHUDDraggedSlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDEmotionStateExitHint
// (None)

class UClass* UWTLHUDEmotionStateExitHint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDEmotionStateExitHint");

	return Clss;
}


// WTLHUDEmotionStateExitHint WTL.Default__WTLHUDEmotionStateExitHint
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDEmotionStateExitHint* UWTLHUDEmotionStateExitHint::GetDefaultObj()
{
	static class UWTLHUDEmotionStateExitHint* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDEmotionStateExitHint*>(UWTLHUDEmotionStateExitHint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDEventMessageWindow
// (None)

class UClass* UWTLHUDEventMessageWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDEventMessageWindow");

	return Clss;
}


// WTLHUDEventMessageWindow WTL.Default__WTLHUDEventMessageWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDEventMessageWindow* UWTLHUDEventMessageWindow::GetDefaultObj()
{
	static class UWTLHUDEventMessageWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDEventMessageWindow*>(UWTLHUDEventMessageWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDEventNotificationItem
// (None)

class UClass* UWTLHUDEventNotificationItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDEventNotificationItem");

	return Clss;
}


// WTLHUDEventNotificationItem WTL.Default__WTLHUDEventNotificationItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDEventNotificationItem* UWTLHUDEventNotificationItem::GetDefaultObj()
{
	static class UWTLHUDEventNotificationItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDEventNotificationItem*>(UWTLHUDEventNotificationItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDEventNotificator
// (None)

class UClass* UWTLHUDEventNotificator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDEventNotificator");

	return Clss;
}


// WTLHUDEventNotificator WTL.Default__WTLHUDEventNotificator
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDEventNotificator* UWTLHUDEventNotificator::GetDefaultObj()
{
	static class UWTLHUDEventNotificator* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDEventNotificator*>(UWTLHUDEventNotificator::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDEventPointInfo
// (None)

class UClass* UWTLHUDEventPointInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDEventPointInfo");

	return Clss;
}


// WTLHUDEventPointInfo WTL.Default__WTLHUDEventPointInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDEventPointInfo* UWTLHUDEventPointInfo::GetDefaultObj()
{
	static class UWTLHUDEventPointInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDEventPointInfo*>(UWTLHUDEventPointInfo::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDEventPointInfo.UpdateEventTasks
// (Final, Native, Private)
// Parameters:

void UWTLHUDEventPointInfo::UpdateEventTasks()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDEventPointInfo", "UpdateEventTasks");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDEventPointInfoTask
// (None)

class UClass* UWTLHUDEventPointInfoTask::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDEventPointInfoTask");

	return Clss;
}


// WTLHUDEventPointInfoTask WTL.Default__WTLHUDEventPointInfoTask
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDEventPointInfoTask* UWTLHUDEventPointInfoTask::GetDefaultObj()
{
	static class UWTLHUDEventPointInfoTask* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDEventPointInfoTask*>(UWTLHUDEventPointInfoTask::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDExtractor
// (None)

class UClass* UWTLHUDExtractor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDExtractor");

	return Clss;
}


// WTLHUDExtractor WTL.Default__WTLHUDExtractor
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDExtractor* UWTLHUDExtractor::GetDefaultObj()
{
	static class UWTLHUDExtractor* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDExtractor*>(UWTLHUDExtractor::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDExtractorStorage
// (None)

class UClass* UWTLHUDExtractorStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDExtractorStorage");

	return Clss;
}


// WTLHUDExtractorStorage WTL.Default__WTLHUDExtractorStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDExtractorStorage* UWTLHUDExtractorStorage::GetDefaultObj()
{
	static class UWTLHUDExtractorStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDExtractorStorage*>(UWTLHUDExtractorStorage::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDExtractorStorage.OnContainerSlotInit
// (Final, Native, Protected)
// Parameters:
// class UWTLHUDInventorySlot*        InventorySlot                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDExtractorStorage::OnContainerSlotInit(class UWTLHUDInventorySlot* InventorySlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDExtractorStorage", "OnContainerSlotInit");

	Params::UWTLHUDExtractorStorage_OnContainerSlotInit_Params Parms{};

	Parms.InventorySlot = InventorySlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDExtractorStorage.OnContainerSlotClear
// (Final, Native, Protected)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDExtractorStorage::OnContainerSlotClear(uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDExtractorStorage", "OnContainerSlotClear");

	Params::UWTLHUDExtractorStorage_OnContainerSlotClear_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDExtractorWindow
// (None)

class UClass* UWTLHUDExtractorWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDExtractorWindow");

	return Clss;
}


// WTLHUDExtractorWindow WTL.Default__WTLHUDExtractorWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDExtractorWindow* UWTLHUDExtractorWindow::GetDefaultObj()
{
	static class UWTLHUDExtractorWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDExtractorWindow*>(UWTLHUDExtractorWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDFastAccessSlot
// (None)

class UClass* UWTLHUDFastAccessSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDFastAccessSlot");

	return Clss;
}


// WTLHUDFastAccessSlot WTL.Default__WTLHUDFastAccessSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDFastAccessSlot* UWTLHUDFastAccessSlot::GetDefaultObj()
{
	static class UWTLHUDFastAccessSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDFastAccessSlot*>(UWTLHUDFastAccessSlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDFastAccessSlots
// (None)

class UClass* UWTLHUDFastAccessSlots::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDFastAccessSlots");

	return Clss;
}


// WTLHUDFastAccessSlots WTL.Default__WTLHUDFastAccessSlots
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDFastAccessSlots* UWTLHUDFastAccessSlots::GetDefaultObj()
{
	static class UWTLHUDFastAccessSlots* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDFastAccessSlots*>(UWTLHUDFastAccessSlots::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDFastAccessSlots.UpdatePDANotifications
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::UpdatePDANotifications()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "UpdatePDANotifications");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnPDAItemBtnUnhover
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::OnPDAItemBtnUnhover()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnPDAItemBtnUnhover");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnPDAItemBtnHover
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::OnPDAItemBtnHover()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnPDAItemBtnHover");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnPDAItemBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::OnPDAItemBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnPDAItemBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnGodConsoleBtnUnhover
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::OnGodConsoleBtnUnhover()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnGodConsoleBtnUnhover");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnGodConsoleBtnHover
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::OnGodConsoleBtnHover()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnGodConsoleBtnHover");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnGodConsoleBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::OnGodConsoleBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnGodConsoleBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnFeedbackWindowBtnUnhover
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::OnFeedbackWindowBtnUnhover()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnFeedbackWindowBtnUnhover");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnFeedbackWindowBtnHover
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::OnFeedbackWindowBtnHover()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnFeedbackWindowBtnHover");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnFeedbackWindowBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::OnFeedbackWindowBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnFeedbackWindowBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnAccountInventoryItemsUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FWTLAccountInventoryItem>AccountInventoryItems                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDFastAccessSlots::OnAccountInventoryItemsUpdated(TArray<struct FWTLAccountInventoryItem>& AccountInventoryItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnAccountInventoryItemsUpdated");

	Params::UWTLHUDFastAccessSlots_OnAccountInventoryItemsUpdated_Params Parms{};

	Parms.AccountInventoryItems = AccountInventoryItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFastAccessSlots.OnAccountInventoryBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDFastAccessSlots::OnAccountInventoryBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFastAccessSlots", "OnAccountInventoryBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDFeedbackWindow
// (None)

class UClass* UWTLHUDFeedbackWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDFeedbackWindow");

	return Clss;
}


// WTLHUDFeedbackWindow WTL.Default__WTLHUDFeedbackWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDFeedbackWindow* UWTLHUDFeedbackWindow::GetDefaultObj()
{
	static class UWTLHUDFeedbackWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDFeedbackWindow*>(UWTLHUDFeedbackWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDFeedbackWindow.OnSuspectPlayerNameTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDFeedbackWindow::OnSuspectPlayerNameTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFeedbackWindow", "OnSuspectPlayerNameTextBoxCommitted");

	Params::UWTLHUDFeedbackWindow_OnSuspectPlayerNameTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFeedbackWindow.OnSendReportButtonClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDFeedbackWindow::OnSendReportButtonClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFeedbackWindow", "OnSendReportButtonClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFeedbackWindow.OnResultOKButtonClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDFeedbackWindow::OnResultOKButtonClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFeedbackWindow", "OnResultOKButtonClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFeedbackWindow.OnReportTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDFeedbackWindow::OnReportTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFeedbackWindow", "OnReportTextBoxCommitted");

	Params::UWTLHUDFeedbackWindow_OnReportTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFeedbackWindow.OnReportTextBoxChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDFeedbackWindow::OnReportTextBoxChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFeedbackWindow", "OnReportTextBoxChanged");

	Params::UWTLHUDFeedbackWindow_OnReportTextBoxChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFeedbackWindow.OnFeedbackTypeSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDFeedbackWindow::OnFeedbackTypeSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFeedbackWindow", "OnFeedbackTypeSelectionChanged");

	Params::UWTLHUDFeedbackWindow_OnFeedbackTypeSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFeedbackWindow.OnEmailTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDFeedbackWindow::OnEmailTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFeedbackWindow", "OnEmailTextBoxCommitted");

	Params::UWTLHUDFeedbackWindow_OnEmailTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDFeedbackWindow.OnEmailTextBoxChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDFeedbackWindow::OnEmailTextBoxChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDFeedbackWindow", "OnEmailTextBoxChanged");

	Params::UWTLHUDFeedbackWindow_OnEmailTextBoxChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDFinishFishingHint
// (None)

class UClass* UWTLHUDFinishFishingHint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDFinishFishingHint");

	return Clss;
}


// WTLHUDFinishFishingHint WTL.Default__WTLHUDFinishFishingHint
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDFinishFishingHint* UWTLHUDFinishFishingHint::GetDefaultObj()
{
	static class UWTLHUDFinishFishingHint* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDFinishFishingHint*>(UWTLHUDFinishFishingHint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDFPSCounter
// (None)

class UClass* UWTLHUDFPSCounter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDFPSCounter");

	return Clss;
}


// WTLHUDFPSCounter WTL.Default__WTLHUDFPSCounter
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDFPSCounter* UWTLHUDFPSCounter::GetDefaultObj()
{
	static class UWTLHUDFPSCounter* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDFPSCounter*>(UWTLHUDFPSCounter::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDGameVersionInfo
// (None)

class UClass* UWTLHUDGameVersionInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGameVersionInfo");

	return Clss;
}


// WTLHUDGameVersionInfo WTL.Default__WTLHUDGameVersionInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGameVersionInfo* UWTLHUDGameVersionInfo::GetDefaultObj()
{
	static class UWTLHUDGameVersionInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGameVersionInfo*>(UWTLHUDGameVersionInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDGodConsole
// (None)

class UClass* UWTLHUDGodConsole::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsole");

	return Clss;
}


// WTLHUDGodConsole WTL.Default__WTLHUDGodConsole
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsole* UWTLHUDGodConsole::GetDefaultObj()
{
	static class UWTLHUDGodConsole* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsole*>(UWTLHUDGodConsole::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDGodConsoleFavouriteButton
// (None)

class UClass* UWTLHUDGodConsoleFavouriteButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleFavouriteButton");

	return Clss;
}


// WTLHUDGodConsoleFavouriteButton WTL.Default__WTLHUDGodConsoleFavouriteButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleFavouriteButton* UWTLHUDGodConsoleFavouriteButton::GetDefaultObj()
{
	static class UWTLHUDGodConsoleFavouriteButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleFavouriteButton*>(UWTLHUDGodConsoleFavouriteButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDGodConsoleWindow
// (None)

class UClass* UWTLHUDGodConsoleWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindow");

	return Clss;
}


// WTLHUDGodConsoleWindow WTL.Default__WTLHUDGodConsoleWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindow* UWTLHUDGodConsoleWindow::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindow*>(UWTLHUDGodConsoleWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindow.OnTabBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindow::OnTabBtnClicked(uint8 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindow", "OnTabBtnClicked");

	Params::UWTLHUDGodConsoleWindow_OnTabBtnClicked_Params Parms{};

	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindow.OnDestroyAllInventoryItemsButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindow::OnDestroyAllInventoryItemsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindow", "OnDestroyAllInventoryItemsButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowTab
// (None)

class UClass* UWTLHUDGodConsoleWindowTab::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowTab");

	return Clss;
}


// WTLHUDGodConsoleWindowTab WTL.Default__WTLHUDGodConsoleWindowTab
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowTab* UWTLHUDGodConsoleWindowTab::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowTab* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowTab*>(UWTLHUDGodConsoleWindowTab::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDGodConsoleWindowCommands
// (None)

class UClass* UWTLHUDGodConsoleWindowCommands::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowCommands");

	return Clss;
}


// WTLHUDGodConsoleWindowCommands WTL.Default__WTLHUDGodConsoleWindowCommands
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowCommands* UWTLHUDGodConsoleWindowCommands::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowCommands* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowCommands*>(UWTLHUDGodConsoleWindowCommands::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnVisitPortalButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnVisitPortalButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnVisitPortalButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnVehicleButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnVehicleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnVehicleButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnTeleportCharacterButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnTeleportCharacterButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnTeleportCharacterButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnTeleportButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnTeleportButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnTeleportButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnTabButtonClicked
// (Final, Native, Private)
// Parameters:
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnTabButtonClicked(uint8 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnTabButtonClicked");

	Params::UWTLHUDGodConsoleWindowCommands_OnTabButtonClicked_Params Parms{};

	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSystemMessageConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSystemMessageConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSystemMessageConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSystemMessageButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSystemMessageButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSystemMessageButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSystemEventConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSystemEventConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSystemEventConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSystemEventButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSystemEventButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSystemEventButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSprintModeCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnSprintModeCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSprintModeCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnSprintModeCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSpectateButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSpectateButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSpectateButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSpawnAsMonsterButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSpawnAsMonsterButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSpawnAsMonsterButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSLBToCharacterNameChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnSLBToCharacterNameChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSLBToCharacterNameChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnSLBToCharacterNameChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSetWeaponExperienceButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSetWeaponExperienceButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSetWeaponExperienceButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSetThirstButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSetThirstButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSetThirstButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSetReputationButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSetReputationButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSetReputationButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSetItemConditionButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSetItemConditionButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSetItemConditionButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSetHungerButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSetHungerButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSetHungerButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSetFactionButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSetFactionButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSetFactionButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSetExperienceButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSetExperienceButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSetExperienceButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSetCustomizationPartButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSetCustomizationPartButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSetCustomizationPartButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSetClanButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSetClanButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSetClanButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSendMailToCharacterNameChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnSendMailToCharacterNameChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSendMailToCharacterNameChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnSendMailToCharacterNameChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSendMailMessageTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnSendMailMessageTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSendMailMessageTextChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnSendMailMessageTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSendMailMessageSubjectChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnSendMailMessageSubjectChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSendMailMessageSubjectChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnSendMailMessageSubjectChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSendMailMessageButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSendMailMessageButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSendMailMessageButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSendLootBoxButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSendLootBoxButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSendLootBoxButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSafeZoneEnableButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSafeZoneEnableButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSafeZoneEnableButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnSafeZoneDisableButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnSafeZoneDisableButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnSafeZoneDisableButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnReputationValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnReputationValueChanged(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnReputationValueChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnReputationValueChanged_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnRepairAllButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnRepairAllButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnRepairAllButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnRemovePDAModuleButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnRemovePDAModuleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnRemovePDAModuleButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnRecoverStaminaButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnRecoverStaminaButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnRecoverStaminaButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnRecoverHealthButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnRecoverHealthButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnRecoverHealthButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnRecoverAllButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnRecoverAllButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnRecoverAllButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnPvPModeCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnPvPModeCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnPvPModeCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnPvPModeCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnPvPCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnPvPCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnPvPCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnPvPCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnNPCActivityCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnNPCActivityCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnNPCActivityCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnNPCActivityCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnListPlayersButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnListPlayersButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnListPlayersButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnLightningToViewpointButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnLightningToViewpointButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnLightningToViewpointButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnLightnigToCharacterNameButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnLightnigToCharacterNameButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnLightnigToCharacterNameButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnKillButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnKillButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnKillButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnKillAllNPCButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnKillAllNPCButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnKillAllNPCButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnKickButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnKickButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnKickButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnGodModeCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnGodModeCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnGodModeCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnGodModeCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnGiveScoreButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnGiveScoreButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnGiveScoreButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnGiveMoneyButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnGiveMoneyButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnGiveMoneyButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnGiveLevelButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnGiveLevelButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnGiveLevelButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnGiveExperienceButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnGiveExperienceButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnGiveExperienceButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnGiveClanSkillButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnGiveClanSkillButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnGiveClanSkillButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnGiveClanScoreButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnGiveClanScoreButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnGiveClanScoreButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnGetMeshInfoButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnGetMeshInfoButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnGetMeshInfoButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnGameStateButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnGameStateButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnGameStateButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnForceInformerButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnForceInformerButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnForceInformerButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnExitSpectatorButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnExitSpectatorButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnExitSpectatorButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnDropModeCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnDropModeCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnDropModeCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnDropModeCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnCurrentWeatherButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnCurrentWeatherButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnCurrentWeatherButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnCraftGiveItemsButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnCraftGiveItemsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnCraftGiveItemsButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnClearSkillsButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnClearSkillsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnClearSkillsButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnClearExperienceButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnClearExperienceButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnClearExperienceButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnClearClanSkillsButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnClearClanSkillsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnClearClanSkillsButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnChatContextMenuOpenMethodValueChange
// (Final, Native, Private)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnChatContextMenuOpenMethodValueChange(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnChatContextMenuOpenMethodValueChange");

	Params::UWTLHUDGodConsoleWindowCommands_OnChatContextMenuOpenMethodValueChange_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnCharacterNameTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnCharacterNameTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnCharacterNameTextBoxTextChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnCharacterNameTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnCharacterEffectTypeComboBoxSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnCharacterEffectTypeComboBoxSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnCharacterEffectTypeComboBoxSelectionChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnCharacterEffectTypeComboBoxSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnCharacterClassesComboBoxSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowCommands::OnCharacterClassesComboBoxSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnCharacterClassesComboBoxSelectionChanged");

	Params::UWTLHUDGodConsoleWindowCommands_OnCharacterClassesComboBoxSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnChangeWeatherButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnChangeWeatherButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnChangeWeatherButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnChangeSexButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnChangeSexButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnChangeSexButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnBecomeSpectatorButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnBecomeSpectatorButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnBecomeSpectatorButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnBecomeClanLeaderButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnBecomeClanLeaderButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnBecomeClanLeaderButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnAirDropWhenButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnAirDropWhenButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnAirDropWhenButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnAirDropSpawnButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnAirDropSpawnButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnAirDropSpawnButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnAirDropForceButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnAirDropForceButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnAirDropForceButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnAddPDAModuleButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnAddPDAModuleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnAddPDAModuleButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowCommands.OnAddEffectButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowCommands::OnAddEffectButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowCommands", "OnAddEffectButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowGameInstance
// (None)

class UClass* UWTLHUDGodConsoleWindowGameInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowGameInstance");

	return Clss;
}


// WTLHUDGodConsoleWindowGameInstance WTL.Default__WTLHUDGodConsoleWindowGameInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowGameInstance* UWTLHUDGodConsoleWindowGameInstance::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowGameInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowGameInstance*>(UWTLHUDGodConsoleWindowGameInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowGameInstance.OnPlayerTypesComboBoxSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowGameInstance::OnPlayerTypesComboBoxSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowGameInstance", "OnPlayerTypesComboBoxSelectionChanged");

	Params::UWTLHUDGodConsoleWindowGameInstance_OnPlayerTypesComboBoxSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowGameInstance.OnNumberTextBoxValidationCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowGameInstance::OnNumberTextBoxValidationCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowGameInstance", "OnNumberTextBoxValidationCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowGameInstance_OnNumberTextBoxValidationCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowGameInstance.OnDebugIsFounderCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowGameInstance::OnDebugIsFounderCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowGameInstance", "OnDebugIsFounderCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowGameInstance_OnDebugIsFounderCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowGameInstance.OnDebugHavePremiumCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowGameInstance::OnDebugHavePremiumCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowGameInstance", "OnDebugHavePremiumCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowGameInstance_OnDebugHavePremiumCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowGameInstance.OnDebugCheckMinLevelAndTimeForBarterAndUseMailBoxCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowGameInstance::OnDebugCheckMinLevelAndTimeForBarterAndUseMailBoxCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowGameInstance", "OnDebugCheckMinLevelAndTimeForBarterAndUseMailBoxCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowGameInstance_OnDebugCheckMinLevelAndTimeForBarterAndUseMailBoxCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowGameInstance.OnDebugCharacterIsInClanCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowGameInstance::OnDebugCharacterIsInClanCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowGameInstance", "OnDebugCharacterIsInClanCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowGameInstance_OnDebugCharacterIsInClanCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowGameInstance.OnDebugCharacterCanUseAllItemsCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowGameInstance::OnDebugCharacterCanUseAllItemsCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowGameInstance", "OnDebugCharacterCanUseAllItemsCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowGameInstance_OnDebugCharacterCanUseAllItemsCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowGameInstance.OnClanMemberTypesComboBoxSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowGameInstance::OnClanMemberTypesComboBoxSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowGameInstance", "OnClanMemberTypesComboBoxSelectionChanged");

	Params::UWTLHUDGodConsoleWindowGameInstance_OnClanMemberTypesComboBoxSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowGameInstance.OnBodyTypesComboBoxSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowGameInstance::OnBodyTypesComboBoxSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowGameInstance", "OnBodyTypesComboBoxSelectionChanged");

	Params::UWTLHUDGodConsoleWindowGameInstance_OnBodyTypesComboBoxSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowListItemBase
// (None)

class UClass* UWTLHUDGodConsoleWindowListItemBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowListItemBase");

	return Clss;
}


// WTLHUDGodConsoleWindowListItemBase WTL.Default__WTLHUDGodConsoleWindowListItemBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowListItemBase* UWTLHUDGodConsoleWindowListItemBase::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowListItemBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowListItemBase*>(UWTLHUDGodConsoleWindowListItemBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowListItemBase.OnFavouriteBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowListItemBase::OnFavouriteBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowListItemBase", "OnFavouriteBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowListItem
// (None)

class UClass* UWTLHUDGodConsoleWindowListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowListItem");

	return Clss;
}


// WTLHUDGodConsoleWindowListItem WTL.Default__WTLHUDGodConsoleWindowListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowListItem* UWTLHUDGodConsoleWindowListItem::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowListItem*>(UWTLHUDGodConsoleWindowListItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowListItem.OnReceiveBtnClicked
// (Native, Protected)
// Parameters:

void UWTLHUDGodConsoleWindowListItem::OnReceiveBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowListItem", "OnReceiveBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowItem
// (None)

class UClass* UWTLHUDGodConsoleWindowItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowItem");

	return Clss;
}


// WTLHUDGodConsoleWindowItem WTL.Default__WTLHUDGodConsoleWindowItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowItem* UWTLHUDGodConsoleWindowItem::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowItem*>(UWTLHUDGodConsoleWindowItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowItem.OnPreviewBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowItem::OnPreviewBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowItem", "OnPreviewBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowItem.OnCharacterPreviewBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowItem::OnCharacterPreviewBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowItem", "OnCharacterPreviewBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowItems
// (None)

class UClass* UWTLHUDGodConsoleWindowItems::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowItems");

	return Clss;
}


// WTLHUDGodConsoleWindowItems WTL.Default__WTLHUDGodConsoleWindowItems
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowItems* UWTLHUDGodConsoleWindowItems::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowItems* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowItems*>(UWTLHUDGodConsoleWindowItems::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowItems.OnItemTypeTabBtnClicked
// (Final, Native, Private)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowItems::OnItemTypeTabBtnClicked(enum class EWTLItemType ItemType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowItems", "OnItemTypeTabBtnClicked");

	Params::UWTLHUDGodConsoleWindowItems_OnItemTypeTabBtnClicked_Params Parms{};

	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowListBase
// (None)

class UClass* UWTLHUDGodConsoleWindowListBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowListBase");

	return Clss;
}


// WTLHUDGodConsoleWindowListBase WTL.Default__WTLHUDGodConsoleWindowListBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowListBase* UWTLHUDGodConsoleWindowListBase::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowListBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowListBase*>(UWTLHUDGodConsoleWindowListBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowListBase.OnShowFavouritesCheckBoxStateChanged
// (Native, Protected)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowListBase::OnShowFavouritesCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowListBase", "OnShowFavouritesCheckBoxStateChanged");

	Params::UWTLHUDGodConsoleWindowListBase_OnShowFavouritesCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowListBase.OnFavouriteBtnClicked
// (Final, Native, Protected)
// Parameters:
// uint16                             ID                                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWTLHUDGodConsoleWindowListItemBase*ListItemBase                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowListBase::OnFavouriteBtnClicked(uint16 ID, class UWTLHUDGodConsoleWindowListItemBase* ListItemBase)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowListBase", "OnFavouriteBtnClicked");

	Params::UWTLHUDGodConsoleWindowListBase_OnFavouriteBtnClicked_Params Parms{};

	Parms.ID = ID;
	Parms.ListItemBase = ListItemBase;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowItemsList
// (None)

class UClass* UWTLHUDGodConsoleWindowItemsList::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowItemsList");

	return Clss;
}


// WTLHUDGodConsoleWindowItemsList WTL.Default__WTLHUDGodConsoleWindowItemsList
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowItemsList* UWTLHUDGodConsoleWindowItemsList::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowItemsList* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowItemsList*>(UWTLHUDGodConsoleWindowItemsList::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowItemsList.OnSearchTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowItemsList::OnSearchTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowItemsList", "OnSearchTextBoxTextChanged");

	Params::UWTLHUDGodConsoleWindowItemsList_OnSearchTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowItemsList.OnReceiveItem
// (Final, Native, Private)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemCount                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowItemsList::OnReceiveItem(enum class EWTLItemType ItemType, uint16 ItemTypeID, int32 ItemCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowItemsList", "OnReceiveItem");

	Params::UWTLHUDGodConsoleWindowItemsList_OnReceiveItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.ItemCount = ItemCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowItemsList.OnComboBoxSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowItemsList::OnComboBoxSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowItemsList", "OnComboBoxSelectionChanged");

	Params::UWTLHUDGodConsoleWindowItemsList_OnComboBoxSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowKit
// (None)

class UClass* UWTLHUDGodConsoleWindowKit::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowKit");

	return Clss;
}


// WTLHUDGodConsoleWindowKit WTL.Default__WTLHUDGodConsoleWindowKit
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowKit* UWTLHUDGodConsoleWindowKit::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowKit* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowKit*>(UWTLHUDGodConsoleWindowKit::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDGodConsoleWindowKitsList
// (None)

class UClass* UWTLHUDGodConsoleWindowKitsList::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowKitsList");

	return Clss;
}


// WTLHUDGodConsoleWindowKitsList WTL.Default__WTLHUDGodConsoleWindowKitsList
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowKitsList* UWTLHUDGodConsoleWindowKitsList::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowKitsList* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowKitsList*>(UWTLHUDGodConsoleWindowKitsList::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowKitsList.OnSearchTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowKitsList::OnSearchTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowKitsList", "OnSearchTextBoxTextChanged");

	Params::UWTLHUDGodConsoleWindowKitsList_OnSearchTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowKitsList.OnReceiveBtnClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLKitItemData             KitItemData                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              KitCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowKitsList::OnReceiveBtnClicked(struct FWTLKitItemData& KitItemData, int32 KitCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowKitsList", "OnReceiveBtnClicked");

	Params::UWTLHUDGodConsoleWindowKitsList_OnReceiveBtnClicked_Params Parms{};

	Parms.KitItemData = KitItemData;
	Parms.KitCount = KitCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowLocation
// (None)

class UClass* UWTLHUDGodConsoleWindowLocation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowLocation");

	return Clss;
}


// WTLHUDGodConsoleWindowLocation WTL.Default__WTLHUDGodConsoleWindowLocation
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowLocation* UWTLHUDGodConsoleWindowLocation::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowLocation* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowLocation*>(UWTLHUDGodConsoleWindowLocation::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowLocation.OnVisitBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowLocation::OnVisitBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowLocation", "OnVisitBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowLocation.OnUnvisitBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowLocation::OnUnvisitBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowLocation", "OnUnvisitBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowLocation.OnReceivePDAModuleBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowLocation::OnReceivePDAModuleBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowLocation", "OnReceivePDAModuleBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowLocation.OnMoveToBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowLocation::OnMoveToBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowLocation", "OnMoveToBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowLocationsList
// (None)

class UClass* UWTLHUDGodConsoleWindowLocationsList::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowLocationsList");

	return Clss;
}


// WTLHUDGodConsoleWindowLocationsList WTL.Default__WTLHUDGodConsoleWindowLocationsList
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowLocationsList* UWTLHUDGodConsoleWindowLocationsList::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowLocationsList* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowLocationsList*>(UWTLHUDGodConsoleWindowLocationsList::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowLocationsList.OnVisitLocationBtnClicked
// (Final, Native, Private)
// Parameters:
// uint16                             LocationID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowLocationsList::OnVisitLocationBtnClicked(uint16 LocationID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowLocationsList", "OnVisitLocationBtnClicked");

	Params::UWTLHUDGodConsoleWindowLocationsList_OnVisitLocationBtnClicked_Params Parms{};

	Parms.LocationID = LocationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowLocationsList.OnUnvisitLocationBtnClicked
// (Final, Native, Private)
// Parameters:
// uint16                             LocationID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowLocationsList::OnUnvisitLocationBtnClicked(uint16 LocationID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowLocationsList", "OnUnvisitLocationBtnClicked");

	Params::UWTLHUDGodConsoleWindowLocationsList_OnUnvisitLocationBtnClicked_Params Parms{};

	Parms.LocationID = LocationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowLocationsList.OnSearchTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowLocationsList::OnSearchTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowLocationsList", "OnSearchTextBoxTextChanged");

	Params::UWTLHUDGodConsoleWindowLocationsList_OnSearchTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowLocationsList.OnReceivePDAModuleForLocationBtnClicked
// (Final, Native, Private)
// Parameters:
// uint16                             PDAModuleTypeID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowLocationsList::OnReceivePDAModuleForLocationBtnClicked(uint16 PDAModuleTypeID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowLocationsList", "OnReceivePDAModuleForLocationBtnClicked");

	Params::UWTLHUDGodConsoleWindowLocationsList_OnReceivePDAModuleForLocationBtnClicked_Params Parms{};

	Parms.PDAModuleTypeID = PDAModuleTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowLocationsList.OnMoveToLocationBtnClicked
// (Final, Native, Private)
// Parameters:
// uint16                             LocationID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowLocationsList::OnMoveToLocationBtnClicked(uint16 LocationID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowLocationsList", "OnMoveToLocationBtnClicked");

	Params::UWTLHUDGodConsoleWindowLocationsList_OnMoveToLocationBtnClicked_Params Parms{};

	Parms.LocationID = LocationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowMonster
// (None)

class UClass* UWTLHUDGodConsoleWindowMonster::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowMonster");

	return Clss;
}


// WTLHUDGodConsoleWindowMonster WTL.Default__WTLHUDGodConsoleWindowMonster
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowMonster* UWTLHUDGodConsoleWindowMonster::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowMonster* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowMonster*>(UWTLHUDGodConsoleWindowMonster::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowMonster.OnSpawnBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowMonster::OnSpawnBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonster", "OnSpawnBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonster.OnSpawnAsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowMonster::OnSpawnAsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonster", "OnSpawnAsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonster.OnRestartLogicBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowMonster::OnRestartLogicBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonster", "OnRestartLogicBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonster.OnLevelValueChange
// (Final, Native, Private)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowMonster::OnLevelValueChange(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonster", "OnLevelValueChange");

	Params::UWTLHUDGodConsoleWindowMonster_OnLevelValueChange_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonster.OnKillBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowMonster::OnKillBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonster", "OnKillBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowMonstersList
// (None)

class UClass* UWTLHUDGodConsoleWindowMonstersList::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowMonstersList");

	return Clss;
}


// WTLHUDGodConsoleWindowMonstersList WTL.Default__WTLHUDGodConsoleWindowMonstersList
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowMonstersList* UWTLHUDGodConsoleWindowMonstersList::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowMonstersList* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowMonstersList*>(UWTLHUDGodConsoleWindowMonstersList::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowMonstersList.OnSpawnBtnClicked
// (Final, Native, Private)
// Parameters:
// uint16                             MonsterID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MonsterLevel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LifeTime                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowMonstersList::OnSpawnBtnClicked(uint16 MonsterID, int32 MonsterLevel, int32 LifeTime, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonstersList", "OnSpawnBtnClicked");

	Params::UWTLHUDGodConsoleWindowMonstersList_OnSpawnBtnClicked_Params Parms{};

	Parms.MonsterID = MonsterID;
	Parms.MonsterLevel = MonsterLevel;
	Parms.LifeTime = LifeTime;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonstersList.OnSpawnAsBtnClicked
// (Final, Native, Private)
// Parameters:
// uint16                             MonsterID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MonsterLevel                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LifeTime                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowMonstersList::OnSpawnAsBtnClicked(uint16 MonsterID, int32 MonsterLevel, int32 LifeTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonstersList", "OnSpawnAsBtnClicked");

	Params::UWTLHUDGodConsoleWindowMonstersList_OnSpawnAsBtnClicked_Params Parms{};

	Parms.MonsterID = MonsterID;
	Parms.MonsterLevel = MonsterLevel;
	Parms.LifeTime = LifeTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonstersList.OnSearchTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowMonstersList::OnSearchTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonstersList", "OnSearchTextBoxTextChanged");

	Params::UWTLHUDGodConsoleWindowMonstersList_OnSearchTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonstersList.OnRestartLogicBtnClicked
// (Final, Native, Private)
// Parameters:
// uint16                             MonsterID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowMonstersList::OnRestartLogicBtnClicked(uint16 MonsterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonstersList", "OnRestartLogicBtnClicked");

	Params::UWTLHUDGodConsoleWindowMonstersList_OnRestartLogicBtnClicked_Params Parms{};

	Parms.MonsterID = MonsterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonstersList.OnRestartAllMonstersLogicButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowMonstersList::OnRestartAllMonstersLogicButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonstersList", "OnRestartAllMonstersLogicButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonstersList.OnKillInRadiusButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowMonstersList::OnKillInRadiusButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonstersList", "OnKillInRadiusButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonstersList.OnKillBtnClicked
// (Final, Native, Private)
// Parameters:
// uint16                             MonsterID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowMonstersList::OnKillBtnClicked(uint16 MonsterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonstersList", "OnKillBtnClicked");

	Params::UWTLHUDGodConsoleWindowMonstersList_OnKillBtnClicked_Params Parms{};

	Parms.MonsterID = MonsterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowMonstersList.OnKillAllMonstersButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowMonstersList::OnKillAllMonstersButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowMonstersList", "OnKillAllMonstersButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowQuest
// (None)

class UClass* UWTLHUDGodConsoleWindowQuest::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowQuest");

	return Clss;
}


// WTLHUDGodConsoleWindowQuest WTL.Default__WTLHUDGodConsoleWindowQuest
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowQuest* UWTLHUDGodConsoleWindowQuest::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowQuest* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowQuest*>(UWTLHUDGodConsoleWindowQuest::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowQuest.OnShowDependenciesBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowQuest::OnShowDependenciesBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuest", "OnShowDependenciesBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuest.OnQuestStateComboBoxSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowQuest::OnQuestStateComboBoxSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuest", "OnQuestStateComboBoxSelectionChanged");

	Params::UWTLHUDGodConsoleWindowQuest_OnQuestStateComboBoxSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuest.OnInfoBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowQuest::OnInfoBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuest", "OnInfoBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuest.OnGiveItemsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowQuest::OnGiveItemsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuest", "OnGiveItemsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuest.OnClearStateBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowQuest::OnClearStateBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuest", "OnClearStateBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowQuestsList
// (None)

class UClass* UWTLHUDGodConsoleWindowQuestsList::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowQuestsList");

	return Clss;
}


// WTLHUDGodConsoleWindowQuestsList WTL.Default__WTLHUDGodConsoleWindowQuestsList
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowQuestsList* UWTLHUDGodConsoleWindowQuestsList::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowQuestsList* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowQuestsList*>(UWTLHUDGodConsoleWindowQuestsList::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowQuestsList.OnSearchTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowQuestsList::OnSearchTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuestsList", "OnSearchTextBoxTextChanged");

	Params::UWTLHUDGodConsoleWindowQuestsList_OnSearchTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuestsList.OnQuestStateChanged
// (Final, Native, Private)
// Parameters:
// uint16                             QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestStateIndex                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowQuestsList::OnQuestStateChanged(uint16 QuestID, int32 QuestStateIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuestsList", "OnQuestStateChanged");

	Params::UWTLHUDGodConsoleWindowQuestsList_OnQuestStateChanged_Params Parms{};

	Parms.QuestID = QuestID;
	Parms.QuestStateIndex = QuestStateIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuestsList.OnQuestShowDependenciesClicked
// (Final, Native, Private)
// Parameters:
// uint16                             QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowQuestsList::OnQuestShowDependenciesClicked(uint16 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuestsList", "OnQuestShowDependenciesClicked");

	Params::UWTLHUDGodConsoleWindowQuestsList_OnQuestShowDependenciesClicked_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuestsList.OnQuestInfoClicked
// (Final, Native, Private)
// Parameters:
// uint16                             QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowQuestsList::OnQuestInfoClicked(uint16 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuestsList", "OnQuestInfoClicked");

	Params::UWTLHUDGodConsoleWindowQuestsList_OnQuestInfoClicked_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuestsList.OnQuestGiveItemsClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// uint16                             QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLQuestItemData           QuestItemData                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowQuestsList::OnQuestGiveItemsClicked(uint16 QuestID, struct FWTLQuestItemData& QuestItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuestsList", "OnQuestGiveItemsClicked");

	Params::UWTLHUDGodConsoleWindowQuestsList_OnQuestGiveItemsClicked_Params Parms{};

	Parms.QuestID = QuestID;
	Parms.QuestItemData = QuestItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuestsList.OnQuestClearStateClicked
// (Final, Native, Private)
// Parameters:
// uint16                             QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowQuestsList::OnQuestClearStateClicked(uint16 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuestsList", "OnQuestClearStateClicked");

	Params::UWTLHUDGodConsoleWindowQuestsList_OnQuestClearStateClicked_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuestsList.OnGiveItemsForActiveQuestButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowQuestsList::OnGiveItemsForActiveQuestButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuestsList", "OnGiveItemsForActiveQuestButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuestsList.OnCompleteAllQuestsButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowQuestsList::OnCompleteAllQuestsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuestsList", "OnCompleteAllQuestsButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowQuestsList.OnClearQuestStatesButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowQuestsList::OnClearQuestStatesButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowQuestsList", "OnClearQuestStatesButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGodConsoleWindowScript
// (None)

class UClass* UWTLHUDGodConsoleWindowScript::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowScript");

	return Clss;
}


// WTLHUDGodConsoleWindowScript WTL.Default__WTLHUDGodConsoleWindowScript
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowScript* UWTLHUDGodConsoleWindowScript::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowScript* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowScript*>(UWTLHUDGodConsoleWindowScript::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDGodConsoleWindowScripts
// (None)

class UClass* UWTLHUDGodConsoleWindowScripts::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGodConsoleWindowScripts");

	return Clss;
}


// WTLHUDGodConsoleWindowScripts WTL.Default__WTLHUDGodConsoleWindowScripts
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGodConsoleWindowScripts* UWTLHUDGodConsoleWindowScripts::GetDefaultObj()
{
	static class UWTLHUDGodConsoleWindowScripts* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGodConsoleWindowScripts*>(UWTLHUDGodConsoleWindowScripts::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnScriptTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowScripts::OnScriptTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnScriptTextBoxTextChanged");

	Params::UWTLHUDGodConsoleWindowScripts_OnScriptTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnScriptsScrollBoxScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowScripts::OnScriptsScrollBoxScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnScriptsScrollBoxScrolled");

	Params::UWTLHUDGodConsoleWindowScripts_OnScriptsScrollBoxScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnScriptSelected
// (Final, Native, Private)
// Parameters:
// class FString                      ScriptFileName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWTLHUDGodConsoleWindowScript*SelectedScriptWidget                                             (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowScripts::OnScriptSelected(const class FString& ScriptFileName, class UWTLHUDGodConsoleWindowScript* SelectedScriptWidget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnScriptSelected");

	Params::UWTLHUDGodConsoleWindowScripts_OnScriptSelected_Params Parms{};

	Parms.ScriptFileName = ScriptFileName;
	Parms.SelectedScriptWidget = SelectedScriptWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnSavedConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnSavedConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnSavedConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnSavedCanceled
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnSavedCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnSavedCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnSaveButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnSaveButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnSaveButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnRenameButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnRenameButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnRenameButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnNewScriptNameTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDGodConsoleWindowScripts::OnNewScriptNameTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnNewScriptNameTextBoxTextChanged");

	Params::UWTLHUDGodConsoleWindowScripts_OnNewScriptNameTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnExecuteButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnExecuteButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnExecuteButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnEditButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnEditButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnEditButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnDeleteConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnDeleteConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnDeleteConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnDeleteButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnDeleteButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnDeleteButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnDeleteAllConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnDeleteAllConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnDeleteAllConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnDeleteAllButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnDeleteAllButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnDeleteAllButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnCreateButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnCreateButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnCreateButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDGodConsoleWindowScripts.OnBackButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDGodConsoleWindowScripts::OnBackButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGodConsoleWindowScripts", "OnBackButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGroupInfo
// (None)

class UClass* UWTLHUDGroupInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGroupInfo");

	return Clss;
}


// WTLHUDGroupInfo WTL.Default__WTLHUDGroupInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGroupInfo* UWTLHUDGroupInfo::GetDefaultObj()
{
	static class UWTLHUDGroupInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGroupInfo*>(UWTLHUDGroupInfo::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDGroupInfo.UpdateGroupMembersData
// (Final, Native, Private)
// Parameters:

void UWTLHUDGroupInfo::UpdateGroupMembersData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDGroupInfo", "UpdateGroupMembersData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDGroupInfo_Item
// (None)

class UClass* UWTLHUDGroupInfo_Item::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDGroupInfo_Item");

	return Clss;
}


// WTLHUDGroupInfo_Item WTL.Default__WTLHUDGroupInfo_Item
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDGroupInfo_Item* UWTLHUDGroupInfo_Item::GetDefaultObj()
{
	static class UWTLHUDGroupInfo_Item* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDGroupInfo_Item*>(UWTLHUDGroupInfo_Item::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDIndicatorBase
// (None)

class UClass* UWTLHUDIndicatorBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDIndicatorBase");

	return Clss;
}


// WTLHUDIndicatorBase WTL.Default__WTLHUDIndicatorBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDIndicatorBase* UWTLHUDIndicatorBase::GetDefaultObj()
{
	static class UWTLHUDIndicatorBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDIndicatorBase*>(UWTLHUDIndicatorBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDIndicatorCharacterEffect
// (None)

class UClass* UWTLHUDIndicatorCharacterEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDIndicatorCharacterEffect");

	return Clss;
}


// WTLHUDIndicatorCharacterEffect WTL.Default__WTLHUDIndicatorCharacterEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDIndicatorCharacterEffect* UWTLHUDIndicatorCharacterEffect::GetDefaultObj()
{
	static class UWTLHUDIndicatorCharacterEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDIndicatorCharacterEffect*>(UWTLHUDIndicatorCharacterEffect::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDIndicatorCharacterState
// (None)

class UClass* UWTLHUDIndicatorCharacterState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDIndicatorCharacterState");

	return Clss;
}


// WTLHUDIndicatorCharacterState WTL.Default__WTLHUDIndicatorCharacterState
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDIndicatorCharacterState* UWTLHUDIndicatorCharacterState::GetDefaultObj()
{
	static class UWTLHUDIndicatorCharacterState* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDIndicatorCharacterState*>(UWTLHUDIndicatorCharacterState::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDIndicatorEquipmentSlotItemUse
// (None)

class UClass* UWTLHUDIndicatorEquipmentSlotItemUse::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDIndicatorEquipmentSlotItemUse");

	return Clss;
}


// WTLHUDIndicatorEquipmentSlotItemUse WTL.Default__WTLHUDIndicatorEquipmentSlotItemUse
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDIndicatorEquipmentSlotItemUse* UWTLHUDIndicatorEquipmentSlotItemUse::GetDefaultObj()
{
	static class UWTLHUDIndicatorEquipmentSlotItemUse* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDIndicatorEquipmentSlotItemUse*>(UWTLHUDIndicatorEquipmentSlotItemUse::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDIndicatorMedicineItemEffect
// (None)

class UClass* UWTLHUDIndicatorMedicineItemEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDIndicatorMedicineItemEffect");

	return Clss;
}


// WTLHUDIndicatorMedicineItemEffect WTL.Default__WTLHUDIndicatorMedicineItemEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDIndicatorMedicineItemEffect* UWTLHUDIndicatorMedicineItemEffect::GetDefaultObj()
{
	static class UWTLHUDIndicatorMedicineItemEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDIndicatorMedicineItemEffect*>(UWTLHUDIndicatorMedicineItemEffect::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDIndicators
// (None)

class UClass* UWTLHUDIndicators::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDIndicators");

	return Clss;
}


// WTLHUDIndicators WTL.Default__WTLHUDIndicators
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDIndicators* UWTLHUDIndicators::GetDefaultObj()
{
	static class UWTLHUDIndicators* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDIndicators*>(UWTLHUDIndicators::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDInformationDialogWindow
// (None)

class UClass* UWTLHUDInformationDialogWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDInformationDialogWindow");

	return Clss;
}


// WTLHUDInformationDialogWindow WTL.Default__WTLHUDInformationDialogWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDInformationDialogWindow* UWTLHUDInformationDialogWindow::GetDefaultObj()
{
	static class UWTLHUDInformationDialogWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDInformationDialogWindow*>(UWTLHUDInformationDialogWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDInGameMenu
// (None)

class UClass* UWTLHUDInGameMenu::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDInGameMenu");

	return Clss;
}


// WTLHUDInGameMenu WTL.Default__WTLHUDInGameMenu
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDInGameMenu* UWTLHUDInGameMenu::GetDefaultObj()
{
	static class UWTLHUDInGameMenu* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDInGameMenu*>(UWTLHUDInGameMenu::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDInGameMenu.ShowMenu
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::ShowMenu()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "ShowMenu");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDInGameMenu.QuitToMainMenu
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::QuitToMainMenu()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "QuitToMainMenu");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDInGameMenu.OnSuicideConfirmation
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::OnSuicideConfirmation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "OnSuicideConfirmation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDInGameMenu.OnSuicideBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::OnSuicideBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "OnSuicideBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDInGameMenu.OnStoreButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::OnStoreButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "OnStoreButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDInGameMenu.OnReturnToGameBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::OnReturnToGameBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "OnReturnToGameBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDInGameMenu.OnQuitToMainMenuBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::OnQuitToMainMenuBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "OnQuitToMainMenuBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDInGameMenu.OnOptionsBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::OnOptionsBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "OnOptionsBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDInGameMenu.OnHighlightsButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::OnHighlightsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "OnHighlightsButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDInGameMenu.OnExitGameBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::OnExitGameBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "OnExitGameBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDInGameMenu.ExitGame
// (Final, Native, Private)
// Parameters:

void UWTLHUDInGameMenu::ExitGame()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInGameMenu", "ExitGame");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDInteractiveSubstrate
// (None)

class UClass* UWTLHUDInteractiveSubstrate::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDInteractiveSubstrate");

	return Clss;
}


// WTLHUDInteractiveSubstrate WTL.Default__WTLHUDInteractiveSubstrate
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDInteractiveSubstrate* UWTLHUDInteractiveSubstrate::GetDefaultObj()
{
	static class UWTLHUDInteractiveSubstrate* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDInteractiveSubstrate*>(UWTLHUDInteractiveSubstrate::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDInteractiveSubstrate.OnUnlockedMouseCursorHintMouseButtonDown
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                 ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UWTLHUDInteractiveSubstrate::OnUnlockedMouseCursorHintMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInteractiveSubstrate", "OnUnlockedMouseCursorHintMouseButtonDown");

	Params::UWTLHUDInteractiveSubstrate_OnUnlockedMouseCursorHintMouseButtonDown_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLHUDInteractiveSubstrate.OnInteractiveTraceShot
// (Final, Native, Private)
// Parameters:

void UWTLHUDInteractiveSubstrate::OnInteractiveTraceShot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDInteractiveSubstrate", "OnInteractiveTraceShot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDInventory
// (None)

class UClass* UWTLHUDInventory::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDInventory");

	return Clss;
}


// WTLHUDInventory WTL.Default__WTLHUDInventory
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDInventory* UWTLHUDInventory::GetDefaultObj()
{
	static class UWTLHUDInventory* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDInventory*>(UWTLHUDInventory::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemImage
// (None)

class UClass* UWTLHUDItemImage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemImage");

	return Clss;
}


// WTLHUDItemImage WTL.Default__WTLHUDItemImage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemImage* UWTLHUDItemImage::GetDefaultObj()
{
	static class UWTLHUDItemImage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemImage*>(UWTLHUDItemImage::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemInformationBase
// (None)

class UClass* UWTLHUDItemInformationBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemInformationBase");

	return Clss;
}


// WTLHUDItemInformationBase WTL.Default__WTLHUDItemInformationBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemInformationBase* UWTLHUDItemInformationBase::GetDefaultObj()
{
	static class UWTLHUDItemInformationBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemInformationBase*>(UWTLHUDItemInformationBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemInformation
// (None)

class UClass* UWTLHUDItemInformation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemInformation");

	return Clss;
}


// WTLHUDItemInformation WTL.Default__WTLHUDItemInformation
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemInformation* UWTLHUDItemInformation::GetDefaultObj()
{
	static class UWTLHUDItemInformation* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemInformation*>(UWTLHUDItemInformation::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDItemInformation.OnPreviewBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemInformation::OnPreviewBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemInformation", "OnPreviewBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemInformation.OnCharacterPreviewBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemInformation::OnCharacterPreviewBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemInformation", "OnCharacterPreviewBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDItemInformationEffectInfluence
// (None)

class UClass* UWTLHUDItemInformationEffectInfluence::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemInformationEffectInfluence");

	return Clss;
}


// WTLHUDItemInformationEffectInfluence WTL.Default__WTLHUDItemInformationEffectInfluence
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemInformationEffectInfluence* UWTLHUDItemInformationEffectInfluence::GetDefaultObj()
{
	static class UWTLHUDItemInformationEffectInfluence* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemInformationEffectInfluence*>(UWTLHUDItemInformationEffectInfluence::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemInformationMedicineEffect
// (None)

class UClass* UWTLHUDItemInformationMedicineEffect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemInformationMedicineEffect");

	return Clss;
}


// WTLHUDItemInformationMedicineEffect WTL.Default__WTLHUDItemInformationMedicineEffect
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemInformationMedicineEffect* UWTLHUDItemInformationMedicineEffect::GetDefaultObj()
{
	static class UWTLHUDItemInformationMedicineEffect* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemInformationMedicineEffect*>(UWTLHUDItemInformationMedicineEffect::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemInformationShort
// (None)

class UClass* UWTLHUDItemInformationShort::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemInformationShort");

	return Clss;
}


// WTLHUDItemInformationShort WTL.Default__WTLHUDItemInformationShort
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemInformationShort* UWTLHUDItemInformationShort::GetDefaultObj()
{
	static class UWTLHUDItemInformationShort* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemInformationShort*>(UWTLHUDItemInformationShort::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemInformationWindow
// (None)

class UClass* UWTLHUDItemInformationWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemInformationWindow");

	return Clss;
}


// WTLHUDItemInformationWindow WTL.Default__WTLHUDItemInformationWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemInformationWindow* UWTLHUDItemInformationWindow::GetDefaultObj()
{
	static class UWTLHUDItemInformationWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemInformationWindow*>(UWTLHUDItemInformationWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemPlacementHint
// (None)

class UClass* UWTLHUDItemPlacementHint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemPlacementHint");

	return Clss;
}


// WTLHUDItemPlacementHint WTL.Default__WTLHUDItemPlacementHint
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemPlacementHint* UWTLHUDItemPlacementHint::GetDefaultObj()
{
	static class UWTLHUDItemPlacementHint* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemPlacementHint*>(UWTLHUDItemPlacementHint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemReadWindow
// (None)

class UClass* UWTLHUDItemReadWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemReadWindow");

	return Clss;
}


// WTLHUDItemReadWindow WTL.Default__WTLHUDItemReadWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemReadWindow* UWTLHUDItemReadWindow::GetDefaultObj()
{
	static class UWTLHUDItemReadWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemReadWindow*>(UWTLHUDItemReadWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemsCustomization
// (None)

class UClass* UWTLHUDItemsCustomization::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemsCustomization");

	return Clss;
}


// WTLHUDItemsCustomization WTL.Default__WTLHUDItemsCustomization
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemsCustomization* UWTLHUDItemsCustomization::GetDefaultObj()
{
	static class UWTLHUDItemsCustomization* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemsCustomization*>(UWTLHUDItemsCustomization::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemsCustomizationWindow
// (None)

class UClass* UWTLHUDItemsCustomizationWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemsCustomizationWindow");

	return Clss;
}


// WTLHUDItemsCustomizationWindow WTL.Default__WTLHUDItemsCustomizationWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemsCustomizationWindow* UWTLHUDItemsCustomizationWindow::GetDefaultObj()
{
	static class UWTLHUDItemsCustomizationWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemsCustomizationWindow*>(UWTLHUDItemsCustomizationWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDItemsCustomizationWindow.OnResetColorBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemsCustomizationWindow::OnResetColorBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsCustomizationWindow", "OnResetColorBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsCustomizationWindow.OnPatternSwitcherValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemsCustomizationWindow::OnPatternSwitcherValueChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsCustomizationWindow", "OnPatternSwitcherValueChanged");

	Params::UWTLHUDItemsCustomizationWindow_OnPatternSwitcherValueChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsCustomizationWindow.OnNPCActorActiveStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemsCustomizationWindow::OnNPCActorActiveStateChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsCustomizationWindow", "OnNPCActorActiveStateChanged");

	Params::UWTLHUDItemsCustomizationWindow_OnNPCActorActiveStateChanged_Params Parms{};

	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsCustomizationWindow.OnItemColorPicked
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// enum class EWTLCustomizationColorPresetTypeColorPresetType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Number                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                Color                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                PreviewColor                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemsCustomizationWindow::OnItemColorPicked(enum class EWTLCustomizationColorPresetType ColorPresetType, int32 Number, struct FLinearColor& Color, struct FLinearColor& PreviewColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsCustomizationWindow", "OnItemColorPicked");

	Params::UWTLHUDItemsCustomizationWindow_OnItemColorPicked_Params Parms{};

	Parms.ColorPresetType = ColorPresetType;
	Parms.Number = Number;
	Parms.Color = Color;
	Parms.PreviewColor = PreviewColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsCustomizationWindow.OnCustomizationSlotInit
// (Final, Native, Private)
// Parameters:
// class UWTLHUDInventorySlot*        InventorySlot                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemsCustomizationWindow::OnCustomizationSlotInit(class UWTLHUDInventorySlot* InventorySlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsCustomizationWindow", "OnCustomizationSlotInit");

	Params::UWTLHUDItemsCustomizationWindow_OnCustomizationSlotInit_Params Parms{};

	Parms.InventorySlot = InventorySlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsCustomizationWindow.OnCustomizationSlotClear
// (Final, Native, Private)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemsCustomizationWindow::OnCustomizationSlotClear(uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsCustomizationWindow", "OnCustomizationSlotClear");

	Params::UWTLHUDItemsCustomizationWindow_OnCustomizationSlotClear_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsCustomizationWindow.OnColorBtnClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   BtnGeometry                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               InMouseEvent                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDItemsCustomizationWindow::OnColorBtnClicked(struct FGeometry& BtnGeometry, struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsCustomizationWindow", "OnColorBtnClicked");

	Params::UWTLHUDItemsCustomizationWindow_OnColorBtnClicked_Params Parms{};

	Parms.BtnGeometry = BtnGeometry;
	Parms.InMouseEvent = InMouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsCustomizationWindow.OnApplyBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemsCustomizationWindow::OnApplyBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsCustomizationWindow", "OnApplyBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDItemsModification
// (None)

class UClass* UWTLHUDItemsModification::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemsModification");

	return Clss;
}


// WTLHUDItemsModification WTL.Default__WTLHUDItemsModification
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemsModification* UWTLHUDItemsModification::GetDefaultObj()
{
	static class UWTLHUDItemsModification* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemsModification*>(UWTLHUDItemsModification::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemsModificationBarChart
// (None)

class UClass* UWTLHUDItemsModificationBarChart::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemsModificationBarChart");

	return Clss;
}


// WTLHUDItemsModificationBarChart WTL.Default__WTLHUDItemsModificationBarChart
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemsModificationBarChart* UWTLHUDItemsModificationBarChart::GetDefaultObj()
{
	static class UWTLHUDItemsModificationBarChart* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemsModificationBarChart*>(UWTLHUDItemsModificationBarChart::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemsModificationPercentDelta
// (None)

class UClass* UWTLHUDItemsModificationPercentDelta::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemsModificationPercentDelta");

	return Clss;
}


// WTLHUDItemsModificationPercentDelta WTL.Default__WTLHUDItemsModificationPercentDelta
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemsModificationPercentDelta* UWTLHUDItemsModificationPercentDelta::GetDefaultObj()
{
	static class UWTLHUDItemsModificationPercentDelta* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemsModificationPercentDelta*>(UWTLHUDItemsModificationPercentDelta::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemsModificationWindow
// (None)

class UClass* UWTLHUDItemsModificationWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemsModificationWindow");

	return Clss;
}


// WTLHUDItemsModificationWindow WTL.Default__WTLHUDItemsModificationWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemsModificationWindow* UWTLHUDItemsModificationWindow::GetDefaultObj()
{
	static class UWTLHUDItemsModificationWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemsModificationWindow*>(UWTLHUDItemsModificationWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDItemsModificationWindow.OnUseModificationKitResult
// (Final, Native, Private)
// Parameters:
// bool                               IsSuccess                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemsModificationWindow::OnUseModificationKitResult(bool IsSuccess)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsModificationWindow", "OnUseModificationKitResult");

	Params::UWTLHUDItemsModificationWindow_OnUseModificationKitResult_Params Parms{};

	Parms.IsSuccess = IsSuccess;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsModificationWindow.OnItemForModificationSlotInit
// (Final, Native, Private)
// Parameters:
// class UWTLHUDInventorySlot*        InventorySlot                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemsModificationWindow::OnItemForModificationSlotInit(class UWTLHUDInventorySlot* InventorySlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsModificationWindow", "OnItemForModificationSlotInit");

	Params::UWTLHUDItemsModificationWindow_OnItemForModificationSlotInit_Params Parms{};

	Parms.InventorySlot = InventorySlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsModificationWindow.OnItemForModificationSlotClear
// (Final, Native, Private)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemsModificationWindow::OnItemForModificationSlotClear(uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsModificationWindow", "OnItemForModificationSlotClear");

	Params::UWTLHUDItemsModificationWindow_OnItemForModificationSlotClear_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsModificationWindow.OnApplyModificationKitConfirm
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemsModificationWindow::OnApplyModificationKitConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsModificationWindow", "OnApplyModificationKitConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemsModificationWindow.OnApplyBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemsModificationWindow::OnApplyBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemsModificationWindow", "OnApplyBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDItemSplitBuyWindow
// (None)

class UClass* UWTLHUDItemSplitBuyWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemSplitBuyWindow");

	return Clss;
}


// WTLHUDItemSplitBuyWindow WTL.Default__WTLHUDItemSplitBuyWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemSplitBuyWindow* UWTLHUDItemSplitBuyWindow::GetDefaultObj()
{
	static class UWTLHUDItemSplitBuyWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemSplitBuyWindow*>(UWTLHUDItemSplitBuyWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDItemSplitBuyWindow.OnOKBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSplitBuyWindow::OnOKBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitBuyWindow", "OnOKBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitBuyWindow.OnCountUpBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSplitBuyWindow::OnCountUpBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitBuyWindow", "OnCountUpBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitBuyWindow.OnCountToBuyValueChange
// (Final, Native, Private)
// Parameters:
// int32                              NewCount                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSplitBuyWindow::OnCountToBuyValueChange(int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitBuyWindow", "OnCountToBuyValueChange");

	Params::UWTLHUDItemSplitBuyWindow_OnCountToBuyValueChange_Params Parms{};

	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitBuyWindow.OnCountToBuyTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSplitBuyWindow::OnCountToBuyTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitBuyWindow", "OnCountToBuyTextBoxCommitted");

	Params::UWTLHUDItemSplitBuyWindow_OnCountToBuyTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitBuyWindow.OnCountMoneyAllBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSplitBuyWindow::OnCountMoneyAllBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitBuyWindow", "OnCountMoneyAllBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitBuyWindow.OnCountDownBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSplitBuyWindow::OnCountDownBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitBuyWindow", "OnCountDownBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitBuyWindow.OnCountAllBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSplitBuyWindow::OnCountAllBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitBuyWindow", "OnCountAllBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitBuyWindow.OnBuyItemConfirm
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSplitBuyWindow::OnBuyItemConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitBuyWindow", "OnBuyItemConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDItemSplitWindow
// (None)

class UClass* UWTLHUDItemSplitWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemSplitWindow");

	return Clss;
}


// WTLHUDItemSplitWindow WTL.Default__WTLHUDItemSplitWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemSplitWindow* UWTLHUDItemSplitWindow::GetDefaultObj()
{
	static class UWTLHUDItemSplitWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemSplitWindow*>(UWTLHUDItemSplitWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDItemSplitWindow.OnToValueCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSplitWindow::OnToValueCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitWindow", "OnToValueCommitted");

	Params::UWTLHUDItemSplitWindow_OnToValueCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitWindow.OnToValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSplitWindow::OnToValueChanged(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitWindow", "OnToValueChanged");

	Params::UWTLHUDItemSplitWindow_OnToValueChanged_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitWindow.OnTakeFromClanStorage
// (Final, Native, Private)
// Parameters:
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSplitWindow::OnTakeFromClanStorage(const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitWindow", "OnTakeFromClanStorage");

	Params::UWTLHUDItemSplitWindow_OnTakeFromClanStorage_Params Parms{};

	Parms.Description = Description;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitWindow.OnSplitSliderValueChanged
// (Final, Native, Private)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSplitWindow::OnSplitSliderValueChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitWindow", "OnSplitSliderValueChanged");

	Params::UWTLHUDItemSplitWindow_OnSplitSliderValueChanged_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitWindow.OnPutToClanStorage
// (Final, Native, Private)
// Parameters:
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSplitWindow::OnPutToClanStorage(const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitWindow", "OnPutToClanStorage");

	Params::UWTLHUDItemSplitWindow_OnPutToClanStorage_Params Parms{};

	Parms.Description = Description;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitWindow.OnOKBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSplitWindow::OnOKBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitWindow", "OnOKBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitWindow.OnFromValueCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSplitWindow::OnFromValueCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitWindow", "OnFromValueCommitted");

	Params::UWTLHUDItemSplitWindow_OnFromValueCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitWindow.OnFromValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemSplitWindow::OnFromValueChanged(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitWindow", "OnFromValueChanged");

	Params::UWTLHUDItemSplitWindow_OnFromValueChanged_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitWindow.OnDropFromInventoryConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSplitWindow::OnDropFromInventoryConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitWindow", "OnDropFromInventoryConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemSplitWindow.OnDestroyInInventoryConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDItemSplitWindow::OnDestroyInInventoryConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemSplitWindow", "OnDestroyInInventoryConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDItemTypeTabButton
// (None)

class UClass* UWTLHUDItemTypeTabButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemTypeTabButton");

	return Clss;
}


// WTLHUDItemTypeTabButton WTL.Default__WTLHUDItemTypeTabButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemTypeTabButton* UWTLHUDItemTypeTabButton::GetDefaultObj()
{
	static class UWTLHUDItemTypeTabButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemTypeTabButton*>(UWTLHUDItemTypeTabButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDItemViewWindow
// (None)

class UClass* UWTLHUDItemViewWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDItemViewWindow");

	return Clss;
}


// WTLHUDItemViewWindow WTL.Default__WTLHUDItemViewWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDItemViewWindow* UWTLHUDItemViewWindow::GetDefaultObj()
{
	static class UWTLHUDItemViewWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDItemViewWindow*>(UWTLHUDItemViewWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDItemViewWindow.OnViewPagesValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDItemViewWindow::OnViewPagesValueChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemViewWindow", "OnViewPagesValueChanged");

	Params::UWTLHUDItemViewWindow_OnViewPagesValueChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDItemViewWindow.OnBackgroundMouseButtonDown
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                 ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UWTLHUDItemViewWindow::OnBackgroundMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDItemViewWindow", "OnBackgroundMouseButtonDown");

	Params::UWTLHUDItemViewWindow_OnBackgroundMouseButtonDown_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLHUDJunkMachine
// (None)

class UClass* UWTLHUDJunkMachine::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDJunkMachine");

	return Clss;
}


// WTLHUDJunkMachine WTL.Default__WTLHUDJunkMachine
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDJunkMachine* UWTLHUDJunkMachine::GetDefaultObj()
{
	static class UWTLHUDJunkMachine* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDJunkMachine*>(UWTLHUDJunkMachine::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDJunkMachineWindow
// (None)

class UClass* UWTLHUDJunkMachineWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDJunkMachineWindow");

	return Clss;
}


// WTLHUDJunkMachineWindow WTL.Default__WTLHUDJunkMachineWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDJunkMachineWindow* UWTLHUDJunkMachineWindow::GetDefaultObj()
{
	static class UWTLHUDJunkMachineWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDJunkMachineWindow*>(UWTLHUDJunkMachineWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDJunkMachineWindow.OnTabBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDJunkMachineWindow::OnTabBtnClicked(uint8 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDJunkMachineWindow", "OnTabBtnClicked");

	Params::UWTLHUDJunkMachineWindow_OnTabBtnClicked_Params Parms{};

	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDJunkMachineWindow.OnJunkMachineBlackListChanged
// (Final, Native, Private)
// Parameters:

void UWTLHUDJunkMachineWindow::OnJunkMachineBlackListChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDJunkMachineWindow", "OnJunkMachineBlackListChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDJunkMachineWindow.OnExchangeConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDJunkMachineWindow::OnExchangeConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDJunkMachineWindow", "OnExchangeConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDJunkMachineWindow.OnExchangeBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDJunkMachineWindow::OnExchangeBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDJunkMachineWindow", "OnExchangeBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDLayer
// (None)

class UClass* UWTLHUDLayer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDLayer");

	return Clss;
}


// WTLHUDLayer WTL.Default__WTLHUDLayer
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDLayer* UWTLHUDLayer::GetDefaultObj()
{
	static class UWTLHUDLayer* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDLayer*>(UWTLHUDLayer::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDLevelBar
// (None)

class UClass* UWTLHUDLevelBar::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDLevelBar");

	return Clss;
}


// WTLHUDLevelBar WTL.Default__WTLHUDLevelBar
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDLevelBar* UWTLHUDLevelBar::GetDefaultObj()
{
	static class UWTLHUDLevelBar* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDLevelBar*>(UWTLHUDLevelBar::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDLevelUp
// (None)

class UClass* UWTLHUDLevelUp::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDLevelUp");

	return Clss;
}


// WTLHUDLevelUp WTL.Default__WTLHUDLevelUp
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDLevelUp* UWTLHUDLevelUp::GetDefaultObj()
{
	static class UWTLHUDLevelUp* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDLevelUp*>(UWTLHUDLevelUp::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDLevelUp.OnShowAnimationFinished
// (Final, Native, Private)
// Parameters:

void UWTLHUDLevelUp::OnShowAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDLevelUp", "OnShowAnimationFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDLevelUp.OnHideAnimationFinished
// (Final, Native, Private)
// Parameters:

void UWTLHUDLevelUp::OnHideAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDLevelUp", "OnHideAnimationFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDLoader
// (None)

class UClass* UWTLHUDLoader::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDLoader");

	return Clss;
}


// WTLHUDLoader WTL.Default__WTLHUDLoader
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDLoader* UWTLHUDLoader::GetDefaultObj()
{
	static class UWTLHUDLoader* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDLoader*>(UWTLHUDLoader::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDMailBox
// (None)

class UClass* UWTLHUDMailBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDMailBox");

	return Clss;
}


// WTLHUDMailBox WTL.Default__WTLHUDMailBox
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDMailBox* UWTLHUDMailBox::GetDefaultObj()
{
	static class UWTLHUDMailBox* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDMailBox*>(UWTLHUDMailBox::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDMailBoxInboxListItem
// (None)

class UClass* UWTLHUDMailBoxInboxListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDMailBoxInboxListItem");

	return Clss;
}


// WTLHUDMailBoxInboxListItem WTL.Default__WTLHUDMailBoxInboxListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDMailBoxInboxListItem* UWTLHUDMailBoxInboxListItem::GetDefaultObj()
{
	static class UWTLHUDMailBoxInboxListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDMailBoxInboxListItem*>(UWTLHUDMailBoxInboxListItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDMailBoxInboxListItem.OnReceiveBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDMailBoxInboxListItem::OnReceiveBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxInboxListItem", "OnReceiveBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxInboxListItem.OnActionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDMailBoxInboxListItem::OnActionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxInboxListItem", "OnActionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDMailBoxSentMailListItem
// (None)

class UClass* UWTLHUDMailBoxSentMailListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDMailBoxSentMailListItem");

	return Clss;
}


// WTLHUDMailBoxSentMailListItem WTL.Default__WTLHUDMailBoxSentMailListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDMailBoxSentMailListItem* UWTLHUDMailBoxSentMailListItem::GetDefaultObj()
{
	static class UWTLHUDMailBoxSentMailListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDMailBoxSentMailListItem*>(UWTLHUDMailBoxSentMailListItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDMailBoxStorage
// (None)

class UClass* UWTLHUDMailBoxStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDMailBoxStorage");

	return Clss;
}


// WTLHUDMailBoxStorage WTL.Default__WTLHUDMailBoxStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDMailBoxStorage* UWTLHUDMailBoxStorage::GetDefaultObj()
{
	static class UWTLHUDMailBoxStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDMailBoxStorage*>(UWTLHUDMailBoxStorage::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDMailBoxStorage.OnTokensAmountToSendValueChange
// (Final, Native, Private)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxStorage::OnTokensAmountToSendValueChange(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnTokensAmountToSendValueChange");

	Params::UWTLHUDMailBoxStorage_OnTokensAmountToSendValueChange_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnTokensAmountToSendCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxStorage::OnTokensAmountToSendCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnTokensAmountToSendCommitted");

	Params::UWTLHUDMailBoxStorage_OnTokensAmountToSendCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnSendMailSuccessResultDialogHide
// (Final, Native, Private)
// Parameters:

void UWTLHUDMailBoxStorage::OnSendMailSuccessResultDialogHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnSendMailSuccessResultDialogHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnSendCheckRecipientNameRequest
// (Final, Native, Private)
// Parameters:

void UWTLHUDMailBoxStorage::OnSendCheckRecipientNameRequest()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnSendCheckRecipientNameRequest");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnRecipientNameCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxStorage::OnRecipientNameCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnRecipientNameCommitted");

	Params::UWTLHUDMailBoxStorage_OnRecipientNameCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnRecipientNameChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxStorage::OnRecipientNameChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnRecipientNameChanged");

	Params::UWTLHUDMailBoxStorage_OnRecipientNameChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnMessageTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxStorage::OnMessageTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnMessageTextCommitted");

	Params::UWTLHUDMailBoxStorage_OnMessageTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnMessageTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxStorage::OnMessageTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnMessageTextChanged");

	Params::UWTLHUDMailBoxStorage_OnMessageTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnMailPackageSent
// (Final, Native, Private)
// Parameters:

void UWTLHUDMailBoxStorage::OnMailPackageSent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnMailPackageSent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnMailPackageSendTimeout
// (Final, Native, Private)
// Parameters:

void UWTLHUDMailBoxStorage::OnMailPackageSendTimeout()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnMailPackageSendTimeout");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnDeliveryTypeSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxStorage::OnDeliveryTypeSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnDeliveryTypeSelectionChanged");

	Params::UWTLHUDMailBoxStorage_OnDeliveryTypeSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxStorage.OnCheckRecipientNameAvailableResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxStorage::OnCheckRecipientNameAvailableResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxStorage", "OnCheckRecipientNameAvailableResponse");

	Params::UWTLHUDMailBoxStorage_OnCheckRecipientNameAvailableResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDMailBoxWindow
// (None)

class UClass* UWTLHUDMailBoxWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDMailBoxWindow");

	return Clss;
}


// WTLHUDMailBoxWindow WTL.Default__WTLHUDMailBoxWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDMailBoxWindow* UWTLHUDMailBoxWindow::GetDefaultObj()
{
	static class UWTLHUDMailBoxWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDMailBoxWindow*>(UWTLHUDMailBoxWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDMailBoxWindow.UpdateInboxList
// (Final, Native, Private)
// Parameters:
// int32                              CurrentPageIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxWindow::UpdateInboxList(int32 CurrentPageIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "UpdateInboxList");

	Params::UWTLHUDMailBoxWindow_UpdateInboxList_Params Parms{};

	Parms.CurrentPageIndex = CurrentPageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.UpdateInbox
// (Final, Native, Private)
// Parameters:

void UWTLHUDMailBoxWindow::UpdateInbox()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "UpdateInbox");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.OnTabBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxWindow::OnTabBtnClicked(uint8 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "OnTabBtnClicked");

	Params::UWTLHUDMailBoxWindow_OnTabBtnClicked_Params Parms{};

	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.OnSentMailListScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxWindow::OnSentMailListScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "OnSentMailListScrolled");

	Params::UWTLHUDMailBoxWindow_OnSentMailListScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.OnMailPackageReceived
// (Final, Native, Private)
// Parameters:
// uint64                             MailPackageID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxWindow::OnMailPackageReceived(uint64 MailPackageID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "OnMailPackageReceived");

	Params::UWTLHUDMailBoxWindow_OnMailPackageReceived_Params Parms{};

	Parms.MailPackageID = MailPackageID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.OnMailPackageReceiveClicked
// (Final, Native, Private)
// Parameters:
// struct FWTLMailPackageRecord       MailPackage                                                      (Parm, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxWindow::OnMailPackageReceiveClicked(const struct FWTLMailPackageRecord& MailPackage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "OnMailPackageReceiveClicked");

	Params::UWTLHUDMailBoxWindow_OnMailPackageReceiveClicked_Params Parms{};

	Parms.MailPackage = MailPackage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.OnMailPackageOpenClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UWTLHUDMailBoxInboxListItem* OpenedInboxListItem                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLMailPackageRecord       MailPackage                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxWindow::OnMailPackageOpenClicked(class UWTLHUDMailBoxInboxListItem* OpenedInboxListItem, struct FWTLMailPackageRecord& MailPackage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "OnMailPackageOpenClicked");

	Params::UWTLHUDMailBoxWindow_OnMailPackageOpenClicked_Params Parms{};

	Parms.OpenedInboxListItem = OpenedInboxListItem;
	Parms.MailPackage = MailPackage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.OnMailPackageListReceived
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FWTLMailPackageRecord>MailPackages                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxWindow::OnMailPackageListReceived(TArray<struct FWTLMailPackageRecord>& MailPackages)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "OnMailPackageListReceived");

	Params::UWTLHUDMailBoxWindow_OnMailPackageListReceived_Params Parms{};

	Parms.MailPackages = MailPackages;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.OnMailPackageCountReceived
// (Final, Native, Private)
// Parameters:
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxWindow::OnMailPackageCountReceived(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "OnMailPackageCountReceived");

	Params::UWTLHUDMailBoxWindow_OnMailPackageCountReceived_Params Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.OnMailPackageCloseClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDMailBoxWindow::OnMailPackageCloseClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "OnMailPackageCloseClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.OnMailBoxActiveStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxWindow::OnMailBoxActiveStateChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "OnMailBoxActiveStateChanged");

	Params::UWTLHUDMailBoxWindow_OnMailBoxActiveStateChanged_Params Parms{};

	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMailBoxWindow.OnInboxListScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMailBoxWindow::OnInboxListScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMailBoxWindow", "OnInboxListScrolled");

	Params::UWTLHUDMailBoxWindow_OnInboxListScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDMainMenu
// (Actor)

class UClass* AWTLHUDMainMenu::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDMainMenu");

	return Clss;
}


// WTLHUDMainMenu WTL.Default__WTLHUDMainMenu
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLHUDMainMenu* AWTLHUDMainMenu::GetDefaultObj()
{
	static class AWTLHUDMainMenu* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLHUDMainMenu*>(AWTLHUDMainMenu::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDMainMenu.ShowItemInformation
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLStoreItem               StoreItemToShowInformation                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FWTLFullCharacterInfo       CharacterInfo                                                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FWTLCharacterCurrentState   CharacterCurrentState                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLHUDMainMenu::ShowItemInformation(struct FWTLStoreItem& StoreItemToShowInformation, struct FWTLFullCharacterInfo& CharacterInfo, struct FWTLCharacterCurrentState& CharacterCurrentState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "ShowItemInformation");

	Params::AWTLHUDMainMenu_ShowItemInformation_Params Parms{};

	Parms.StoreItemToShowInformation = StoreItemToShowInformation;
	Parms.CharacterInfo = CharacterInfo;
	Parms.CharacterCurrentState = CharacterCurrentState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMainMenu.ShowCharacterPreview
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLStoreItem               StoreItemToPreview                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FWTLFullCharacterInfo       FullCharacterInfo                                                (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FWTLCharacterCurrentState   CharacterCurrentState                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLHUDMainMenu::ShowCharacterPreview(struct FWTLStoreItem& StoreItemToPreview, struct FWTLFullCharacterInfo& FullCharacterInfo, struct FWTLCharacterCurrentState& CharacterCurrentState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "ShowCharacterPreview");

	Params::AWTLHUDMainMenu_ShowCharacterPreview_Params Parms{};

	Parms.StoreItemToPreview = StoreItemToPreview;
	Parms.FullCharacterInfo = FullCharacterInfo;
	Parms.CharacterCurrentState = CharacterCurrentState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMainMenu.OnWindowHide
// (Final, Native, Public)
// Parameters:

void AWTLHUDMainMenu::OnWindowHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "OnWindowHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMainMenu.OnStoreClosed
// (Final, Native, Private)
// Parameters:

void AWTLHUDMainMenu::OnStoreClosed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "OnStoreClosed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMainMenu.OnShowCodeActivationWindow
// (Final, Native, Public)
// Parameters:

void AWTLHUDMainMenu::OnShowCodeActivationWindow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "OnShowCodeActivationWindow");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMainMenu.OnSexSelectToPreview
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLStoreItem               StoreItemToPreview                                               (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class EWTLSex                 Sex                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLHUDMainMenu::OnSexSelectToPreview(struct FWTLStoreItem& StoreItemToPreview, enum class EWTLSex Sex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "OnSexSelectToPreview");

	Params::AWTLHUDMainMenu_OnSexSelectToPreview_Params Parms{};

	Parms.StoreItemToPreview = StoreItemToPreview;
	Parms.Sex = Sex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMainMenu.OnOptionsClosed
// (Final, Native, Private)
// Parameters:

void AWTLHUDMainMenu::OnOptionsClosed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "OnOptionsClosed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMainMenu.OnOptionsButtonClicked
// (Final, Native, Private)
// Parameters:

void AWTLHUDMainMenu::OnOptionsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "OnOptionsButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMainMenu.OnMoviePlayerHide
// (Final, Native, Private)
// Parameters:

void AWTLHUDMainMenu::OnMoviePlayerHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "OnMoviePlayerHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMainMenu.OnCreditsClosed
// (Final, Native, Private)
// Parameters:

void AWTLHUDMainMenu::OnCreditsClosed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "OnCreditsClosed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMainMenu.OnAuthorizeCancel
// (Final, Native, Private)
// Parameters:

void AWTLHUDMainMenu::OnAuthorizeCancel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMainMenu", "OnAuthorizeCancel");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDMinimap
// (None)

class UClass* UWTLHUDMinimap::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDMinimap");

	return Clss;
}


// WTLHUDMinimap WTL.Default__WTLHUDMinimap
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDMinimap* UWTLHUDMinimap::GetDefaultObj()
{
	static class UWTLHUDMinimap* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDMinimap*>(UWTLHUDMinimap::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDMoneyTransferWindow
// (None)

class UClass* UWTLHUDMoneyTransferWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDMoneyTransferWindow");

	return Clss;
}


// WTLHUDMoneyTransferWindow WTL.Default__WTLHUDMoneyTransferWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDMoneyTransferWindow* UWTLHUDMoneyTransferWindow::GetDefaultObj()
{
	static class UWTLHUDMoneyTransferWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDMoneyTransferWindow*>(UWTLHUDMoneyTransferWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDMoneyTransferWindow.OnMoneyTransferConfirm
// (Final, Native, Private)
// Parameters:

void UWTLHUDMoneyTransferWindow::OnMoneyTransferConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMoneyTransferWindow", "OnMoneyTransferConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMoneyTransferWindow.OnConfirmBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDMoneyTransferWindow::OnConfirmBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMoneyTransferWindow", "OnConfirmBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMoneyTransferWindow.OnCommentaryTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMoneyTransferWindow::OnCommentaryTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMoneyTransferWindow", "OnCommentaryTextBoxCommitted");

	Params::UWTLHUDMoneyTransferWindow_OnCommentaryTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMoneyTransferWindow.OnCommentaryTextBoxChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        InText                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDMoneyTransferWindow::OnCommentaryTextBoxChanged(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMoneyTransferWindow", "OnCommentaryTextBoxChanged");

	Params::UWTLHUDMoneyTransferWindow_OnCommentaryTextBoxChanged_Params Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMoneyTransferWindow.OnAmountTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDMoneyTransferWindow::OnAmountTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMoneyTransferWindow", "OnAmountTextBoxCommitted");

	Params::UWTLHUDMoneyTransferWindow_OnAmountTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMoneyTransferWindow.OnAmountTextBoxChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        InText                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDMoneyTransferWindow::OnAmountTextBoxChanged(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMoneyTransferWindow", "OnAmountTextBoxChanged");

	Params::UWTLHUDMoneyTransferWindow_OnAmountTextBoxChanged_Params Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDMoneyTransferWindow.CheckCharacterActorOnTimer
// (Final, Native, Private)
// Parameters:

void UWTLHUDMoneyTransferWindow::CheckCharacterActorOnTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDMoneyTransferWindow", "CheckCharacterActorOnTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDMonsterAbilities
// (None)

class UClass* UWTLHUDMonsterAbilities::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDMonsterAbilities");

	return Clss;
}


// WTLHUDMonsterAbilities WTL.Default__WTLHUDMonsterAbilities
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDMonsterAbilities* UWTLHUDMonsterAbilities::GetDefaultObj()
{
	static class UWTLHUDMonsterAbilities* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDMonsterAbilities*>(UWTLHUDMonsterAbilities::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDMonsterState
// (None)

class UClass* UWTLHUDMonsterState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDMonsterState");

	return Clss;
}


// WTLHUDMonsterState WTL.Default__WTLHUDMonsterState
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDMonsterState* UWTLHUDMonsterState::GetDefaultObj()
{
	static class UWTLHUDMonsterState* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDMonsterState*>(UWTLHUDMonsterState::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDReplicaButton
// (None)

class UClass* UWTLHUDReplicaButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDReplicaButton");

	return Clss;
}


// WTLHUDReplicaButton WTL.Default__WTLHUDReplicaButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDReplicaButton* UWTLHUDReplicaButton::GetDefaultObj()
{
	static class UWTLHUDReplicaButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDReplicaButton*>(UWTLHUDReplicaButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDNPCDialogButton
// (None)

class UClass* UWTLHUDNPCDialogButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDNPCDialogButton");

	return Clss;
}


// WTLHUDNPCDialogButton WTL.Default__WTLHUDNPCDialogButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDNPCDialogButton* UWTLHUDNPCDialogButton::GetDefaultObj()
{
	static class UWTLHUDNPCDialogButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDNPCDialogButton*>(UWTLHUDNPCDialogButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDNPCDialogReplicaBase
// (None)

class UClass* UWTLHUDNPCDialogReplicaBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDNPCDialogReplicaBase");

	return Clss;
}


// WTLHUDNPCDialogReplicaBase WTL.Default__WTLHUDNPCDialogReplicaBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDNPCDialogReplicaBase* UWTLHUDNPCDialogReplicaBase::GetDefaultObj()
{
	static class UWTLHUDNPCDialogReplicaBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDNPCDialogReplicaBase*>(UWTLHUDNPCDialogReplicaBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDNPCDialogQuestReward
// (None)

class UClass* UWTLHUDNPCDialogQuestReward::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDNPCDialogQuestReward");

	return Clss;
}


// WTLHUDNPCDialogQuestReward WTL.Default__WTLHUDNPCDialogQuestReward
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDNPCDialogQuestReward* UWTLHUDNPCDialogQuestReward::GetDefaultObj()
{
	static class UWTLHUDNPCDialogQuestReward* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDNPCDialogQuestReward*>(UWTLHUDNPCDialogQuestReward::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDNPCDialogReplica
// (None)

class UClass* UWTLHUDNPCDialogReplica::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDNPCDialogReplica");

	return Clss;
}


// WTLHUDNPCDialogReplica WTL.Default__WTLHUDNPCDialogReplica
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDNPCDialogReplica* UWTLHUDNPCDialogReplica::GetDefaultObj()
{
	static class UWTLHUDNPCDialogReplica* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDNPCDialogReplica*>(UWTLHUDNPCDialogReplica::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDNPCDialogWindow
// (None)

class UClass* UWTLHUDNPCDialogWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDNPCDialogWindow");

	return Clss;
}


// WTLHUDNPCDialogWindow WTL.Default__WTLHUDNPCDialogWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDNPCDialogWindow* UWTLHUDNPCDialogWindow::GetDefaultObj()
{
	static class UWTLHUDNPCDialogWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDNPCDialogWindow*>(UWTLHUDNPCDialogWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDNPCDialogWindow.OnReplicaSelected
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLReplica                 SelectedReplica                                                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDNPCDialogWindow::OnReplicaSelected(struct FWTLReplica& SelectedReplica)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDNPCDialogWindow", "OnReplicaSelected");

	Params::UWTLHUDNPCDialogWindow_OnReplicaSelected_Params Parms{};

	Parms.SelectedReplica = SelectedReplica;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDNPCDialogWindow.OnNPCActorActiveStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDNPCDialogWindow::OnNPCActorActiveStateChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDNPCDialogWindow", "OnNPCActorActiveStateChanged");

	Params::UWTLHUDNPCDialogWindow_OnNPCActorActiveStateChanged_Params Parms{};

	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDObjectCraft
// (None)

class UClass* UWTLHUDObjectCraft::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDObjectCraft");

	return Clss;
}


// WTLHUDObjectCraft WTL.Default__WTLHUDObjectCraft
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDObjectCraft* UWTLHUDObjectCraft::GetDefaultObj()
{
	static class UWTLHUDObjectCraft* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDObjectCraft*>(UWTLHUDObjectCraft::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDObjectCraftProcess
// (None)

class UClass* UWTLHUDObjectCraftProcess::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDObjectCraftProcess");

	return Clss;
}


// WTLHUDObjectCraftProcess WTL.Default__WTLHUDObjectCraftProcess
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDObjectCraftProcess* UWTLHUDObjectCraftProcess::GetDefaultObj()
{
	static class UWTLHUDObjectCraftProcess* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDObjectCraftProcess*>(UWTLHUDObjectCraftProcess::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDObjectInfo
// (None)

class UClass* UWTLHUDObjectInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDObjectInfo");

	return Clss;
}


// WTLHUDObjectInfo WTL.Default__WTLHUDObjectInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDObjectInfo* UWTLHUDObjectInfo::GetDefaultObj()
{
	static class UWTLHUDObjectInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDObjectInfo*>(UWTLHUDObjectInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDObstacleCourseHelpWindow
// (None)

class UClass* UWTLHUDObstacleCourseHelpWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDObstacleCourseHelpWindow");

	return Clss;
}


// WTLHUDObstacleCourseHelpWindow WTL.Default__WTLHUDObstacleCourseHelpWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDObstacleCourseHelpWindow* UWTLHUDObstacleCourseHelpWindow::GetDefaultObj()
{
	static class UWTLHUDObstacleCourseHelpWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDObstacleCourseHelpWindow*>(UWTLHUDObstacleCourseHelpWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDObstacleCourseHelpWindow.OnActionConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDObstacleCourseHelpWindow::OnActionConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDObstacleCourseHelpWindow", "OnActionConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDPlayerInventory
// (None)

class UClass* UWTLHUDPlayerInventory::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDPlayerInventory");

	return Clss;
}


// WTLHUDPlayerInventory WTL.Default__WTLHUDPlayerInventory
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDPlayerInventory* UWTLHUDPlayerInventory::GetDefaultObj()
{
	static class UWTLHUDPlayerInventory* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDPlayerInventory*>(UWTLHUDPlayerInventory::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDPlayerInventoryStorage
// (None)

class UClass* UWTLHUDPlayerInventoryStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDPlayerInventoryStorage");

	return Clss;
}


// WTLHUDPlayerInventoryStorage WTL.Default__WTLHUDPlayerInventoryStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDPlayerInventoryStorage* UWTLHUDPlayerInventoryStorage::GetDefaultObj()
{
	static class UWTLHUDPlayerInventoryStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDPlayerInventoryStorage*>(UWTLHUDPlayerInventoryStorage::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDPlayerInventoryStorage.UpdateMaxInventoryWeight
// (Final, Native, Private)
// Parameters:
// uint32                             MaxInventoryWeight                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDPlayerInventoryStorage::UpdateMaxInventoryWeight(uint32 MaxInventoryWeight)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "UpdateMaxInventoryWeight");

	Params::UWTLHUDPlayerInventoryStorage_UpdateMaxInventoryWeight_Params Parms{};

	Parms.MaxInventoryWeight = MaxInventoryWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.UpdateInventoryWeight
// (Final, Native, Private)
// Parameters:
// float                              InventoryLoad                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                             InventoryWeight                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDPlayerInventoryStorage::UpdateInventoryWeight(float InventoryLoad, uint32 InventoryWeight)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "UpdateInventoryWeight");

	Params::UWTLHUDPlayerInventoryStorage_UpdateInventoryWeight_Params Parms{};

	Parms.InventoryLoad = InventoryLoad;
	Parms.InventoryWeight = InventoryWeight;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.UniteAllItemsBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayerInventoryStorage::UniteAllItemsBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "UniteAllItemsBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OptimizeItemsBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayerInventoryStorage::OptimizeItemsBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OptimizeItemsBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OnRemoveStashConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayerInventoryStorage::OnRemoveStashConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OnRemoveStashConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OnRemoveStashBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayerInventoryStorage::OnRemoveStashBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OnRemoveStashBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OnPlaceUsualStash
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayerInventoryStorage::OnPlaceUsualStash()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OnPlaceUsualStash");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OnPlaceStashPopupMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsOpen                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDPlayerInventoryStorage::OnPlaceStashPopupMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OnPlaceStashPopupMenuOpenChanged");

	Params::UWTLHUDPlayerInventoryStorage_OnPlaceStashPopupMenuOpenChanged_Params Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OnPlaceStashPopupGetMenuContentEvent
// (Final, Native, Private)
// Parameters:
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UWTLHUDPlayerInventoryStorage::OnPlaceStashPopupGetMenuContentEvent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OnPlaceStashPopupGetMenuContentEvent");

	Params::UWTLHUDPlayerInventoryStorage_OnPlaceStashPopupGetMenuContentEvent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OnPlaceStashBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayerInventoryStorage::OnPlaceStashBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OnPlaceStashBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OnPlacePremiumStash
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayerInventoryStorage::OnPlacePremiumStash()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OnPlacePremiumStash");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OnCraftBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayerInventoryStorage::OnCraftBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OnCraftBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OnAccountInventoryItemsUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FWTLAccountInventoryItem>AccountInventoryItems                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDPlayerInventoryStorage::OnAccountInventoryItemsUpdated(TArray<struct FWTLAccountInventoryItem>& AccountInventoryItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OnAccountInventoryItemsUpdated");

	Params::UWTLHUDPlayerInventoryStorage_OnAccountInventoryItemsUpdated_Params Parms{};

	Parms.AccountInventoryItems = AccountInventoryItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayerInventoryStorage.OnAccountInventoryBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayerInventoryStorage::OnAccountInventoryBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayerInventoryStorage", "OnAccountInventoryBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDPlayerInventoryStorageWeightToolTip
// (None)

class UClass* UWTLHUDPlayerInventoryStorageWeightToolTip::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDPlayerInventoryStorageWeightToolTip");

	return Clss;
}


// WTLHUDPlayerInventoryStorageWeightToolTip WTL.Default__WTLHUDPlayerInventoryStorageWeightToolTip
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDPlayerInventoryStorageWeightToolTip* UWTLHUDPlayerInventoryStorageWeightToolTip::GetDefaultObj()
{
	static class UWTLHUDPlayerInventoryStorageWeightToolTip* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDPlayerInventoryStorageWeightToolTip*>(UWTLHUDPlayerInventoryStorageWeightToolTip::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDPlayersTableItem
// (None)

class UClass* UWTLHUDPlayersTableItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDPlayersTableItem");

	return Clss;
}


// WTLHUDPlayersTableItem WTL.Default__WTLHUDPlayersTableItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDPlayersTableItem* UWTLHUDPlayersTableItem::GetDefaultObj()
{
	static class UWTLHUDPlayersTableItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDPlayersTableItem*>(UWTLHUDPlayersTableItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDPlayersTableItem.OnSpectateBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayersTableItem::OnSpectateBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayersTableItem", "OnSpectateBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayersTableItem.OnSendMessageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayersTableItem::OnSendMessageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayersTableItem", "OnSendMessageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayersTableItem.OnSendInviteToGroupBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayersTableItem::OnSendInviteToGroupBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayersTableItem", "OnSendInviteToGroupBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayersTableItem.OnCharacterInfoBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDPlayersTableItem::OnCharacterInfoBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayersTableItem", "OnCharacterInfoBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDPlayersTableWindow
// (None)

class UClass* UWTLHUDPlayersTableWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDPlayersTableWindow");

	return Clss;
}


// WTLHUDPlayersTableWindow WTL.Default__WTLHUDPlayersTableWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDPlayersTableWindow* UWTLHUDPlayersTableWindow::GetDefaultObj()
{
	static class UWTLHUDPlayersTableWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDPlayersTableWindow*>(UWTLHUDPlayersTableWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDPlayersTableWindow.OnSpectateButtonClicked
// (Final, Native, Private)
// Parameters:
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDPlayersTableWindow::OnSpectateButtonClicked(const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayersTableWindow", "OnSpectateButtonClicked");

	Params::UWTLHUDPlayersTableWindow_OnSpectateButtonClicked_Params Parms{};

	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayersTableWindow.OnSendMessageButtonClicked
// (Final, Native, Private)
// Parameters:
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDPlayersTableWindow::OnSendMessageButtonClicked(const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayersTableWindow", "OnSendMessageButtonClicked");

	Params::UWTLHUDPlayersTableWindow_OnSendMessageButtonClicked_Params Parms{};

	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayersTableWindow.OnSendInviteToGroupButtonClicked
// (Final, Native, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDPlayersTableWindow::OnSendInviteToGroupButtonClicked(uint64 CharacterID, const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayersTableWindow", "OnSendInviteToGroupButtonClicked");

	Params::UWTLHUDPlayersTableWindow_OnSendInviteToGroupButtonClicked_Params Parms{};

	Parms.CharacterID = CharacterID;
	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayersTableWindow.OnPlayersItemsScrollBoxUserScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDPlayersTableWindow::OnPlayersItemsScrollBoxUserScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayersTableWindow", "OnPlayersItemsScrollBoxUserScrolled");

	Params::UWTLHUDPlayersTableWindow_OnPlayersItemsScrollBoxUserScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDPlayersTableWindow.OnCharacterInfoButtonClicked
// (Final, Native, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDPlayersTableWindow::OnCharacterInfoButtonClicked(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDPlayersTableWindow", "OnCharacterInfoButtonClicked");

	Params::UWTLHUDPlayersTableWindow_OnCharacterInfoButtonClicked_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDPlayerStatus
// (None)

class UClass* UWTLHUDPlayerStatus::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDPlayerStatus");

	return Clss;
}


// WTLHUDPlayerStatus WTL.Default__WTLHUDPlayerStatus
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDPlayerStatus* UWTLHUDPlayerStatus::GetDefaultObj()
{
	static class UWTLHUDPlayerStatus* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDPlayerStatus*>(UWTLHUDPlayerStatus::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDPossibleModificationIcon
// (None)

class UClass* UWTLHUDPossibleModificationIcon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDPossibleModificationIcon");

	return Clss;
}


// WTLHUDPossibleModificationIcon WTL.Default__WTLHUDPossibleModificationIcon
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDPossibleModificationIcon* UWTLHUDPossibleModificationIcon::GetDefaultObj()
{
	static class UWTLHUDPossibleModificationIcon* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDPossibleModificationIcon*>(UWTLHUDPossibleModificationIcon::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDPossibleModificationInfo
// (None)

class UClass* UWTLHUDPossibleModificationInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDPossibleModificationInfo");

	return Clss;
}


// WTLHUDPossibleModificationInfo WTL.Default__WTLHUDPossibleModificationInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDPossibleModificationInfo* UWTLHUDPossibleModificationInfo::GetDefaultObj()
{
	static class UWTLHUDPossibleModificationInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDPossibleModificationInfo*>(UWTLHUDPossibleModificationInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDQTEFishing
// (None)

class UClass* UWTLHUDQTEFishing::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDQTEFishing");

	return Clss;
}


// WTLHUDQTEFishing WTL.Default__WTLHUDQTEFishing
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDQTEFishing* UWTLHUDQTEFishing::GetDefaultObj()
{
	static class UWTLHUDQTEFishing* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDQTEFishing*>(UWTLHUDQTEFishing::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDQTEFishing.OnHookButtonMustRemoved
// (Final, Native, Private)
// Parameters:

void UWTLHUDQTEFishing::OnHookButtonMustRemoved()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDQTEFishing", "OnHookButtonMustRemoved");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDQTEFishingHookButton
// (None)

class UClass* UWTLHUDQTEFishingHookButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDQTEFishingHookButton");

	return Clss;
}


// WTLHUDQTEFishingHookButton WTL.Default__WTLHUDQTEFishingHookButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDQTEFishingHookButton* UWTLHUDQTEFishingHookButton::GetDefaultObj()
{
	static class UWTLHUDQTEFishingHookButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDQTEFishingHookButton*>(UWTLHUDQTEFishingHookButton::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDQTEFishingHookButton.OnMustRemovedBroadcast
// (Final, Native, Private)
// Parameters:

void UWTLHUDQTEFishingHookButton::OnMustRemovedBroadcast()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDQTEFishingHookButton", "OnMustRemovedBroadcast");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDQuestDependenciesTreePart
// (None)

class UClass* UWTLHUDQuestDependenciesTreePart::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDQuestDependenciesTreePart");

	return Clss;
}


// WTLHUDQuestDependenciesTreePart WTL.Default__WTLHUDQuestDependenciesTreePart
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDQuestDependenciesTreePart* UWTLHUDQuestDependenciesTreePart::GetDefaultObj()
{
	static class UWTLHUDQuestDependenciesTreePart* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDQuestDependenciesTreePart*>(UWTLHUDQuestDependenciesTreePart::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDQuestDependenciesWindow
// (None)

class UClass* UWTLHUDQuestDependenciesWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDQuestDependenciesWindow");

	return Clss;
}


// WTLHUDQuestDependenciesWindow WTL.Default__WTLHUDQuestDependenciesWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDQuestDependenciesWindow* UWTLHUDQuestDependenciesWindow::GetDefaultObj()
{
	static class UWTLHUDQuestDependenciesWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDQuestDependenciesWindow*>(UWTLHUDQuestDependenciesWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDQuestDependency
// (None)

class UClass* UWTLHUDQuestDependency::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDQuestDependency");

	return Clss;
}


// WTLHUDQuestDependency WTL.Default__WTLHUDQuestDependency
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDQuestDependency* UWTLHUDQuestDependency::GetDefaultObj()
{
	static class UWTLHUDQuestDependency* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDQuestDependency*>(UWTLHUDQuestDependency::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDQuestInformationWindow
// (None)

class UClass* UWTLHUDQuestInformationWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDQuestInformationWindow");

	return Clss;
}


// WTLHUDQuestInformationWindow WTL.Default__WTLHUDQuestInformationWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDQuestInformationWindow* UWTLHUDQuestInformationWindow::GetDefaultObj()
{
	static class UWTLHUDQuestInformationWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDQuestInformationWindow*>(UWTLHUDQuestInformationWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDQuestSlot
// (None)

class UClass* UWTLHUDQuestSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDQuestSlot");

	return Clss;
}


// WTLHUDQuestSlot WTL.Default__WTLHUDQuestSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDQuestSlot* UWTLHUDQuestSlot::GetDefaultObj()
{
	static class UWTLHUDQuestSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDQuestSlot*>(UWTLHUDQuestSlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDRadialMenu
// (None)

class UClass* UWTLHUDRadialMenu::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDRadialMenu");

	return Clss;
}


// WTLHUDRadialMenu WTL.Default__WTLHUDRadialMenu
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDRadialMenu* UWTLHUDRadialMenu::GetDefaultObj()
{
	static class UWTLHUDRadialMenu* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDRadialMenu*>(UWTLHUDRadialMenu::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDRadialMenu.GetHoveredButton
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWTLHUDRadialMenu::GetHoveredButton()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDRadialMenu", "GetHoveredButton");

	Params::UWTLHUDRadialMenu_GetHoveredButton_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function WTL.WTLHUDRadialMenu.CreateRadialMenuWidget
// (Event, Public, BlueprintEvent)
// Parameters:

void UWTLHUDRadialMenu::CreateRadialMenuWidget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDRadialMenu", "CreateRadialMenuWidget");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLHUDRadialMenu.AddRadialMenuWidgetAsChild
// (Event, Public, BlueprintEvent)
// Parameters:

void UWTLHUDRadialMenu::AddRadialMenuWidgetAsChild()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDRadialMenu", "AddRadialMenuWidgetAsChild");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLHUDRadialMenu.AddRadialButton
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UTexture2D*                  Icon                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        Description                                                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                      DebugPreviewText                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDRadialMenu::AddRadialButton(class UTexture2D* Icon, class FText& Description, const class FString& DebugPreviewText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDRadialMenu", "AddRadialButton");

	Params::UWTLHUDRadialMenu_AddRadialButton_Params Parms{};

	Parms.Icon = Icon;
	Parms.Description = Description;
	Parms.DebugPreviewText = DebugPreviewText;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLHUDRepair
// (None)

class UClass* UWTLHUDRepair::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDRepair");

	return Clss;
}


// WTLHUDRepair WTL.Default__WTLHUDRepair
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDRepair* UWTLHUDRepair::GetDefaultObj()
{
	static class UWTLHUDRepair* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDRepair*>(UWTLHUDRepair::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDRepairStorage
// (None)

class UClass* UWTLHUDRepairStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDRepairStorage");

	return Clss;
}


// WTLHUDRepairStorage WTL.Default__WTLHUDRepairStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDRepairStorage* UWTLHUDRepairStorage::GetDefaultObj()
{
	static class UWTLHUDRepairStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDRepairStorage*>(UWTLHUDRepairStorage::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDRepairWindow
// (None)

class UClass* UWTLHUDRepairWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDRepairWindow");

	return Clss;
}


// WTLHUDRepairWindow WTL.Default__WTLHUDRepairWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDRepairWindow* UWTLHUDRepairWindow::GetDefaultObj()
{
	static class UWTLHUDRepairWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDRepairWindow*>(UWTLHUDRepairWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDRepairWindow.OnNPCActorActiveStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDRepairWindow::OnNPCActorActiveStateChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDRepairWindow", "OnNPCActorActiveStateChanged");

	Params::UWTLHUDRepairWindow_OnNPCActorActiveStateChanged_Params Parms{};

	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDRequestWindow
// (None)

class UClass* UWTLHUDRequestWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDRequestWindow");

	return Clss;
}


// WTLHUDRequestWindow WTL.Default__WTLHUDRequestWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDRequestWindow* UWTLHUDRequestWindow::GetDefaultObj()
{
	static class UWTLHUDRequestWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDRequestWindow*>(UWTLHUDRequestWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDRequestWindow.OnDeclineRequestBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDRequestWindow::OnDeclineRequestBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDRequestWindow", "OnDeclineRequestBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDRequestWindow.OnAcceptRequestBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDRequestWindow::OnAcceptRequestBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDRequestWindow", "OnAcceptRequestBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDRobotsCraft
// (None)

class UClass* UWTLHUDRobotsCraft::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDRobotsCraft");

	return Clss;
}


// WTLHUDRobotsCraft WTL.Default__WTLHUDRobotsCraft
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDRobotsCraft* UWTLHUDRobotsCraft::GetDefaultObj()
{
	static class UWTLHUDRobotsCraft* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDRobotsCraft*>(UWTLHUDRobotsCraft::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDRobotsCraftWindow
// (None)

class UClass* UWTLHUDRobotsCraftWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDRobotsCraftWindow");

	return Clss;
}


// WTLHUDRobotsCraftWindow WTL.Default__WTLHUDRobotsCraftWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDRobotsCraftWindow* UWTLHUDRobotsCraftWindow::GetDefaultObj()
{
	static class UWTLHUDRobotsCraftWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDRobotsCraftWindow*>(UWTLHUDRobotsCraftWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDRobotsCraftWindow.OnStorageContentChanged
// (Final, Native, Private)
// Parameters:

void UWTLHUDRobotsCraftWindow::OnStorageContentChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDRobotsCraftWindow", "OnStorageContentChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDRobotsCraftWindow.OnMaxRobotCountChanged
// (Final, Native, Private)
// Parameters:
// int32                              MaxRobotCount                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDRobotsCraftWindow::OnMaxRobotCountChanged(int32 MaxRobotCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDRobotsCraftWindow", "OnMaxRobotCountChanged");

	Params::UWTLHUDRobotsCraftWindow_OnMaxRobotCountChanged_Params Parms{};

	Parms.MaxRobotCount = MaxRobotCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDRobotsCraftWindow.OnCurrentRobotCountChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentRobotCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDRobotsCraftWindow::OnCurrentRobotCountChanged(int32 CurrentRobotCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDRobotsCraftWindow", "OnCurrentRobotCountChanged");

	Params::UWTLHUDRobotsCraftWindow_OnCurrentRobotCountChanged_Params Parms{};

	Parms.CurrentRobotCount = CurrentRobotCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDSellStorage
// (None)

class UClass* UWTLHUDSellStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSellStorage");

	return Clss;
}


// WTLHUDSellStorage WTL.Default__WTLHUDSellStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSellStorage* UWTLHUDSellStorage::GetDefaultObj()
{
	static class UWTLHUDSellStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSellStorage*>(UWTLHUDSellStorage::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDSellStorage.OnSearchTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDSellStorage::OnSearchTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorage", "OnSearchTextBoxTextChanged");

	Params::UWTLHUDSellStorage_OnSearchTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDSellStorageItem
// (None)

class UClass* UWTLHUDSellStorageItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSellStorageItem");

	return Clss;
}


// WTLHUDSellStorageItem WTL.Default__WTLHUDSellStorageItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSellStorageItem* UWTLHUDSellStorageItem::GetDefaultObj()
{
	static class UWTLHUDSellStorageItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSellStorageItem*>(UWTLHUDSellStorageItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDSellStorageItem.OnPreviewBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDSellStorageItem::OnPreviewBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageItem", "OnPreviewBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageItem.OnItemInfoBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDSellStorageItem::OnItemInfoBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageItem", "OnItemInfoBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageItem.OnCharacterPreviewBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDSellStorageItem::OnCharacterPreviewBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageItem", "OnCharacterPreviewBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSellStorageItem.OnBuyBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLHUDSellStorageItem::OnBuyBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSellStorageItem", "OnBuyBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDServerEventInfo
// (None)

class UClass* UWTLHUDServerEventInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDServerEventInfo");

	return Clss;
}


// WTLHUDServerEventInfo WTL.Default__WTLHUDServerEventInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDServerEventInfo* UWTLHUDServerEventInfo::GetDefaultObj()
{
	static class UWTLHUDServerEventInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDServerEventInfo*>(UWTLHUDServerEventInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDSlotMachinePayTableWindow
// (None)

class UClass* UWTLHUDSlotMachinePayTableWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSlotMachinePayTableWindow");

	return Clss;
}


// WTLHUDSlotMachinePayTableWindow WTL.Default__WTLHUDSlotMachinePayTableWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSlotMachinePayTableWindow* UWTLHUDSlotMachinePayTableWindow::GetDefaultObj()
{
	static class UWTLHUDSlotMachinePayTableWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSlotMachinePayTableWindow*>(UWTLHUDSlotMachinePayTableWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDSlotMachineRewardWindow
// (None)

class UClass* UWTLHUDSlotMachineRewardWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSlotMachineRewardWindow");

	return Clss;
}


// WTLHUDSlotMachineRewardWindow WTL.Default__WTLHUDSlotMachineRewardWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSlotMachineRewardWindow* UWTLHUDSlotMachineRewardWindow::GetDefaultObj()
{
	static class UWTLHUDSlotMachineRewardWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSlotMachineRewardWindow*>(UWTLHUDSlotMachineRewardWindow::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDSpectatorModeExitHint
// (None)

class UClass* UWTLHUDSpectatorModeExitHint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSpectatorModeExitHint");

	return Clss;
}


// WTLHUDSpectatorModeExitHint WTL.Default__WTLHUDSpectatorModeExitHint
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSpectatorModeExitHint* UWTLHUDSpectatorModeExitHint::GetDefaultObj()
{
	static class UWTLHUDSpectatorModeExitHint* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSpectatorModeExitHint*>(UWTLHUDSpectatorModeExitHint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDSteamInventory
// (None)

class UClass* UWTLHUDSteamInventory::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSteamInventory");

	return Clss;
}


// WTLHUDSteamInventory WTL.Default__WTLHUDSteamInventory
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSteamInventory* UWTLHUDSteamInventory::GetDefaultObj()
{
	static class UWTLHUDSteamInventory* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSteamInventory*>(UWTLHUDSteamInventory::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDSteamInventoryItem
// (None)

class UClass* UWTLHUDSteamInventoryItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSteamInventoryItem");

	return Clss;
}


// WTLHUDSteamInventoryItem WTL.Default__WTLHUDSteamInventoryItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSteamInventoryItem* UWTLHUDSteamInventoryItem::GetDefaultObj()
{
	static class UWTLHUDSteamInventoryItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSteamInventoryItem*>(UWTLHUDSteamInventoryItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDSteamInventoryNewItemsWindow
// (None)

class UClass* UWTLHUDSteamInventoryNewItemsWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSteamInventoryNewItemsWindow");

	return Clss;
}


// WTLHUDSteamInventoryNewItemsWindow WTL.Default__WTLHUDSteamInventoryNewItemsWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSteamInventoryNewItemsWindow* UWTLHUDSteamInventoryNewItemsWindow::GetDefaultObj()
{
	static class UWTLHUDSteamInventoryNewItemsWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSteamInventoryNewItemsWindow*>(UWTLHUDSteamInventoryNewItemsWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDSteamInventoryNewItemsWindow.OnPreviousItemButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDSteamInventoryNewItemsWindow::OnPreviousItemButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSteamInventoryNewItemsWindow", "OnPreviousItemButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSteamInventoryNewItemsWindow.OnNextItemButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDSteamInventoryNewItemsWindow::OnNextItemButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSteamInventoryNewItemsWindow", "OnNextItemButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDSteamInventoryStorage
// (None)

class UClass* UWTLHUDSteamInventoryStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSteamInventoryStorage");

	return Clss;
}


// WTLHUDSteamInventoryStorage WTL.Default__WTLHUDSteamInventoryStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSteamInventoryStorage* UWTLHUDSteamInventoryStorage::GetDefaultObj()
{
	static class UWTLHUDSteamInventoryStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSteamInventoryStorage*>(UWTLHUDSteamInventoryStorage::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDSteamInventoryWindow
// (None)

class UClass* UWTLHUDSteamInventoryWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSteamInventoryWindow");

	return Clss;
}


// WTLHUDSteamInventoryWindow WTL.Default__WTLHUDSteamInventoryWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSteamInventoryWindow* UWTLHUDSteamInventoryWindow::GetDefaultObj()
{
	static class UWTLHUDSteamInventoryWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSteamInventoryWindow*>(UWTLHUDSteamInventoryWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDSteamInventoryWindow.OnUpdateInventory
// (Final, Native, Private)
// Parameters:
// int32                              UpdateHandle                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDSteamInventoryWindow::OnUpdateInventory(int32 UpdateHandle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSteamInventoryWindow", "OnUpdateInventory");

	Params::UWTLHUDSteamInventoryWindow_OnUpdateInventory_Params Parms{};

	Parms.UpdateHandle = UpdateHandle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSteamInventoryWindow.OnTakeBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDSteamInventoryWindow::OnTakeBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSteamInventoryWindow", "OnTakeBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSteamInventoryWindow.OnNPCActorActiveStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDSteamInventoryWindow::OnNPCActorActiveStateChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSteamInventoryWindow", "OnNPCActorActiveStateChanged");

	Params::UWTLHUDSteamInventoryWindow_OnNPCActorActiveStateChanged_Params Parms{};

	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSteamInventoryWindow.OnInventoryItemSelected
// (Final, Native, Private)
// Parameters:
// class UWTLHUDSteamInventoryItem*   ItemWidget                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Itemdefid                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDSteamInventoryWindow::OnInventoryItemSelected(class UWTLHUDSteamInventoryItem* ItemWidget, uint64 ItemId, int32 Itemdefid)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSteamInventoryWindow", "OnInventoryItemSelected");

	Params::UWTLHUDSteamInventoryWindow_OnInventoryItemSelected_Params Parms{};

	Parms.ItemWidget = ItemWidget;
	Parms.ItemId = ItemId;
	Parms.Itemdefid = Itemdefid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSteamInventoryWindow.OnInventoryItemImageUpdated
// (Final, Native, Private)
// Parameters:
// class UWTLHUDSteamInventoryItem*   ItemWidget                                                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDSteamInventoryWindow::OnInventoryItemImageUpdated(class UWTLHUDSteamInventoryItem* ItemWidget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSteamInventoryWindow", "OnInventoryItemImageUpdated");

	Params::UWTLHUDSteamInventoryWindow_OnInventoryItemImageUpdated_Params Parms{};

	Parms.ItemWidget = ItemWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDSteamInventoryWindow.OnConsumeItemTimeout
// (Final, Native, Private)
// Parameters:

void UWTLHUDSteamInventoryWindow::OnConsumeItemTimeout()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDSteamInventoryWindow", "OnConsumeItemTimeout");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDStuffSlot
// (None)

class UClass* UWTLHUDStuffSlot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDStuffSlot");

	return Clss;
}


// WTLHUDStuffSlot WTL.Default__WTLHUDStuffSlot
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDStuffSlot* UWTLHUDStuffSlot::GetDefaultObj()
{
	static class UWTLHUDStuffSlot* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDStuffSlot*>(UWTLHUDStuffSlot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDSwitchInfoWidgetsHint
// (None)

class UClass* UWTLHUDSwitchInfoWidgetsHint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDSwitchInfoWidgetsHint");

	return Clss;
}


// WTLHUDSwitchInfoWidgetsHint WTL.Default__WTLHUDSwitchInfoWidgetsHint
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDSwitchInfoWidgetsHint* UWTLHUDSwitchInfoWidgetsHint::GetDefaultObj()
{
	static class UWTLHUDSwitchInfoWidgetsHint* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDSwitchInfoWidgetsHint*>(UWTLHUDSwitchInfoWidgetsHint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDTabButton
// (None)

class UClass* UWTLHUDTabButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDTabButton");

	return Clss;
}


// WTLHUDTabButton WTL.Default__WTLHUDTabButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDTabButton* UWTLHUDTabButton::GetDefaultObj()
{
	static class UWTLHUDTabButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDTabButton*>(UWTLHUDTabButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDTeleportationDeviceWindow
// (None)

class UClass* UWTLHUDTeleportationDeviceWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDTeleportationDeviceWindow");

	return Clss;
}


// WTLHUDTeleportationDeviceWindow WTL.Default__WTLHUDTeleportationDeviceWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDTeleportationDeviceWindow* UWTLHUDTeleportationDeviceWindow::GetDefaultObj()
{
	static class UWTLHUDTeleportationDeviceWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDTeleportationDeviceWindow*>(UWTLHUDTeleportationDeviceWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDTeleportationDeviceWindow.OnTeleportationPointSelected
// (Final, Native, Private)
// Parameters:
// class AWTLFortificationCommandCore*FortificationCommandCore                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDTeleportationDeviceWindow::OnTeleportationPointSelected(class AWTLFortificationCommandCore* FortificationCommandCore)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTeleportationDeviceWindow", "OnTeleportationPointSelected");

	Params::UWTLHUDTeleportationDeviceWindow_OnTeleportationPointSelected_Params Parms{};

	Parms.FortificationCommandCore = FortificationCommandCore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDTeleportationPoint
// (None)

class UClass* UWTLHUDTeleportationPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDTeleportationPoint");

	return Clss;
}


// WTLHUDTeleportationPoint WTL.Default__WTLHUDTeleportationPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDTeleportationPoint* UWTLHUDTeleportationPoint::GetDefaultObj()
{
	static class UWTLHUDTeleportationPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDTeleportationPoint*>(UWTLHUDTeleportationPoint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDTextChatArea
// (None)

class UClass* UWTLHUDTextChatArea::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDTextChatArea");

	return Clss;
}


// WTLHUDTextChatArea WTL.Default__WTLHUDTextChatArea
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDTextChatArea* UWTLHUDTextChatArea::GetDefaultObj()
{
	static class UWTLHUDTextChatArea* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDTextChatArea*>(UWTLHUDTextChatArea::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDTextChatArea.OnUnmuteCharacter
// (Final, Native, Protected)
// Parameters:

void UWTLHUDTextChatArea::OnUnmuteCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnUnmuteCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnSmileButtonClicked
// (Final, Native, Protected)
// Parameters:
// class FString                      TextAliases                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDTextChatArea::OnSmileButtonClicked(const class FString& TextAliases)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnSmileButtonClicked");

	Params::UWTLHUDTextChatArea_OnSmileButtonClicked_Params Parms{};

	Parms.TextAliases = TextAliases;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnShowHideSmilesButtonClicked
// (Final, Native, Protected)
// Parameters:

void UWTLHUDTextChatArea::OnShowHideSmilesButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnShowHideSmilesButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnSendMessage
// (Final, Native, Protected)
// Parameters:

void UWTLHUDTextChatArea::OnSendMessage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnSendMessage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnReportCharacter
// (Final, Native, Protected)
// Parameters:

void UWTLHUDTextChatArea::OnReportCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnReportCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnRemoveCharacterFromContactList
// (Final, Native, Protected)
// Parameters:

void UWTLHUDTextChatArea::OnRemoveCharacterFromContactList()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnRemoveCharacterFromContactList");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnMuteCharacter
// (Final, Native, Protected)
// Parameters:

void UWTLHUDTextChatArea::OnMuteCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnMuteCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnMenuOpenChanged
// (Final, Native, Protected)
// Parameters:
// bool                               bIsOpen                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDTextChatArea::OnMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnMenuOpenChanged");

	Params::UWTLHUDTextChatArea_OnMenuOpenChanged_Params Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnInviteToGroup
// (Final, Native, Protected)
// Parameters:

void UWTLHUDTextChatArea::OnInviteToGroup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnInviteToGroup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnGetPopupMenuContent
// (Final, Native, Protected)
// Parameters:
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UWTLHUDTextChatArea::OnGetPopupMenuContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnGetPopupMenuContent");

	Params::UWTLHUDTextChatArea_OnGetPopupMenuContent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLHUDTextChatArea.OnCopyAllButtonClicked
// (Final, Native, Protected)
// Parameters:

void UWTLHUDTextChatArea::OnCopyAllButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnCopyAllButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnChatTabBtnClicked
// (Final, Native, Protected)
// Parameters:
// enum class EWTLFiltersChat         FiltersChat                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDTextChatArea::OnChatTabBtnClicked(enum class EWTLFiltersChat FiltersChat)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnChatTabBtnClicked");

	Params::UWTLHUDTextChatArea_OnChatTabBtnClicked_Params Parms{};

	Parms.FiltersChat = FiltersChat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnChatMessageTextBoxCommitted
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDTextChatArea::OnChatMessageTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnChatMessageTextBoxCommitted");

	Params::UWTLHUDTextChatArea_OnChatMessageTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnChatMessageTextBoxChanged
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class FText                        InText                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLHUDTextChatArea::OnChatMessageTextBoxChanged(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnChatMessageTextBoxChanged");

	Params::UWTLHUDTextChatArea_OnChatMessageTextBoxChanged_Params Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnAddCharacterToContactListAsFriend
// (Final, Native, Protected)
// Parameters:

void UWTLHUDTextChatArea::OnAddCharacterToContactListAsFriend()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnAddCharacterToContactListAsFriend");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.OnAddCharacterToContactListAsEnemy
// (Final, Native, Protected)
// Parameters:

void UWTLHUDTextChatArea::OnAddCharacterToContactListAsEnemy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "OnAddCharacterToContactListAsEnemy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTextChatArea.K2_SynchronizeProperties
// (Native, Public, BlueprintCallable)
// Parameters:

void UWTLHUDTextChatArea::K2_SynchronizeProperties()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatArea", "K2_SynchronizeProperties");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDTextChatItem
// (None)

class UClass* UWTLHUDTextChatItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDTextChatItem");

	return Clss;
}


// WTLHUDTextChatItem WTL.Default__WTLHUDTextChatItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDTextChatItem* UWTLHUDTextChatItem::GetDefaultObj()
{
	static class UWTLHUDTextChatItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDTextChatItem*>(UWTLHUDTextChatItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDTextChatItem.OnCopyButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDTextChatItem::OnCopyButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTextChatItem", "OnCopyButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDThrowingStateExitHint
// (None)

class UClass* UWTLHUDThrowingStateExitHint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDThrowingStateExitHint");

	return Clss;
}


// WTLHUDThrowingStateExitHint WTL.Default__WTLHUDThrowingStateExitHint
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDThrowingStateExitHint* UWTLHUDThrowingStateExitHint::GetDefaultObj()
{
	static class UWTLHUDThrowingStateExitHint* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDThrowingStateExitHint*>(UWTLHUDThrowingStateExitHint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDTrade
// (None)

class UClass* UWTLHUDTrade::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDTrade");

	return Clss;
}


// WTLHUDTrade WTL.Default__WTLHUDTrade
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDTrade* UWTLHUDTrade::GetDefaultObj()
{
	static class UWTLHUDTrade* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDTrade*>(UWTLHUDTrade::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDTradeTabsWindow
// (None)

class UClass* UWTLHUDTradeTabsWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDTradeTabsWindow");

	return Clss;
}


// WTLHUDTradeTabsWindow WTL.Default__WTLHUDTradeTabsWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDTradeTabsWindow* UWTLHUDTradeTabsWindow::GetDefaultObj()
{
	static class UWTLHUDTradeTabsWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDTradeTabsWindow*>(UWTLHUDTradeTabsWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDTradeTabsWindow.OnTabBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDTradeTabsWindow::OnTabBtnClicked(uint8 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTradeTabsWindow", "OnTabBtnClicked");

	Params::UWTLHUDTradeTabsWindow_OnTabBtnClicked_Params Parms{};

	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTradeTabsWindow.OnNPCActorActiveStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDTradeTabsWindow::OnNPCActorActiveStateChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTradeTabsWindow", "OnNPCActorActiveStateChanged");

	Params::UWTLHUDTradeTabsWindow_OnNPCActorActiveStateChanged_Params Parms{};

	Parms.IsActive = IsActive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDTutorialWindow
// (None)

class UClass* UWTLHUDTutorialWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDTutorialWindow");

	return Clss;
}


// WTLHUDTutorialWindow WTL.Default__WTLHUDTutorialWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDTutorialWindow* UWTLHUDTutorialWindow::GetDefaultObj()
{
	static class UWTLHUDTutorialWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDTutorialWindow*>(UWTLHUDTutorialWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDTutorialWindow.OnPreviousBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDTutorialWindow::OnPreviousBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTutorialWindow", "OnPreviousBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTutorialWindow.OnNextBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDTutorialWindow::OnNextBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTutorialWindow", "OnNextBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDTutorialWindow.OnDoNotShowAgainCheckBoxCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDTutorialWindow::OnDoNotShowAgainCheckBoxCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDTutorialWindow", "OnDoNotShowAgainCheckBoxCheckStateChanged");

	Params::UWTLHUDTutorialWindow_OnDoNotShowAgainCheckBoxCheckStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDUtilizationStorage
// (None)

class UClass* UWTLHUDUtilizationStorage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDUtilizationStorage");

	return Clss;
}


// WTLHUDUtilizationStorage WTL.Default__WTLHUDUtilizationStorage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDUtilizationStorage* UWTLHUDUtilizationStorage::GetDefaultObj()
{
	static class UWTLHUDUtilizationStorage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDUtilizationStorage*>(UWTLHUDUtilizationStorage::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDVehicleExitHint
// (None)

class UClass* UWTLHUDVehicleExitHint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDVehicleExitHint");

	return Clss;
}


// WTLHUDVehicleExitHint WTL.Default__WTLHUDVehicleExitHint
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDVehicleExitHint* UWTLHUDVehicleExitHint::GetDefaultObj()
{
	static class UWTLHUDVehicleExitHint* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDVehicleExitHint*>(UWTLHUDVehicleExitHint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDWarningTitle
// (None)

class UClass* UWTLHUDWarningTitle::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDWarningTitle");

	return Clss;
}


// WTLHUDWarningTitle WTL.Default__WTLHUDWarningTitle
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDWarningTitle* UWTLHUDWarningTitle::GetDefaultObj()
{
	static class UWTLHUDWarningTitle* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDWarningTitle*>(UWTLHUDWarningTitle::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDWeaponCountdown
// (None)

class UClass* UWTLHUDWeaponCountdown::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDWeaponCountdown");

	return Clss;
}


// WTLHUDWeaponCountdown WTL.Default__WTLHUDWeaponCountdown
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDWeaponCountdown* UWTLHUDWeaponCountdown::GetDefaultObj()
{
	static class UWTLHUDWeaponCountdown* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDWeaponCountdown*>(UWTLHUDWeaponCountdown::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDWeaponCountdown.OnCountdownSliderFinished
// (Final, Native, Private)
// Parameters:

void UWTLHUDWeaponCountdown::OnCountdownSliderFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDWeaponCountdown", "OnCountdownSliderFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDWeaponInfo
// (None)

class UClass* UWTLHUDWeaponInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDWeaponInfo");

	return Clss;
}


// WTLHUDWeaponInfo WTL.Default__WTLHUDWeaponInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDWeaponInfo* UWTLHUDWeaponInfo::GetDefaultObj()
{
	static class UWTLHUDWeaponInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDWeaponInfo*>(UWTLHUDWeaponInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLHUDWeaponPartsExchange
// (None)

class UClass* UWTLHUDWeaponPartsExchange::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDWeaponPartsExchange");

	return Clss;
}


// WTLHUDWeaponPartsExchange WTL.Default__WTLHUDWeaponPartsExchange
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDWeaponPartsExchange* UWTLHUDWeaponPartsExchange::GetDefaultObj()
{
	static class UWTLHUDWeaponPartsExchange* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDWeaponPartsExchange*>(UWTLHUDWeaponPartsExchange::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDWeaponPartsExchange.OnLostFocusOnWeaponPartsExchangeWindow
// (Final, Native, Private)
// Parameters:

void UWTLHUDWeaponPartsExchange::OnLostFocusOnWeaponPartsExchangeWindow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDWeaponPartsExchange", "OnLostFocusOnWeaponPartsExchangeWindow");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLHUDWeaponPartsExchangeWindow
// (None)

class UClass* UWTLHUDWeaponPartsExchangeWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLHUDWeaponPartsExchangeWindow");

	return Clss;
}


// WTLHUDWeaponPartsExchangeWindow WTL.Default__WTLHUDWeaponPartsExchangeWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLHUDWeaponPartsExchangeWindow* UWTLHUDWeaponPartsExchangeWindow::GetDefaultObj()
{
	static class UWTLHUDWeaponPartsExchangeWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLHUDWeaponPartsExchangeWindow*>(UWTLHUDWeaponPartsExchangeWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLHUDWeaponPartsExchangeWindow.OnWeaponPartItemToExchangeSlotInit
// (Final, Native, Private)
// Parameters:
// class UWTLHUDInventorySlot*        InventorySlot                                                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDWeaponPartsExchangeWindow::OnWeaponPartItemToExchangeSlotInit(class UWTLHUDInventorySlot* InventorySlot)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDWeaponPartsExchangeWindow", "OnWeaponPartItemToExchangeSlotInit");

	Params::UWTLHUDWeaponPartsExchangeWindow_OnWeaponPartItemToExchangeSlotInit_Params Parms{};

	Parms.InventorySlot = InventorySlot;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDWeaponPartsExchangeWindow.OnWeaponPartItemToExchangeSlotClear
// (Final, Native, Private)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDWeaponPartsExchangeWindow::OnWeaponPartItemToExchangeSlotClear(uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDWeaponPartsExchangeWindow", "OnWeaponPartItemToExchangeSlotClear");

	Params::UWTLHUDWeaponPartsExchangeWindow_OnWeaponPartItemToExchangeSlotClear_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDWeaponPartsExchangeWindow.OnWeaponModificationPartsTypeToExchangeSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDWeaponPartsExchangeWindow::OnWeaponModificationPartsTypeToExchangeSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDWeaponPartsExchangeWindow", "OnWeaponModificationPartsTypeToExchangeSelectionChanged");

	Params::UWTLHUDWeaponPartsExchangeWindow_OnWeaponModificationPartsTypeToExchangeSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDWeaponPartsExchangeWindow.OnMessageDialogHide
// (Final, Native, Private)
// Parameters:

void UWTLHUDWeaponPartsExchangeWindow::OnMessageDialogHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDWeaponPartsExchangeWindow", "OnMessageDialogHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDWeaponPartsExchangeWindow.OnItemCountToExchangeValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDWeaponPartsExchangeWindow::OnItemCountToExchangeValueChanged(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDWeaponPartsExchangeWindow", "OnItemCountToExchangeValueChanged");

	Params::UWTLHUDWeaponPartsExchangeWindow_OnItemCountToExchangeValueChanged_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDWeaponPartsExchangeWindow.OnItemCountToExchangeTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLHUDWeaponPartsExchangeWindow::OnItemCountToExchangeTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDWeaponPartsExchangeWindow", "OnItemCountToExchangeTextCommitted");

	Params::UWTLHUDWeaponPartsExchangeWindow_OnItemCountToExchangeTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDWeaponPartsExchangeWindow.OnExchangeConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLHUDWeaponPartsExchangeWindow::OnExchangeConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDWeaponPartsExchangeWindow", "OnExchangeConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLHUDWeaponPartsExchangeWindow.OnExchangeBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLHUDWeaponPartsExchangeWindow::OnExchangeBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLHUDWeaponPartsExchangeWindow", "OnExchangeBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLInputDataValidator
// (None)

class UClass* UWTLInputDataValidator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLInputDataValidator");

	return Clss;
}


// WTLInputDataValidator WTL.Default__WTLInputDataValidator
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLInputDataValidator* UWTLInputDataValidator::GetDefaultObj()
{
	static class UWTLInputDataValidator* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLInputDataValidator*>(UWTLInputDataValidator::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLIntegerSpinBox
// (None)

class UClass* UWTLIntegerSpinBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLIntegerSpinBox");

	return Clss;
}


// WTLIntegerSpinBox WTL.Default__WTLIntegerSpinBox
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLIntegerSpinBox* UWTLIntegerSpinBox::GetDefaultObj()
{
	static class UWTLIntegerSpinBox* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLIntegerSpinBox*>(UWTLIntegerSpinBox::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLIntegerSpinBox.SetValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLIntegerSpinBox::SetValue(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "SetValue");

	Params::UWTLIntegerSpinBox_SetValue_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLIntegerSpinBox.SetMinValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLIntegerSpinBox::SetMinValue(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "SetMinValue");

	Params::UWTLIntegerSpinBox_SetMinValue_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLIntegerSpinBox.SetMinSliderValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLIntegerSpinBox::SetMinSliderValue(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "SetMinSliderValue");

	Params::UWTLIntegerSpinBox_SetMinSliderValue_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLIntegerSpinBox.SetMaxValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLIntegerSpinBox::SetMaxValue(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "SetMaxValue");

	Params::UWTLIntegerSpinBox_SetMaxValue_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLIntegerSpinBox.SetMaxSliderValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              NewValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLIntegerSpinBox::SetMaxSliderValue(int32 NewValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "SetMaxSliderValue");

	Params::UWTLIntegerSpinBox_SetMaxSliderValue_Params Parms{};

	Parms.NewValue = NewValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLIntegerSpinBox.SetForegroundColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSlateColor                 InForegroundColor                                                (Parm, NativeAccessSpecifierPublic)

void UWTLIntegerSpinBox::SetForegroundColor(const struct FSlateColor& InForegroundColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "SetForegroundColor");

	Params::UWTLIntegerSpinBox_SetForegroundColor_Params Parms{};

	Parms.InForegroundColor = InForegroundColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction WTL.WTLIntegerSpinBox.OnIntegerSpinBoxValueCommittedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                              InValue                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLIntegerSpinBox::OnIntegerSpinBoxValueCommittedEvent__DelegateSignature(int32 InValue, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "OnIntegerSpinBoxValueCommittedEvent__DelegateSignature");

	Params::UWTLIntegerSpinBox_OnIntegerSpinBoxValueCommittedEvent__DelegateSignature_Params Parms{};

	Parms.InValue = InValue;
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction WTL.WTLIntegerSpinBox.OnIntegerSpinBoxValueChangedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                              InValue                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLIntegerSpinBox::OnIntegerSpinBoxValueChangedEvent__DelegateSignature(int32 InValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "OnIntegerSpinBoxValueChangedEvent__DelegateSignature");

	Params::UWTLIntegerSpinBox_OnIntegerSpinBoxValueChangedEvent__DelegateSignature_Params Parms{};

	Parms.InValue = InValue;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction WTL.WTLIntegerSpinBox.OnIntegerSpinBoxBeginSliderMovement__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:

void UWTLIntegerSpinBox::OnIntegerSpinBoxBeginSliderMovement__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "OnIntegerSpinBoxBeginSliderMovement__DelegateSignature");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLIntegerSpinBox.GetValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWTLIntegerSpinBox::GetValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "GetValue");

	Params::UWTLIntegerSpinBox_GetValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLIntegerSpinBox.GetMinValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWTLIntegerSpinBox::GetMinValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "GetMinValue");

	Params::UWTLIntegerSpinBox_GetMinValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLIntegerSpinBox.GetMinSliderValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWTLIntegerSpinBox::GetMinSliderValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "GetMinSliderValue");

	Params::UWTLIntegerSpinBox_GetMinSliderValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLIntegerSpinBox.GetMaxValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWTLIntegerSpinBox::GetMaxValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "GetMaxValue");

	Params::UWTLIntegerSpinBox_GetMaxValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLIntegerSpinBox.GetMaxSliderValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWTLIntegerSpinBox::GetMaxSliderValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "GetMaxSliderValue");

	Params::UWTLIntegerSpinBox_GetMaxSliderValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLIntegerSpinBox.ClearMinValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UWTLIntegerSpinBox::ClearMinValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "ClearMinValue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLIntegerSpinBox.ClearMinSliderValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UWTLIntegerSpinBox::ClearMinSliderValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "ClearMinSliderValue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLIntegerSpinBox.ClearMaxValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UWTLIntegerSpinBox::ClearMaxValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "ClearMaxValue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLIntegerSpinBox.ClearMaxSliderValue
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UWTLIntegerSpinBox::ClearMaxSliderValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLIntegerSpinBox", "ClearMaxSliderValue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLInteractiveBlockedObject
// (Actor)

class UClass* AWTLInteractiveBlockedObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLInteractiveBlockedObject");

	return Clss;
}


// WTLInteractiveBlockedObject WTL.Default__WTLInteractiveBlockedObject
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLInteractiveBlockedObject* AWTLInteractiveBlockedObject::GetDefaultObj()
{
	static class AWTLInteractiveBlockedObject* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLInteractiveBlockedObject*>(AWTLInteractiveBlockedObject::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLInteractiveBlockedObject.BPOnStartInteraction
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLInteractiveBlockedObject::BPOnStartInteraction(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractiveBlockedObject", "BPOnStartInteraction");

	Params::AWTLInteractiveBlockedObject_BPOnStartInteraction_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLInteractiveBlockedObject.BPOnFinishInteraction
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLInteractiveBlockedObject::BPOnFinishInteraction(class AWTLCharacter* Character, bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractiveBlockedObject", "BPOnFinishInteraction");

	Params::AWTLInteractiveBlockedObject_BPOnFinishInteraction_Params Parms{};

	Parms.Character = Character;
	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLInteractiveBlockedObject.BPGetActivationTime
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLInteractiveBlockedObject::BPGetActivationTime(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractiveBlockedObject", "BPGetActivationTime");

	Params::AWTLInteractiveBlockedObject_BPGetActivationTime_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Class WTL.WTLInteractiveObjectInterface
// (None)

class UClass* IWTLInteractiveObjectInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLInteractiveObjectInterface");

	return Clss;
}


// WTLInteractiveObjectInterface WTL.Default__WTLInteractiveObjectInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLInteractiveObjectInterface* IWTLInteractiveObjectInterface::GetDefaultObj()
{
	static class IWTLInteractiveObjectInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLInteractiveObjectInterface*>(IWTLInteractiveObjectInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLInteractivePlant
// (Actor)

class UClass* AWTLInteractivePlant::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLInteractivePlant");

	return Clss;
}


// WTLInteractivePlant WTL.Default__WTLInteractivePlant
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLInteractivePlant* AWTLInteractivePlant::GetDefaultObj()
{
	static class AWTLInteractivePlant* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLInteractivePlant*>(AWTLInteractivePlant::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLInteractivePlant.OnItemDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                      DestroyedActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLInteractivePlant::OnItemDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractivePlant", "OnItemDestroyed");

	Params::AWTLInteractivePlant_OnItemDestroyed_Params Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPlantInstancedStaticMeshComponent
// (SceneComponent, PrimitiveComponent, StaticMeshComponent)

class UClass* UWTLPlantInstancedStaticMeshComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPlantInstancedStaticMeshComponent");

	return Clss;
}


// WTLPlantInstancedStaticMeshComponent WTL.Default__WTLPlantInstancedStaticMeshComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPlantInstancedStaticMeshComponent* UWTLPlantInstancedStaticMeshComponent::GetDefaultObj()
{
	static class UWTLPlantInstancedStaticMeshComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPlantInstancedStaticMeshComponent*>(UWTLPlantInstancedStaticMeshComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLInteractivePlantSpawnField
// (Actor)

class UClass* AWTLInteractivePlantSpawnField::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLInteractivePlantSpawnField");

	return Clss;
}


// WTLInteractivePlantSpawnField WTL.Default__WTLInteractivePlantSpawnField
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLInteractivePlantSpawnField* AWTLInteractivePlantSpawnField::GetDefaultObj()
{
	static class AWTLInteractivePlantSpawnField* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLInteractivePlantSpawnField*>(AWTLInteractivePlantSpawnField::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLInteractivePlantSpawnField.OnRep_SpawnedItems
// (Final, Native, Private)
// Parameters:

void AWTLInteractivePlantSpawnField::OnRep_SpawnedItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractivePlantSpawnField", "OnRep_SpawnedItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLInteractivePlantSpawnPoint
// (Actor)

class UClass* AWTLInteractivePlantSpawnPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLInteractivePlantSpawnPoint");

	return Clss;
}


// WTLInteractivePlantSpawnPoint WTL.Default__WTLInteractivePlantSpawnPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLInteractivePlantSpawnPoint* AWTLInteractivePlantSpawnPoint::GetDefaultObj()
{
	static class AWTLInteractivePlantSpawnPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLInteractivePlantSpawnPoint*>(AWTLInteractivePlantSpawnPoint::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLInteractivePlantSpawnPoint.DeactivateSpawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               RemoveSpawnedPlants                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLInteractivePlantSpawnPoint::DeactivateSpawn(bool RemoveSpawnedPlants)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractivePlantSpawnPoint", "DeactivateSpawn");

	Params::AWTLInteractivePlantSpawnPoint_DeactivateSpawn_Params Parms{};

	Parms.RemoveSpawnedPlants = RemoveSpawnedPlants;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLInteractivePlantSpawnPoint.ActivateSpawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ResetSpawnedCounter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLInteractivePlantSpawnPoint::ActivateSpawn(bool ResetSpawnedCounter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractivePlantSpawnPoint", "ActivateSpawn");

	Params::AWTLInteractivePlantSpawnPoint_ActivateSpawn_Params Parms{};

	Parms.ResetSpawnedCounter = ResetSpawnedCounter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLInteractiveResource
// (Actor)

class UClass* AWTLInteractiveResource::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLInteractiveResource");

	return Clss;
}


// WTLInteractiveResource WTL.Default__WTLInteractiveResource
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLInteractiveResource* AWTLInteractiveResource::GetDefaultObj()
{
	static class AWTLInteractiveResource* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLInteractiveResource*>(AWTLInteractiveResource::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLInteractiveResource.OnRep_Count
// (Final, Native, Private)
// Parameters:

void AWTLInteractiveResource::OnRep_Count()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractiveResource", "OnRep_Count");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLInteractiveResourceSource
// (Actor)

class UClass* AWTLInteractiveResourceSource::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLInteractiveResourceSource");

	return Clss;
}


// WTLInteractiveResourceSource WTL.Default__WTLInteractiveResourceSource
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLInteractiveResourceSource* AWTLInteractiveResourceSource::GetDefaultObj()
{
	static class AWTLInteractiveResourceSource* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLInteractiveResourceSource*>(AWTLInteractiveResourceSource::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLInteractiveResourceSource.OnRep_CurrentValue
// (Final, Native, Private)
// Parameters:

void AWTLInteractiveResourceSource::OnRep_CurrentValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLInteractiveResourceSource", "OnRep_CurrentValue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLQuickTimeEventInstigator
// (None)

class UClass* IWTLQuickTimeEventInstigator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLQuickTimeEventInstigator");

	return Clss;
}


// WTLQuickTimeEventInstigator WTL.Default__WTLQuickTimeEventInstigator
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLQuickTimeEventInstigator* IWTLQuickTimeEventInstigator::GetDefaultObj()
{
	static class IWTLQuickTimeEventInstigator* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLQuickTimeEventInstigator*>(IWTLQuickTimeEventInstigator::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLQuickTimeEventInstigator.OnQTESuccessed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLQuickTimeEventInstigator::OnQTESuccessed(class AWTLCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuickTimeEventInstigator", "OnQTESuccessed");

	Params::IWTLQuickTimeEventInstigator_OnQTESuccessed_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuickTimeEventInstigator.OnQTEStarted
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLQuickTimeEventInstigator::OnQTEStarted(class AWTLCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuickTimeEventInstigator", "OnQTEStarted");

	Params::IWTLQuickTimeEventInstigator_OnQTEStarted_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuickTimeEventInstigator.OnQTEFailed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLQuickTimeEventInstigator::OnQTEFailed(class AWTLCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuickTimeEventInstigator", "OnQTEFailed");

	Params::IWTLQuickTimeEventInstigator_OnQTEFailed_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuickTimeEventInstigator.OnQTEChainError
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLQuickTimeEventInstigator::OnQTEChainError(class AWTLCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuickTimeEventInstigator", "OnQTEChainError");

	Params::IWTLQuickTimeEventInstigator_OnQTEChainError_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuickTimeEventInstigator.OnQTECanceled
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLQuickTimeEventInstigator::OnQTECanceled(class AWTLCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuickTimeEventInstigator", "OnQTECanceled");

	Params::IWTLQuickTimeEventInstigator_OnQTECanceled_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuickTimeEventInstigator.IsNeedToHideUsableItem
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IWTLQuickTimeEventInstigator::IsNeedToHideUsableItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuickTimeEventInstigator", "IsNeedToHideUsableItem");

	Params::IWTLQuickTimeEventInstigator_IsNeedToHideUsableItem_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLQuickTimeEventInstigator.GetQTEType
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQTEType             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLQTEType IWTLQuickTimeEventInstigator::GetQTEType(class AWTLCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuickTimeEventInstigator", "GetQTEType");

	Params::IWTLQuickTimeEventInstigator_GetQTEType_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLQuickTimeEventInstigator.GetQTEDificulty
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 IWTLQuickTimeEventInstigator::GetQTEDificulty(class AWTLCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuickTimeEventInstigator", "GetQTEDificulty");

	Params::IWTLQuickTimeEventInstigator_GetQTEDificulty_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLQuickTimeEventInstigator.CanCancelQTE
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Target                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IWTLQuickTimeEventInstigator::CanCancelQTE(class AWTLCharacter* Target)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuickTimeEventInstigator", "CanCancelQTE");

	Params::IWTLQuickTimeEventInstigator_CanCancelQTE_Params Parms{};

	Parms.Target = Target;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLItemManipulationIntreface
// (None)

class UClass* IWTLItemManipulationIntreface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLItemManipulationIntreface");

	return Clss;
}


// WTLItemManipulationIntreface WTL.Default__WTLItemManipulationIntreface
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLItemManipulationIntreface* IWTLItemManipulationIntreface::GetDefaultObj()
{
	static class IWTLItemManipulationIntreface* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLItemManipulationIntreface*>(IWTLItemManipulationIntreface::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLItemManipulationIntreface.UpdateRotation
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                              DeltaX                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DeltaY                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLItemManipulationIntreface::UpdateRotation(float DeltaX, float DeltaY)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemManipulationIntreface", "UpdateRotation");

	Params::IWTLItemManipulationIntreface_UpdateRotation_Params Parms{};

	Parms.DeltaX = DeltaX;
	Parms.DeltaY = DeltaY;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLItemManipulationIntreface.SetActivity
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AWTLActionGameplayActivity*  Activity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLItemManipulationIntreface::SetActivity(class AWTLActionGameplayActivity* Activity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemManipulationIntreface", "SetActivity");

	Params::IWTLItemManipulationIntreface_SetActivity_Params Parms{};

	Parms.Activity = Activity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLItemManipulationIntreface.OnPress
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                   ScreenPosition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLItemManipulationIntreface::OnPress(const struct FVector2D& ScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemManipulationIntreface", "OnPress");

	Params::IWTLItemManipulationIntreface_OnPress_Params Parms{};

	Parms.ScreenPosition = ScreenPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLItemManipulationIntreface.MakeTrace
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                   ScreenPosition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLItemManipulationIntreface::MakeTrace(const struct FVector2D& ScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemManipulationIntreface", "MakeTrace");

	Params::IWTLItemManipulationIntreface_MakeTrace_Params Parms{};

	Parms.ScreenPosition = ScreenPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLItemManipulationIntreface.GetViewTargetTexture
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UTextureRenderTarget2D*      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UTextureRenderTarget2D* IWTLItemManipulationIntreface::GetViewTargetTexture()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemManipulationIntreface", "GetViewTargetTexture");

	Params::IWTLItemManipulationIntreface_GetViewTargetTexture_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLItemManipulationIntreface.GetBrushMaterial
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UMaterialInterface*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UMaterialInterface* IWTLItemManipulationIntreface::GetBrushMaterial()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemManipulationIntreface", "GetBrushMaterial");

	Params::IWTLItemManipulationIntreface_GetBrushMaterial_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLItemManipulationIntreface.CheckHoveredComponent
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                   ScreenPosition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IWTLItemManipulationIntreface::CheckHoveredComponent(const struct FVector2D& ScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemManipulationIntreface", "CheckHoveredComponent");

	Params::IWTLItemManipulationIntreface_CheckHoveredComponent_Params Parms{};

	Parms.ScreenPosition = ScreenPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLItemPickup
// (Actor)

class UClass* AWTLItemPickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLItemPickup");

	return Clss;
}


// WTLItemPickup WTL.Default__WTLItemPickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLItemPickup* AWTLItemPickup::GetDefaultObj()
{
	static class AWTLItemPickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLItemPickup*>(AWTLItemPickup::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLItemPickup.OnItemDestroyed
// (Final, Native, Public)
// Parameters:
// class AActor*                      DestroyedActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLItemPickup::OnItemDestroyed(class AActor* DestroyedActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickup", "OnItemDestroyed");

	Params::AWTLItemPickup_OnItemDestroyed_Params Parms{};

	Parms.DestroyedActor = DestroyedActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLItemPickup.OnHit
// (Final, Native, Protected, HasOutParams, HasDefaults)
// Parameters:
// class AActor*                      SelfActor                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLItemPickup::OnHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickup", "OnHit");

	Params::AWTLItemPickup_OnHit_Params Parms{};

	Parms.SelfActor = SelfActor;
	Parms.OtherActor = OtherActor;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLItemPickup.NetMulticast_OnStopFreeFall
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FTransform                  StopFreeFallTransform                                            (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AWTLItemPickup::NetMulticast_OnStopFreeFall(const struct FTransform& StopFreeFallTransform)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickup", "NetMulticast_OnStopFreeFall");

	Params::AWTLItemPickup_NetMulticast_OnStopFreeFall_Params Parms{};

	Parms.StopFreeFallTransform = StopFreeFallTransform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLItemPickup.MakeFreeFall
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<class AActor*>              IgnoredActors                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLItemPickup::MakeFreeFall(TArray<class AActor*>* IgnoredActors)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickup", "MakeFreeFall");

	Params::AWTLItemPickup_MakeFreeFall_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (IgnoredActors != nullptr)
		*IgnoredActors = std::move(Parms.IgnoredActors);

}


// Function WTL.WTLItemPickup.GetItemTypeID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLItemPickup::GetItemTypeID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickup", "GetItemTypeID");

	Params::AWTLItemPickup_GetItemTypeID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLItemPickup.GetItemType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLItemType            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLItemType AWTLItemPickup::GetItemType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickup", "GetItemType");

	Params::AWTLItemPickup_GetItemType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLItemPickup.BPOnTakeItem
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLItemPickup::BPOnTakeItem(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickup", "BPOnTakeItem");

	Params::AWTLItemPickup_BPOnTakeItem_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLWeaponPickup
// (Actor)

class UClass* AWTLWeaponPickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLWeaponPickup");

	return Clss;
}


// WTLWeaponPickup WTL.Default__WTLWeaponPickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLWeaponPickup* AWTLWeaponPickup::GetDefaultObj()
{
	static class AWTLWeaponPickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLWeaponPickup*>(AWTLWeaponPickup::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLWeaponPickup.OnRep_ItemInfo
// (Final, Native, Private)
// Parameters:

void AWTLWeaponPickup::OnRep_ItemInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLWeaponPickup", "OnRep_ItemInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLAmmoPickup
// (Actor)

class UClass* AWTLAmmoPickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLAmmoPickup");

	return Clss;
}


// WTLAmmoPickup WTL.Default__WTLAmmoPickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLAmmoPickup* AWTLAmmoPickup::GetDefaultObj()
{
	static class AWTLAmmoPickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLAmmoPickup*>(AWTLAmmoPickup::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLAmmoPickup.OnRep_ItemInfo
// (Final, Native, Private)
// Parameters:

void AWTLAmmoPickup::OnRep_ItemInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLAmmoPickup", "OnRep_ItemInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMedicinePickup
// (Actor)

class UClass* AWTLMedicinePickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMedicinePickup");

	return Clss;
}


// WTLMedicinePickup WTL.Default__WTLMedicinePickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMedicinePickup* AWTLMedicinePickup::GetDefaultObj()
{
	static class AWTLMedicinePickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMedicinePickup*>(AWTLMedicinePickup::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMedicinePickup.OnRep_ItemInfo
// (Final, Native, Private)
// Parameters:

void AWTLMedicinePickup::OnRep_ItemInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMedicinePickup", "OnRep_ItemInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLStuffPickup
// (Actor)

class UClass* AWTLStuffPickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStuffPickup");

	return Clss;
}


// WTLStuffPickup WTL.Default__WTLStuffPickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStuffPickup* AWTLStuffPickup::GetDefaultObj()
{
	static class AWTLStuffPickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStuffPickup*>(AWTLStuffPickup::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLStuffPickup.OnRep_ItemInfo
// (Final, Native, Private)
// Parameters:

void AWTLStuffPickup::OnRep_ItemInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStuffPickup", "OnRep_ItemInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLClothesPickup
// (Actor)

class UClass* AWTLClothesPickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLClothesPickup");

	return Clss;
}


// WTLClothesPickup WTL.Default__WTLClothesPickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLClothesPickup* AWTLClothesPickup::GetDefaultObj()
{
	static class AWTLClothesPickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLClothesPickup*>(AWTLClothesPickup::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLClothesPickup.OnRep_ItemInfo
// (Final, Native, Private)
// Parameters:

void AWTLClothesPickup::OnRep_ItemInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLClothesPickup", "OnRep_ItemInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLResourcePickup
// (Actor)

class UClass* AWTLResourcePickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLResourcePickup");

	return Clss;
}


// WTLResourcePickup WTL.Default__WTLResourcePickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLResourcePickup* AWTLResourcePickup::GetDefaultObj()
{
	static class AWTLResourcePickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLResourcePickup*>(AWTLResourcePickup::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLResourcePickup.OnRep_ItemInfo
// (Final, Native, Private)
// Parameters:

void AWTLResourcePickup::OnRep_ItemInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLResourcePickup", "OnRep_ItemInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLArtefactPickup
// (Actor)

class UClass* AWTLArtefactPickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLArtefactPickup");

	return Clss;
}


// WTLArtefactPickup WTL.Default__WTLArtefactPickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLArtefactPickup* AWTLArtefactPickup::GetDefaultObj()
{
	static class AWTLArtefactPickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLArtefactPickup*>(AWTLArtefactPickup::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLArtefactPickup.OnRep_ItemInfo
// (Final, Native, Private)
// Parameters:

void AWTLArtefactPickup::OnRep_ItemInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLArtefactPickup", "OnRep_ItemInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLActiveArtefactPickup
// (Actor)

class UClass* AWTLActiveArtefactPickup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLActiveArtefactPickup");

	return Clss;
}


// WTLActiveArtefactPickup WTL.Default__WTLActiveArtefactPickup
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLActiveArtefactPickup* AWTLActiveArtefactPickup::GetDefaultObj()
{
	static class AWTLActiveArtefactPickup* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLActiveArtefactPickup*>(AWTLActiveArtefactPickup::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLItemPickupSpawnPoint
// (Actor)

class UClass* AWTLItemPickupSpawnPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLItemPickupSpawnPoint");

	return Clss;
}


// WTLItemPickupSpawnPoint WTL.Default__WTLItemPickupSpawnPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLItemPickupSpawnPoint* AWTLItemPickupSpawnPoint::GetDefaultObj()
{
	static class AWTLItemPickupSpawnPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLItemPickupSpawnPoint*>(AWTLItemPickupSpawnPoint::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLItemPickupSpawnPoint.SpawnSingleItem
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// float                              SpawnTimeout                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               SpawnOnlyIfNotExists                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLItemPickupSpawnPoint::SpawnSingleItem(float SpawnTimeout, bool SpawnOnlyIfNotExists)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickupSpawnPoint", "SpawnSingleItem");

	Params::AWTLItemPickupSpawnPoint_SpawnSingleItem_Params Parms{};

	Parms.SpawnTimeout = SpawnTimeout;
	Parms.SpawnOnlyIfNotExists = SpawnOnlyIfNotExists;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLItemPickupSpawnPoint.ResetSpawnTimer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLItemPickupSpawnPoint::ResetSpawnTimer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickupSpawnPoint", "ResetSpawnTimer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLItemPickupSpawnPoint.GetSpawnItemTypeID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLItemPickupSpawnPoint::GetSpawnItemTypeID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickupSpawnPoint", "GetSpawnItemTypeID");

	Params::AWTLItemPickupSpawnPoint_GetSpawnItemTypeID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLItemPickupSpawnPoint.GetSpawnItemType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLItemType            ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLItemType AWTLItemPickupSpawnPoint::GetSpawnItemType()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickupSpawnPoint", "GetSpawnItemType");

	Params::AWTLItemPickupSpawnPoint_GetSpawnItemType_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLItemPickupSpawnPoint.EnableSpawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLItemPickupSpawnPoint::EnableSpawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickupSpawnPoint", "EnableSpawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLItemPickupSpawnPoint.DisableSpawn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLItemPickupSpawnPoint::DisableSpawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLItemPickupSpawnPoint", "DisableSpawn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLItemPreview
// (Actor)

class UClass* AWTLItemPreview::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLItemPreview");

	return Clss;
}


// WTLItemPreview WTL.Default__WTLItemPreview
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLItemPreview* AWTLItemPreview::GetDefaultObj()
{
	static class AWTLItemPreview* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLItemPreview*>(AWTLItemPreview::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLItemSystem
// (None)

class UClass* UWTLItemSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLItemSystem");

	return Clss;
}


// WTLItemSystem WTL.Default__WTLItemSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLItemSystem* UWTLItemSystem::GetDefaultObj()
{
	static class UWTLItemSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLItemSystem*>(UWTLItemSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLJunkMachineBase
// (Actor)

class UClass* AWTLJunkMachineBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLJunkMachineBase");

	return Clss;
}


// WTLJunkMachineBase WTL.Default__WTLJunkMachineBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLJunkMachineBase* AWTLJunkMachineBase::GetDefaultObj()
{
	static class AWTLJunkMachineBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLJunkMachineBase*>(AWTLJunkMachineBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLJunkMachineBase.OnRep_BlackListInJunkMode
// (Final, Native, Private)
// Parameters:

void AWTLJunkMachineBase::OnRep_BlackListInJunkMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLJunkMachineBase", "OnRep_BlackListInJunkMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLJunkMachineBase.OnRep_BlackListInCardsMode
// (Final, Native, Private)
// Parameters:

void AWTLJunkMachineBase::OnRep_BlackListInCardsMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLJunkMachineBase", "OnRep_BlackListInCardsMode");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLKeyNameHelper
// (None)

class UClass* UWTLKeyNameHelper::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLKeyNameHelper");

	return Clss;
}


// WTLKeyNameHelper WTL.Default__WTLKeyNameHelper
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLKeyNameHelper* UWTLKeyNameHelper::GetDefaultObj()
{
	static class UWTLKeyNameHelper* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLKeyNameHelper*>(UWTLKeyNameHelper::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLLadder
// (Actor)

class UClass* AWTLLadder::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLadder");

	return Clss;
}


// WTLLadder WTL.Default__WTLLadder
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLLadder* AWTLLadder::GetDefaultObj()
{
	static class AWTLLadder* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLLadder*>(AWTLLadder::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLLadder.Server_Use
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLadder::Server_Use(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLadder", "Server_Use");

	Params::AWTLLadder_Server_Use_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLLevelPickupSpawnPoint
// (Actor)

class UClass* AWTLLevelPickupSpawnPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLevelPickupSpawnPoint");

	return Clss;
}


// WTLLevelPickupSpawnPoint WTL.Default__WTLLevelPickupSpawnPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLLevelPickupSpawnPoint* AWTLLevelPickupSpawnPoint::GetDefaultObj()
{
	static class AWTLLevelPickupSpawnPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLLevelPickupSpawnPoint*>(AWTLLevelPickupSpawnPoint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLLevelStreamingVolume
// (Actor)

class UClass* AWTLLevelStreamingVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLevelStreamingVolume");

	return Clss;
}


// WTLLevelStreamingVolume WTL.Default__WTLLevelStreamingVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLLevelStreamingVolume* AWTLLevelStreamingVolume::GetDefaultObj()
{
	static class AWTLLevelStreamingVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLLevelStreamingVolume*>(AWTLLevelStreamingVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLLevelStreamingVolume.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLevelStreamingVolume::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLevelStreamingVolume", "OnEndOverlap");

	Params::AWTLLevelStreamingVolume_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLevelStreamingVolume.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLLevelStreamingVolume::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLevelStreamingVolume", "OnBeginOverlap");

	Params::AWTLLevelStreamingVolume_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLLightChangeVolume
// (Actor)

class UClass* AWTLLightChangeVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLightChangeVolume");

	return Clss;
}


// WTLLightChangeVolume WTL.Default__WTLLightChangeVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLLightChangeVolume* AWTLLightChangeVolume::GetDefaultObj()
{
	static class AWTLLightChangeVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLLightChangeVolume*>(AWTLLightChangeVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLLightChangeVolume.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLightChangeVolume::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLightChangeVolume", "OnEndOverlap");

	Params::AWTLLightChangeVolume_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLightChangeVolume.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLLightChangeVolume::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLightChangeVolume", "OnBeginOverlap");

	Params::AWTLLightChangeVolume_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLLightingGrenadeProjectile
// (Actor)

class UClass* AWTLLightingGrenadeProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLightingGrenadeProjectile");

	return Clss;
}


// WTLLightingGrenadeProjectile WTL.Default__WTLLightingGrenadeProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLLightingGrenadeProjectile* AWTLLightingGrenadeProjectile::GetDefaultObj()
{
	static class AWTLLightingGrenadeProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLLightingGrenadeProjectile*>(AWTLLightingGrenadeProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLLoadingScreenLocation
// (None)

class UClass* UWTLLoadingScreenLocation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLoadingScreenLocation");

	return Clss;
}


// WTLLoadingScreenLocation WTL.Default__WTLLoadingScreenLocation
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLLoadingScreenLocation* UWTLLoadingScreenLocation::GetDefaultObj()
{
	static class UWTLLoadingScreenLocation* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLLoadingScreenLocation*>(UWTLLoadingScreenLocation::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLLoadingScreenSimple
// (None)

class UClass* UWTLLoadingScreenSimple::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLoadingScreenSimple");

	return Clss;
}


// WTLLoadingScreenSimple WTL.Default__WTLLoadingScreenSimple
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLLoadingScreenSimple* UWTLLoadingScreenSimple::GetDefaultObj()
{
	static class UWTLLoadingScreenSimple* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLLoadingScreenSimple*>(UWTLLoadingScreenSimple::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLLoadingScreenTestLevelScriptActor
// (Actor)

class UClass* AWTLLoadingScreenTestLevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLoadingScreenTestLevelScriptActor");

	return Clss;
}


// WTLLoadingScreenTestLevelScriptActor WTL.Default__WTLLoadingScreenTestLevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLLoadingScreenTestLevelScriptActor* AWTLLoadingScreenTestLevelScriptActor::GetDefaultObj()
{
	static class AWTLLoadingScreenTestLevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLLoadingScreenTestLevelScriptActor*>(AWTLLoadingScreenTestLevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLLoadingScreenTestMenu
// (None)

class UClass* UWTLLoadingScreenTestMenu::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLoadingScreenTestMenu");

	return Clss;
}


// WTLLoadingScreenTestMenu WTL.Default__WTLLoadingScreenTestMenu
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLLoadingScreenTestMenu* UWTLLoadingScreenTestMenu::GetDefaultObj()
{
	static class UWTLLoadingScreenTestMenu* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLLoadingScreenTestMenu*>(UWTLLoadingScreenTestMenu::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLLoadingScreenTestMenu.MainMenuBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLLoadingScreenTestMenu::MainMenuBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLoadingScreenTestMenu", "MainMenuBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLoadingScreenTestMenu.LocationBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLLoadingScreenTestMenu::LocationBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLoadingScreenTestMenu", "LocationBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLLocalizationHelper
// (None)

class UClass* UWTLLocalizationHelper::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLocalizationHelper");

	return Clss;
}


// WTLLocalizationHelper WTL.Default__WTLLocalizationHelper
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLLocalizationHelper* UWTLLocalizationHelper::GetDefaultObj()
{
	static class UWTLLocalizationHelper* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLLocalizationHelper*>(UWTLLocalizationHelper::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLLocalPlayer
// (None)

class UClass* UWTLLocalPlayer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLocalPlayer");

	return Clss;
}


// WTLLocalPlayer WTL.Default__WTLLocalPlayer
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLLocalPlayer* UWTLLocalPlayer::GetDefaultObj()
{
	static class UWTLLocalPlayer* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLLocalPlayer*>(UWTLLocalPlayer::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLLockpickingActivity
// (Actor)

class UClass* AWTLLockpickingActivity::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLockpickingActivity");

	return Clss;
}


// WTLLockpickingActivity WTL.Default__WTLLockpickingActivity
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLLockpickingActivity* AWTLLockpickingActivity::GetDefaultObj()
{
	static class AWTLLockpickingActivity* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLLockpickingActivity*>(AWTLLockpickingActivity::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLLockpickingActivity.Server_CheckPin
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// int32                              Pin_id                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::Server_CheckPin(int32 Pin_id)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "Server_CheckPin");

	Params::AWTLLockpickingActivity_Server_CheckPin_Params Parms{};

	Parms.Pin_id = Pin_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.ResetPin
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int32                              Pin_id                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::ResetPin(int32 Pin_id)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "ResetPin");

	Params::AWTLLockpickingActivity_ResetPin_Params Parms{};

	Parms.Pin_id = Pin_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.ResetGame
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsBreakLockpick                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::ResetGame(bool IsBreakLockpick)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "ResetGame");

	Params::AWTLLockpickingActivity_ResetGame_Params Parms{};

	Parms.IsBreakLockpick = IsBreakLockpick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// DelegateFunction WTL.WTLLockpickingActivity.OnResetPin__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                              PinID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::OnResetPin__DelegateSignature(int32 PinID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "OnResetPin__DelegateSignature");

	Params::AWTLLockpickingActivity_OnResetPin__DelegateSignature_Params Parms{};

	Parms.PinID = PinID;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction WTL.WTLLockpickingActivity.OnResetGame__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// bool                               IsBreakLockpick                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::OnResetGame__DelegateSignature(bool IsBreakLockpick)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "OnResetGame__DelegateSignature");

	Params::AWTLLockpickingActivity_OnResetGame__DelegateSignature_Params Parms{};

	Parms.IsBreakLockpick = IsBreakLockpick;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction WTL.WTLLockpickingActivity.OnInteractionFinished__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AWTLLockpickingActivity*     ActionGameplayActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::OnInteractionFinished__DelegateSignature(class AWTLLockpickingActivity* ActionGameplayActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "OnInteractionFinished__DelegateSignature");

	Params::AWTLLockpickingActivity_OnInteractionFinished__DelegateSignature_Params Parms{};

	Parms.ActionGameplayActor = ActionGameplayActor;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction WTL.WTLLockpickingActivity.OnCompleteGame__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::OnCompleteGame__DelegateSignature(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "OnCompleteGame__DelegateSignature");

	Params::AWTLLockpickingActivity_OnCompleteGame__DelegateSignature_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction WTL.WTLLockpickingActivity.OnCloseGame__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:

void AWTLLockpickingActivity::OnCloseGame__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "OnCloseGame__DelegateSignature");



	UObject::ProcessEvent(Func, nullptr);

}


// DelegateFunction WTL.WTLLockpickingActivity.OnCheckPinResult__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// int32                              Num                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PinID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsValid                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::OnCheckPinResult__DelegateSignature(int32 Num, int32 PinID, bool IsValid)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "OnCheckPinResult__DelegateSignature");

	Params::AWTLLockpickingActivity_OnCheckPinResult__DelegateSignature_Params Parms{};

	Parms.Num = Num;
	Parms.PinID = PinID;
	Parms.IsValid = IsValid;

	UObject::ProcessEvent(Func, &Parms);

}


// DelegateFunction WTL.WTLLockpickingActivity.OnBreakLockpick__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:

void AWTLLockpickingActivity::OnBreakLockpick__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "OnBreakLockpick__DelegateSignature");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLLockpickingActivity.Init
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Num_pins                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Seed                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::Init(int32 Num_pins, int32 Seed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "Init");

	Params::AWTLLockpickingActivity_Init_Params Parms{};

	Parms.Num_pins = Num_pins;
	Parms.Seed = Seed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.CompleteGame
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::CompleteGame(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "CompleteGame");

	Params::AWTLLockpickingActivity_CompleteGame_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.CloseGame
// (Native, Event, Public, BlueprintEvent)
// Parameters:

void AWTLLockpickingActivity::CloseGame()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "CloseGame");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.Client_ResetPin
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// int32                              Pin_id                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::Client_ResetPin(int32 Pin_id)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "Client_ResetPin");

	Params::AWTLLockpickingActivity_Client_ResetPin_Params Parms{};

	Parms.Pin_id = Pin_id;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.Client_ResetGame
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// bool                               IsBreakLockpick                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::Client_ResetGame(bool IsBreakLockpick)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "Client_ResetGame");

	Params::AWTLLockpickingActivity_Client_ResetGame_Params Parms{};

	Parms.IsBreakLockpick = IsBreakLockpick;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.Client_CompleteGame
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::Client_CompleteGame(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "Client_CompleteGame");

	Params::AWTLLockpickingActivity_Client_CompleteGame_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.Client_CloseGame
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:

void AWTLLockpickingActivity::Client_CloseGame()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "Client_CloseGame");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.Client_CheckPinResult
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// int32                              Num                                                              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PinID                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsValid                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLLockpickingActivity::Client_CheckPinResult(int32 Num, int32 PinID, bool IsValid)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "Client_CheckPinResult");

	Params::AWTLLockpickingActivity_Client_CheckPinResult_Params Parms{};

	Parms.Num = Num;
	Parms.PinID = PinID;
	Parms.IsValid = IsValid;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.Client_BreakLockpick
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:

void AWTLLockpickingActivity::Client_BreakLockpick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "Client_BreakLockpick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLLockpickingActivity.CanUseAssistant
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLLockpickingActivity::CanUseAssistant()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLLockpickingActivity", "CanUseAssistant");

	Params::AWTLLockpickingActivity_CanUseAssistant_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLLootCollectorDrone
// (Actor, Pawn)

class UClass* AWTLLootCollectorDrone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLLootCollectorDrone");

	return Clss;
}


// WTLLootCollectorDrone WTL.Default__WTLLootCollectorDrone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLLootCollectorDrone* AWTLLootCollectorDrone::GetDefaultObj()
{
	static class AWTLLootCollectorDrone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLLootCollectorDrone*>(AWTLLootCollectorDrone::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMailBox
// (Actor)

class UClass* AWTLMailBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMailBox");

	return Clss;
}


// WTLMailBox WTL.Default__WTLMailBox
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMailBox* AWTLMailBox::GetDefaultObj()
{
	static class AWTLMailBox* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMailBox*>(AWTLMailBox::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMailBox.SetIsActive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMailBox::SetIsActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMailBox", "SetIsActive");

	Params::AWTLMailBox_SetIsActive_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMailBox.OnRep_IsActive
// (Final, Native, Private)
// Parameters:

void AWTLMailBox::OnRep_IsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMailBox", "OnRep_IsActive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMailBox.OnIsActiveChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMailBox::OnIsActiveChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMailBox", "OnIsActiveChanged");

	Params::AWTLMailBox_OnIsActiveChanged_Params Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMailBox.GetIsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMailBox::GetIsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMailBox", "GetIsActive");

	Params::AWTLMailBox_GetIsActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLMailSystem
// (None)

class UClass* UWTLMailSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMailSystem");

	return Clss;
}


// WTLMailSystem WTL.Default__WTLMailSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMailSystem* UWTLMailSystem::GetDefaultObj()
{
	static class UWTLMailSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMailSystem*>(UWTLMailSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuActionWaiting
// (None)

class UClass* UWTLMainMenuActionWaiting::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuActionWaiting");

	return Clss;
}


// WTLMainMenuActionWaiting WTL.Default__WTLMainMenuActionWaiting
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuActionWaiting* UWTLMainMenuActionWaiting::GetDefaultObj()
{
	static class UWTLMainMenuActionWaiting* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuActionWaiting*>(UWTLMainMenuActionWaiting::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuActionWaiting.OnCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuActionWaiting::OnCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuActionWaiting", "OnCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuAnnouncer
// (None)

class UClass* UWTLMainMenuAnnouncer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuAnnouncer");

	return Clss;
}


// WTLMainMenuAnnouncer WTL.Default__WTLMainMenuAnnouncer
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuAnnouncer* UWTLMainMenuAnnouncer::GetDefaultObj()
{
	static class UWTLMainMenuAnnouncer* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuAnnouncer*>(UWTLMainMenuAnnouncer::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuAnnouncer.AnnouncerHttpCall
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuAnnouncer::AnnouncerHttpCall()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuAnnouncer", "AnnouncerHttpCall");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuBase
// (None)

class UClass* UWTLMainMenuBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuBase");

	return Clss;
}


// WTLMainMenuBase WTL.Default__WTLMainMenuBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuBase* UWTLMainMenuBase::GetDefaultObj()
{
	static class UWTLMainMenuBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuBase*>(UWTLMainMenuBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuBase.OnWindowHide
// (Native, Public)
// Parameters:

void UWTLMainMenuBase::OnWindowHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuBase", "OnWindowHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuBodyPartTypeButton
// (None)

class UClass* UWTLMainMenuBodyPartTypeButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuBodyPartTypeButton");

	return Clss;
}


// WTLMainMenuBodyPartTypeButton WTL.Default__WTLMainMenuBodyPartTypeButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuBodyPartTypeButton* UWTLMainMenuBodyPartTypeButton::GetDefaultObj()
{
	static class UWTLMainMenuBodyPartTypeButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuBodyPartTypeButton*>(UWTLMainMenuBodyPartTypeButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuCharacter
// (Actor, Pawn)

class UClass* AWTLMainMenuCharacter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCharacter");

	return Clss;
}


// WTLMainMenuCharacter WTL.Default__WTLMainMenuCharacter
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMainMenuCharacter* AWTLMainMenuCharacter::GetDefaultObj()
{
	static class AWTLMainMenuCharacter* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMainMenuCharacter*>(AWTLMainMenuCharacter::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuCharacterCreate
// (None)

class UClass* UWTLMainMenuCharacterCreate::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCharacterCreate");

	return Clss;
}


// WTLMainMenuCharacterCreate WTL.Default__WTLMainMenuCharacterCreate
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCharacterCreate* UWTLMainMenuCharacterCreate::GetDefaultObj()
{
	static class UWTLMainMenuCharacterCreate* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCharacterCreate*>(UWTLMainMenuCharacterCreate::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuCharacterCreate.OnYesBackBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterCreate::OnYesBackBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterCreate", "OnYesBackBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterCreate.OnCustomizationPurchasedItemsOnCreateOrApply
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterCreate::OnCustomizationPurchasedItemsOnCreateOrApply()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterCreate", "OnCustomizationPurchasedItemsOnCreateOrApply");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterCreate.OnCustomizationDataChanged
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterCreate::OnCustomizationDataChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterCreate", "OnCustomizationDataChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterCreate.OnCreateCharacterBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterCreate::OnCreateCharacterBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterCreate", "OnCreateCharacterBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterCreate.OnCharacterRotatorMouseButtonDown
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterCreate::OnCharacterRotatorMouseButtonDown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterCreate", "OnCharacterRotatorMouseButtonDown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterCreate.OnCharacterNameCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterCreate::OnCharacterNameCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterCreate", "OnCharacterNameCommitted");

	Params::UWTLMainMenuCharacterCreate_OnCharacterNameCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterCreate.OnCharacterNameCheckResponseReceived
// (Final, Native, Private)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterCreate::OnCharacterNameCheckResponseReceived(bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterCreate", "OnCharacterNameCheckResponseReceived");

	Params::UWTLMainMenuCharacterCreate_OnCharacterNameCheckResponseReceived_Params Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterCreate.OnCharacterNameChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterCreate::OnCharacterNameChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterCreate", "OnCharacterNameChanged");

	Params::UWTLMainMenuCharacterCreate_OnCharacterNameChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterCreate.OnBackBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterCreate::OnBackBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterCreate", "OnBackBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuCharacterListItem
// (None)

class UClass* UWTLMainMenuCharacterListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCharacterListItem");

	return Clss;
}


// WTLMainMenuCharacterListItem WTL.Default__WTLMainMenuCharacterListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCharacterListItem* UWTLMainMenuCharacterListItem::GetDefaultObj()
{
	static class UWTLMainMenuCharacterListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCharacterListItem*>(UWTLMainMenuCharacterListItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuCharacterListItem.OnPlayerNotSetBorderClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnPlayerNotSetBorderClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnPlayerNotSetBorderClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnExchangeCreditsBtnUnhovered
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnExchangeCreditsBtnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnExchangeCreditsBtnUnhovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnExchangeCreditsBtnHovered
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnExchangeCreditsBtnHovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnExchangeCreditsBtnHovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnExchangeCreditsBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnExchangeCreditsBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnExchangeCreditsBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnEditBtnUnhovered
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnEditBtnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnEditBtnUnhovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnEditBtnHovered
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnEditBtnHovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnEditBtnHovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnEditBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnEditBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnEditBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnDeleteBtnUnhovered
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnDeleteBtnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnDeleteBtnUnhovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnDeleteBtnHovered
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnDeleteBtnHovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnDeleteBtnHovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnDeleteBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnDeleteBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnDeleteBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnCancelDeleteBtnUnhovered
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnCancelDeleteBtnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnCancelDeleteBtnUnhovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnCancelDeleteBtnHovered
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnCancelDeleteBtnHovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnCancelDeleteBtnHovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnCancelDeleteBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnCancelDeleteBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnCancelDeleteBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnBuySlotBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnBuySlotBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnBuySlotBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnButtonPressed
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterListItem::OnButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnButtonPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterListItem.OnBackgroundBorderDoubleClick
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterListItem::OnBackgroundBorderDoubleClick(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterListItem", "OnBackgroundBorderDoubleClick");

	Params::UWTLMainMenuCharacterListItem_OnBackgroundBorderDoubleClick_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuCharacterName
// (None)

class UClass* UWTLMainMenuCharacterName::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCharacterName");

	return Clss;
}


// WTLMainMenuCharacterName WTL.Default__WTLMainMenuCharacterName
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCharacterName* UWTLMainMenuCharacterName::GetDefaultObj()
{
	static class UWTLMainMenuCharacterName* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCharacterName*>(UWTLMainMenuCharacterName::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuCharacterName.OnTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterName::OnTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterName", "OnTextBoxTextCommitted");

	Params::UWTLMainMenuCharacterName_OnTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterName.OnTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterName::OnTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterName", "OnTextBoxTextChanged");

	Params::UWTLMainMenuCharacterName_OnTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterName.OnSendCheckCharacterNameRequest
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterName::OnSendCheckCharacterNameRequest()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterName", "OnSendCheckCharacterNameRequest");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterName.OnCheckCharacterNameAvailableResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterName::OnCheckCharacterNameAvailableResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterName", "OnCheckCharacterNameAvailableResponse");

	Params::UWTLMainMenuCharacterName_OnCheckCharacterNameAvailableResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuCharacterSelect
// (None)

class UClass* UWTLMainMenuCharacterSelect::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCharacterSelect");

	return Clss;
}


// WTLMainMenuCharacterSelect WTL.Default__WTLMainMenuCharacterSelect
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCharacterSelect* UWTLMainMenuCharacterSelect::GetDefaultObj()
{
	static class UWTLMainMenuCharacterSelect* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCharacterSelect*>(UWTLMainMenuCharacterSelect::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuCharacterSelect.OnYesDeleteBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnYesDeleteBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnYesDeleteBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnYesCancelDeleteBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnYesCancelDeleteBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnYesCancelDeleteBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnTopUpCredits
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnTopUpCredits()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnTopUpCredits");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnStoreItemsUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FWTLStoreItem>       StoreItems                                                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterSelect::OnStoreItemsUpdated(TArray<struct FWTLStoreItem>& StoreItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnStoreItemsUpdated");

	Params::UWTLMainMenuCharacterSelect_OnStoreItemsUpdated_Params Parms{};

	Parms.StoreItems = StoreItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnStoreBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnStoreBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnStoreBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnPlayBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnPlayBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnPlayBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnExchangeCreditsErrorHide
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnExchangeCreditsErrorHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnExchangeCreditsErrorHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnExchangeCreditsCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnExchangeCreditsCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnExchangeCreditsCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnExchangeCreditsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnExchangeCreditsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnExchangeCreditsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnDeleteCharacterCountdown
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnDeleteCharacterCountdown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnDeleteCharacterCountdown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnCreditsToExchangeTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterSelect::OnCreditsToExchangeTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnCreditsToExchangeTextBoxCommitted");

	Params::UWTLMainMenuCharacterSelect_OnCreditsToExchangeTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnCreditsToExchangeTextBoxChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterSelect::OnCreditsToExchangeTextBoxChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnCreditsToExchangeTextBoxChanged");

	Params::UWTLMainMenuCharacterSelect_OnCreditsToExchangeTextBoxChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnConfirmationWindowHide
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnConfirmationWindowHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnConfirmationWindowHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnCancelWaitingSetActiveCharacterResponse
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnCancelWaitingSetActiveCharacterResponse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnCancelWaitingSetActiveCharacterResponse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnBuyCharacterSlotResult
// (Final, Native, Private)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterSelect::OnBuyCharacterSlotResult(bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnBuyCharacterSlotResult");

	Params::UWTLMainMenuCharacterSelect_OnBuyCharacterSlotResult_Params Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnBuyCharacterSlotConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnBuyCharacterSlotConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnBuyCharacterSlotConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnBackBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCharacterSelect::OnBackBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnBackBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCharacterSelect.OnAccountInventoryItemsUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FWTLAccountInventoryItem>AccountInventoryItems                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterSelect::OnAccountInventoryItemsUpdated(TArray<struct FWTLAccountInventoryItem>& AccountInventoryItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelect", "OnAccountInventoryItemsUpdated");

	Params::UWTLMainMenuCharacterSelect_OnAccountInventoryItemsUpdated_Params Parms{};

	Parms.AccountInventoryItems = AccountInventoryItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuCharacterSelectToActionItem
// (None)

class UClass* UWTLMainMenuCharacterSelectToActionItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCharacterSelectToActionItem");

	return Clss;
}


// WTLMainMenuCharacterSelectToActionItem WTL.Default__WTLMainMenuCharacterSelectToActionItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCharacterSelectToActionItem* UWTLMainMenuCharacterSelectToActionItem::GetDefaultObj()
{
	static class UWTLMainMenuCharacterSelectToActionItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCharacterSelectToActionItem*>(UWTLMainMenuCharacterSelectToActionItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuCharacterSelectToActionWindow
// (None)

class UClass* UWTLMainMenuCharacterSelectToActionWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCharacterSelectToActionWindow");

	return Clss;
}


// WTLMainMenuCharacterSelectToActionWindow WTL.Default__WTLMainMenuCharacterSelectToActionWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCharacterSelectToActionWindow* UWTLMainMenuCharacterSelectToActionWindow::GetDefaultObj()
{
	static class UWTLMainMenuCharacterSelectToActionWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCharacterSelectToActionWindow*>(UWTLMainMenuCharacterSelectToActionWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuCharacterSelectToActionWindow.OnCharacterSelected
// (Final, Native, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCharacterSelectToActionWindow::OnCharacterSelected(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCharacterSelectToActionWindow", "OnCharacterSelected");

	Params::UWTLMainMenuCharacterSelectToActionWindow_OnCharacterSelected_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuChooseAccountType
// (None)

class UClass* UWTLMainMenuChooseAccountType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuChooseAccountType");

	return Clss;
}


// WTLMainMenuChooseAccountType WTL.Default__WTLMainMenuChooseAccountType
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuChooseAccountType* UWTLMainMenuChooseAccountType::GetDefaultObj()
{
	static class UWTLMainMenuChooseAccountType* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuChooseAccountType*>(UWTLMainMenuChooseAccountType::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuChooseAccountType.OnLinkExistingBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuChooseAccountType::OnLinkExistingBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuChooseAccountType", "OnLinkExistingBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuChooseAccountType.OnCreateNewBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuChooseAccountType::OnCreateNewBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuChooseAccountType", "OnCreateNewBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuChooseAccountType.OnCreateNewAccountConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuChooseAccountType::OnCreateNewAccountConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuChooseAccountType", "OnCreateNewAccountConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuChooseAccountType.OnConnectedToServer
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuChooseAccountType::OnConnectedToServer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuChooseAccountType", "OnConnectedToServer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuChooseAccountType.OnCloseBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuChooseAccountType::OnCloseBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuChooseAccountType", "OnCloseBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuChooseLanguage
// (None)

class UClass* UWTLMainMenuChooseLanguage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuChooseLanguage");

	return Clss;
}


// WTLMainMenuChooseLanguage WTL.Default__WTLMainMenuChooseLanguage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuChooseLanguage* UWTLMainMenuChooseLanguage::GetDefaultObj()
{
	static class UWTLMainMenuChooseLanguage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuChooseLanguage*>(UWTLMainMenuChooseLanguage::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuChooseLanguage.OnOKBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuChooseLanguage::OnOKBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuChooseLanguage", "OnOKBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuChooseLanguage.OnLanguageChange
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuChooseLanguage::OnLanguageChange(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuChooseLanguage", "OnLanguageChange");

	Params::UWTLMainMenuChooseLanguage_OnLanguageChange_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuChooseLanguage.ChooseLanguageConfirm
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuChooseLanguage::ChooseLanguageConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuChooseLanguage", "ChooseLanguageConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuCredits
// (None)

class UClass* UWTLMainMenuCredits::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCredits");

	return Clss;
}


// WTLMainMenuCredits WTL.Default__WTLMainMenuCredits
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCredits* UWTLMainMenuCredits::GetDefaultObj()
{
	static class UWTLMainMenuCredits* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCredits*>(UWTLMainMenuCredits::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuCredits.OnCreditsScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCredits::OnCreditsScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCredits", "OnCreditsScrolled");

	Params::UWTLMainMenuCredits_OnCreditsScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCredits.OnCreditsPlay
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCredits::OnCreditsPlay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCredits", "OnCreditsPlay");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCredits.OnCreditsPause
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCredits::OnCreditsPause()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCredits", "OnCreditsPause");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCredits.OnCreditsClose
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCredits::OnCreditsClose()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCredits", "OnCreditsClose");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuCreditsAmountWithTopUp
// (None)

class UClass* UWTLMainMenuCreditsAmountWithTopUp::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCreditsAmountWithTopUp");

	return Clss;
}


// WTLMainMenuCreditsAmountWithTopUp WTL.Default__WTLMainMenuCreditsAmountWithTopUp
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCreditsAmountWithTopUp* UWTLMainMenuCreditsAmountWithTopUp::GetDefaultObj()
{
	static class UWTLMainMenuCreditsAmountWithTopUp* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCreditsAmountWithTopUp*>(UWTLMainMenuCreditsAmountWithTopUp::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuCreditsAmountWithTopUp.OnCodeActivateButtonPressed
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCreditsAmountWithTopUp::OnCodeActivateButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCreditsAmountWithTopUp", "OnCodeActivateButtonPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuCustomization
// (None)

class UClass* UWTLMainMenuCustomization::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCustomization");

	return Clss;
}


// WTLMainMenuCustomization WTL.Default__WTLMainMenuCustomization
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCustomization* UWTLMainMenuCustomization::GetDefaultObj()
{
	static class UWTLMainMenuCustomization* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCustomization*>(UWTLMainMenuCustomization::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuCustomization.OnZoomOutBtnReleased
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomization::OnZoomOutBtnReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnZoomOutBtnReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnZoomOutBtnPressed
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomization::OnZoomOutBtnPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnZoomOutBtnPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnWantToBuyNotPurchasedItemsConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomization::OnWantToBuyNotPurchasedItemsConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnWantToBuyNotPurchasedItemsConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnTopUpCredits
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomization::OnTopUpCredits()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnTopUpCredits");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnSkinColorBtnClick
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   BtnGeometry                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               InMouseEvent                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnSkinColorBtnClick(struct FGeometry& BtnGeometry, struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnSkinColorBtnClick");

	Params::UWTLMainMenuCustomization_OnSkinColorBtnClick_Params Parms{};

	Parms.BtnGeometry = BtnGeometry;
	Parms.InMouseEvent = InMouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnRandomizeBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomization::OnRandomizeBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnRandomizeBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnPurchaseStoreItems
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLInAppPurchaseResult     InAppPurchaseResult                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnPurchaseStoreItems(struct FWTLInAppPurchaseResult& InAppPurchaseResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnPurchaseStoreItems");

	Params::UWTLMainMenuCustomization_OnPurchaseStoreItems_Params Parms{};

	Parms.InAppPurchaseResult = InAppPurchaseResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnPreviousItemsButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomization::OnPreviousItemsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnPreviousItemsButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnNextItemsButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomization::OnNextItemsButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnNextItemsButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnMaterialScalarItemValueChanged
// (Final, Native, Private)
// Parameters:
// uint8                              CurrentScalarValue                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnMaterialScalarItemValueChanged(uint8 CurrentScalarValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnMaterialScalarItemValueChanged");

	Params::UWTLMainMenuCustomization_OnMaterialScalarItemValueChanged_Params Parms{};

	Parms.CurrentScalarValue = CurrentScalarValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnMaterialsBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnMaterialsBtnClicked(uint8 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnMaterialsBtnClicked");

	Params::UWTLMainMenuCustomization_OnMaterialsBtnClicked_Params Parms{};

	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnMaterialColorButtonClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UWTLMainMenuMaterialColorScalar*MaterialColorScalar                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FGeometry                   BtnGeometry                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               InMouseEvent                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnMaterialColorButtonClicked(class UWTLMainMenuMaterialColorScalar* MaterialColorScalar, struct FGeometry& BtnGeometry, struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnMaterialColorButtonClicked");

	Params::UWTLMainMenuCustomization_OnMaterialColorButtonClicked_Params Parms{};

	Parms.MaterialColorScalar = MaterialColorScalar;
	Parms.BtnGeometry = BtnGeometry;
	Parms.InMouseEvent = InMouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnItemSwitcherValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnItemSwitcherValueChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnItemSwitcherValueChanged");

	Params::UWTLMainMenuCustomization_OnItemSwitcherValueChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnItemsScrollBoxScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnItemsScrollBoxScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnItemsScrollBoxScrolled");

	Params::UWTLMainMenuCustomization_OnItemsScrollBoxScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnItemClicked
// (Final, Native, Private)
// Parameters:
// int32                              ItemPartID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnItemClicked(int32 ItemPartID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnItemClicked");

	Params::UWTLMainMenuCustomization_OnItemClicked_Params Parms{};

	Parms.ItemPartID = ItemPartID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnItemBuyConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomization::OnItemBuyConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnItemBuyConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnItemBuyClicked
// (Final, Native, Private)
// Parameters:
// int32                              ItemPartID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UWTLMainMenuCustomizationItem*ItemToBuy                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnItemBuyClicked(int32 ItemPartID, class UWTLMainMenuCustomizationItem* ItemToBuy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnItemBuyClicked");

	Params::UWTLMainMenuCustomization_OnItemBuyClicked_Params Parms{};

	Parms.ItemPartID = ItemPartID;
	Parms.ItemToBuy = ItemToBuy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnHairColorBtnClick
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   BtnGeometry                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               InMouseEvent                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnHairColorBtnClick(struct FGeometry& BtnGeometry, struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnHairColorBtnClick");

	Params::UWTLMainMenuCustomization_OnHairColorBtnClick_Params Parms{};

	Parms.BtnGeometry = BtnGeometry;
	Parms.InMouseEvent = InMouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnGlassesOpacitySliderValueChanged
// (Final, Native, Private)
// Parameters:
// float                              CurrentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnGlassesOpacitySliderValueChanged(float CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnGlassesOpacitySliderValueChanged");

	Params::UWTLMainMenuCustomization_OnGlassesOpacitySliderValueChanged_Params Parms{};

	Parms.CurrentValue = CurrentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnColorPicked
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// enum class EWTLCustomizationColorPresetTypeColorPresetType                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Number                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                Color                                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                PreviewColor                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnColorPicked(enum class EWTLCustomizationColorPresetType ColorPresetType, int32 Number, struct FLinearColor& Color, struct FLinearColor& PreviewColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnColorPicked");

	Params::UWTLMainMenuCustomization_OnColorPicked_Params Parms{};

	Parms.ColorPresetType = ColorPresetType;
	Parms.Number = Number;
	Parms.Color = Color;
	Parms.PreviewColor = PreviewColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnBodyTypeValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnBodyTypeValueChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnBodyTypeValueChanged");

	Params::UWTLMainMenuCustomization_OnBodyTypeValueChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnBodyPartTypeButtonClicked
// (Final, Native, Private)
// Parameters:
// enum class EWTLCharacterCustomizationPartBodyPartType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnBodyPartTypeButtonClicked(enum class EWTLCharacterCustomizationPart BodyPartType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnBodyPartTypeButtonClicked");

	Params::UWTLMainMenuCustomization_OnBodyPartTypeButtonClicked_Params Parms{};

	Parms.BodyPartType = BodyPartType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnBodyPartSwitcherValueChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnBodyPartSwitcherValueChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnBodyPartSwitcherValueChanged");

	Params::UWTLMainMenuCustomization_OnBodyPartSwitcherValueChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.OnAccountInventoryItemsUpdated
// (Final, Native, Private, HasOutParams)
// Parameters:
// TArray<struct FWTLAccountInventoryItem>AccountInventoryItems                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::OnAccountInventoryItemsUpdated(TArray<struct FWTLAccountInventoryItem>& AccountInventoryItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "OnAccountInventoryItemsUpdated");

	Params::UWTLMainMenuCustomization_OnAccountInventoryItemsUpdated_Params Parms{};

	Parms.AccountInventoryItems = AccountInventoryItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomization.ChangeSex
// (Final, Native, Private)
// Parameters:
// enum class EWTLSex                 NewSex                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomization::ChangeSex(enum class EWTLSex NewSex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomization", "ChangeSex");

	Params::UWTLMainMenuCustomization_ChangeSex_Params Parms{};

	Parms.NewSex = NewSex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuCustomizationEdit
// (None)

class UClass* UWTLMainMenuCustomizationEdit::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCustomizationEdit");

	return Clss;
}


// WTLMainMenuCustomizationEdit WTL.Default__WTLMainMenuCustomizationEdit
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCustomizationEdit* UWTLMainMenuCustomizationEdit::GetDefaultObj()
{
	static class UWTLMainMenuCustomizationEdit* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCustomizationEdit*>(UWTLMainMenuCustomizationEdit::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuCustomizationEdit.OnYesBackBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomizationEdit::OnYesBackBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnYesBackBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationEdit.OnUpdateCharacterCustomizationResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomizationEdit::OnUpdateCharacterCustomizationResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnUpdateCharacterCustomizationResponse");

	Params::UWTLMainMenuCustomizationEdit_OnUpdateCharacterCustomizationResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationEdit.OnCustomizationPurchasedItemsOnCreateOrApply
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomizationEdit::OnCustomizationPurchasedItemsOnCreateOrApply()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnCustomizationPurchasedItemsOnCreateOrApply");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationEdit.OnCustomizationDataChanged
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomizationEdit::OnCustomizationDataChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnCustomizationDataChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationEdit.OnCharacterRotatorMouseButtonDown
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomizationEdit::OnCharacterRotatorMouseButtonDown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnCharacterRotatorMouseButtonDown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationEdit.OnCharacterNameCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomizationEdit::OnCharacterNameCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnCharacterNameCommitted");

	Params::UWTLMainMenuCustomizationEdit_OnCharacterNameCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationEdit.OnCharacterNameCheckResponseReceived
// (Final, Native, Private)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomizationEdit::OnCharacterNameCheckResponseReceived(bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnCharacterNameCheckResponseReceived");

	Params::UWTLMainMenuCustomizationEdit_OnCharacterNameCheckResponseReceived_Params Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationEdit.OnCharacterNameChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuCustomizationEdit::OnCharacterNameChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnCharacterNameChanged");

	Params::UWTLMainMenuCustomizationEdit_OnCharacterNameChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationEdit.OnBackBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomizationEdit::OnBackBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnBackBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationEdit.OnApplyCustomizationConfirm
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomizationEdit::OnApplyCustomizationConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnApplyCustomizationConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationEdit.OnApplyCustomizationBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomizationEdit::OnApplyCustomizationBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationEdit", "OnApplyCustomizationBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuCustomizationItem
// (None)

class UClass* UWTLMainMenuCustomizationItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuCustomizationItem");

	return Clss;
}


// WTLMainMenuCustomizationItem WTL.Default__WTLMainMenuCustomizationItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuCustomizationItem* UWTLMainMenuCustomizationItem::GetDefaultObj()
{
	static class UWTLMainMenuCustomizationItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuCustomizationItem*>(UWTLMainMenuCustomizationItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuCustomizationItem.OnShowPurchasedAnimationFinished
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomizationItem::OnShowPurchasedAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationItem", "OnShowPurchasedAnimationFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuCustomizationItem.OnBuyBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuCustomizationItem::OnBuyBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuCustomizationItem", "OnBuyBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuErrorNotificationItem
// (None)

class UClass* UWTLMainMenuErrorNotificationItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuErrorNotificationItem");

	return Clss;
}


// WTLMainMenuErrorNotificationItem WTL.Default__WTLMainMenuErrorNotificationItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuErrorNotificationItem* UWTLMainMenuErrorNotificationItem::GetDefaultObj()
{
	static class UWTLMainMenuErrorNotificationItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuErrorNotificationItem*>(UWTLMainMenuErrorNotificationItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuGameVersionInfo
// (None)

class UClass* UWTLMainMenuGameVersionInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuGameVersionInfo");

	return Clss;
}


// WTLMainMenuGameVersionInfo WTL.Default__WTLMainMenuGameVersionInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuGameVersionInfo* UWTLMainMenuGameVersionInfo::GetDefaultObj()
{
	static class UWTLMainMenuGameVersionInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuGameVersionInfo*>(UWTLMainMenuGameVersionInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuLevelScriptActor
// (Actor)

class UClass* AWTLMainMenuLevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuLevelScriptActor");

	return Clss;
}


// WTLMainMenuLevelScriptActor WTL.Default__WTLMainMenuLevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMainMenuLevelScriptActor* AWTLMainMenuLevelScriptActor::GetDefaultObj()
{
	static class AWTLMainMenuLevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMainMenuLevelScriptActor*>(AWTLMainMenuLevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuLevelScriptActor.SetMainCharacterHiddenInGame
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                               bNewHidden                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::SetMainCharacterHiddenInGame(bool bNewHidden)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "SetMainCharacterHiddenInGame");

	Params::AWTLMainMenuLevelScriptActor_SetMainCharacterHiddenInGame_Params Parms{};

	Parms.bNewHidden = bNewHidden;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.ResetCharacterRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMainMenuLevelScriptActor::ResetCharacterRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "ResetCharacterRotation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.OnSteamShutdown
// (Final, Native, Private)
// Parameters:

void AWTLMainMenuLevelScriptActor::OnSteamShutdown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "OnSteamShutdown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.OnMasterServerConnectionError
// (Final, Native, Private)
// Parameters:

void AWTLMainMenuLevelScriptActor::OnMasterServerConnectionError()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "OnMasterServerConnectionError");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkOnAccountInventoryItemsEvent
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkOnAccountInventoryItemsEvent(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkOnAccountInventoryItemsEvent");

	Params::AWTLMainMenuLevelScriptActor_NetworkOnAccountInventoryItemsEvent_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnUpdateCharacterCustomizationResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnUpdateCharacterCustomizationResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnUpdateCharacterCustomizationResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnUpdateCharacterCustomizationResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnSteamAuthorizationResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnSteamAuthorizationResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnSteamAuthorizationResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnSteamAuthorizationResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnSetActiveCharacterResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnSetActiveCharacterResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnSetActiveCharacterResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnSetActiveCharacterResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnGetStoreItemsResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnGetStoreItemsResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnGetStoreItemsResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnGetStoreItemsResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnGetCharacterListResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnGetCharacterListResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnGetCharacterListResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnGetCharacterListResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnGetArenaLocationListResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnGetArenaLocationListResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnGetArenaLocationListResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnGetArenaLocationListResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnDisconnectOnConnectCanceled
// (Final, Native, Private)
// Parameters:

void AWTLMainMenuLevelScriptActor::NetworkControllerOnDisconnectOnConnectCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnDisconnectOnConnectCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnDisconnected
// (Final, Native, Private)
// Parameters:

void AWTLMainMenuLevelScriptActor::NetworkControllerOnDisconnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnDisconnected");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnDeleteCharacterResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnDeleteCharacterResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnDeleteCharacterResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnDeleteCharacterResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnCreateCharacterResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnCreateCharacterResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnCreateCharacterResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnCreateCharacterResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnConnectError
// (Final, Native, Private)
// Parameters:
// class FString                      ErrorInfo                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnConnectError(const class FString& ErrorInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnConnectError");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnConnectError_Params Parms{};

	Parms.ErrorInfo = ErrorInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnConnected
// (Final, Native, Private)
// Parameters:

void AWTLMainMenuLevelScriptActor::NetworkControllerOnConnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnConnected");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnClientInfoResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnClientInfoResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnClientInfoResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnClientInfoResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnChangeCreditsToMoneyResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnChangeCreditsToMoneyResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnChangeCreditsToMoneyResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnChangeCreditsToMoneyResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnChangeCharacterNameResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnChangeCharacterNameResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnChangeCharacterNameResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnChangeCharacterNameResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.NetworkControllerOnCancelDeleteCharacterResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLMainMenuLevelScriptActor::NetworkControllerOnCancelDeleteCharacterResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "NetworkControllerOnCancelDeleteCharacterResponse");

	Params::AWTLMainMenuLevelScriptActor_NetworkControllerOnCancelDeleteCharacterResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuLevelScriptActor.MoveCameraToOriginalPoint
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMainMenuLevelScriptActor::MoveCameraToOriginalPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "MoveCameraToOriginalPoint");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMainMenuLevelScriptActor.MoveCameraToCharacterWatchesPoint
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMainMenuLevelScriptActor::MoveCameraToCharacterWatchesPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "MoveCameraToCharacterWatchesPoint");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMainMenuLevelScriptActor.MoveCameraToCharacterTorsoPoint
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMainMenuLevelScriptActor::MoveCameraToCharacterTorsoPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "MoveCameraToCharacterTorsoPoint");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMainMenuLevelScriptActor.MoveCameraToCharacterPoint
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMainMenuLevelScriptActor::MoveCameraToCharacterPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "MoveCameraToCharacterPoint");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMainMenuLevelScriptActor.MoveCameraToCharacterLegsPoint
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMainMenuLevelScriptActor::MoveCameraToCharacterLegsPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "MoveCameraToCharacterLegsPoint");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMainMenuLevelScriptActor.MoveCameraToCharacterHeadPoint
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMainMenuLevelScriptActor::MoveCameraToCharacterHeadPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "MoveCameraToCharacterHeadPoint");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMainMenuLevelScriptActor.MoveCameraToCharacterFeetPoint
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMainMenuLevelScriptActor::MoveCameraToCharacterFeetPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "MoveCameraToCharacterFeetPoint");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMainMenuLevelScriptActor.MoveCameraToCharacterCommonPoint
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMainMenuLevelScriptActor::MoveCameraToCharacterCommonPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "MoveCameraToCharacterCommonPoint");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMainMenuLevelScriptActor.MoveCameraToCharacterBackpackPoint
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMainMenuLevelScriptActor::MoveCameraToCharacterBackpackPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuLevelScriptActor", "MoveCameraToCharacterBackpackPoint");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLMainMenuLocalizationListItem
// (None)

class UClass* UWTLMainMenuLocalizationListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuLocalizationListItem");

	return Clss;
}


// WTLMainMenuLocalizationListItem WTL.Default__WTLMainMenuLocalizationListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuLocalizationListItem* UWTLMainMenuLocalizationListItem::GetDefaultObj()
{
	static class UWTLMainMenuLocalizationListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuLocalizationListItem*>(UWTLMainMenuLocalizationListItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuMaterialColorItem
// (None)

class UClass* UWTLMainMenuMaterialColorItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuMaterialColorItem");

	return Clss;
}


// WTLMainMenuMaterialColorItem WTL.Default__WTLMainMenuMaterialColorItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuMaterialColorItem* UWTLMainMenuMaterialColorItem::GetDefaultObj()
{
	static class UWTLMainMenuMaterialColorItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuMaterialColorItem*>(UWTLMainMenuMaterialColorItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuMaterialColorItem.OnColorPickerBtnClick
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   BtnGeometry                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               InMouseEvent                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuMaterialColorItem::OnColorPickerBtnClick(struct FGeometry& BtnGeometry, struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuMaterialColorItem", "OnColorPickerBtnClick");

	Params::UWTLMainMenuMaterialColorItem_OnColorPickerBtnClick_Params Parms{};

	Parms.BtnGeometry = BtnGeometry;
	Parms.InMouseEvent = InMouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuMaterialColorScalar
// (None)

class UClass* UWTLMainMenuMaterialColorScalar::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuMaterialColorScalar");

	return Clss;
}


// WTLMainMenuMaterialColorScalar WTL.Default__WTLMainMenuMaterialColorScalar
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuMaterialColorScalar* UWTLMainMenuMaterialColorScalar::GetDefaultObj()
{
	static class UWTLMainMenuMaterialColorScalar* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuMaterialColorScalar*>(UWTLMainMenuMaterialColorScalar::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuMaterialColorScalar.OnColorBtnClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   BtnGeometry                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               InMouseEvent                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuMaterialColorScalar::OnColorBtnClicked(struct FGeometry& BtnGeometry, struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuMaterialColorScalar", "OnColorBtnClicked");

	Params::UWTLMainMenuMaterialColorScalar_OnColorBtnClicked_Params Parms{};

	Parms.BtnGeometry = BtnGeometry;
	Parms.InMouseEvent = InMouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuMaterialScalarItem
// (None)

class UClass* UWTLMainMenuMaterialScalarItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuMaterialScalarItem");

	return Clss;
}


// WTLMainMenuMaterialScalarItem WTL.Default__WTLMainMenuMaterialScalarItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuMaterialScalarItem* UWTLMainMenuMaterialScalarItem::GetDefaultObj()
{
	static class UWTLMainMenuMaterialScalarItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuMaterialScalarItem*>(UWTLMainMenuMaterialScalarItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuMaterialsTabButton
// (None)

class UClass* UWTLMainMenuMaterialsTabButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuMaterialsTabButton");

	return Clss;
}


// WTLMainMenuMaterialsTabButton WTL.Default__WTLMainMenuMaterialsTabButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuMaterialsTabButton* UWTLMainMenuMaterialsTabButton::GetDefaultObj()
{
	static class UWTLMainMenuMaterialsTabButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuMaterialsTabButton*>(UWTLMainMenuMaterialsTabButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuMoviePlayer
// (None)

class UClass* UWTLMainMenuMoviePlayer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuMoviePlayer");

	return Clss;
}


// WTLMainMenuMoviePlayer WTL.Default__WTLMainMenuMoviePlayer
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuMoviePlayer* UWTLMainMenuMoviePlayer::GetDefaultObj()
{
	static class UWTLMainMenuMoviePlayer* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuMoviePlayer*>(UWTLMainMenuMoviePlayer::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuMoviePlayer.OnStopMovie
// (Event, Public, BlueprintEvent)
// Parameters:

void UWTLMainMenuMoviePlayer::OnStopMovie()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuMoviePlayer", "OnStopMovie");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMainMenuMoviePlayer.OnPlayMovie
// (Event, Public, BlueprintEvent)
// Parameters:

void UWTLMainMenuMoviePlayer::OnPlayMovie()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuMoviePlayer", "OnPlayMovie");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMainMenuMoviePlayer.Hide
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UWTLMainMenuMoviePlayer::Hide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuMoviePlayer", "Hide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuMoviePlayer.GetCurrentCulture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UWTLMainMenuMoviePlayer::GetCurrentCulture()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuMoviePlayer", "GetCurrentCulture");

	Params::UWTLMainMenuMoviePlayer_GetCurrentCulture_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLMainMenuPlayerClass
// (None)

class UClass* UWTLMainMenuPlayerClass::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuPlayerClass");

	return Clss;
}


// WTLMainMenuPlayerClass WTL.Default__WTLMainMenuPlayerClass
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuPlayerClass* UWTLMainMenuPlayerClass::GetDefaultObj()
{
	static class UWTLMainMenuPlayerClass* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuPlayerClass*>(UWTLMainMenuPlayerClass::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuPlayerClassDescription
// (None)

class UClass* UWTLMainMenuPlayerClassDescription::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuPlayerClassDescription");

	return Clss;
}


// WTLMainMenuPlayerClassDescription WTL.Default__WTLMainMenuPlayerClassDescription
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuPlayerClassDescription* UWTLMainMenuPlayerClassDescription::GetDefaultObj()
{
	static class UWTLMainMenuPlayerClassDescription* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuPlayerClassDescription*>(UWTLMainMenuPlayerClassDescription::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuPlayerClassTooltip
// (None)

class UClass* UWTLMainMenuPlayerClassTooltip::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuPlayerClassTooltip");

	return Clss;
}


// WTLMainMenuPlayerClassTooltip WTL.Default__WTLMainMenuPlayerClassTooltip
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuPlayerClassTooltip* UWTLMainMenuPlayerClassTooltip::GetDefaultObj()
{
	static class UWTLMainMenuPlayerClassTooltip* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuPlayerClassTooltip*>(UWTLMainMenuPlayerClassTooltip::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMainMenuServerAuthorization
// (None)

class UClass* UWTLMainMenuServerAuthorization::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuServerAuthorization");

	return Clss;
}


// WTLMainMenuServerAuthorization WTL.Default__WTLMainMenuServerAuthorization
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuServerAuthorization* UWTLMainMenuServerAuthorization::GetDefaultObj()
{
	static class UWTLMainMenuServerAuthorization* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuServerAuthorization*>(UWTLMainMenuServerAuthorization::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuServerAuthorization.OnShowPasswordBtnReleased
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerAuthorization::OnShowPasswordBtnReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnShowPasswordBtnReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerAuthorization.OnShowPasswordBtnPressed
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerAuthorization::OnShowPasswordBtnPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnShowPasswordBtnPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerAuthorization.OnSavePasswordConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerAuthorization::OnSavePasswordConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnSavePasswordConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerAuthorization.OnSavePasswordCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuServerAuthorization::OnSavePasswordCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnSavePasswordCheckStateChanged");

	Params::UWTLMainMenuServerAuthorization_OnSavePasswordCheckStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerAuthorization.OnSavePasswordCanceled
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerAuthorization::OnSavePasswordCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnSavePasswordCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerAuthorization.OnPasswordTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuServerAuthorization::OnPasswordTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnPasswordTextBoxCommitted");

	Params::UWTLMainMenuServerAuthorization_OnPasswordTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerAuthorization.OnPasswordTextBoxChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuServerAuthorization::OnPasswordTextBoxChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnPasswordTextBoxChanged");

	Params::UWTLMainMenuServerAuthorization_OnPasswordTextBoxChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerAuthorization.OnLoginTextBoxCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuServerAuthorization::OnLoginTextBoxCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnLoginTextBoxCommitted");

	Params::UWTLMainMenuServerAuthorization_OnLoginTextBoxCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerAuthorization.OnConnectedToServer
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerAuthorization::OnConnectedToServer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnConnectedToServer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerAuthorization.OnCloseBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerAuthorization::OnCloseBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnCloseBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerAuthorization.OnAuthorizeBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerAuthorization::OnAuthorizeBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerAuthorization", "OnAuthorizeBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuServerList
// (None)

class UClass* UWTLMainMenuServerList::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuServerList");

	return Clss;
}


// WTLMainMenuServerList WTL.Default__WTLMainMenuServerList
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuServerList* UWTLMainMenuServerList::GetDefaultObj()
{
	static class UWTLMainMenuServerList* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuServerList*>(UWTLMainMenuServerList::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuServerList.OnServerResponded
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLSteamServerInfo         GameServerItem                                                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuServerList::OnServerResponded(struct FWTLSteamServerInfo& GameServerItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerList", "OnServerResponded");

	Params::UWTLMainMenuServerList_OnServerResponded_Params Parms{};

	Parms.GameServerItem = GameServerItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerList.OnServerRequestFinished
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerList::OnServerRequestFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerList", "OnServerRequestFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerList.OnRefreshBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerList::OnRefreshBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerList", "OnRefreshBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerList.OnConnectedToServer
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerList::OnConnectedToServer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerList", "OnConnectedToServer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerList.OnConnectBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerList::OnConnectBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerList", "OnConnectBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerList.OnCancelCheckAccountStatus
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerList::OnCancelCheckAccountStatus()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerList", "OnCancelCheckAccountStatus");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuServerList.OnBackBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuServerList::OnBackBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerList", "OnBackBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuServerListItem
// (None)

class UClass* UWTLMainMenuServerListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuServerListItem");

	return Clss;
}


// WTLMainMenuServerListItem WTL.Default__WTLMainMenuServerListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuServerListItem* UWTLMainMenuServerListItem::GetDefaultObj()
{
	static class UWTLMainMenuServerListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuServerListItem*>(UWTLMainMenuServerListItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuServerListItem.OnBackgroundBorderMouseDoubleClick
// (Final, Native, Protected, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuServerListItem::OnBackgroundBorderMouseDoubleClick(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuServerListItem", "OnBackgroundBorderMouseDoubleClick");

	Params::UWTLMainMenuServerListItem_OnBackgroundBorderMouseDoubleClick_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuSexSelectToPreviewWindow
// (None)

class UClass* UWTLMainMenuSexSelectToPreviewWindow::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuSexSelectToPreviewWindow");

	return Clss;
}


// WTLMainMenuSexSelectToPreviewWindow WTL.Default__WTLMainMenuSexSelectToPreviewWindow
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuSexSelectToPreviewWindow* UWTLMainMenuSexSelectToPreviewWindow::GetDefaultObj()
{
	static class UWTLMainMenuSexSelectToPreviewWindow* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuSexSelectToPreviewWindow*>(UWTLMainMenuSexSelectToPreviewWindow::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuSexSelectToPreviewWindow.OnSexSelected
// (Final, Native, Private)
// Parameters:
// enum class EWTLSex                 Sex                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuSexSelectToPreviewWindow::OnSexSelected(enum class EWTLSex Sex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuSexSelectToPreviewWindow", "OnSexSelected");

	Params::UWTLMainMenuSexSelectToPreviewWindow_OnSexSelected_Params Parms{};

	Parms.Sex = Sex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuStart
// (None)

class UClass* UWTLMainMenuStart::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuStart");

	return Clss;
}


// WTLMainMenuStart WTL.Default__WTLMainMenuStart
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuStart* UWTLMainMenuStart::GetDefaultObj()
{
	static class UWTLMainMenuStart* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuStart*>(UWTLMainMenuStart::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuStart.OnStoryBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnStoryBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnStoryBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnSocialNetworkYouTubeBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnSocialNetworkYouTubeBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnSocialNetworkYouTubeBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnSocialNetworkVKBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnSocialNetworkVKBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnSocialNetworkVKBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnSocialNetworkTwitterBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnSocialNetworkTwitterBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnSocialNetworkTwitterBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnSocialNetworkFacebookBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnSocialNetworkFacebookBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnSocialNetworkFacebookBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnSocialNetworkDiscordBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnSocialNetworkDiscordBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnSocialNetworkDiscordBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnSocialNetworkBtnPressed
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnSocialNetworkBtnPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnSocialNetworkBtnPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnSocialNetworkBtnHovered
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnSocialNetworkBtnHovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnSocialNetworkBtnHovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnPlayBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnPlayBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnPlayBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnGetBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnGetBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnGetBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnExitBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnExitBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnExitBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnCloseBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnCloseBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnCloseBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.OnAuthorsBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::OnAuthorsBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "OnAuthorsBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuStart.ExitGame
// (Final, Native, Private)
// Parameters:

void UWTLMainMenuStart::ExitGame()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuStart", "ExitGame");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMainMenuTextBox
// (None)

class UClass* UWTLMainMenuTextBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMainMenuTextBox");

	return Clss;
}


// WTLMainMenuTextBox WTL.Default__WTLMainMenuTextBox
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMainMenuTextBox* UWTLMainMenuTextBox::GetDefaultObj()
{
	static class UWTLMainMenuTextBox* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMainMenuTextBox*>(UWTLMainMenuTextBox::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMainMenuTextBox.OnTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMainMenuTextBox::OnTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuTextBox", "OnTextBoxTextCommitted");

	Params::UWTLMainMenuTextBox_OnTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMainMenuTextBox.OnTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLMainMenuTextBox::OnTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMainMenuTextBox", "OnTextBoxTextChanged");

	Params::UWTLMainMenuTextBox_OnTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMarchingCubes
// (Actor)

class UClass* AWTLMarchingCubes::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMarchingCubes");

	return Clss;
}


// WTLMarchingCubes WTL.Default__WTLMarchingCubes
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMarchingCubes* AWTLMarchingCubes::GetDefaultObj()
{
	static class AWTLMarchingCubes* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMarchingCubes*>(AWTLMarchingCubes::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMarchingCubes.TraceDamage
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     TraceStart                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     TraceEnd                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      DamageInstigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMarchingCubes::TraceDamage(const struct FVector& TraceStart, const struct FVector& TraceEnd, class AActor* DamageInstigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMarchingCubes", "TraceDamage");

	Params::AWTLMarchingCubes_TraceDamage_Params Parms{};

	Parms.TraceStart = TraceStart;
	Parms.TraceEnd = TraceEnd;
	Parms.DamageInstigator = DamageInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMarchingCubes.TakeDamageHit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FHitResult                  Hit                                                              (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                      DamageCauser                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMarchingCubes::TakeDamageHit(const struct FHitResult& Hit, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMarchingCubes", "TakeDamageHit");

	Params::AWTLMarchingCubes_TakeDamageHit_Params Parms{};

	Parms.Hit = Hit;
	Parms.DamageCauser = DamageCauser;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMarchingCubes.NetMulticast_UpdateChunk
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// struct FWTLChunk                   Chunk                                                            (Parm, NoDestructor, NativeAccessSpecifierPublic)

void AWTLMarchingCubes::NetMulticast_UpdateChunk(const struct FWTLChunk& Chunk)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMarchingCubes", "NetMulticast_UpdateChunk");

	Params::AWTLMarchingCubes_NetMulticast_UpdateChunk_Params Parms{};

	Parms.Chunk = Chunk;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMarchingCubes.NetMulticast_TakeDamageHit
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// uint32                             BlockID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int8                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMarchingCubes::NetMulticast_TakeDamageHit(uint32 BlockID, int8 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMarchingCubes", "NetMulticast_TakeDamageHit");

	Params::AWTLMarchingCubes_NetMulticast_TakeDamageHit_Params Parms{};

	Parms.BlockID = BlockID;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMarchingCubes.GenerateMesh
// (Final, Native, Public)
// Parameters:

void AWTLMarchingCubes::GenerateMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMarchingCubes", "GenerateMesh");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMarchingCubes.GenerateGrid
// (Final, Native, Public)
// Parameters:

void AWTLMarchingCubes::GenerateGrid()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMarchingCubes", "GenerateGrid");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLWeapon
// (Actor)

class UClass* AWTLWeapon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLWeapon");

	return Clss;
}


// WTLWeapon WTL.Default__WTLWeapon
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLWeapon* AWTLWeapon::GetDefaultObj()
{
	static class AWTLWeapon* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLWeapon*>(AWTLWeapon::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMeleeWeapon
// (Actor)

class UClass* AWTLMeleeWeapon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMeleeWeapon");

	return Clss;
}


// WTLMeleeWeapon WTL.Default__WTLMeleeWeapon
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMeleeWeapon* AWTLMeleeWeapon::GetDefaultObj()
{
	static class AWTLMeleeWeapon* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMeleeWeapon*>(AWTLMeleeWeapon::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMeleeWeapon.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLMeleeWeapon::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMeleeWeapon", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMeleeWeapon.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLMeleeWeapon::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMeleeWeapon", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMeleeWeapon.Server_SingleUse
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLMeleeWeapon::Server_SingleUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMeleeWeapon", "Server_SingleUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMeleeWeapon.Server_ShowImpactPoint
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMeleeWeapon::Server_ShowImpactPoint(struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMeleeWeapon", "Server_ShowImpactPoint");

	Params::AWTLMeleeWeapon_Server_ShowImpactPoint_Params Parms{};

	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMeleeWeapon.Server_MakeHit
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMeleeWeapon::Server_MakeHit(struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMeleeWeapon", "Server_MakeHit");

	Params::AWTLMeleeWeapon_Server_MakeHit_Params Parms{};

	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMeleeWeapon.NetMulticast_QuickHit
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLMeleeWeapon::NetMulticast_QuickHit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMeleeWeapon", "NetMulticast_QuickHit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMeleeWeapon.NetMulticast_OnUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMeleeWeapon::NetMulticast_OnUse(enum class EWTLUsableItemUseType UseType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMeleeWeapon", "NetMulticast_OnUse");

	Params::AWTLMeleeWeapon_NetMulticast_OnUse_Params Parms{};

	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLTacticalStuff
// (Actor)

class UClass* AWTLTacticalStuff::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTacticalStuff");

	return Clss;
}


// WTLTacticalStuff WTL.Default__WTLTacticalStuff
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLTacticalStuff* AWTLTacticalStuff::GetDefaultObj()
{
	static class AWTLTacticalStuff* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLTacticalStuff*>(AWTLTacticalStuff::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMine
// (Actor)

class UClass* AWTLMine::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMine");

	return Clss;
}


// WTLMine WTL.Default__WTLMine
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMine* AWTLMine::GetDefaultObj()
{
	static class AWTLMine* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMine*>(AWTLMine::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMine.OnRep_Activated
// (Final, Native, Private)
// Parameters:

void AWTLMine::OnRep_Activated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMine", "OnRep_Activated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMine.OnOverlapEnd
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMine::OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMine", "OnOverlapEnd");

	Params::AWTLMine_OnOverlapEnd_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMine.OnOverlapBegin
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMine::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMine", "OnOverlapBegin");

	Params::AWTLMine_OnOverlapBegin_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMine.NetMulticast_OnExplosion
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// float                              ExplosionDamage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMine::NetMulticast_OnExplosion(float ExplosionDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMine", "NetMulticast_OnExplosion");

	Params::AWTLMine_NetMulticast_OnExplosion_Params Parms{};

	Parms.ExplosionDamage = ExplosionDamage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMine.BPOnExplode
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMine::BPOnExplode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMine", "BPOnExplode");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMine.BPOnApplyDamageToMonster
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ActualDamage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMine::BPOnApplyDamageToMonster(class AWTLMonsterPawn* Monster, float ActualDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMine", "BPOnApplyDamageToMonster");

	Params::AWTLMine_BPOnApplyDamageToMonster_Params Parms{};

	Parms.Monster = Monster;
	Parms.ActualDamage = ActualDamage;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMine.BPOnApplyDamageToEnemyNPC
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLEnemyNPC*                EnemyNPC                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ActualDamage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMine::BPOnApplyDamageToEnemyNPC(class AWTLEnemyNPC* EnemyNPC, float ActualDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMine", "BPOnApplyDamageToEnemyNPC");

	Params::AWTLMine_BPOnApplyDamageToEnemyNPC_Params Parms{};

	Parms.EnemyNPC = EnemyNPC;
	Parms.ActualDamage = ActualDamage;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMine.BPOnApplyDamageToCharacter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ActualDamage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMine::BPOnApplyDamageToCharacter(class AWTLCharacter* Character, float ActualDamage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMine", "BPOnApplyDamageToCharacter");

	Params::AWTLMine_BPOnApplyDamageToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ActualDamage = ActualDamage;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLMiniGameComponent
// (None)

class UClass* UWTLMiniGameComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMiniGameComponent");

	return Clss;
}


// WTLMiniGameComponent WTL.Default__WTLMiniGameComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMiniGameComponent* UWTLMiniGameComponent::GetDefaultObj()
{
	static class UWTLMiniGameComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMiniGameComponent*>(UWTLMiniGameComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMiniGameComponent.K2_OnKeyDown
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                        Key                                                              (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMiniGameComponent::K2_OnKeyDown(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiniGameComponent", "K2_OnKeyDown");

	Params::UWTLMiniGameComponent_K2_OnKeyDown_Params Parms{};

	Parms.Key = Key;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMiniGameComponent.BP_OnAxis
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FInputAxisKeyMapping        Key                                                              (Parm, NativeAccessSpecifierPublic)

void UWTLMiniGameComponent::BP_OnAxis(const struct FInputAxisKeyMapping& Key)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiniGameComponent", "BP_OnAxis");

	Params::UWTLMiniGameComponent_BP_OnAxis_Params Parms{};

	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMiniGameComponent.BP_OnAction
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FInputActionKeyMapping      Key                                                              (Parm, NativeAccessSpecifierPublic)

void UWTLMiniGameComponent::BP_OnAction(const struct FInputActionKeyMapping& Key)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiniGameComponent", "BP_OnAction");

	Params::UWTLMiniGameComponent_BP_OnAction_Params Parms{};

	Parms.Key = Key;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLMiningItem
// (Actor)

class UClass* AWTLMiningItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMiningItem");

	return Clss;
}


// WTLMiningItem WTL.Default__WTLMiningItem
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMiningItem* AWTLMiningItem::GetDefaultObj()
{
	static class AWTLMiningItem* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMiningItem*>(AWTLMiningItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMiningItem.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLMiningItem::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiningItem", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMiningItem.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLMiningItem::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiningItem", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMiningItem.Server_MineHit
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMiningItem::Server_MineHit(struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiningItem", "Server_MineHit");

	Params::AWTLMiningItem_Server_MineHit_Params Parms{};

	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMiningItem.Server_MeleeWeaponHit
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMiningItem::Server_MeleeWeaponHit(struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiningItem", "Server_MeleeWeaponHit");

	Params::AWTLMiningItem_Server_MeleeWeaponHit_Params Parms{};

	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMiningItem.NetMulticast_OnUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMiningItem::NetMulticast_OnUse(enum class EWTLUsableItemUseType UseType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiningItem", "NetMulticast_OnUse");

	Params::AWTLMiningItem_NetMulticast_OnUse_Params Parms{};

	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMiningSpot
// (Actor)

class UClass* AWTLMiningSpot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMiningSpot");

	return Clss;
}


// WTLMiningSpot WTL.Default__WTLMiningSpot
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMiningSpot* AWTLMiningSpot::GetDefaultObj()
{
	static class AWTLMiningSpot* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMiningSpot*>(AWTLMiningSpot::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMiningSpot.OnRep_Capacity
// (Final, Native, Private)
// Parameters:
// float                              PreviousCapacity                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMiningSpot::OnRep_Capacity(float PreviousCapacity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiningSpot", "OnRep_Capacity");

	Params::AWTLMiningSpot_OnRep_Capacity_Params Parms{};

	Parms.PreviousCapacity = PreviousCapacity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMiningSpot.OnBecameEmpty
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMiningSpot::OnBecameEmpty()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiningSpot", "OnBecameEmpty");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMiningSpot.NetMulticast_OnHit
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// struct FVector_NetQuantize         HitLocation                                                      (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal   ImpactNormal                                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Scale                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMiningSpot::NetMulticast_OnHit(const struct FVector_NetQuantize& HitLocation, const struct FVector_NetQuantizeNormal& ImpactNormal, bool Success, float Scale)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiningSpot", "NetMulticast_OnHit");

	Params::AWTLMiningSpot_NetMulticast_OnHit_Params Parms{};

	Parms.HitLocation = HitLocation;
	Parms.ImpactNormal = ImpactNormal;
	Parms.Success = Success;
	Parms.Scale = Scale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMiningZone
// (Actor)

class UClass* AWTLMiningZone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMiningZone");

	return Clss;
}


// WTLMiningZone WTL.Default__WTLMiningZone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMiningZone* AWTLMiningZone::GetDefaultObj()
{
	static class AWTLMiningZone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMiningZone*>(AWTLMiningZone::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMiningZone.OnVolumeEndOverlap
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMiningZone::OnVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiningZone", "OnVolumeEndOverlap");

	Params::AWTLMiningZone_OnVolumeEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMiningZone.OnVolumeBeginOverlap
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMiningZone::OnVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMiningZone", "OnVolumeBeginOverlap");

	Params::AWTLMiningZone_OnVolumeBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMissileWeapon
// (Actor)

class UClass* AWTLMissileWeapon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMissileWeapon");

	return Clss;
}


// WTLMissileWeapon WTL.Default__WTLMissileWeapon
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMissileWeapon* AWTLMissileWeapon::GetDefaultObj()
{
	static class AWTLMissileWeapon* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMissileWeapon*>(AWTLMissileWeapon::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMissileWeapon.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLMissileWeapon::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeapon", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMissileWeapon.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLMissileWeapon::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeapon", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMissileWeapon.OnRep_QuickThrow
// (Final, Native, Private)
// Parameters:

void AWTLMissileWeapon::OnRep_QuickThrow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeapon", "OnRep_QuickThrow");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMissileWeapon.NetMulticast_QuickThrow
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLMissileWeapon::NetMulticast_QuickThrow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeapon", "NetMulticast_QuickThrow");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMissileWeapon.NetMulticast_OnStopUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMissileWeapon::NetMulticast_OnStopUse(enum class EWTLUsableItemUseType UseType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeapon", "NetMulticast_OnStopUse");

	Params::AWTLMissileWeapon_NetMulticast_OnStopUse_Params Parms{};

	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMissileWeapon.NetMulticast_OnStartUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMissileWeapon::NetMulticast_OnStartUse(enum class EWTLUsableItemUseType UseType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeapon", "NetMulticast_OnStartUse");

	Params::AWTLMissileWeapon_NetMulticast_OnStartUse_Params Parms{};

	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMissileWeapon.GetReadyToThrow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMissileWeapon::GetReadyToThrow()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeapon", "GetReadyToThrow");

	Params::AWTLMissileWeapon_GetReadyToThrow_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMissileWeapon.Client_ShowCountdownWidget
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint16                             WeaponID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TimeValue                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ThrowSpeed                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMissileWeapon::Client_ShowCountdownWidget(uint16 WeaponID, float TimeValue, enum class EWTLUsableItemUseType UseType, float ThrowSpeed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeapon", "Client_ShowCountdownWidget");

	Params::AWTLMissileWeapon_Client_ShowCountdownWidget_Params Parms{};

	Parms.WeaponID = WeaponID;
	Parms.TimeValue = TimeValue;
	Parms.UseType = UseType;
	Parms.ThrowSpeed = ThrowSpeed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMissileWeapon.Client_HideCountdownWidget
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLMissileWeapon::Client_HideCountdownWidget()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeapon", "Client_HideCountdownWidget");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMissileWeapon.BPActivationProcess
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMissileWeapon::BPActivationProcess()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMissileWeapon", "BPActivationProcess");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLMobileHealPoint
// (Actor)

class UClass* AWTLMobileHealPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMobileHealPoint");

	return Clss;
}


// WTLMobileHealPoint WTL.Default__WTLMobileHealPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMobileHealPoint* AWTLMobileHealPoint::GetDefaultObj()
{
	static class AWTLMobileHealPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMobileHealPoint*>(AWTLMobileHealPoint::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMobileHealPoint.OnRep_Energy
// (Final, Native, Private)
// Parameters:

void AWTLMobileHealPoint::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "OnRep_Energy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMobileHealPoint.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMobileHealPoint::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "OnEndOverlap");

	Params::AWTLMobileHealPoint_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMobileHealPoint.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMobileHealPoint::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "OnBeginOverlap");

	Params::AWTLMobileHealPoint_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMobileHealPoint.BPGetEnergy
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMobileHealPoint::BPGetEnergy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "BPGetEnergy");

	Params::AWTLMobileHealPoint_BPGetEnergy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileHealPoint.BPGetCondition
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMobileHealPoint::BPGetCondition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "BPGetCondition");

	Params::AWTLMobileHealPoint_BPGetCondition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileHealPoint.BPCharged
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMobileHealPoint::BPCharged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "BPCharged");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMobileHealPoint.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMobileHealPoint::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "AIInterface_IsInSafeZone");

	Params::AWTLMobileHealPoint_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileHealPoint.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMobileHealPoint::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "AIInterface_IsCanBeAttacked");

	Params::AWTLMobileHealPoint_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileHealPoint.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMobileHealPoint::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "AIInterface_IsAlive");

	Params::AWTLMobileHealPoint_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileHealPoint.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLMobileHealPoint::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "AIInterface_GetVelocity");

	Params::AWTLMobileHealPoint_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileHealPoint.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLMobileHealPoint::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "AIInterface_GetGroupID");

	Params::AWTLMobileHealPoint_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileHealPoint.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLMobileHealPoint::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileHealPoint", "AIInterface_GetFaction");

	Params::AWTLMobileHealPoint_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLMobileResurectionPoint
// (Actor)

class UClass* AWTLMobileResurectionPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMobileResurectionPoint");

	return Clss;
}


// WTLMobileResurectionPoint WTL.Default__WTLMobileResurectionPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMobileResurectionPoint* AWTLMobileResurectionPoint::GetDefaultObj()
{
	static class AWTLMobileResurectionPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMobileResurectionPoint*>(AWTLMobileResurectionPoint::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMobileResurectionPoint.OnRep_Energy
// (Final, Native, Private)
// Parameters:

void AWTLMobileResurectionPoint::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "OnRep_Energy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMobileResurectionPoint.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMobileResurectionPoint::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "OnEndOverlap");

	Params::AWTLMobileResurectionPoint_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMobileResurectionPoint.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMobileResurectionPoint::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "OnBeginOverlap");

	Params::AWTLMobileResurectionPoint_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMobileResurectionPoint.BPGetEnergy
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMobileResurectionPoint::BPGetEnergy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "BPGetEnergy");

	Params::AWTLMobileResurectionPoint_BPGetEnergy_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileResurectionPoint.BPGetCondition
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMobileResurectionPoint::BPGetCondition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "BPGetCondition");

	Params::AWTLMobileResurectionPoint_BPGetCondition_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileResurectionPoint.BPCharged
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMobileResurectionPoint::BPCharged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "BPCharged");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMobileResurectionPoint.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMobileResurectionPoint::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "AIInterface_IsInSafeZone");

	Params::AWTLMobileResurectionPoint_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileResurectionPoint.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMobileResurectionPoint::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "AIInterface_IsCanBeAttacked");

	Params::AWTLMobileResurectionPoint_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileResurectionPoint.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMobileResurectionPoint::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "AIInterface_IsAlive");

	Params::AWTLMobileResurectionPoint_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileResurectionPoint.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLMobileResurectionPoint::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "AIInterface_GetVelocity");

	Params::AWTLMobileResurectionPoint_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileResurectionPoint.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLMobileResurectionPoint::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "AIInterface_GetGroupID");

	Params::AWTLMobileResurectionPoint_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMobileResurectionPoint.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLMobileResurectionPoint::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMobileResurectionPoint", "AIInterface_GetFaction");

	Params::AWTLMobileResurectionPoint_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLMonocular
// (Actor)

class UClass* AWTLMonocular::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonocular");

	return Clss;
}


// WTLMonocular WTL.Default__WTLMonocular
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMonocular* AWTLMonocular::GetDefaultObj()
{
	static class AWTLMonocular* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMonocular*>(AWTLMonocular::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMonocular.OnRep_bIsUsingMonocular
// (Final, Native, Private)
// Parameters:

void AWTLMonocular::OnRep_bIsUsingMonocular()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonocular", "OnRep_bIsUsingMonocular");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMonsterPawnAIController
// (Actor)

class UClass* AWTLMonsterPawnAIController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterPawnAIController");

	return Clss;
}


// WTLMonsterPawnAIController WTL.Default__WTLMonsterPawnAIController
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMonsterPawnAIController* AWTLMonsterPawnAIController::GetDefaultObj()
{
	static class AWTLMonsterPawnAIController* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMonsterPawnAIController*>(AWTLMonsterPawnAIController::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMonsterPawnAIController.OnReceiveDamage
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                 DamageInstigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Damage                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsFromSleep                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawnAIController::OnReceiveDamage(class AController* DamageInstigator, float Damage, bool bIsFromSleep)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAIController", "OnReceiveDamage");

	Params::AWTLMonsterPawnAIController_OnReceiveDamage_Params Parms{};

	Parms.DamageInstigator = DamageInstigator;
	Parms.Damage = Damage;
	Parms.bIsFromSleep = bIsFromSleep;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawnAIController.OnHearing
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                      EventInstigator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        Tag                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawnAIController::OnHearing(class AActor* EventInstigator, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAIController", "OnHearing");

	Params::AWTLMonsterPawnAIController_OnHearing_Params Parms{};

	Parms.EventInstigator = EventInstigator;
	Parms.Tag = Tag;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawnAIController.OnActivityStateChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// enum class EWTLMonsterActivityStateCurrentActivityState                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLMonsterActivityStatePreviousActivityState                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawnAIController::OnActivityStateChanged(enum class EWTLMonsterActivityState& CurrentActivityState, enum class EWTLMonsterActivityState& PreviousActivityState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAIController", "OnActivityStateChanged");

	Params::AWTLMonsterPawnAIController_OnActivityStateChanged_Params Parms{};

	Parms.CurrentActivityState = CurrentActivityState;
	Parms.PreviousActivityState = PreviousActivityState;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawnAIController.NoSleep
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMonsterPawnAIController::NoSleep()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAIController", "NoSleep");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawnAIController.K2_RestartLogic
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMonsterPawnAIController::K2_RestartLogic()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAIController", "K2_RestartLogic");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawnAIController.GetLocationOwner
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLMonsterPawnAIController::GetLocationOwner()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAIController", "GetLocationOwner");

	Params::AWTLMonsterPawnAIController_GetLocationOwner_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawnAIController.GetDangerLevel
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               WTLCharacter                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterPawnAIController::GetDangerLevel(class AWTLCharacter* WTLCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAIController", "GetDangerLevel");

	Params::AWTLMonsterPawnAIController_GetDangerLevel_Params Parms{};

	Parms.WTLCharacter = WTLCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawnAIController.BPSetGenericTeamId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLAITeam              PTeamID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawnAIController::BPSetGenericTeamId(enum class EWTLAITeam PTeamID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAIController", "BPSetGenericTeamId");

	Params::AWTLMonsterPawnAIController_BPSetGenericTeamId_Params Parms{};

	Parms.PTeamID = PTeamID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterPawnAIController.BPGetGenericTeamId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLAITeam              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLAITeam AWTLMonsterPawnAIController::BPGetGenericTeamId()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAIController", "BPGetGenericTeamId");

	Params::AWTLMonsterPawnAIController_BPGetGenericTeamId_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPawnAIController.BP_OnHearing
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                      EventInstigator                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                        Tag                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterPawnAIController::BP_OnHearing(class AActor* EventInstigator, class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAIController", "BP_OnHearing");

	Params::AWTLMonsterPawnAIController_BP_OnHearing_Params Parms{};

	Parms.EventInstigator = EventInstigator;
	Parms.Tag = Tag;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMonsterPawnAnimInstance
// (None)

class UClass* UWTLMonsterPawnAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterPawnAnimInstance");

	return Clss;
}


// WTLMonsterPawnAnimInstance WTL.Default__WTLMonsterPawnAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMonsterPawnAnimInstance* UWTLMonsterPawnAnimInstance::GetDefaultObj()
{
	static class UWTLMonsterPawnAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMonsterPawnAnimInstance*>(UWTLMonsterPawnAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMonsterPawnAnimInstance.OnActionTrigger
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                        ActionName                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMonsterPawnAnimInstance::OnActionTrigger(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAnimInstance", "OnActionTrigger");

	Params::UWTLMonsterPawnAnimInstance_OnActionTrigger_Params Parms{};

	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterPawnAnimInstance.K2_OnAnimationTrigger
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                        TriggerName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ID                                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLMonsterPawnAnimInstance::K2_OnAnimationTrigger(class FName TriggerName, bool Value, int32 ID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPawnAnimInstance", "K2_OnAnimationTrigger");

	Params::UWTLMonsterPawnAnimInstance_K2_OnAnimationTrigger_Params Parms{};

	Parms.TriggerName = TriggerName;
	Parms.Value = Value;
	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLMonsterPawnBase
// (Actor, Pawn)

class UClass* AWTLMonsterPawnBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterPawnBase");

	return Clss;
}


// WTLMonsterPawnBase WTL.Default__WTLMonsterPawnBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMonsterPawnBase* AWTLMonsterPawnBase::GetDefaultObj()
{
	static class AWTLMonsterPawnBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMonsterPawnBase*>(AWTLMonsterPawnBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMonsterPawnInputMode
// (Actor, Pawn)

class UClass* AWTLMonsterPawnInputMode::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterPawnInputMode");

	return Clss;
}


// WTLMonsterPawnInputMode WTL.Default__WTLMonsterPawnInputMode
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMonsterPawnInputMode* AWTLMonsterPawnInputMode::GetDefaultObj()
{
	static class AWTLMonsterPawnInputMode* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMonsterPawnInputMode*>(AWTLMonsterPawnInputMode::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMonsterPawnMovementComponent
// (None)

class UClass* UWTLMonsterPawnMovementComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterPawnMovementComponent");

	return Clss;
}


// WTLMonsterPawnMovementComponent WTL.Default__WTLMonsterPawnMovementComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMonsterPawnMovementComponent* UWTLMonsterPawnMovementComponent::GetDefaultObj()
{
	static class UWTLMonsterPawnMovementComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMonsterPawnMovementComponent*>(UWTLMonsterPawnMovementComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLMonsterPerceptionComponent
// (None)

class UClass* UWTLMonsterPerceptionComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterPerceptionComponent");

	return Clss;
}


// WTLMonsterPerceptionComponent WTL.Default__WTLMonsterPerceptionComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLMonsterPerceptionComponent* UWTLMonsterPerceptionComponent::GetDefaultObj()
{
	static class UWTLMonsterPerceptionComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLMonsterPerceptionComponent*>(UWTLMonsterPerceptionComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMonsterPerceptionComponent.GetNearestStuff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLPlaceableStuff*          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLPlaceableStuff* UWTLMonsterPerceptionComponent::GetNearestStuff()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPerceptionComponent", "GetNearestStuff");

	Params::UWTLMonsterPerceptionComponent_GetNearestStuff_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPerceptionComponent.GetNearestMonster
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLMonsterPawn*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLMonsterPawn* UWTLMonsterPerceptionComponent::GetNearestMonster()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPerceptionComponent", "GetNearestMonster");

	Params::UWTLMonsterPerceptionComponent_GetNearestMonster_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPerceptionComponent.GetNearestCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* UWTLMonsterPerceptionComponent::GetNearestCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPerceptionComponent", "GetNearestCharacter");

	Params::UWTLMonsterPerceptionComponent_GetNearestCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterPerceptionComponent.GetNearestActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UWTLMonsterPerceptionComponent::GetNearestActor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterPerceptionComponent", "GetNearestActor");

	Params::UWTLMonsterPerceptionComponent_GetNearestActor_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLMonsterProjectile
// (Actor)

class UClass* AWTLMonsterProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterProjectile");

	return Clss;
}


// WTLMonsterProjectile WTL.Default__WTLMonsterProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMonsterProjectile* AWTLMonsterProjectile::GetDefaultObj()
{
	static class AWTLMonsterProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMonsterProjectile*>(AWTLMonsterProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMonsterProjectile.OnHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMonsterProjectile::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterProjectile", "OnHit");

	Params::AWTLMonsterProjectile_OnHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMonsterProjectileBase
// (Actor)

class UClass* AWTLMonsterProjectileBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterProjectileBase");

	return Clss;
}


// WTLMonsterProjectileBase WTL.Default__WTLMonsterProjectileBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMonsterProjectileBase* AWTLMonsterProjectileBase::GetDefaultObj()
{
	static class AWTLMonsterProjectileBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMonsterProjectileBase*>(AWTLMonsterProjectileBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMonsterProjectileBase.OnHit
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMonsterProjectileBase::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterProjectileBase", "OnHit");

	Params::AWTLMonsterProjectileBase_OnHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterProjectileBase.K2_OnHit
// (Event, Public, HasOutParams, HasDefaults, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLMonsterProjectileBase::K2_OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterProjectileBase", "K2_OnHit");

	Params::AWTLMonsterProjectileBase_K2_OnHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterProjectileBase.Init
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Start_location                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Target_location                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Min_damage                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Max_damage                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Angle_impact                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterProjectileBase::Init(const struct FVector& Start_location, const struct FVector& Target_location, float Min_damage, float Max_damage, float Angle_impact)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterProjectileBase", "Init");

	Params::AWTLMonsterProjectileBase_Init_Params Parms{};

	Parms.Start_location = Start_location;
	Parms.Target_location = Target_location;
	Parms.Min_damage = Min_damage;
	Parms.Max_damage = Max_damage;
	Parms.Angle_impact = Angle_impact;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLMonsterSpawner
// (Actor, Pawn)

class UClass* AWTLMonsterSpawner::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterSpawner");

	return Clss;
}


// WTLMonsterSpawner WTL.Default__WTLMonsterSpawner
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMonsterSpawner* AWTLMonsterSpawner::GetDefaultObj()
{
	static class AWTLMonsterSpawner* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMonsterSpawner*>(AWTLMonsterSpawner::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMonsterSpawner.SpawnLevel
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              LevelMonster                                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLMonsterPawn*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLMonsterPawn* AWTLMonsterSpawner::SpawnLevel(struct FVector& Location, uint8 LevelMonster)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "SpawnLevel");

	Params::AWTLMonsterSpawner_SpawnLevel_Params Parms{};

	Parms.Location = Location;
	Parms.LevelMonster = LevelMonster;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.SpawnDeactivated
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMonsterSpawner::SpawnDeactivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "SpawnDeactivated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.SpawnActivated
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMonsterSpawner::SpawnActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "SpawnActivated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.Spawn
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLMonsterPawn*             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLMonsterPawn* AWTLMonsterSpawner::Spawn(struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "Spawn");

	Params::AWTLMonsterSpawner_Spawn_Params Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.SetSpawnClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TSubclassOf<class AWTLMonsterPawn> SpawnClass                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::SetSpawnClass(TSubclassOf<class AWTLMonsterPawn> SpawnClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "SetSpawnClass");

	Params::AWTLMonsterSpawner_SetSpawnClass_Params Parms{};

	Parms.SpawnClass = SpawnClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.SetMinLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::SetMinLevel(uint8 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "SetMinLevel");

	Params::AWTLMonsterSpawner_SetMinLevel_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.SetMaxLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// uint8                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::SetMaxLevel(uint8 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "SetMaxLevel");

	Params::AWTLMonsterSpawner_SetMaxLevel_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.OnSpawnMonster
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMonsterSpawner::OnSpawnMonster()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "OnSpawnMonster");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMonsterSpawner.OnDeadMonster
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Pawn                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::OnDeadMonster(class AWTLMonsterPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "OnDeadMonster");

	Params::AWTLMonsterSpawner_OnDeadMonster_Params Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterSpawner.K2_SpawnMonsters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      MonstersInfo                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::K2_SpawnMonsters(const class FString& MonstersInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_SpawnMonsters");

	Params::AWTLMonsterSpawner_K2_SpawnMonsters_Params Parms{};

	Parms.MonstersInfo = MonstersInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.K2_SetTimeTillNextSpawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Time                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::K2_SetTimeTillNextSpawn(float Time)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_SetTimeTillNextSpawn");

	Params::AWTLMonsterSpawner_K2_SetTimeTillNextSpawn_Params Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.K2_SetParameters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              LimitMonsters                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              SpawnRadius                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MinLevel                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MaxLevel                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MultiParametersForMonster                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              DistanceFollowTarget                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::K2_SetParameters(int32 LimitMonsters, float SpawnRadius, int32 MinLevel, int32 MaxLevel, float MultiParametersForMonster, float DistanceFollowTarget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_SetParameters");

	Params::AWTLMonsterSpawner_K2_SetParameters_Params Parms{};

	Parms.LimitMonsters = LimitMonsters;
	Parms.SpawnRadius = SpawnRadius;
	Parms.MinLevel = MinLevel;
	Parms.MaxLevel = MaxLevel;
	Parms.MultiParametersForMonster = MultiParametersForMonster;
	Parms.DistanceFollowTarget = DistanceFollowTarget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.K2_SetFactionForAllMyMonsters
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLFaction             NewFaction                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::K2_SetFactionForAllMyMonsters(enum class EWTLFaction NewFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_SetFactionForAllMyMonsters");

	Params::AWTLMonsterSpawner_K2_SetFactionForAllMyMonsters_Params Parms{};

	Parms.NewFaction = NewFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.K2_SetEventPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLEventPoint*              EventPoint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::K2_SetEventPoint(class AWTLEventPoint* EventPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_SetEventPoint");

	Params::AWTLMonsterSpawner_K2_SetEventPoint_Params Parms{};

	Parms.EventPoint = EventPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.K2_OnAllMonstersDead
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMonsterSpawner::K2_OnAllMonstersDead()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_OnAllMonstersDead");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMonsterSpawner.K2_MonsterSpawned
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Pawn                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::K2_MonsterSpawned(class AWTLMonsterPawn* Pawn)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_MonsterSpawned");

	Params::AWTLMonsterSpawner_K2_MonsterSpawned_Params Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterSpawner.K2_KillAllMonsters
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLMonsterSpawner::K2_KillAllMonsters()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_KillAllMonsters");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.K2_GetEventPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLEventPoint*              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLEventPoint* AWTLMonsterSpawner::K2_GetEventPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_GetEventPoint");

	Params::AWTLMonsterSpawner_K2_GetEventPoint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.K2_GenerateTasksFromText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      Value                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::K2_GenerateTasksFromText(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_GenerateTasksFromText");

	Params::AWTLMonsterSpawner_K2_GenerateTasksFromText_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.K2_ExecuteTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FWTLMonsterSpawnerTaskInfo  TaskInfo                                                         (Parm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterSpawner::K2_ExecuteTask(const struct FWTLMonsterSpawnerTaskInfo& TaskInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_ExecuteTask");

	Params::AWTLMonsterSpawner_K2_ExecuteTask_Params Parms{};

	Parms.TaskInfo = TaskInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.K2_ConvertMonstersToText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLMonsterSpawner::K2_ConvertMonstersToText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_ConvertMonstersToText");

	Params::AWTLMonsterSpawner_K2_ConvertMonstersToText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.K2_CanPlaceMonster
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                     Location                                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PlaceLocation                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterSpawner::K2_CanPlaceMonster(struct FVector& Location, struct FVector* PlaceLocation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_CanPlaceMonster");

	Params::AWTLMonsterSpawner_K2_CanPlaceMonster_Params Parms{};

	Parms.Location = Location;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (PlaceLocation != nullptr)
		*PlaceLocation = std::move(Parms.PlaceLocation);

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.K2_AddTask
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FWTLMonsterSpawnerTaskInfo  TaskInfo                                                         (Parm, NativeAccessSpecifierPublic)

void AWTLMonsterSpawner::K2_AddTask(const struct FWTLMonsterSpawnerTaskInfo& TaskInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "K2_AddTask");

	Params::AWTLMonsterSpawner_K2_AddTask_Params Parms{};

	Parms.TaskInfo = TaskInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawner.IsAllMonstersInRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              Radius                                                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterSpawner::IsAllMonstersInRadius(float Radius)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "IsAllMonstersInRadius");

	Params::AWTLMonsterSpawner_IsAllMonstersInRadius_Params Parms{};

	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.IsAllMonsterDead
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterSpawner::IsAllMonsterDead()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "IsAllMonsterDead");

	Params::AWTLMonsterSpawner_IsAllMonsterDead_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.GetStartDelay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterSpawner::GetStartDelay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "GetStartDelay");

	Params::AWTLMonsterSpawner_GetStartDelay_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.GetSpawnRadius
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterSpawner::GetSpawnRadius()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "GetSpawnRadius");

	Params::AWTLMonsterSpawner_GetSpawnRadius_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.GetSpawnInterval
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterSpawner::GetSpawnInterval()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "GetSpawnInterval");

	Params::AWTLMonsterSpawner_GetSpawnInterval_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.GetSpawnedMonstersCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLMonsterSpawner::GetSpawnedMonstersCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "GetSpawnedMonstersCount");

	Params::AWTLMonsterSpawner_GetSpawnedMonstersCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.GetMonstersLimit
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLMonsterSpawner::GetMonstersLimit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "GetMonstersLimit");

	Params::AWTLMonsterSpawner_GetMonstersLimit_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.GetMonsterClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TSubclassOf<class AWTLMonsterPawn> ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

TSubclassOf<class AWTLMonsterPawn> AWTLMonsterSpawner::GetMonsterClass()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "GetMonsterClass");

	Params::AWTLMonsterSpawner_GetMonsterClass_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.GetMinimumLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterSpawner::GetMinimumLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "GetMinimumLevel");

	Params::AWTLMonsterSpawner_GetMinimumLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.GetMaximumLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterSpawner::GetMaximumLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "GetMaximumLevel");

	Params::AWTLMonsterSpawner_GetMaximumLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.GetAcnchorPoint
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLMonsterSpawner::GetAcnchorPoint()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "GetAcnchorPoint");

	Params::AWTLMonsterSpawner_GetAcnchorPoint_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawner.CanSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterSpawner::CanSpawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawner", "CanSpawn");

	Params::AWTLMonsterSpawner_CanSpawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLMonsterSpawnerAIController
// (Actor)

class UClass* AWTLMonsterSpawnerAIController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterSpawnerAIController");

	return Clss;
}


// WTLMonsterSpawnerAIController WTL.Default__WTLMonsterSpawnerAIController
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMonsterSpawnerAIController* AWTLMonsterSpawnerAIController::GetDefaultObj()
{
	static class AWTLMonsterSpawnerAIController* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMonsterSpawnerAIController*>(AWTLMonsterSpawnerAIController::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMonsterSpawnerAIController.OnStreamingLevelsLoaded
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMonsterSpawnerAIController::OnStreamingLevelsLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerAIController", "OnStreamingLevelsLoaded");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLMonsterSpawnerEvent
// (Actor)

class UClass* AWTLMonsterSpawnerEvent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMonsterSpawnerEvent");

	return Clss;
}


// WTLMonsterSpawnerEvent WTL.Default__WTLMonsterSpawnerEvent
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMonsterSpawnerEvent* AWTLMonsterSpawnerEvent::GetDefaultObj()
{
	static class AWTLMonsterSpawnerEvent* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMonsterSpawnerEvent*>(AWTLMonsterSpawnerEvent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMonsterSpawnerEvent.SetEventPoint
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLEventPoint*              EventPoint                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawnerEvent::SetEventPoint(class AWTLEventPoint* EventPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "SetEventPoint");

	Params::AWTLMonsterSpawnerEvent_SetEventPoint_Params Parms{};

	Parms.EventPoint = EventPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMonsterSpawnerEvent.K2_OnSpawnMonster
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawnerEvent::K2_OnSpawnMonster(class AWTLMonsterPawn* Monster)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "K2_OnSpawnMonster");

	Params::AWTLMonsterSpawnerEvent_K2_OnSpawnMonster_Params Parms{};

	Parms.Monster = Monster;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterSpawnerEvent.K2_OnSpawnDeactivate
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMonsterSpawnerEvent::K2_OnSpawnDeactivate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "K2_OnSpawnDeactivate");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMonsterSpawnerEvent.K2_OnSpawnActivated
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FWTLMonstersDataForSpawnBaseSpawnData                                                        (Parm, NativeAccessSpecifierPublic)

void AWTLMonsterSpawnerEvent::K2_OnSpawnActivated(const struct FWTLMonstersDataForSpawnBase& SpawnData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "K2_OnSpawnActivated");

	Params::AWTLMonsterSpawnerEvent_K2_OnSpawnActivated_Params Parms{};

	Parms.SpawnData = SpawnData;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterSpawnerEvent.K2_OnMonsterDead
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMonsterSpawnerEvent::K2_OnMonsterDead(class AWTLMonsterPawn* Monster)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "K2_OnMonsterDead");

	Params::AWTLMonsterSpawnerEvent_K2_OnMonsterDead_Params Parms{};

	Parms.Monster = Monster;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLMonsterSpawnerEvent.K2_CanBeActivated
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterSpawnerEvent::K2_CanBeActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "K2_CanBeActivated");

	Params::AWTLMonsterSpawnerEvent_K2_CanBeActivated_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawnerEvent.IsActivated
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMonsterSpawnerEvent::IsActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "IsActivated");

	Params::AWTLMonsterSpawnerEvent_IsActivated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawnerEvent.GetLifetime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterSpawnerEvent::GetLifetime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "GetLifetime");

	Params::AWTLMonsterSpawnerEvent_GetLifetime_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawnerEvent.GetDurationActiveState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterSpawnerEvent::GetDurationActiveState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "GetDurationActiveState");

	Params::AWTLMonsterSpawnerEvent_GetDurationActiveState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawnerEvent.GetDelayForActiovation
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMonsterSpawnerEvent::GetDelayForActiovation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "GetDelayForActiovation");

	Params::AWTLMonsterSpawnerEvent_GetDelayForActiovation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMonsterSpawnerEvent.GetDataID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLMonsterSpawnerEvent::GetDataID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMonsterSpawnerEvent", "GetDataID");

	Params::AWTLMonsterSpawnerEvent_GetDataID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLMortar
// (Actor)

class UClass* AWTLMortar::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMortar");

	return Clss;
}


// WTLMortar WTL.Default__WTLMortar
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMortar* AWTLMortar::GetDefaultObj()
{
	static class AWTLMortar* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMortar*>(AWTLMortar::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLMortar.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMortar::Server_StartUse(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "Server_StartUse");

	Params::AWTLMortar_Server_StartUse_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.Server_StartFire
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMortar::Server_StartFire(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "Server_StartFire");

	Params::AWTLMortar_Server_StartFire_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.Server_ChangeIncline
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int8                               Direction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               BigStep                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLMortar::Server_ChangeIncline(int8 Direction, bool BigStep)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "Server_ChangeIncline");

	Params::AWTLMortar_Server_ChangeIncline_Params Parms{};

	Parms.Direction = Direction;
	Parms.BigStep = BigStep;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.OnUse
// (Final, Native, Public)
// Parameters:

void AWTLMortar::OnUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "OnUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.OnStorageCheck
// (Final, Native, Public)
// Parameters:

void AWTLMortar::OnStorageCheck()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "OnStorageCheck");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.OnRep_StorageContent
// (Final, Native, Private)
// Parameters:

void AWTLMortar::OnRep_StorageContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "OnRep_StorageContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.OnRep_Incline
// (Final, Native, Private)
// Parameters:

void AWTLMortar::OnRep_Incline()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "OnRep_Incline");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.OnFire
// (Final, Native, Public)
// Parameters:

void AWTLMortar::OnFire()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "OnFire");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.NetMulticast_StartFire
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLMortar::NetMulticast_StartFire()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "NetMulticast_StartFire");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.NetMulticast_Load
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLMortar::NetMulticast_Load()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "NetMulticast_Load");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.K2_GetSocketLocation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FName                        Socket                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLMortar::K2_GetSocketLocation(class FName Socket)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "K2_GetSocketLocation");

	Params::AWTLMortar_K2_GetSocketLocation_Params Parms{};

	Parms.Socket = Socket;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMortar.GetYawRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMortar::GetYawRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "GetYawRotation");

	Params::AWTLMortar_GetYawRotation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMortar.GetIncline
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMortar::GetIncline()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "GetIncline");

	Params::AWTLMortar_GetIncline_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMortar.ChangeInclineForward
// (Final, Native, Public)
// Parameters:

void AWTLMortar::ChangeInclineForward()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "ChangeInclineForward");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.ChangeInclineBackward
// (Final, Native, Public)
// Parameters:

void AWTLMortar::ChangeInclineBackward()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "ChangeInclineBackward");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLMortar.BPGetYawRotation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLMortar::BPGetYawRotation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "BPGetYawRotation");

	Params::AWTLMortar_BPGetYawRotation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMortar.BPGetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* AWTLMortar::BPGetCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "BPGetCharacter");

	Params::AWTLMortar_BPGetCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMortar.BPFire
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLMortar::BPFire()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "BPFire");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLMortar.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMortar::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "AIInterface_IsInSafeZone");

	Params::AWTLMortar_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMortar.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMortar::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "AIInterface_IsCanBeAttacked");

	Params::AWTLMortar_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMortar.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLMortar::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "AIInterface_IsAlive");

	Params::AWTLMortar_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMortar.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLMortar::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "AIInterface_GetVelocity");

	Params::AWTLMortar_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMortar.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLMortar::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "AIInterface_GetGroupID");

	Params::AWTLMortar_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLMortar.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLMortar::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLMortar", "AIInterface_GetFaction");

	Params::AWTLMortar_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLMultipleItemPickupSpawnPoint
// (Actor)

class UClass* AWTLMultipleItemPickupSpawnPoint::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLMultipleItemPickupSpawnPoint");

	return Clss;
}


// WTLMultipleItemPickupSpawnPoint WTL.Default__WTLMultipleItemPickupSpawnPoint
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLMultipleItemPickupSpawnPoint* AWTLMultipleItemPickupSpawnPoint::GetDefaultObj()
{
	static class AWTLMultipleItemPickupSpawnPoint* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLMultipleItemPickupSpawnPoint*>(AWTLMultipleItemPickupSpawnPoint::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLNetworkController
// (None)

class UClass* UWTLNetworkController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLNetworkController");

	return Clss;
}


// WTLNetworkController WTL.Default__WTLNetworkController
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLNetworkController* UWTLNetworkController::GetDefaultObj()
{
	static class UWTLNetworkController* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLNetworkController*>(UWTLNetworkController::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLNetworkController.IsConnected
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLNetworkController::IsConnected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNetworkController", "IsConnected");

	Params::UWTLNetworkController_IsConnected_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNetworkController.Disconnect
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UWTLNetworkController::Disconnect()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNetworkController", "Disconnect");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNetworkController.Connect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      Host                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Port                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLNetworkController::Connect(const class FString& Host, int32 Port)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNetworkController", "Connect");

	Params::UWTLNetworkController_Connect_Params Parms{};

	Parms.Host = Host;
	Parms.Port = Port;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLNPCActor
// (Actor)

class UClass* AWTLNPCActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLNPCActor");

	return Clss;
}


// WTLNPCActor WTL.Default__WTLNPCActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLNPCActor* AWTLNPCActor::GetDefaultObj()
{
	static class AWTLNPCActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLNPCActor*>(AWTLNPCActor::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLNPCActor.TravelCharacterToSafeZone
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SafeZoneID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TravelTime                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Price                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::TravelCharacterToSafeZone(class AWTLCharacter* Character, int32 SafeZoneID, float TravelTime, int32 Price, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "TravelCharacterToSafeZone");

	Params::AWTLNPCActor_TravelCharacterToSafeZone_Params Parms{};

	Parms.Character = Character;
	Parms.SafeZoneID = SafeZoneID;
	Parms.TravelTime = TravelTime;
	Parms.Price = Price;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.TravelCharacterToPoint
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     DestLocation                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TravelTime                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Price                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::TravelCharacterToPoint(class AWTLCharacter* Character, const struct FVector& DestLocation, float TravelTime, int32 Price, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "TravelCharacterToPoint");

	Params::AWTLNPCActor_TravelCharacterToPoint_Params Parms{};

	Parms.Character = Character;
	Parms.DestLocation = DestLocation;
	Parms.TravelTime = TravelTime;
	Parms.Price = Price;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.TravelCharacterToLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              LocationID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PortalID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TravelTime                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Price                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::TravelCharacterToLocation(class AWTLCharacter* Character, int32 LocationID, int32 PortalID, float TravelTime, int32 Price, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "TravelCharacterToLocation");

	Params::AWTLNPCActor_TravelCharacterToLocation_Params Parms{};

	Parms.Character = Character;
	Parms.LocationID = LocationID;
	Parms.PortalID = PortalID;
	Parms.TravelTime = TravelTime;
	Parms.Price = Price;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.TravelCharacterThroughPortal
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PortalID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TravelTime                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Price                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::TravelCharacterThroughPortal(class AWTLCharacter* Character, int32 PortalID, float TravelTime, int32 Price, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "TravelCharacterThroughPortal");

	Params::AWTLNPCActor_TravelCharacterThroughPortal_Params Parms{};

	Parms.Character = Character;
	Parms.PortalID = PortalID;
	Parms.TravelTime = TravelTime;
	Parms.Price = Price;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.TakeMoneyFromCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::TakeMoneyFromCharacter(class AWTLCharacter* Character, int32 MoneyAmount, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "TakeMoneyFromCharacter");

	Params::AWTLNPCActor_TakeMoneyFromCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.MoneyAmount = MoneyAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.ShowSupplyItemsDialog
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowSupplyItemsDialog(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowSupplyItemsDialog");

	Params::AWTLNPCActor_ShowSupplyItemsDialog_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowSteamInventoryWidget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowSteamInventoryWidget(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowSteamInventoryWidget");

	Params::AWTLNPCActor_ShowSteamInventoryWidget_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowRandomReplicaDialog
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      NPCReplicaIDs                                                    (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<int32>                      CharacterReplicaIDArray                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowRandomReplicaDialog(class AWTLCharacter* Character, const TArray<int32>& NPCReplicaIDs, const TArray<int32>& CharacterReplicaIDArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowRandomReplicaDialog");

	Params::AWTLNPCActor_ShowRandomReplicaDialog_Params Parms{};

	Parms.Character = Character;
	Parms.NPCReplicaIDs = NPCReplicaIDs;
	Parms.CharacterReplicaIDArray = CharacterReplicaIDArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowQuestRewardInDialog
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowQuestRewardInDialog(class AWTLCharacter* Character, int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowQuestRewardInDialog");

	Params::AWTLNPCActor_ShowQuestRewardInDialog_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowQuestDialog
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLQuestReplicas           InQuestReplica                                                   (Parm, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowQuestDialog(class AWTLCharacter* Character, const struct FWTLQuestReplicas& InQuestReplica)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowQuestDialog");

	Params::AWTLNPCActor_ShowQuestDialog_Params Parms{};

	Parms.Character = Character;
	Parms.InQuestReplica = InQuestReplica;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowQuestDecription
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowQuestDecription(class AWTLCharacter* Character, int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowQuestDecription");

	Params::AWTLNPCActor_ShowQuestDecription_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowPrivateStorage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowPrivateStorage(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowPrivateStorage");

	Params::AWTLNPCActor_ShowPrivateStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowDialogNPCTakeQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowDialogNPCTakeQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowDialogNPCTakeQuest");

	Params::AWTLNPCActor_ShowDialogNPCTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.ShowDialogNPCCompleteQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowDialogNPCCompleteQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowDialogNPCCompleteQuest");

	Params::AWTLNPCActor_ShowDialogNPCCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.ShowDialogIfQuestNotInState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NPCReplicaID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      CharacterReplicaIDArray                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowDialogIfQuestNotInState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState QuestState, int32 NPCReplicaID, const TArray<int32>& CharacterReplicaIDArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowDialogIfQuestNotInState");

	Params::AWTLNPCActor_ShowDialogIfQuestNotInState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.QuestState = QuestState;
	Parms.NPCReplicaID = NPCReplicaID;
	Parms.CharacterReplicaIDArray = CharacterReplicaIDArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowDialogIfQuestInState
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NPCReplicaID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      CharacterReplicaIDArray                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowDialogIfQuestInState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState QuestState, int32 NPCReplicaID, const TArray<int32>& CharacterReplicaIDArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowDialogIfQuestInState");

	Params::AWTLNPCActor_ShowDialogIfQuestInState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.QuestState = QuestState;
	Parms.NPCReplicaID = NPCReplicaID;
	Parms.CharacterReplicaIDArray = CharacterReplicaIDArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowDialog
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NPCReplicaID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      CharacterReplicaIDArray                                          (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowDialog(class AWTLCharacter* Character, int32 NPCReplicaID, const TArray<int32>& CharacterReplicaIDArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowDialog");

	Params::AWTLNPCActor_ShowDialog_Params Parms{};

	Parms.Character = Character;
	Parms.NPCReplicaID = NPCReplicaID;
	Parms.CharacterReplicaIDArray = CharacterReplicaIDArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowClanStorage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowClanStorage(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowClanStorage");

	Params::AWTLNPCActor_ShowClanStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.ShowClanNameRequestWidget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ShowClanNameRequestWidget(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ShowClanNameRequestWidget");

	Params::AWTLNPCActor_ShowClanNameRequestWidget_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.SetQuestState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::SetQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState State, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "SetQuestState");

	Params::AWTLNPCActor_SetQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.SetIsActive
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::SetIsActive(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "SetIsActive");

	Params::AWTLNPCActor_SetIsActive_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.SetCharacterFaction
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             Faction                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::SetCharacterFaction(class AWTLCharacter* Character, enum class EWTLFaction Faction, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "SetCharacterFaction");

	Params::AWTLNPCActor_SetCharacterFaction_Params Parms{};

	Parms.Character = Character;
	Parms.Faction = Faction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.RemovePrivateStorage
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::RemovePrivateStorage(class AWTLCharacter* Character, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "RemovePrivateStorage");

	Params::AWTLNPCActor_RemovePrivateStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.RemoveClanStorage
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::RemoveClanStorage(class AWTLCharacter* Character, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "RemoveClanStorage");

	Params::AWTLNPCActor_RemoveClanStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.OnSetFactionEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLFaction             Faction                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnSetFactionEvent(enum class EWTLFaction Faction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnSetFactionEvent");

	Params::AWTLNPCActor_OnSetFactionEvent_Params Parms{};

	Parms.Faction = Faction;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.OnSetFaction
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLFaction             Faction                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnSetFaction(enum class EWTLFaction Faction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnSetFaction");

	Params::AWTLNPCActor_OnSetFaction_Params Parms{};

	Parms.Faction = Faction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.OnRep_NPCFaction
// (Final, Native, Private)
// Parameters:

void AWTLNPCActor::OnRep_NPCFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnRep_NPCFaction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.OnRep_IsActive
// (Final, Native, Private)
// Parameters:

void AWTLNPCActor::OnRep_IsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnRep_IsActive");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.OnPlayerSelectReplica
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnPlayerSelectReplica(class AWTLCharacter* Character, int32 ReplicaID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnPlayerSelectReplica");

	Params::AWTLNPCActor_OnPlayerSelectReplica_Params Parms{};

	Parms.Character = Character;
	Parms.ReplicaID = ReplicaID;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.OnPlayerSelectClanName
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ClanName                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnPlayerSelectClanName(class AWTLCharacter* Character, const class FString& ClanName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnPlayerSelectClanName");

	Params::AWTLNPCActor_OnPlayerSelectClanName_Params Parms{};

	Parms.Character = Character;
	Parms.ClanName = ClanName;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.OnNPCDialogActivated
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnNPCDialogActivated(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnNPCDialogActivated");

	Params::AWTLNPCActor_OnNPCDialogActivated_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.OnMontageStarted
// (Final, Native, Private)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnMontageStarted(class UAnimMontage* Montage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnMontageStarted");

	Params::AWTLNPCActor_OnMontageStarted_Params Parms{};

	Parms.Montage = Montage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.OnMontageEnded
// (Final, Native, Private)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInterrupted                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnMontageEnded");

	Params::AWTLNPCActor_OnMontageEnded_Params Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.OnIsActiveChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsActive                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnIsActiveChanged(bool IsActive)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnIsActiveChanged");

	Params::AWTLNPCActor_OnIsActiveChanged_Params Parms{};

	Parms.IsActive = IsActive;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.OnFrightEndOverlap
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnFrightEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnFrightEndOverlap");

	Params::AWTLNPCActor_OnFrightEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.OnFrightBeginOverlap
// (Final, Native, Public, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnFrightBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnFrightBeginOverlap");

	Params::AWTLNPCActor_OnFrightBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.OnCharacterTakeQuest
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnCharacterTakeQuest(class AWTLCharacter* Character, int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnCharacterTakeQuest");

	Params::AWTLNPCActor_OnCharacterTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.OnCharacterExitFrightSphere
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnCharacterExitFrightSphere(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnCharacterExitFrightSphere");

	Params::AWTLNPCActor_OnCharacterExitFrightSphere_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.OnCharacterEntersFrightSphere
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnCharacterEntersFrightSphere(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnCharacterEntersFrightSphere");

	Params::AWTLNPCActor_OnCharacterEntersFrightSphere_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.OnCharacterCompleteQuest
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnCharacterCompleteQuest(class AWTLCharacter* Character, int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnCharacterCompleteQuest");

	Params::AWTLNPCActor_OnCharacterCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.OnActionTrigger
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        ActionName                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::OnActionTrigger(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "OnActionTrigger");

	Params::AWTLNPCActor_OnActionTrigger_Params Parms{};

	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.K2_SetFaction
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLFaction             Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::K2_SetFaction(enum class EWTLFaction Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "K2_SetFaction");

	Params::AWTLNPCActor_K2_SetFaction_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.HealCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Price                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::HealCharacter(class AWTLCharacter* Character, float MinValue, float MaxValue, int32 Price, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "HealCharacter");

	Params::AWTLNPCActor_HealCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.MinValue = MinValue;
	Parms.MaxValue = MaxValue;
	Parms.Price = Price;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.HaveSupplyItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::HaveSupplyItems(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "HaveSupplyItems");

	Params::AWTLNPCActor_HaveSupplyItems_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GiveMoneyToCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::GiveMoneyToCharacter(class AWTLCharacter* Character, int32 MoneyAmount, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GiveMoneyToCharacter");

	Params::AWTLNPCActor_GiveMoneyToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.MoneyAmount = MoneyAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.GiveItemToCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Condition                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::GiveItemToCharacter(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, int32 Count, int32 Condition, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GiveItemToCharacter");

	Params::AWTLNPCActor_GiveItemToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Count = Count;
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.GiveItemsToCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLGiveItemInfo>    ItemsToGive                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::GiveItemsToCharacter(class AWTLCharacter* Character, const TArray<struct FWTLGiveItemInfo>& ItemsToGive, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GiveItemsToCharacter");

	Params::AWTLNPCActor_GiveItemsToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ItemsToGive = ItemsToGive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.GetReplicaDialogGreeting
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCReplicaAction    OutAction                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NPCReplicaID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      CharacterReplicaArray                                            (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::GetReplicaDialogGreeting(class AWTLCharacter* Character, enum class EWTLNPCCheckResult* Result, int32* QuestID, enum class EWTLNPCReplicaAction* OutAction, int32* NPCReplicaID, TArray<int32>* CharacterReplicaArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetReplicaDialogGreeting");

	Params::AWTLNPCActor_GetReplicaDialogGreeting_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	if (QuestID != nullptr)
		*QuestID = Parms.QuestID;

	if (OutAction != nullptr)
		*OutAction = Parms.OutAction;

	if (NPCReplicaID != nullptr)
		*NPCReplicaID = Parms.NPCReplicaID;

	if (CharacterReplicaArray != nullptr)
		*CharacterReplicaArray = std::move(Parms.CharacterReplicaArray);

}


// Function WTL.WTLNPCActor.GetQuestState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::GetQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState* QuestState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetQuestState");

	Params::AWTLNPCActor_GetQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (QuestState != nullptr)
		*QuestState = Parms.QuestState;

}


// Function WTL.WTLNPCActor.GetQuestReplicas
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InQuestID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLQuestReplicas           OutQuestReplicas                                                 (Parm, OutParm, NativeAccessSpecifierPublic)

void AWTLNPCActor::GetQuestReplicas(class AWTLCharacter* Character, int32 InQuestID, struct FWTLQuestReplicas* OutQuestReplicas)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetQuestReplicas");

	Params::AWTLNPCActor_GetQuestReplicas_Params Parms{};

	Parms.Character = Character;
	Parms.InQuestID = InQuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutQuestReplicas != nullptr)
		*OutQuestReplicas = std::move(Parms.OutQuestReplicas);

}


// Function WTL.WTLNPCActor.GetNewClanStorageTabPrice
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Price                                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLItemRequirement> Requirements                                                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::GetNewClanStorageTabPrice(class AWTLCharacter* Character, int32* Price, TArray<struct FWTLItemRequirement>* Requirements)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetNewClanStorageTabPrice");

	Params::AWTLNPCActor_GetNewClanStorageTabPrice_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Price != nullptr)
		*Price = Parms.Price;

	if (Requirements != nullptr)
		*Requirements = std::move(Parms.Requirements);

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetItemRepairPrice
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Condition                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLNPCActor::GetItemRepairPrice(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, int32 Condition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetItemRepairPrice");

	Params::AWTLNPCActor_GetItemRepairPrice_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetIsActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::GetIsActive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetIsActive");

	Params::AWTLNPCActor_GetIsActive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetCharacterSex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLSex                 ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLSex AWTLNPCActor::GetCharacterSex(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetCharacterSex");

	Params::AWTLNPCActor_GetCharacterSex_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetCharacterPrivateStorageSlotCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AWTLNPCActor::GetCharacterPrivateStorageSlotCount(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetCharacterPrivateStorageSlotCount");

	Params::AWTLNPCActor_GetCharacterPrivateStorageSlotCount_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetCharacterMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLNPCActor::GetCharacterMaxHealth(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetCharacterMaxHealth");

	Params::AWTLNPCActor_GetCharacterMaxHealth_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetCharacterLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AWTLNPCActor::GetCharacterLevel(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetCharacterLevel");

	Params::AWTLNPCActor_GetCharacterLevel_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetCharacterInventoryAvailableSlotCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLNPCActor::GetCharacterInventoryAvailableSlotCount(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetCharacterInventoryAvailableSlotCount");

	Params::AWTLNPCActor_GetCharacterInventoryAvailableSlotCount_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetCharacterHealthPercent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLNPCActor::GetCharacterHealthPercent(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetCharacterHealthPercent");

	Params::AWTLNPCActor_GetCharacterHealthPercent_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetCharacterHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLNPCActor::GetCharacterHealth(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetCharacterHealth");

	Params::AWTLNPCActor_GetCharacterHealth_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetCharacterFaction
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             Faction                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::GetCharacterFaction(class AWTLCharacter* Character, enum class EWTLFaction* Faction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetCharacterFaction");

	Params::AWTLNPCActor_GetCharacterFaction_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Faction != nullptr)
		*Faction = Parms.Faction;

}


// Function WTL.WTLNPCActor.GetCharacterClass
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterClass      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLCharacterClass AWTLNPCActor::GetCharacterClass(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetCharacterClass");

	Params::AWTLNPCActor_GetCharacterClass_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.GetCharacterClanStorageTabCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AWTLNPCActor::GetCharacterClanStorageTabCount(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "GetCharacterClanStorageTabCount");

	Params::AWTLNPCActor_GetCharacterClanStorageTabCount_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.FillDataToQuestArray
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLNPCActor::FillDataToQuestArray()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "FillDataToQuestArray");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.EndDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::EndDialog(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "EndDialog");

	Params::AWTLNPCActor_EndDialog_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.CreatePrivateStorage
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CreatePrivateStorage(class AWTLCharacter* Character, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CreatePrivateStorage");

	Params::AWTLNPCActor_CreatePrivateStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CreateMapMarker
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     MarkerPosition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MarkerName                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ShowOnMinimap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CreateMapMarker(class AWTLCharacter* Character, const struct FVector& MarkerPosition, const class FString& MarkerName, bool ShowOnMinimap, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CreateMapMarker");

	Params::AWTLNPCActor_CreateMapMarker_Params Parms{};

	Parms.Character = Character;
	Parms.MarkerPosition = MarkerPosition;
	Parms.MarkerName = MarkerName;
	Parms.ShowOnMinimap = ShowOnMinimap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CreateClanStorage
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CreateClanStorage(class AWTLCharacter* Character, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CreateClanStorage");

	Params::AWTLNPCActor_CreateClanStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CreateClan
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ClanName                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CreateClan(class AWTLCharacter* Character, const class FString& ClanName, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CreateClan");

	Params::AWTLNPCActor_CreateClan_Params Parms{};

	Parms.Character = Character;
	Parms.ClanName = ClanName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckReplicaForTakeQuestWithDialog
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              DialogReplicaID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      DialogReplicaArray                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForTakeQuestWithDialog(class AWTLCharacter* Character, int32 ReplicaID, int32 DialogReplicaID, const TArray<int32>& DialogReplicaArray, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForTakeQuestWithDialog");

	Params::AWTLNPCActor_CheckReplicaForTakeQuestWithDialog_Params Parms{};

	Parms.Character = Character;
	Parms.ReplicaID = ReplicaID;
	Parms.DialogReplicaID = DialogReplicaID;
	Parms.DialogReplicaArray = DialogReplicaArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckReplicaForTakeQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCReplicaAction    OutAction                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCReason           Reason                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForTakeQuest(class AWTLCharacter* Character, int32 ReplicaID, enum class EWTLNPCCheckResult* Result, int32* QuestID, enum class EWTLNPCReplicaAction* OutAction, enum class EWTLNPCReason* Reason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForTakeQuest");

	Params::AWTLNPCActor_CheckReplicaForTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.ReplicaID = ReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	if (QuestID != nullptr)
		*QuestID = Parms.QuestID;

	if (OutAction != nullptr)
		*OutAction = Parms.OutAction;

	if (Reason != nullptr)
		*Reason = Parms.Reason;

}


// Function WTL.WTLNPCActor.CheckReplicaForSupply
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForSupply(class AWTLCharacter* Character, int32 ReplicaID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForSupply");

	Params::AWTLNPCActor_CheckReplicaForSupply_Params Parms{};

	Parms.Character = Character;
	Parms.ReplicaID = ReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckReplicaForReMainDialog
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForReMainDialog(int32 ReplicaID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForReMainDialog");

	Params::AWTLNPCActor_CheckReplicaForReMainDialog_Params Parms{};

	Parms.ReplicaID = ReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckReplicaForRejectQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCReplicaAction    OutAction                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForRejectQuest(class AWTLCharacter* Character, int32 ReplicaID, enum class EWTLNPCCheckResult* Result, int32* QuestID, enum class EWTLNPCReplicaAction* OutAction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForRejectQuest");

	Params::AWTLNPCActor_CheckReplicaForRejectQuest_Params Parms{};

	Parms.Character = Character;
	Parms.ReplicaID = ReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	if (QuestID != nullptr)
		*QuestID = Parms.QuestID;

	if (OutAction != nullptr)
		*OutAction = Parms.OutAction;

}


// Function WTL.WTLNPCActor.CheckReplicaForQuestDialog
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForQuestDialog(class AWTLCharacter* Character, int32 ReplicaID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForQuestDialog");

	Params::AWTLNPCActor_CheckReplicaForQuestDialog_Params Parms{};

	Parms.Character = Character;
	Parms.ReplicaID = ReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckReplicaForQuestDescription
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              DescriptionReplicaID                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnReplicaID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForQuestDescription(class AWTLCharacter* Character, int32 ReplicaID, int32 DescriptionReplicaID, int32 ReturnReplicaID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForQuestDescription");

	Params::AWTLNPCActor_CheckReplicaForQuestDescription_Params Parms{};

	Parms.Character = Character;
	Parms.ReplicaID = ReplicaID;
	Parms.DescriptionReplicaID = DescriptionReplicaID;
	Parms.ReturnReplicaID = ReturnReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckReplicaForInfoQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLQuestReplicas           OutQuestReplica                                                  (Parm, OutParm, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForInfoQuest(class AWTLCharacter* Character, int32 ReplicaID, enum class EWTLNPCCheckResult* Result, struct FWTLQuestReplicas* OutQuestReplica)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForInfoQuest");

	Params::AWTLNPCActor_CheckReplicaForInfoQuest_Params Parms{};

	Parms.Character = Character;
	Parms.ReplicaID = ReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	if (OutQuestReplica != nullptr)
		*OutQuestReplica = std::move(Parms.OutQuestReplica);

}


// Function WTL.WTLNPCActor.CheckReplicaForHaveJob
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForHaveJob(int32 ReplicaID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForHaveJob");

	Params::AWTLNPCActor_CheckReplicaForHaveJob_Params Parms{};

	Parms.ReplicaID = ReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckReplicaForEndDialog
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForEndDialog(int32 ReplicaID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForEndDialog");

	Params::AWTLNPCActor_CheckReplicaForEndDialog_Params Parms{};

	Parms.ReplicaID = ReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckReplicaForCompleteQuestWithDialog
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              DialogReplicaID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      DialogReplicaArray                                               (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForCompleteQuestWithDialog(class AWTLCharacter* Character, int32 ReplicaID, int32 DialogReplicaID, const TArray<int32>& DialogReplicaArray, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForCompleteQuestWithDialog");

	Params::AWTLNPCActor_CheckReplicaForCompleteQuestWithDialog_Params Parms{};

	Parms.Character = Character;
	Parms.ReplicaID = ReplicaID;
	Parms.DialogReplicaID = DialogReplicaID;
	Parms.DialogReplicaArray = DialogReplicaArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckReplicaForCompleteQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCReplicaAction    OutAction                                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCReason           Reason                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckReplicaForCompleteQuest(class AWTLCharacter* Character, int32 ReplicaID, enum class EWTLNPCCheckResult* Result, int32* QuestID, enum class EWTLNPCReplicaAction* OutAction, enum class EWTLNPCReason* Reason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckReplicaForCompleteQuest");

	Params::AWTLNPCActor_CheckReplicaForCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.ReplicaID = ReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

	if (QuestID != nullptr)
		*QuestID = Parms.QuestID;

	if (OutAction != nullptr)
		*OutAction = Parms.OutAction;

	if (Reason != nullptr)
		*Reason = Parms.Reason;

}


// Function WTL.WTLNPCActor.CheckCharacterHavePrivateStorage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckCharacterHavePrivateStorage(class AWTLCharacter* Character, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckCharacterHavePrivateStorage");

	Params::AWTLNPCActor_CheckCharacterHavePrivateStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckCharacterHaveEnoughMoney
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckCharacterHaveEnoughMoney(class AWTLCharacter* Character, int32 MoneyAmount, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckCharacterHaveEnoughMoney");

	Params::AWTLNPCActor_CheckCharacterHaveEnoughMoney_Params Parms{};

	Parms.Character = Character;
	Parms.MoneyAmount = MoneyAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckCharacterHaveEnoughAvailableInventorySlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CheckCharacterHaveEnoughAvailableInventorySlots(class AWTLCharacter* Character, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckCharacterHaveEnoughAvailableInventorySlots");

	Params::AWTLNPCActor_CheckCharacterHaveEnoughAvailableInventorySlots_Params Parms{};

	Parms.Character = Character;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CheckCharacterHaveClanStorage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckCharacterHaveClanStorage(class AWTLCharacter* Character, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckCharacterHaveClanStorage");

	Params::AWTLNPCActor_CheckCharacterHaveClanStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CheckCharacterHaveAvailableInventorySlots
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CheckCharacterHaveAvailableInventorySlots(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckCharacterHaveAvailableInventorySlots");

	Params::AWTLNPCActor_CheckCharacterHaveAvailableInventorySlots_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CheckCharacterCanCreateClanStorage
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CheckCharacterCanCreateClanStorage(class AWTLCharacter* Character, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CheckCharacterCanCreateClanStorage");

	Params::AWTLNPCActor_CheckCharacterCanCreateClanStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CharacterHavePrivateStorage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CharacterHavePrivateStorage(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterHavePrivateStorage");

	Params::AWTLNPCActor_CharacterHavePrivateStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CharacterHaveItems
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLTakeItemInfo>    Items                                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CharacterHaveItems(class AWTLCharacter* Character, const TArray<struct FWTLTakeItemInfo>& Items)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterHaveItems");

	Params::AWTLNPCActor_CharacterHaveItems_Params Parms{};

	Parms.Character = Character;
	Parms.Items = Items;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CharacterHaveItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CharacterHaveItem(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterHaveItem");

	Params::AWTLNPCActor_CharacterHaveItem_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CharacterHaveEnoughMoney
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CharacterHaveEnoughMoney(class AWTLCharacter* Character, int32 MoneyAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterHaveEnoughMoney");

	Params::AWTLNPCActor_CharacterHaveEnoughMoney_Params Parms{};

	Parms.Character = Character;
	Parms.MoneyAmount = MoneyAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CharacterHaveClanStorage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CharacterHaveClanStorage(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterHaveClanStorage");

	Params::AWTLNPCActor_CharacterHaveClanStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CharacterCustomized
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CharacterCustomized(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCustomized");

	Params::AWTLNPCActor_CharacterCustomized_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CharacterCanTakeQuestList
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLQuestInfo>       InQuestArray                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FWTLQuestInfo>       OutQuestArray                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::CharacterCanTakeQuestList(class AWTLCharacter* Character, const TArray<struct FWTLQuestInfo>& InQuestArray, TArray<struct FWTLQuestInfo>* OutQuestArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanTakeQuestList");

	Params::AWTLNPCActor_CharacterCanTakeQuestList_Params Parms{};

	Parms.Character = Character;
	Parms.InQuestArray = InQuestArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutQuestArray != nullptr)
		*OutQuestArray = std::move(Parms.OutQuestArray);

}


// Function WTL.WTLNPCActor.CharacterCanTakeQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CharacterCanTakeQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanTakeQuest");

	Params::AWTLNPCActor_CharacterCanTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CharacterCanTakeAnyQuestFromQuestArray
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CharacterCanTakeAnyQuestFromQuestArray(class AWTLCharacter* Character, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanTakeAnyQuestFromQuestArray");

	Params::AWTLNPCActor_CharacterCanTakeAnyQuestFromQuestArray_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CharacterCanTakeAnyQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      QuestIDs                                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CharacterCanTakeAnyQuest(class AWTLCharacter* Character, const TArray<int32>& QuestIDs, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanTakeAnyQuest");

	Params::AWTLNPCActor_CharacterCanTakeAnyQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestIDs = QuestIDs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CharacterCanCreateClanStorage
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CharacterCanCreateClanStorage(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanCreateClanStorage");

	Params::AWTLNPCActor_CharacterCanCreateClanStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CharacterCanCreateClan
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               DoFullCheck                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CharacterCanCreateClan(class AWTLCharacter* Character, bool DoFullCheck)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanCreateClan");

	Params::AWTLNPCActor_CharacterCanCreateClan_Params Parms{};

	Parms.Character = Character;
	Parms.DoFullCheck = DoFullCheck;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CharacterCanCompleteQuestList
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLQuestInfo>       InQuestArray                                                     (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FWTLQuestInfo>       OutQuestArray                                                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::CharacterCanCompleteQuestList(class AWTLCharacter* Character, const TArray<struct FWTLQuestInfo>& InQuestArray, TArray<struct FWTLQuestInfo>* OutQuestArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanCompleteQuestList");

	Params::AWTLNPCActor_CharacterCanCompleteQuestList_Params Parms{};

	Parms.Character = Character;
	Parms.InQuestArray = InQuestArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutQuestArray != nullptr)
		*OutQuestArray = std::move(Parms.OutQuestArray);

}


// Function WTL.WTLNPCActor.CharacterCanCompleteQuestFromQuestArray
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CharacterCanCompleteQuestFromQuestArray(class AWTLCharacter* Character, int32 QuestID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanCompleteQuestFromQuestArray");

	Params::AWTLNPCActor_CharacterCanCompleteQuestFromQuestArray_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CharacterCanCompleteQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CharacterCanCompleteQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanCompleteQuest");

	Params::AWTLNPCActor_CharacterCanCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CharacterCanCompleteAnyQuestFromQuestArray
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CharacterCanCompleteAnyQuestFromQuestArray(class AWTLCharacter* Character, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanCompleteAnyQuestFromQuestArray");

	Params::AWTLNPCActor_CharacterCanCompleteAnyQuestFromQuestArray_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CharacterCanCompleteAnyQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      QuestIDs                                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLNPCCheckResult      Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::CharacterCanCompleteAnyQuest(class AWTLCharacter* Character, const TArray<int32>& QuestIDs, enum class EWTLNPCCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CharacterCanCompleteAnyQuest");

	Params::AWTLNPCActor_CharacterCanCompleteAnyQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestIDs = QuestIDs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.ChangeCharacterSex
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ChangeCharacterSex(class AWTLCharacter* Character, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ChangeCharacterSex");

	Params::AWTLNPCActor_ChangeCharacterSex_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.CanTrade
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CanTrade()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CanTrade");

	Params::AWTLNPCActor_CanTrade_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CanRepairItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Condition                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CanRepairItem(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, int32 Condition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CanRepairItem");

	Params::AWTLNPCActor_CanRepairItem_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.CanDialog
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCActor::CanDialog(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "CanDialog");

	Params::AWTLNPCActor_CanDialog_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCActor.BranchCharacterClass
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterClass      CharacterClass                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::BranchCharacterClass(class AWTLCharacter* Character, enum class EWTLCharacterClass* CharacterClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "BranchCharacterClass");

	Params::AWTLNPCActor_BranchCharacterClass_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (CharacterClass != nullptr)
		*CharacterClass = Parms.CharacterClass;

}


// Function WTL.WTLNPCActor.BP_CustomTrigger
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        TriggerName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::BP_CustomTrigger(class FName TriggerName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "BP_CustomTrigger");

	Params::AWTLNPCActor_BP_CustomTrigger_Params Parms{};

	Parms.TriggerName = TriggerName;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLNPCActor.BeginWeaponPartsExchange
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::BeginWeaponPartsExchange(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "BeginWeaponPartsExchange");

	Params::AWTLNPCActor_BeginWeaponPartsExchange_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.BeginTrade
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::BeginTrade(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "BeginTrade");

	Params::AWTLNPCActor_BeginTrade_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.BeginRepair
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::BeginRepair(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "BeginRepair");

	Params::AWTLNPCActor_BeginRepair_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.BeginItemsCustomization
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::BeginItemsCustomization(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "BeginItemsCustomization");

	Params::AWTLNPCActor_BeginItemsCustomization_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNPCActor.AddTabToClanStorage
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::AddTabToClanStorage(class AWTLCharacter* Character, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "AddTabToClanStorage");

	Params::AWTLNPCActor_AddTabToClanStorage_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.AddSlotsToPrivateStorage
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotCount                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLNPCActionResult     Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::AddSlotsToPrivateStorage(class AWTLCharacter* Character, uint8 SlotCount, enum class EWTLNPCActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "AddSlotsToPrivateStorage");

	Params::AWTLNPCActor_AddSlotsToPrivateStorage_Params Parms{};

	Parms.Character = Character;
	Parms.SlotCount = SlotCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLNPCActor.AddReplicaIfQuestNotInState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      InReplicaArray                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              AddReplicaID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      OutReplicaArray                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::AddReplicaIfQuestNotInState(class AWTLCharacter* Character, const TArray<int32>& InReplicaArray, int32 QuestID, enum class EWTLQuestState QuestState, int32 AddReplicaID, TArray<int32>* OutReplicaArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "AddReplicaIfQuestNotInState");

	Params::AWTLNPCActor_AddReplicaIfQuestNotInState_Params Parms{};

	Parms.Character = Character;
	Parms.InReplicaArray = InReplicaArray;
	Parms.QuestID = QuestID;
	Parms.QuestState = QuestState;
	Parms.AddReplicaID = AddReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutReplicaArray != nullptr)
		*OutReplicaArray = std::move(Parms.OutReplicaArray);

}


// Function WTL.WTLNPCActor.AddReplicaIfQuestInState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      InReplicaArray                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              AddReplicaID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      OutReplicaArray                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::AddReplicaIfQuestInState(class AWTLCharacter* Character, const TArray<int32>& InReplicaArray, int32 QuestID, enum class EWTLQuestState QuestState, int32 AddReplicaID, TArray<int32>* OutReplicaArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "AddReplicaIfQuestInState");

	Params::AWTLNPCActor_AddReplicaIfQuestInState_Params Parms{};

	Parms.Character = Character;
	Parms.InReplicaArray = InReplicaArray;
	Parms.QuestID = QuestID;
	Parms.QuestState = QuestState;
	Parms.AddReplicaID = AddReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutReplicaArray != nullptr)
		*OutReplicaArray = std::move(Parms.OutReplicaArray);

}


// Function WTL.WTLNPCActor.AddReplicaIfCharacterCanTakeQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      InReplicaArray                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              AddReplicaID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      OutReplicaArray                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::AddReplicaIfCharacterCanTakeQuest(class AWTLCharacter* Character, const TArray<int32>& InReplicaArray, int32 QuestID, int32 AddReplicaID, TArray<int32>* OutReplicaArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "AddReplicaIfCharacterCanTakeQuest");

	Params::AWTLNPCActor_AddReplicaIfCharacterCanTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.InReplicaArray = InReplicaArray;
	Parms.QuestID = QuestID;
	Parms.AddReplicaID = AddReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutReplicaArray != nullptr)
		*OutReplicaArray = std::move(Parms.OutReplicaArray);

}


// Function WTL.WTLNPCActor.AddReplicaIfCharacterCanCompleteQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      InReplicaArray                                                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              AddReplicaID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      OutReplicaArray                                                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLNPCActor::AddReplicaIfCharacterCanCompleteQuest(class AWTLCharacter* Character, const TArray<int32>& InReplicaArray, int32 QuestID, int32 AddReplicaID, TArray<int32>* OutReplicaArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "AddReplicaIfCharacterCanCompleteQuest");

	Params::AWTLNPCActor_AddReplicaIfCharacterCanCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.InReplicaArray = InReplicaArray;
	Parms.QuestID = QuestID;
	Parms.AddReplicaID = AddReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutReplicaArray != nullptr)
		*OutReplicaArray = std::move(Parms.OutReplicaArray);

}


// Function WTL.WTLNPCActor.ActivateDialog
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCActor::ActivateDialog(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCActor", "ActivateDialog");

	Params::AWTLNPCActor_ActivateDialog_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLNPCAnimInstance
// (None)

class UClass* UWTLNPCAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLNPCAnimInstance");

	return Clss;
}


// WTLNPCAnimInstance WTL.Default__WTLNPCAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLNPCAnimInstance* UWTLNPCAnimInstance::GetDefaultObj()
{
	static class UWTLNPCAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLNPCAnimInstance*>(UWTLNPCAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLNPCAnimInstance.OnActionTrigger
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        ActionName                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLNPCAnimInstance::OnActionTrigger(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCAnimInstance", "OnActionTrigger");

	Params::UWTLNPCAnimInstance_OnActionTrigger_Params Parms{};

	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLNPCEnvironmentActor
// (Actor)

class UClass* AWTLNPCEnvironmentActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLNPCEnvironmentActor");

	return Clss;
}


// WTLNPCEnvironmentActor WTL.Default__WTLNPCEnvironmentActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLNPCEnvironmentActor* AWTLNPCEnvironmentActor::GetDefaultObj()
{
	static class AWTLNPCEnvironmentActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLNPCEnvironmentActor*>(AWTLNPCEnvironmentActor::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLNPCEnvironmentActor.OnActionTrigger
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        ActionName                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCEnvironmentActor::OnActionTrigger(class FName ActionName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCEnvironmentActor", "OnActionTrigger");

	Params::AWTLNPCEnvironmentActor_OnActionTrigger_Params Parms{};

	Parms.ActionName = ActionName;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLNPCPawnAI
// (Actor, Pawn)

class UClass* AWTLNPCPawnAI::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLNPCPawnAI");

	return Clss;
}


// WTLNPCPawnAI WTL.Default__WTLNPCPawnAI
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLNPCPawnAI* AWTLNPCPawnAI::GetDefaultObj()
{
	static class AWTLNPCPawnAI* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLNPCPawnAI*>(AWTLNPCPawnAI::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLNPCPawnAI.Shot
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform                  SpawnTransform                                                   (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLNPCPawnAI::Shot(const struct FTransform& SpawnTransform)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCPawnAI", "Shot");

	Params::AWTLNPCPawnAI_Shot_Params Parms{};

	Parms.SpawnTransform = SpawnTransform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNPCPawnAI.OnReplicatedMovement
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              DeltaTime                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNPCPawnAI::OnReplicatedMovement(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNPCPawnAI", "OnReplicatedMovement");

	Params::AWTLNPCPawnAI_OnReplicatedMovement_Params Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLNut
// (Actor)

class UClass* AWTLNut::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLNut");

	return Clss;
}


// WTLNut WTL.Default__WTLNut
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLNut* AWTLNut::GetDefaultObj()
{
	static class AWTLNut* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLNut*>(AWTLNut::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLNut.OnRep_ReplicatedInitialSpeed
// (Final, Native, Private)
// Parameters:

void AWTLNut::OnRep_ReplicatedInitialSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNut", "OnRep_ReplicatedInitialSpeed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNut.OnHit
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     NormalImpulse                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  Hit                                                              (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLNut::OnHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNut", "OnHit");

	Params::AWTLNut_OnHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = NormalImpulse;
	Parms.Hit = Hit;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNut.ChangeSpeedAndDirection
// (Final, BlueprintAuthorityOnly, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// float                              Speed                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Direction                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLNut::ChangeSpeedAndDirection(float Speed, const struct FVector& Direction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNut", "ChangeSpeedAndDirection");

	Params::AWTLNut_ChangeSpeedAndDirection_Params Parms{};

	Parms.Speed = Speed;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLNvidiaHighlightsBlueprintFunctionLibrary
// (None)

class UClass* UWTLNvidiaHighlightsBlueprintFunctionLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLNvidiaHighlightsBlueprintFunctionLibrary");

	return Clss;
}


// WTLNvidiaHighlightsBlueprintFunctionLibrary WTL.Default__WTLNvidiaHighlightsBlueprintFunctionLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLNvidiaHighlightsBlueprintFunctionLibrary* UWTLNvidiaHighlightsBlueprintFunctionLibrary::GetDefaultObj()
{
	static class UWTLNvidiaHighlightsBlueprintFunctionLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLNvidiaHighlightsBlueprintFunctionLibrary*>(UWTLNvidiaHighlightsBlueprintFunctionLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLNvidiaHighlightsBlueprintFunctionLibrary.OpenSummary
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContext                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLNvidiaHighlightsBlueprintFunctionLibrary::OpenSummary(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNvidiaHighlightsBlueprintFunctionLibrary", "OpenSummary");

	Params::UWTLNvidiaHighlightsBlueprintFunctionLibrary_OpenSummary_Params Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNvidiaHighlightsBlueprintFunctionLibrary.GetIsHighlightsInitialized
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContext                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLNvidiaHighlightsBlueprintFunctionLibrary::GetIsHighlightsInitialized(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNvidiaHighlightsBlueprintFunctionLibrary", "GetIsHighlightsInitialized");

	Params::UWTLNvidiaHighlightsBlueprintFunctionLibrary_GetIsHighlightsInitialized_Params Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNvidiaHighlightsBlueprintFunctionLibrary.GetHighlightsCount
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContext                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UWTLNvidiaHighlightsBlueprintFunctionLibrary::GetHighlightsCount(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNvidiaHighlightsBlueprintFunctionLibrary", "GetHighlightsCount");

	Params::UWTLNvidiaHighlightsBlueprintFunctionLibrary_GetHighlightsCount_Params Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNvidiaHighlightsBlueprintFunctionLibrary.GetCurrentGroupName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContext                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UWTLNvidiaHighlightsBlueprintFunctionLibrary::GetCurrentGroupName(class UObject* WorldContext)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNvidiaHighlightsBlueprintFunctionLibrary", "GetCurrentGroupName");

	Params::UWTLNvidiaHighlightsBlueprintFunctionLibrary_GetCurrentGroupName_Params Parms{};

	Parms.WorldContext = WorldContext;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLNvidiaHighlightsBlueprintFunctionLibrary.CaptureVideo
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContext                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLHighlightID         HighlightId                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              BeginDeltaSeconds                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EndDeltaSeconds                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLNvidiaHighlightsBlueprintFunctionLibrary::CaptureVideo(class UObject* WorldContext, enum class EWTLHighlightID HighlightId, float BeginDeltaSeconds, float EndDeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNvidiaHighlightsBlueprintFunctionLibrary", "CaptureVideo");

	Params::UWTLNvidiaHighlightsBlueprintFunctionLibrary_CaptureVideo_Params Parms{};

	Parms.WorldContext = WorldContext;
	Parms.HighlightId = HighlightId;
	Parms.BeginDeltaSeconds = BeginDeltaSeconds;
	Parms.EndDeltaSeconds = EndDeltaSeconds;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLNvidiaHighlightsBlueprintFunctionLibrary.CaptureScreenshot
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                     WorldContext                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLHighlightID         HighlightId                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLNvidiaHighlightsBlueprintFunctionLibrary::CaptureScreenshot(class UObject* WorldContext, enum class EWTLHighlightID HighlightId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNvidiaHighlightsBlueprintFunctionLibrary", "CaptureScreenshot");

	Params::UWTLNvidiaHighlightsBlueprintFunctionLibrary_CaptureScreenshot_Params Parms{};

	Parms.WorldContext = WorldContext;
	Parms.HighlightId = HighlightId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLNvidiaHighlightsLibrary
// (None)

class UClass* UWTLNvidiaHighlightsLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLNvidiaHighlightsLibrary");

	return Clss;
}


// WTLNvidiaHighlightsLibrary WTL.Default__WTLNvidiaHighlightsLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLNvidiaHighlightsLibrary* UWTLNvidiaHighlightsLibrary::GetDefaultObj()
{
	static class UWTLNvidiaHighlightsLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLNvidiaHighlightsLibrary*>(UWTLNvidiaHighlightsLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLNvidiaHighlightsLibrary.Dummy
// (Final, Native, Private)
// Parameters:

void UWTLNvidiaHighlightsLibrary::Dummy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLNvidiaHighlightsLibrary", "Dummy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLObjectForActivation
// (Actor)

class UClass* AWTLObjectForActivation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLObjectForActivation");

	return Clss;
}


// WTLObjectForActivation WTL.Default__WTLObjectForActivation
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLObjectForActivation* AWTLObjectForActivation::GetDefaultObj()
{
	static class AWTLObjectForActivation* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLObjectForActivation*>(AWTLObjectForActivation::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLObstacleCourseEndVolume
// (Actor)

class UClass* AWTLObstacleCourseEndVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLObstacleCourseEndVolume");

	return Clss;
}


// WTLObstacleCourseEndVolume WTL.Default__WTLObstacleCourseEndVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLObstacleCourseEndVolume* AWTLObstacleCourseEndVolume::GetDefaultObj()
{
	static class AWTLObstacleCourseEndVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLObstacleCourseEndVolume*>(AWTLObstacleCourseEndVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLObstacleCourseEndVolume.OnVolumeEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLObstacleCourseEndVolume::OnVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLObstacleCourseEndVolume", "OnVolumeEndOverlap");

	Params::AWTLObstacleCourseEndVolume_OnVolumeEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLObstacleCourseEndVolume.OnVolumeBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLObstacleCourseEndVolume::OnVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLObstacleCourseEndVolume", "OnVolumeBeginOverlap");

	Params::AWTLObstacleCourseEndVolume_OnVolumeBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLObstacleCourseHelpButton
// (Actor)

class UClass* AWTLObstacleCourseHelpButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLObstacleCourseHelpButton");

	return Clss;
}


// WTLObstacleCourseHelpButton WTL.Default__WTLObstacleCourseHelpButton
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLObstacleCourseHelpButton* AWTLObstacleCourseHelpButton::GetDefaultObj()
{
	static class AWTLObstacleCourseHelpButton* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLObstacleCourseHelpButton*>(AWTLObstacleCourseHelpButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLObstacleCourseTimeChecker
// (Actor)

class UClass* AWTLObstacleCourseTimeChecker::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLObstacleCourseTimeChecker");

	return Clss;
}


// WTLObstacleCourseTimeChecker WTL.Default__WTLObstacleCourseTimeChecker
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLObstacleCourseTimeChecker* AWTLObstacleCourseTimeChecker::GetDefaultObj()
{
	static class AWTLObstacleCourseTimeChecker* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLObstacleCourseTimeChecker*>(AWTLObstacleCourseTimeChecker::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLObstacleCourseTimeChecker.OnVolumeEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLObstacleCourseTimeChecker::OnVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLObstacleCourseTimeChecker", "OnVolumeEndOverlap");

	Params::AWTLObstacleCourseTimeChecker_OnVolumeEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLObstacleCourseTimeChecker.OnVolumeBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLObstacleCourseTimeChecker::OnVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLObstacleCourseTimeChecker", "OnVolumeBeginOverlap");

	Params::AWTLObstacleCourseTimeChecker_OnVolumeBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLObstacleCourseTimeChecker.OnObstacleCourseSkipConfirmed
// (Final, Native, Private)
// Parameters:

void AWTLObstacleCourseTimeChecker::OnObstacleCourseSkipConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLObstacleCourseTimeChecker", "OnObstacleCourseSkipConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLObstacleCourseTimeChecker.OnMessageDialogHide
// (Final, Native, Private)
// Parameters:

void AWTLObstacleCourseTimeChecker::OnMessageDialogHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLObstacleCourseTimeChecker", "OnMessageDialogHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLOptionsActionKeyBinder
// (None)

class UClass* UWTLOptionsActionKeyBinder::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsActionKeyBinder");

	return Clss;
}


// WTLOptionsActionKeyBinder WTL.Default__WTLOptionsActionKeyBinder
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsActionKeyBinder* UWTLOptionsActionKeyBinder::GetDefaultObj()
{
	static class UWTLOptionsActionKeyBinder* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsActionKeyBinder*>(UWTLOptionsActionKeyBinder::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLOptionsActionKeyBinder.OnMainActionKeyBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLOptionsActionKeyBinder::OnMainActionKeyBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsActionKeyBinder", "OnMainActionKeyBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsActionKeyBinder.OnAlternateActionKeyBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLOptionsActionKeyBinder::OnAlternateActionKeyBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsActionKeyBinder", "OnAlternateActionKeyBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLOptionsBase
// (None)

class UClass* UWTLOptionsBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsBase");

	return Clss;
}


// WTLOptionsBase WTL.Default__WTLOptionsBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsBase* UWTLOptionsBase::GetDefaultObj()
{
	static class UWTLOptionsBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsBase*>(UWTLOptionsBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLOptionsAudio
// (None)

class UClass* UWTLOptionsAudio::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsAudio");

	return Clss;
}


// WTLOptionsAudio WTL.Default__WTLOptionsAudio
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsAudio* UWTLOptionsAudio::GetDefaultObj()
{
	static class UWTLOptionsAudio* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsAudio*>(UWTLOptionsAudio::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLOptionsAudio.OnRecordDevicesSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsAudio::OnRecordDevicesSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsAudio", "OnRecordDevicesSelectionChanged");

	Params::UWTLOptionsAudio_OnRecordDevicesSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsAudio.OnMicCheckButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLOptionsAudio::OnMicCheckButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsAudio", "OnMicCheckButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsAudio.OnAudioDriverSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsAudio::OnAudioDriverSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsAudio", "OnAudioDriverSelectionChanged");

	Params::UWTLOptionsAudio_OnAudioDriverSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLOptionsControl
// (None)

class UClass* UWTLOptionsControl::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsControl");

	return Clss;
}


// WTLOptionsControl WTL.Default__WTLOptionsControl
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsControl* UWTLOptionsControl::GetDefaultObj()
{
	static class UWTLOptionsControl* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsControl*>(UWTLOptionsControl::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLOptionsControl.ResetMainInputs
// (Final, Native, Private)
// Parameters:

void UWTLOptionsControl::ResetMainInputs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsControl", "ResetMainInputs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsControl.ResetButtonForResetOnAnotherAction
// (Final, Native, Private)
// Parameters:

void UWTLOptionsControl::ResetButtonForResetOnAnotherAction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsControl", "ResetButtonForResetOnAnotherAction");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsControl.ResetAlternateInputs
// (Final, Native, Private)
// Parameters:

void UWTLOptionsControl::ResetAlternateInputs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsControl", "ResetAlternateInputs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsControl.OnMainInputsResetBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLOptionsControl::OnMainInputsResetBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsControl", "OnMainInputsResetBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsControl.OnInputWantToReset
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UWTLOptionsActionKeyBinder*  ActionKeyBinder                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsMainKeyReset                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                        ResetToKey                                                       (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsControl::OnInputWantToReset(class UWTLOptionsActionKeyBinder* ActionKeyBinder, bool IsMainKeyReset, struct FKey& ResetToKey)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsControl", "OnInputWantToReset");

	Params::UWTLOptionsControl_OnInputWantToReset_Params Parms{};

	Parms.ActionKeyBinder = ActionKeyBinder;
	Parms.IsMainKeyReset = IsMainKeyReset;
	Parms.ResetToKey = ResetToKey;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsControl.OnInputStartBind
// (Final, Native, Private)
// Parameters:
// class UWTLOptionsActionKeyBinder*  ActionKeyBinder                                                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsControl::OnInputStartBind(class UWTLOptionsActionKeyBinder* ActionKeyBinder)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsControl", "OnInputStartBind");

	Params::UWTLOptionsControl_OnInputStartBind_Params Parms{};

	Parms.ActionKeyBinder = ActionKeyBinder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsControl.OnAlternateInputsResetBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLOptionsControl::OnAlternateInputsResetBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsControl", "OnAlternateInputsResetBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsControl.InputWantToResetConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLOptionsControl::InputWantToResetConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsControl", "InputWantToResetConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsControl.InputBindConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLOptionsControl::InputBindConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsControl", "InputBindConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsControl.InputBindCanceled
// (Final, Native, Private)
// Parameters:

void UWTLOptionsControl::InputBindCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsControl", "InputBindCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLOptionsGame
// (None)

class UClass* UWTLOptionsGame::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsGame");

	return Clss;
}


// WTLOptionsGame WTL.Default__WTLOptionsGame
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsGame* UWTLOptionsGame::GetDefaultObj()
{
	static class UWTLOptionsGame* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsGame*>(UWTLOptionsGame::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLOptionsGame.OnNVIDIAHighlightsCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsGame::OnNVIDIAHighlightsCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGame", "OnNVIDIAHighlightsCheckStateChanged");

	Params::UWTLOptionsGame_OnNVIDIAHighlightsCheckStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsGame.OnLanguageSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsGame::OnLanguageSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGame", "OnLanguageSelectionChanged");

	Params::UWTLOptionsGame_OnLanguageSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsGame.OnCacheAssetsOnStartupCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsGame::OnCacheAssetsOnStartupCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGame", "OnCacheAssetsOnStartupCheckStateChanged");

	Params::UWTLOptionsGame_OnCacheAssetsOnStartupCheckStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLOptionsGraphic
// (None)

class UClass* UWTLOptionsGraphic::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsGraphic");

	return Clss;
}


// WTLOptionsGraphic WTL.Default__WTLOptionsGraphic
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsGraphic* UWTLOptionsGraphic::GetDefaultObj()
{
	static class UWTLOptionsGraphic* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsGraphic*>(UWTLOptionsGraphic::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLOptionsGraphic.OnTextureStreamingChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsGraphic::OnTextureStreamingChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGraphic", "OnTextureStreamingChanged");

	Params::UWTLOptionsGraphic_OnTextureStreamingChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsGraphic.OnScreenModeChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsGraphic::OnScreenModeChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGraphic", "OnScreenModeChanged");

	Params::UWTLOptionsGraphic_OnScreenModeChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsGraphic.OnResolutionChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsGraphic::OnResolutionChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGraphic", "OnResolutionChanged");

	Params::UWTLOptionsGraphic_OnResolutionChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsGraphic.OnRendererChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsGraphic::OnRendererChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGraphic", "OnRendererChanged");

	Params::UWTLOptionsGraphic_OnRendererChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsGraphic.OnQualityLevelChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsGraphic::OnQualityLevelChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGraphic", "OnQualityLevelChanged");

	Params::UWTLOptionsGraphic_OnQualityLevelChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsGraphic.OnDisplayOnPrimaryMonitorBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLOptionsGraphic::OnDisplayOnPrimaryMonitorBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGraphic", "OnDisplayOnPrimaryMonitorBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsGraphic.OnCommonQualityLevelChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsGraphic::OnCommonQualityLevelChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGraphic", "OnCommonQualityLevelChanged");

	Params::UWTLOptionsGraphic_OnCommonQualityLevelChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsGraphic.OnCloudsTypeChanged
// (Final, Native, Private)
// Parameters:
// int32                              CurrentIndex                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Prefix                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsGraphic::OnCloudsTypeChanged(int32 CurrentIndex, const class FString& Prefix)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsGraphic", "OnCloudsTypeChanged");

	Params::UWTLOptionsGraphic_OnCloudsTypeChanged_Params Parms{};

	Parms.CurrentIndex = CurrentIndex;
	Parms.Prefix = Prefix;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLOptionsIdentification
// (None)

class UClass* UWTLOptionsIdentification::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsIdentification");

	return Clss;
}


// WTLOptionsIdentification WTL.Default__WTLOptionsIdentification
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsIdentification* UWTLOptionsIdentification::GetDefaultObj()
{
	static class UWTLOptionsIdentification* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsIdentification*>(UWTLOptionsIdentification::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLOptionsInterface
// (None)

class UClass* UWTLOptionsInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsInterface");

	return Clss;
}


// WTLOptionsInterface WTL.Default__WTLOptionsInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsInterface* UWTLOptionsInterface::GetDefaultObj()
{
	static class UWTLOptionsInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsInterface*>(UWTLOptionsInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLOptionsInterface.OnFilterCensorshipInChatCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsInterface::OnFilterCensorshipInChatCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsInterface", "OnFilterCensorshipInChatCheckStateChanged");

	Params::UWTLOptionsInterface_OnFilterCensorshipInChatCheckStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsInterface.OnCrosshairColorBtnClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   BtnGeometry                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               InMouseEvent                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLOptionsInterface::OnCrosshairColorBtnClicked(struct FGeometry& BtnGeometry, struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsInterface", "OnCrosshairColorBtnClicked");

	Params::UWTLOptionsInterface_OnCrosshairColorBtnClicked_Params Parms{};

	Parms.BtnGeometry = BtnGeometry;
	Parms.InMouseEvent = InMouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLOptionsItemBackground
// (None)

class UClass* UWTLOptionsItemBackground::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsItemBackground");

	return Clss;
}


// WTLOptionsItemBackground WTL.Default__WTLOptionsItemBackground
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsItemBackground* UWTLOptionsItemBackground::GetDefaultObj()
{
	static class UWTLOptionsItemBackground* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsItemBackground*>(UWTLOptionsItemBackground::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLOptionsParameterItem
// (None)

class UClass* UWTLOptionsParameterItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsParameterItem");

	return Clss;
}


// WTLOptionsParameterItem WTL.Default__WTLOptionsParameterItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsParameterItem* UWTLOptionsParameterItem::GetDefaultObj()
{
	static class UWTLOptionsParameterItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsParameterItem*>(UWTLOptionsParameterItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLOptionsParameterSliderBase
// (None)

class UClass* UWTLOptionsParameterSliderBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsParameterSliderBase");

	return Clss;
}


// WTLOptionsParameterSliderBase WTL.Default__WTLOptionsParameterSliderBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsParameterSliderBase* UWTLOptionsParameterSliderBase::GetDefaultObj()
{
	static class UWTLOptionsParameterSliderBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsParameterSliderBase*>(UWTLOptionsParameterSliderBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLOptionsParameterSliderBase.OnSliderValueChanged
// (Final, Native, Protected)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsParameterSliderBase::OnSliderValueChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsParameterSliderBase", "OnSliderValueChanged");

	Params::UWTLOptionsParameterSliderBase_OnSliderValueChanged_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLOptionsParameterSliderPercent
// (None)

class UClass* UWTLOptionsParameterSliderPercent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsParameterSliderPercent");

	return Clss;
}


// WTLOptionsParameterSliderPercent WTL.Default__WTLOptionsParameterSliderPercent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsParameterSliderPercent* UWTLOptionsParameterSliderPercent::GetDefaultObj()
{
	static class UWTLOptionsParameterSliderPercent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsParameterSliderPercent*>(UWTLOptionsParameterSliderPercent::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLOptionsParameterSwitcher
// (None)

class UClass* UWTLOptionsParameterSwitcher::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsParameterSwitcher");

	return Clss;
}


// WTLOptionsParameterSwitcher WTL.Default__WTLOptionsParameterSwitcher
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsParameterSwitcher* UWTLOptionsParameterSwitcher::GetDefaultObj()
{
	static class UWTLOptionsParameterSwitcher* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsParameterSwitcher*>(UWTLOptionsParameterSwitcher::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLOptionsPostProcess
// (None)

class UClass* UWTLOptionsPostProcess::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLOptionsPostProcess");

	return Clss;
}


// WTLOptionsPostProcess WTL.Default__WTLOptionsPostProcess
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLOptionsPostProcess* UWTLOptionsPostProcess::GetDefaultObj()
{
	static class UWTLOptionsPostProcess* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLOptionsPostProcess*>(UWTLOptionsPostProcess::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLOptionsPostProcess.OnRedBalanceValueChanged
// (Final, Native, Private)
// Parameters:
// float                              CurrentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsPostProcess::OnRedBalanceValueChanged(float CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsPostProcess", "OnRedBalanceValueChanged");

	Params::UWTLOptionsPostProcess_OnRedBalanceValueChanged_Params Parms{};

	Parms.CurrentValue = CurrentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsPostProcess.OnGreenBalanceValueChanged
// (Final, Native, Private)
// Parameters:
// float                              CurrentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsPostProcess::OnGreenBalanceValueChanged(float CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsPostProcess", "OnGreenBalanceValueChanged");

	Params::UWTLOptionsPostProcess_OnGreenBalanceValueChanged_Params Parms{};

	Parms.CurrentValue = CurrentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsPostProcess.OnGammaValueChanged
// (Final, Native, Private)
// Parameters:
// float                              CurrentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsPostProcess::OnGammaValueChanged(float CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsPostProcess", "OnGammaValueChanged");

	Params::UWTLOptionsPostProcess_OnGammaValueChanged_Params Parms{};

	Parms.CurrentValue = CurrentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsPostProcess.OnContrastValueChanged
// (Final, Native, Private)
// Parameters:
// float                              CurrentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsPostProcess::OnContrastValueChanged(float CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsPostProcess", "OnContrastValueChanged");

	Params::UWTLOptionsPostProcess_OnContrastValueChanged_Params Parms{};

	Parms.CurrentValue = CurrentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLOptionsPostProcess.OnBlueBalanceValueChanged
// (Final, Native, Private)
// Parameters:
// float                              CurrentValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLOptionsPostProcess::OnBlueBalanceValueChanged(float CurrentValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLOptionsPostProcess", "OnBlueBalanceValueChanged");

	Params::UWTLOptionsPostProcess_OnBlueBalanceValueChanged_Params Parms{};

	Parms.CurrentValue = CurrentValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPawnMovementComponent
// (None)

class UClass* UWTLPawnMovementComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPawnMovementComponent");

	return Clss;
}


// WTLPawnMovementComponent WTL.Default__WTLPawnMovementComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPawnMovementComponent* UWTLPawnMovementComponent::GetDefaultObj()
{
	static class UWTLPawnMovementComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPawnMovementComponent*>(UWTLPawnMovementComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPawnMovementComponent.SetSpeed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              Speed                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPawnMovementComponent::SetSpeed(float Speed)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPawnMovementComponent", "SetSpeed");

	Params::UWTLPawnMovementComponent_SetSpeed_Params Parms{};

	Parms.Speed = Speed;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPawnMovementComponent.SetEnableGravity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPawnMovementComponent::SetEnableGravity(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPawnMovementComponent", "SetEnableGravity");

	Params::UWTLPawnMovementComponent_SetEnableGravity_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDA
// (Actor)

class UClass* AWTLPDA::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDA");

	return Clss;
}


// WTLPDA WTL.Default__WTLPDA
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLPDA* AWTLPDA::GetDefaultObj()
{
	static class AWTLPDA* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLPDA*>(AWTLPDA::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAAchievementItemBase
// (None)

class UClass* UWTLPDAAchievementItemBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAAchievementItemBase");

	return Clss;
}


// WTLPDAAchievementItemBase WTL.Default__WTLPDAAchievementItemBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAAchievementItemBase* UWTLPDAAchievementItemBase::GetDefaultObj()
{
	static class UWTLPDAAchievementItemBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAAchievementItemBase*>(UWTLPDAAchievementItemBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAAchievementItem
// (None)

class UClass* UWTLPDAAchievementItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAAchievementItem");

	return Clss;
}


// WTLPDAAchievementItem WTL.Default__WTLPDAAchievementItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAAchievementItem* UWTLPDAAchievementItem::GetDefaultObj()
{
	static class UWTLPDAAchievementItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAAchievementItem*>(UWTLPDAAchievementItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAAchievementItemSimple
// (None)

class UClass* UWTLPDAAchievementItemSimple::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAAchievementItemSimple");

	return Clss;
}


// WTLPDAAchievementItemSimple WTL.Default__WTLPDAAchievementItemSimple
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAAchievementItemSimple* UWTLPDAAchievementItemSimple::GetDefaultObj()
{
	static class UWTLPDAAchievementItemSimple* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAAchievementItemSimple*>(UWTLPDAAchievementItemSimple::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAAchievementItemSimpleToolTip
// (None)

class UClass* UWTLPDAAchievementItemSimpleToolTip::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAAchievementItemSimpleToolTip");

	return Clss;
}


// WTLPDAAchievementItemSimpleToolTip WTL.Default__WTLPDAAchievementItemSimpleToolTip
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAAchievementItemSimpleToolTip* UWTLPDAAchievementItemSimpleToolTip::GetDefaultObj()
{
	static class UWTLPDAAchievementItemSimpleToolTip* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAAchievementItemSimpleToolTip*>(UWTLPDAAchievementItemSimpleToolTip::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDABase
// (None)

class UClass* UWTLPDABase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDABase");

	return Clss;
}


// WTLPDABase WTL.Default__WTLPDABase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDABase* UWTLPDABase::GetDefaultObj()
{
	static class UWTLPDABase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDABase*>(UWTLPDABase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAAchievements
// (None)

class UClass* UWTLPDAAchievements::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAAchievements");

	return Clss;
}


// WTLPDAAchievements WTL.Default__WTLPDAAchievements
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAAchievements* UWTLPDAAchievements::GetDefaultObj()
{
	static class UWTLPDAAchievements* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAAchievements*>(UWTLPDAAchievements::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAAchievements.UpdateRarityAndAchievedPercentage
// (Final, Native, Private)
// Parameters:

void UWTLPDAAchievements::UpdateRarityAndAchievedPercentage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAAchievements", "UpdateRarityAndAchievedPercentage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAAchievements.OnSimplifiedViewCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAAchievements::OnSimplifiedViewCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAAchievements", "OnSimplifiedViewCheckStateChanged");

	Params::UWTLPDAAchievements_OnSimplifiedViewCheckStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAAchievements.OnAchievementsSimpleScrollBoxScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAAchievements::OnAchievementsSimpleScrollBoxScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAAchievements", "OnAchievementsSimpleScrollBoxScrolled");

	Params::UWTLPDAAchievements_OnAchievementsSimpleScrollBoxScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAAchievements.OnAchievementsScrollBoxScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAAchievements::OnAchievementsScrollBoxScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAAchievements", "OnAchievementsScrollBoxScrolled");

	Params::UWTLPDAAchievements_OnAchievementsScrollBoxScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAAchievementsHiddenCountBase
// (None)

class UClass* UWTLPDAAchievementsHiddenCountBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAAchievementsHiddenCountBase");

	return Clss;
}


// WTLPDAAchievementsHiddenCountBase WTL.Default__WTLPDAAchievementsHiddenCountBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAAchievementsHiddenCountBase* UWTLPDAAchievementsHiddenCountBase::GetDefaultObj()
{
	static class UWTLPDAAchievementsHiddenCountBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAAchievementsHiddenCountBase*>(UWTLPDAAchievementsHiddenCountBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAAchievementsHiddenCount
// (None)

class UClass* UWTLPDAAchievementsHiddenCount::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAAchievementsHiddenCount");

	return Clss;
}


// WTLPDAAchievementsHiddenCount WTL.Default__WTLPDAAchievementsHiddenCount
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAAchievementsHiddenCount* UWTLPDAAchievementsHiddenCount::GetDefaultObj()
{
	static class UWTLPDAAchievementsHiddenCount* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAAchievementsHiddenCount*>(UWTLPDAAchievementsHiddenCount::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDACharacterInfo
// (None)

class UClass* UWTLPDACharacterInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDACharacterInfo");

	return Clss;
}


// WTLPDACharacterInfo WTL.Default__WTLPDACharacterInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDACharacterInfo* UWTLPDACharacterInfo::GetDefaultObj()
{
	static class UWTLPDACharacterInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDACharacterInfo*>(UWTLPDACharacterInfo::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDACharacterInfo.OnSetPvPModeShowConfirmation
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterInfo::OnSetPvPModeShowConfirmation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterInfo", "OnSetPvPModeShowConfirmation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterInfo.OnSetPvPModeConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterInfo::OnSetPvPModeConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterInfo", "OnSetPvPModeConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterInfo.OnSetPvPModeButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterInfo::OnSetPvPModeButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterInfo", "OnSetPvPModeButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterInfo.OnFounderBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterInfo::OnFounderBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterInfo", "OnFounderBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterInfo.OnClanImageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterInfo::OnClanImageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterInfo", "OnClanImageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDACharacterParameters
// (None)

class UClass* UWTLPDACharacterParameters::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDACharacterParameters");

	return Clss;
}


// WTLPDACharacterParameters WTL.Default__WTLPDACharacterParameters
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDACharacterParameters* UWTLPDACharacterParameters::GetDefaultObj()
{
	static class UWTLPDACharacterParameters* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDACharacterParameters*>(UWTLPDACharacterParameters::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDACharacterParameters.SetConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterParameters::SetConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterParameters", "SetConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterParameters.OnSetBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterParameters::OnSetBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterParameters", "OnSetBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterParameters.OnResetToDefaultConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterParameters::OnResetToDefaultConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterParameters", "OnResetToDefaultConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterParameters.OnResetToDefaultBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterParameters::OnResetToDefaultBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterParameters", "OnResetToDefaultBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterParameters.OnResetBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterParameters::OnResetBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterParameters", "OnResetBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDASkillInfo
// (None)

class UClass* UWTLPDASkillInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDASkillInfo");

	return Clss;
}


// WTLPDASkillInfo WTL.Default__WTLPDASkillInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDASkillInfo* UWTLPDASkillInfo::GetDefaultObj()
{
	static class UWTLPDASkillInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDASkillInfo*>(UWTLPDASkillInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDACharacterSkillInfo
// (None)

class UClass* UWTLPDACharacterSkillInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDACharacterSkillInfo");

	return Clss;
}


// WTLPDACharacterSkillInfo WTL.Default__WTLPDACharacterSkillInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDACharacterSkillInfo* UWTLPDACharacterSkillInfo::GetDefaultObj()
{
	static class UWTLPDACharacterSkillInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDACharacterSkillInfo*>(UWTLPDACharacterSkillInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDACharacterSkills
// (None)

class UClass* UWTLPDACharacterSkills::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDACharacterSkills");

	return Clss;
}


// WTLPDACharacterSkills WTL.Default__WTLPDACharacterSkills
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDACharacterSkills* UWTLPDACharacterSkills::GetDefaultObj()
{
	static class UWTLPDACharacterSkills* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDACharacterSkills*>(UWTLPDACharacterSkills::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDACharacterSkills.OnTakeSkillConfirmed
// (Final, Native, Private)
// Parameters:
// uint16                             SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDACharacterSkills::OnTakeSkillConfirmed(uint16 SkillID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnTakeSkillConfirmed");

	Params::UWTLPDACharacterSkills_OnTakeSkillConfirmed_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterSkills.OnTakeSkillCanceled
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterSkills::OnTakeSkillCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnTakeSkillCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterSkills.OnTabBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDACharacterSkills::OnTabBtnClicked(uint8 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnTabBtnClicked");

	Params::UWTLPDACharacterSkills_OnTabBtnClicked_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterSkills.OnSkillItemUnhovered
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterSkills::OnSkillItemUnhovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnSkillItemUnhovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterSkills.OnSkillItemRemoved
// (Final, Native, Private)
// Parameters:
// uint16                             SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDACharacterSkills::OnSkillItemRemoved(uint16 SkillID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnSkillItemRemoved");

	Params::UWTLPDACharacterSkills_OnSkillItemRemoved_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterSkills.OnSkillItemHovered
// (Final, Native, Private, HasOutParams)
// Parameters:
// uint16                             SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLCharacterSkillItemData  SkillItemData                                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UWTLPDACharacterSkills::OnSkillItemHovered(uint16 SkillID, struct FWTLCharacterSkillItemData* SkillItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnSkillItemHovered");

	Params::UWTLPDACharacterSkills_OnSkillItemHovered_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SkillItemData != nullptr)
		*SkillItemData = std::move(Parms.SkillItemData);

}


// Function WTL.WTLPDACharacterSkills.OnSkillItemClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// uint16                             SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLCharacterSkillItemData  SkillItemData                                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UWTLPDACharacterSkills::OnSkillItemClicked(uint16 SkillID, struct FWTLCharacterSkillItemData* SkillItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnSkillItemClicked");

	Params::UWTLPDACharacterSkills_OnSkillItemClicked_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SkillItemData != nullptr)
		*SkillItemData = std::move(Parms.SkillItemData);

}


// Function WTL.WTLPDACharacterSkills.OnResetConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterSkills::OnResetConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnResetConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterSkills.OnResetBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterSkills::OnResetBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnResetBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterSkills.OnRemoveSkillConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterSkills::OnRemoveSkillConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnRemoveSkillConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterSkills.OnMessageDialogHide
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterSkills::OnMessageDialogHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkills", "OnMessageDialogHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDASkillsItem
// (None)

class UClass* UWTLPDASkillsItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDASkillsItem");

	return Clss;
}


// WTLPDASkillsItem WTL.Default__WTLPDASkillsItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDASkillsItem* UWTLPDASkillsItem::GetDefaultObj()
{
	static class UWTLPDASkillsItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDASkillsItem*>(UWTLPDASkillsItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDACharacterSkillsItem
// (None)

class UClass* UWTLPDACharacterSkillsItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDACharacterSkillsItem");

	return Clss;
}


// WTLPDACharacterSkillsItem WTL.Default__WTLPDACharacterSkillsItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDACharacterSkillsItem* UWTLPDACharacterSkillsItem::GetDefaultObj()
{
	static class UWTLPDACharacterSkillsItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDACharacterSkillsItem*>(UWTLPDACharacterSkillsItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDACharacterSkillsItem.OnSkillRemoved
// (Final, Native, Private)
// Parameters:

void UWTLPDACharacterSkillsItem::OnSkillRemoved()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkillsItem", "OnSkillRemoved");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterSkillsItem.OnMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsOpen                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDACharacterSkillsItem::OnMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkillsItem", "OnMenuOpenChanged");

	Params::UWTLPDACharacterSkillsItem_OnMenuOpenChanged_Params Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACharacterSkillsItem.OnGetPopupMenuContent
// (Final, Native, Private)
// Parameters:
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UWTLPDACharacterSkillsItem::OnGetPopupMenuContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACharacterSkillsItem", "OnGetPopupMenuContent");

	Params::UWTLPDACharacterSkillsItem_OnGetPopupMenuContent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLPDACharacterSkillsZone
// (None)

class UClass* UWTLPDACharacterSkillsZone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDACharacterSkillsZone");

	return Clss;
}


// WTLPDACharacterSkillsZone WTL.Default__WTLPDACharacterSkillsZone
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDACharacterSkillsZone* UWTLPDACharacterSkillsZone::GetDefaultObj()
{
	static class UWTLPDACharacterSkillsZone* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDACharacterSkillsZone*>(UWTLPDACharacterSkillsZone::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDASkillTakeConfirm
// (None)

class UClass* UWTLPDASkillTakeConfirm::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDASkillTakeConfirm");

	return Clss;
}


// WTLPDASkillTakeConfirm WTL.Default__WTLPDASkillTakeConfirm
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDASkillTakeConfirm* UWTLPDASkillTakeConfirm::GetDefaultObj()
{
	static class UWTLPDASkillTakeConfirm* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDASkillTakeConfirm*>(UWTLPDASkillTakeConfirm::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDASkillTakeConfirm.OnSkillLearnBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDASkillTakeConfirm::OnSkillLearnBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASkillTakeConfirm", "OnSkillLearnBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASkillTakeConfirm.OnCancelBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDASkillTakeConfirm::OnCancelBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASkillTakeConfirm", "OnCancelBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDACharacterSkillTakeConfirm
// (None)

class UClass* UWTLPDACharacterSkillTakeConfirm::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDACharacterSkillTakeConfirm");

	return Clss;
}


// WTLPDACharacterSkillTakeConfirm WTL.Default__WTLPDACharacterSkillTakeConfirm
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDACharacterSkillTakeConfirm* UWTLPDACharacterSkillTakeConfirm::GetDefaultObj()
{
	static class UWTLPDACharacterSkillTakeConfirm* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDACharacterSkillTakeConfirm*>(UWTLPDACharacterSkillTakeConfirm::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClan
// (None)

class UClass* UWTLPDAClan::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClan");

	return Clss;
}


// WTLPDAClan WTL.Default__WTLPDAClan
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClan* UWTLPDAClan::GetDefaultObj()
{
	static class UWTLPDAClan* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClan*>(UWTLPDAClan::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAClan.UpdateStatistics
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::UpdateStatistics()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "UpdateStatistics");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnTopFractionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnTopFractionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnTopFractionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnTopAllBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnTopAllBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnTopAllBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnTakeSkillConfirmed
// (Final, Native, Private)
// Parameters:
// uint16                             SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnTakeSkillConfirmed(uint16 SkillID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnTakeSkillConfirmed");

	Params::UWTLPDAClan_OnTakeSkillConfirmed_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnTakeSkillCanceled
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnTakeSkillCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnTakeSkillCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnTakeClanQuestBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnTakeClanQuestBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnTakeClanQuestBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnTakeAllClanQuestsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnTakeAllClanQuestsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnTakeAllClanQuestsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsTechnologyScoreSort
// (Final, Native, Private)
// Parameters:
// bool                               bIsSortAscending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnStatisticsTechnologyScoreSort(bool bIsSortAscending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsTechnologyScoreSort");

	Params::UWTLPDAClan_OnStatisticsTechnologyScoreSort_Params Parms{};

	Parms.bIsSortAscending = bIsSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsStartDateTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnStatisticsStartDateTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsStartDateTextBoxTextCommitted");

	Params::UWTLPDAClan_OnStatisticsStartDateTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsStartDateTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnStatisticsStartDateTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsStartDateTextBoxTextChanged");

	Params::UWTLPDAClan_OnStatisticsStartDateTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsRecordsScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnStatisticsRecordsScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsRecordsScrolled");

	Params::UWTLPDAClan_OnStatisticsRecordsScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsPvPScoreSort
// (Final, Native, Private)
// Parameters:
// bool                               bIsSortAscending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnStatisticsPvPScoreSort(bool bIsSortAscending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsPvPScoreSort");

	Params::UWTLPDAClan_OnStatisticsPvPScoreSort_Params Parms{};

	Parms.bIsSortAscending = bIsSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsPvEScoreSort
// (Final, Native, Private)
// Parameters:
// bool                               bIsSortAscending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnStatisticsPvEScoreSort(bool bIsSortAscending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsPvEScoreSort");

	Params::UWTLPDAClan_OnStatisticsPvEScoreSort_Params Parms{};

	Parms.bIsSortAscending = bIsSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsEndDateTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnStatisticsEndDateTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsEndDateTextBoxTextCommitted");

	Params::UWTLPDAClan_OnStatisticsEndDateTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsEndDateTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnStatisticsEndDateTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsEndDateTextBoxTextChanged");

	Params::UWTLPDAClan_OnStatisticsEndDateTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsCraftScoreSort
// (Final, Native, Private)
// Parameters:
// bool                               bIsSortAscending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnStatisticsCraftScoreSort(bool bIsSortAscending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsCraftScoreSort");

	Params::UWTLPDAClan_OnStatisticsCraftScoreSort_Params Parms{};

	Parms.bIsSortAscending = bIsSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnStatisticsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnStatisticsBackBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnStatisticsBackBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnStatisticsBackBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnSkillsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnSkillsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnSkillsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnSkillsBackBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnSkillsBackBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnSkillsBackBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnSkillItemUnhovered
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnSkillItemUnhovered()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnSkillItemUnhovered");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnSkillItemHovered
// (Final, Native, Private, HasOutParams)
// Parameters:
// uint8                              SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLClanSkillItemData       SkillItemData                                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnSkillItemHovered(uint8 SkillID, struct FWTLClanSkillItemData* SkillItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnSkillItemHovered");

	Params::UWTLPDAClan_OnSkillItemHovered_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SkillItemData != nullptr)
		*SkillItemData = std::move(Parms.SkillItemData);

}


// Function WTL.WTLPDAClan.OnSkillItemClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// uint8                              SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLClanSkillItemData       SkillItemData                                                    (Parm, OutParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnSkillItemClicked(uint8 SkillID, struct FWTLClanSkillItemData* SkillItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnSkillItemClicked");

	Params::UWTLPDAClan_OnSkillItemClicked_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (SkillItemData != nullptr)
		*SkillItemData = std::move(Parms.SkillItemData);

}


// Function WTL.WTLPDAClan.OnSkillCannotTakeErrorHide
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnSkillCannotTakeErrorHide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnSkillCannotTakeErrorHide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnShowClanTechBonusesBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnShowClanTechBonusesBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnShowClanTechBonusesBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnSendMailMessageToClanMembersResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLOperationResult         OperationResult                                                  (Parm, OutParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnSendMailMessageToClanMembersResponse(struct FWTLOperationResult* OperationResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnSendMailMessageToClanMembersResponse");

	Params::UWTLPDAClan_OnSendMailMessageToClanMembersResponse_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OperationResult != nullptr)
		*OperationResult = std::move(Parms.OperationResult);

}


// Function WTL.WTLPDAClan.OnSendInviteToClanCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnSendInviteToClanCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnSendInviteToClanCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnSendInviteToClanBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnSendInviteToClanBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnSendInviteToClanBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnScoreTypeToConvertSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnScoreTypeToConvertSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnScoreTypeToConvertSelectionChanged");

	Params::UWTLPDAClan_OnScoreTypeToConvertSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnScoreToConvertValueChange
// (Final, Native, Private)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnScoreToConvertValueChange(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnScoreToConvertValueChange");

	Params::UWTLPDAClan_OnScoreToConvertValueChange_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnScoreToConvertSendCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnScoreToConvertSendCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnScoreToConvertSendCommitted");

	Params::UWTLPDAClan_OnScoreToConvertSendCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnScoreStepPlusBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnScoreStepPlusBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnScoreStepPlusBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnScoreStepMinusBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnScoreStepMinusBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnScoreStepMinusBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnScoresConversionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnScoresConversionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnScoresConversionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnRenamePolicyGroupBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnRenamePolicyGroupBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnRenamePolicyGroupBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnRejectApplicationBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnRejectApplicationBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnRejectApplicationBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnPolicyGroupNameTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnPolicyGroupNameTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnPolicyGroupNameTextCommitted");

	Params::UWTLPDAClan_OnPolicyGroupNameTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnPolicyGroupNameTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        InText                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnPolicyGroupNameTextChanged(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnPolicyGroupNameTextChanged");

	Params::UWTLPDAClan_OnPolicyGroupNameTextChanged_Params Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnPolicyGroupItemClicked
// (Final, Native, Private, HasOutParams)
// Parameters:
// uint64                             PolicyGroupItemID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        PolicyGroupItemName                                              (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnPolicyGroupItemClicked(uint64 PolicyGroupItemID, class FText& PolicyGroupItemName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnPolicyGroupItemClicked");

	Params::UWTLPDAClan_OnPolicyGroupItemClicked_Params Parms{};

	Parms.PolicyGroupItemID = PolicyGroupItemID;
	Parms.PolicyGroupItemName = PolicyGroupItemName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnParametersBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnParametersBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnParametersBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnParametersBackBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnParametersBackBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnParametersBackBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnNotInClanInfoTabBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnNotInClanInfoTabBtnClicked(uint8 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnNotInClanInfoTabBtnClicked");

	Params::UWTLPDAClan_OnNotInClanInfoTabBtnClicked_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLogRecordsScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnLogRecordsScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLogRecordsScrolled");

	Params::UWTLPDAClan_OnLogRecordsScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLogRecordsPerPageSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnLogRecordsPerPageSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLogRecordsPerPageSelectionChanged");

	Params::UWTLPDAClan_OnLogRecordsPerPageSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLogPageSwitched
// (Final, Native, Private)
// Parameters:
// int32                              CurrentPageIndex                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnLogPageSwitched(int32 CurrentPageIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLogPageSwitched");

	Params::UWTLPDAClan_OnLogPageSwitched_Params Parms{};

	Parms.CurrentPageIndex = CurrentPageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLogBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnLogBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLogBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLogBackBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnLogBackBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLogBackBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLeaveClanConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnLeaveClanConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLeaveClanConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLeaveClanBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnLeaveClanBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLeaveClanBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLeaderboardReputationSort
// (Final, Native, Private)
// Parameters:
// bool                               bIsSortAscending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnLeaderboardReputationSort(bool bIsSortAscending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLeaderboardReputationSort");

	Params::UWTLPDAClan_OnLeaderboardReputationSort_Params Parms{};

	Parms.bIsSortAscending = bIsSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLeaderboardRatingSort
// (Final, Native, Private)
// Parameters:
// bool                               bIsSortAscending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnLeaderboardRatingSort(bool bIsSortAscending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLeaderboardRatingSort");

	Params::UWTLPDAClan_OnLeaderboardRatingSort_Params Parms{};

	Parms.bIsSortAscending = bIsSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLeaderboardPvPScoreSort
// (Final, Native, Private)
// Parameters:
// bool                               bIsSortAscending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnLeaderboardPvPScoreSort(bool bIsSortAscending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLeaderboardPvPScoreSort");

	Params::UWTLPDAClan_OnLeaderboardPvPScoreSort_Params Parms{};

	Parms.bIsSortAscending = bIsSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLeaderboardPvEScoreSort
// (Final, Native, Private)
// Parameters:
// bool                               bIsSortAscending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnLeaderboardPvEScoreSort(bool bIsSortAscending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLeaderboardPvEScoreSort");

	Params::UWTLPDAClan_OnLeaderboardPvEScoreSort_Params Parms{};

	Parms.bIsSortAscending = bIsSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLeaderboardMembersCountSort
// (Final, Native, Private)
// Parameters:
// bool                               bIsSortAscending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnLeaderboardMembersCountSort(bool bIsSortAscending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLeaderboardMembersCountSort");

	Params::UWTLPDAClan_OnLeaderboardMembersCountSort_Params Parms{};

	Parms.bIsSortAscending = bIsSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLeaderboardCraftScoreSort
// (Final, Native, Private)
// Parameters:
// bool                               bIsSortAscending                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnLeaderboardCraftScoreSort(bool bIsSortAscending)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLeaderboardCraftScoreSort");

	Params::UWTLPDAClan_OnLeaderboardCraftScoreSort_Params Parms{};

	Parms.bIsSortAscending = bIsSortAscending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLeaderboardBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnLeaderboardBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLeaderboardBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnLeaderboardBackBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnLeaderboardBackBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnLeaderboardBackBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnInviteToClanBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnInviteToClanBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnInviteToClanBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnGetClanLogRecordsCountResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnGetClanLogRecordsCountResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnGetClanLogRecordsCountResponse");

	Params::UWTLPDAClan_OnGetClanLogRecordsCountResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnGetClanLogPageResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnGetClanLogPageResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnGetClanLogPageResponse");

	Params::UWTLPDAClan_OnGetClanLogPageResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnExcludeMemberFromClanConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnExcludeMemberFromClanConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnExcludeMemberFromClanConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnExcludeMemberFromClanBtnClicked
// (Final, Native, Private)
// Parameters:
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnExcludeMemberFromClanBtnClicked(const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnExcludeMemberFromClanBtnClicked");

	Params::UWTLPDAClan_OnExcludeMemberFromClanBtnClicked_Params Parms{};

	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnDeletePolicyGroupConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnDeletePolicyGroupConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnDeletePolicyGroupConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnDeletePolicyGroupBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnDeletePolicyGroupBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnDeletePolicyGroupBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnCurrentScoreToConvertValueChange
// (Final, Native, Private)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnCurrentScoreToConvertValueChange(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnCurrentScoreToConvertValueChange");

	Params::UWTLPDAClan_OnCurrentScoreToConvertValueChange_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnCreatePolicyGroupBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnCreatePolicyGroupBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnCreatePolicyGroupBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnConvertScoresConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnConvertScoresConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnConvertScoresConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnConvertScoresCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnConvertScoresCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnConvertScoresCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnConvertScoresBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnConvertScoresBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnConvertScoresBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnConverterSliderValueChanged
// (Final, Native, Private)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnConverterSliderValueChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnConverterSliderValueChanged");

	Params::UWTLPDAClan_OnConverterSliderValueChanged_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnConvertedScoreTypeSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnConvertedScoreTypeSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnConvertedScoreTypeSelectionChanged");

	Params::UWTLPDAClan_OnConvertedScoreTypeSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnCloseLevelsInfoBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnCloseLevelsInfoBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnCloseLevelsInfoBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanTechBonusesScrollBoxUserScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnClanTechBonusesScrollBoxUserScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanTechBonusesScrollBoxUserScrolled");

	Params::UWTLPDAClan_OnClanTechBonusesScrollBoxUserScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanTabBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnClanTabBtnClicked(uint8 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanTabBtnClicked");

	Params::UWTLPDAClan_OnClanTabBtnClicked_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClansChanged
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClansChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClansChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanQuestItemClicked
// (Final, Native, Private)
// Parameters:
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnClanQuestItemClicked(int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanQuestItemClicked");

	Params::UWTLPDAClan_OnClanQuestItemClicked_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanQuestFilterCheckedState
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnClanQuestFilterCheckedState(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanQuestFilterCheckedState");

	Params::UWTLPDAClan_OnClanQuestFilterCheckedState_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanQuestDetailsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanQuestDetailsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanQuestDetailsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanPolicyGroupsChanged
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanPolicyGroupsChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanPolicyGroupsChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanMessageSendBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanMessageSendBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanMessageSendBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanMessageCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanMessageCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanMessageCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanMessageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanMessageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanMessageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanMembersChanged
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanMembersChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanMembersChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanLogTypeButtonClicked
// (Final, Native, Private)
// Parameters:
// uint8                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnClanLogTypeButtonClicked(uint8 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanLogTypeButtonClicked");

	Params::UWTLPDAClan_OnClanLogTypeButtonClicked_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanLevelsInfoBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanLevelsInfoBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanLevelsInfoBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanLeaderboardItemClicked
// (Final, Native, Private)
// Parameters:
// uint16                             ClanID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnClanLeaderboardItemClicked(uint16 ClanID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanLeaderboardItemClicked");

	Params::UWTLPDAClan_OnClanLeaderboardItemClicked_Params Parms{};

	Parms.ClanID = ClanID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanInfoBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanInfoBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanInfoBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanDescriptionSetBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanDescriptionSetBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanDescriptionSetBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanDescriptionCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanDescriptionCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanDescriptionCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanDescriptionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanDescriptionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanDescriptionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanApplicationsChanged
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanApplicationsChanged()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanApplicationsChanged");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanApplicationItemClicked
// (Final, Native, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnClanApplicationItemClicked(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanApplicationItemClicked");

	Params::UWTLPDAClan_OnClanApplicationItemClicked_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanApplicationCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanApplicationCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanApplicationCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanApplicationActionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnClanApplicationActionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanApplicationActionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnClanApplication
// (Final, Native, Public)
// Parameters:
// uint16                             ClanID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnClanApplication(uint16 ClanID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnClanApplication");

	Params::UWTLPDAClan_OnClanApplication_Params Parms{};

	Parms.ClanID = ClanID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnBackToClanQuestsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnBackToClanQuestsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnBackToClanQuestsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnBackToApplicationsBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnBackToApplicationsBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnBackToApplicationsBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnBackFromClanTechBonusesBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnBackFromClanTechBonusesBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnBackFromClanTechBonusesBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnAppointMemberAsClanLeaderConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnAppointMemberAsClanLeaderConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnAppointMemberAsClanLeaderConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnAppointMemberAsClanLeaderBtnClicked
// (Final, Native, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::OnAppointMemberAsClanLeaderBtnClicked(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnAppointMemberAsClanLeaderBtnClicked");

	Params::UWTLPDAClan_OnAppointMemberAsClanLeaderBtnClicked_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnActionPolicyGroupNameBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnActionPolicyGroupNameBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnActionPolicyGroupNameBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnActionCancelPolicyGroupNameBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnActionCancelPolicyGroupNameBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnActionCancelPolicyGroupNameBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.OnAcceptApplicationBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClan::OnAcceptApplicationBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "OnAcceptApplicationBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.ClanMessageTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::ClanMessageTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "ClanMessageTextBoxTextCommitted");

	Params::UWTLPDAClan_ClanMessageTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.ClanMessageTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::ClanMessageTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "ClanMessageTextBoxTextChanged");

	Params::UWTLPDAClan_ClanMessageTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.ClanMessageSubjectTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::ClanMessageSubjectTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "ClanMessageSubjectTextBoxTextCommitted");

	Params::UWTLPDAClan_ClanMessageSubjectTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.ClanMessageSubjectTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::ClanMessageSubjectTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "ClanMessageSubjectTextBoxTextChanged");

	Params::UWTLPDAClan_ClanMessageSubjectTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.ClanDescriptionTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::ClanDescriptionTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "ClanDescriptionTextBoxTextChanged");

	Params::UWTLPDAClan_ClanDescriptionTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.ClanApplicationCommentaryTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAClan::ClanApplicationCommentaryTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "ClanApplicationCommentaryTextBoxTextChanged");

	Params::UWTLPDAClan_ClanApplicationCommentaryTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClan.CharacterNameToInviteTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClan::CharacterNameToInviteTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClan", "CharacterNameToInviteTextBoxTextCommitted");

	Params::UWTLPDAClan_CharacterNameToInviteTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAClanApplicationItem
// (None)

class UClass* UWTLPDAClanApplicationItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanApplicationItem");

	return Clss;
}


// WTLPDAClanApplicationItem WTL.Default__WTLPDAClanApplicationItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanApplicationItem* UWTLPDAClanApplicationItem::GetDefaultObj()
{
	static class UWTLPDAClanApplicationItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanApplicationItem*>(UWTLPDAClanApplicationItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDALeaderboardItemBase
// (None)

class UClass* UWTLPDALeaderboardItemBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDALeaderboardItemBase");

	return Clss;
}


// WTLPDALeaderboardItemBase WTL.Default__WTLPDALeaderboardItemBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDALeaderboardItemBase* UWTLPDALeaderboardItemBase::GetDefaultObj()
{
	static class UWTLPDALeaderboardItemBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDALeaderboardItemBase*>(UWTLPDALeaderboardItemBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClanLeaderboardItem
// (None)

class UClass* UWTLPDAClanLeaderboardItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanLeaderboardItem");

	return Clss;
}


// WTLPDAClanLeaderboardItem WTL.Default__WTLPDAClanLeaderboardItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanLeaderboardItem* UWTLPDAClanLeaderboardItem::GetDefaultObj()
{
	static class UWTLPDAClanLeaderboardItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanLeaderboardItem*>(UWTLPDAClanLeaderboardItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAClanLeaderboardItem.OnClanApplicationBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClanLeaderboardItem::OnClanApplicationBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClanLeaderboardItem", "OnClanApplicationBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAClanLevelInfo
// (None)

class UClass* UWTLPDAClanLevelInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanLevelInfo");

	return Clss;
}


// WTLPDAClanLevelInfo WTL.Default__WTLPDAClanLevelInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanLevelInfo* UWTLPDAClanLevelInfo::GetDefaultObj()
{
	static class UWTLPDAClanLevelInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanLevelInfo*>(UWTLPDAClanLevelInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClanLogRecord
// (None)

class UClass* UWTLPDAClanLogRecord::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanLogRecord");

	return Clss;
}


// WTLPDAClanLogRecord WTL.Default__WTLPDAClanLogRecord
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanLogRecord* UWTLPDAClanLogRecord::GetDefaultObj()
{
	static class UWTLPDAClanLogRecord* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanLogRecord*>(UWTLPDAClanLogRecord::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClanMemberItem
// (None)

class UClass* UWTLPDAClanMemberItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanMemberItem");

	return Clss;
}


// WTLPDAClanMemberItem WTL.Default__WTLPDAClanMemberItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanMemberItem* UWTLPDAClanMemberItem::GetDefaultObj()
{
	static class UWTLPDAClanMemberItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanMemberItem*>(UWTLPDAClanMemberItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAClanMemberItem.RemoveFromDeputyClanLeaderBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClanMemberItem::RemoveFromDeputyClanLeaderBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClanMemberItem", "RemoveFromDeputyClanLeaderBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClanMemberItem.OnMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsOpen                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClanMemberItem::OnMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClanMemberItem", "OnMenuOpenChanged");

	Params::UWTLPDAClanMemberItem_OnMenuOpenChanged_Params Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClanMemberItem.OnGetPopupMenuContent
// (Final, Native, Private)
// Parameters:
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UWTLPDAClanMemberItem::OnGetPopupMenuContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClanMemberItem", "OnGetPopupMenuContent");

	Params::UWTLPDAClanMemberItem_OnGetPopupMenuContent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLPDAClanMemberItem.ExcludeFromClanBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClanMemberItem::ExcludeFromClanBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClanMemberItem", "ExcludeFromClanBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClanMemberItem.AssignPolicyGroupToClanMember
// (Final, Native, Private)
// Parameters:
// uint64                             PolicyGroupID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAClanMemberItem::AssignPolicyGroupToClanMember(uint64 PolicyGroupID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClanMemberItem", "AssignPolicyGroupToClanMember");

	Params::UWTLPDAClanMemberItem_AssignPolicyGroupToClanMember_Params Parms{};

	Parms.PolicyGroupID = PolicyGroupID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClanMemberItem.AssignPolicyGroupBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClanMemberItem::AssignPolicyGroupBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClanMemberItem", "AssignPolicyGroupBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClanMemberItem.AppointAsDeputyClanLeaderBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClanMemberItem::AppointAsDeputyClanLeaderBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClanMemberItem", "AppointAsDeputyClanLeaderBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAClanMemberItem.AppointAsClanLeaderBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAClanMemberItem::AppointAsClanLeaderBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAClanMemberItem", "AppointAsClanLeaderBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAClanPolicyGroupItem
// (None)

class UClass* UWTLPDAClanPolicyGroupItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanPolicyGroupItem");

	return Clss;
}


// WTLPDAClanPolicyGroupItem WTL.Default__WTLPDAClanPolicyGroupItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanPolicyGroupItem* UWTLPDAClanPolicyGroupItem::GetDefaultObj()
{
	static class UWTLPDAClanPolicyGroupItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanPolicyGroupItem*>(UWTLPDAClanPolicyGroupItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClanQuestListItem
// (None)

class UClass* UWTLPDAClanQuestListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanQuestListItem");

	return Clss;
}


// WTLPDAClanQuestListItem WTL.Default__WTLPDAClanQuestListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanQuestListItem* UWTLPDAClanQuestListItem::GetDefaultObj()
{
	static class UWTLPDAClanQuestListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanQuestListItem*>(UWTLPDAClanQuestListItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClanSkillInfo
// (None)

class UClass* UWTLPDAClanSkillInfo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanSkillInfo");

	return Clss;
}


// WTLPDAClanSkillInfo WTL.Default__WTLPDAClanSkillInfo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanSkillInfo* UWTLPDAClanSkillInfo::GetDefaultObj()
{
	static class UWTLPDAClanSkillInfo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanSkillInfo*>(UWTLPDAClanSkillInfo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClanSkillsItem
// (None)

class UClass* UWTLPDAClanSkillsItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanSkillsItem");

	return Clss;
}


// WTLPDAClanSkillsItem WTL.Default__WTLPDAClanSkillsItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanSkillsItem* UWTLPDAClanSkillsItem::GetDefaultObj()
{
	static class UWTLPDAClanSkillsItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanSkillsItem*>(UWTLPDAClanSkillsItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClanSkillsLevelCaption
// (None)

class UClass* UWTLPDAClanSkillsLevelCaption::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanSkillsLevelCaption");

	return Clss;
}


// WTLPDAClanSkillsLevelCaption WTL.Default__WTLPDAClanSkillsLevelCaption
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanSkillsLevelCaption* UWTLPDAClanSkillsLevelCaption::GetDefaultObj()
{
	static class UWTLPDAClanSkillsLevelCaption* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanSkillsLevelCaption*>(UWTLPDAClanSkillsLevelCaption::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClanSkillTakeConfirm
// (None)

class UClass* UWTLPDAClanSkillTakeConfirm::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanSkillTakeConfirm");

	return Clss;
}


// WTLPDAClanSkillTakeConfirm WTL.Default__WTLPDAClanSkillTakeConfirm
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanSkillTakeConfirm* UWTLPDAClanSkillTakeConfirm::GetDefaultObj()
{
	static class UWTLPDAClanSkillTakeConfirm* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanSkillTakeConfirm*>(UWTLPDAClanSkillTakeConfirm::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClanStatisticsRecord
// (None)

class UClass* UWTLPDAClanStatisticsRecord::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanStatisticsRecord");

	return Clss;
}


// WTLPDAClanStatisticsRecord WTL.Default__WTLPDAClanStatisticsRecord
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanStatisticsRecord* UWTLPDAClanStatisticsRecord::GetDefaultObj()
{
	static class UWTLPDAClanStatisticsRecord* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanStatisticsRecord*>(UWTLPDAClanStatisticsRecord::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAClanTechBonus
// (None)

class UClass* UWTLPDAClanTechBonus::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAClanTechBonus");

	return Clss;
}


// WTLPDAClanTechBonus WTL.Default__WTLPDAClanTechBonus
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAClanTechBonus* UWTLPDAClanTechBonus::GetDefaultObj()
{
	static class UWTLPDAClanTechBonus* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAClanTechBonus*>(UWTLPDAClanTechBonus::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDACraftRecipes
// (None)

class UClass* UWTLPDACraftRecipes::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDACraftRecipes");

	return Clss;
}


// WTLPDACraftRecipes WTL.Default__WTLPDACraftRecipes
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDACraftRecipes* UWTLPDACraftRecipes::GetDefaultObj()
{
	static class UWTLPDACraftRecipes* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDACraftRecipes*>(UWTLPDACraftRecipes::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDACraftRecipes.OnCraftWindowItemClicked
// (Final, Native, Private)
// Parameters:
// int32                              CraftItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDACraftRecipes::OnCraftWindowItemClicked(int32 CraftItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACraftRecipes", "OnCraftWindowItemClicked");

	Params::UWTLPDACraftRecipes_OnCraftWindowItemClicked_Params Parms{};

	Parms.CraftItemID = CraftItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDACraftRecipes.OnCraftTypeSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDACraftRecipes::OnCraftTypeSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDACraftRecipes", "OnCraftTypeSelectionChanged");

	Params::UWTLPDACraftRecipes_OnCraftTypeSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDADataSync
// (None)

class UClass* UWTLPDADataSync::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDADataSync");

	return Clss;
}


// WTLPDADataSync WTL.Default__WTLPDADataSync
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDADataSync* UWTLPDADataSync::GetDefaultObj()
{
	static class UWTLPDADataSync* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDADataSync*>(UWTLPDADataSync::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDADataSync.OnSyncAnimationFinished
// (Final, Native, Private)
// Parameters:

void UWTLPDADataSync::OnSyncAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDADataSync", "OnSyncAnimationFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAFraction
// (None)

class UClass* UWTLPDAFraction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAFraction");

	return Clss;
}


// WTLPDAFraction WTL.Default__WTLPDAFraction
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAFraction* UWTLPDAFraction::GetDefaultObj()
{
	static class UWTLPDAFraction* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAFraction*>(UWTLPDAFraction::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAFraction.OnRanksTableBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnRanksTableBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnRanksTableBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaveFractionConfirmedFinal
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaveFractionConfirmedFinal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaveFractionConfirmedFinal");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaveFractionConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaveFractionConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaveFractionConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaveFractionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaveFractionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaveFractionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardPeriodYearBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardPeriodYearBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardPeriodYearBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardPeriodWeekBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardPeriodWeekBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardPeriodWeekBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardPeriodScrollBoxScrolled
// (Final, Native, Private)
// Parameters:
// float                              CurrentOffset                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAFraction::OnLeaderboardPeriodScrollBoxScrolled(float CurrentOffset)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardPeriodScrollBoxScrolled");

	Params::UWTLPDAFraction_OnLeaderboardPeriodScrollBoxScrolled_Params Parms{};

	Parms.CurrentOffset = CurrentOffset;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardPeriodQuarterBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardPeriodQuarterBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardPeriodQuarterBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardPeriodMonthBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardPeriodMonthBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardPeriodMonthBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardPeriodBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardPeriodBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardPeriodBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardPeriodBackBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardPeriodBackBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardPeriodBackBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardAllTimeUpdated
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardAllTimeUpdated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardAllTimeUpdated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardAllTimeTopFractionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardAllTimeTopFractionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardAllTimeTopFractionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardAllTimeTopAllBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardAllTimeTopAllBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardAllTimeTopAllBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardAllTimeBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardAllTimeBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardAllTimeBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnLeaderboardAllTimeBackBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnLeaderboardAllTimeBackBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnLeaderboardAllTimeBackBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFraction.OnBackToRankInfoBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFraction::OnBackToRankInfoBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFraction", "OnBackToRankInfoBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAFractionLeaderboardItem
// (None)

class UClass* UWTLPDAFractionLeaderboardItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAFractionLeaderboardItem");

	return Clss;
}


// WTLPDAFractionLeaderboardItem WTL.Default__WTLPDAFractionLeaderboardItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAFractionLeaderboardItem* UWTLPDAFractionLeaderboardItem::GetDefaultObj()
{
	static class UWTLPDAFractionLeaderboardItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAFractionLeaderboardItem*>(UWTLPDAFractionLeaderboardItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAFractionLeaderboardPeriodItem
// (None)

class UClass* UWTLPDAFractionLeaderboardPeriodItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAFractionLeaderboardPeriodItem");

	return Clss;
}


// WTLPDAFractionLeaderboardPeriodItem WTL.Default__WTLPDAFractionLeaderboardPeriodItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAFractionLeaderboardPeriodItem* UWTLPDAFractionLeaderboardPeriodItem::GetDefaultObj()
{
	static class UWTLPDAFractionLeaderboardPeriodItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAFractionLeaderboardPeriodItem*>(UWTLPDAFractionLeaderboardPeriodItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAFractionRanksTableItem
// (None)

class UClass* UWTLPDAFractionRanksTableItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAFractionRanksTableItem");

	return Clss;
}


// WTLPDAFractionRanksTableItem WTL.Default__WTLPDAFractionRanksTableItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAFractionRanksTableItem* UWTLPDAFractionRanksTableItem::GetDefaultObj()
{
	static class UWTLPDAFractionRanksTableItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAFractionRanksTableItem*>(UWTLPDAFractionRanksTableItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAFriendsAndEnemies
// (None)

class UClass* UWTLPDAFriendsAndEnemies::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAFriendsAndEnemies");

	return Clss;
}


// WTLPDAFriendsAndEnemies WTL.Default__WTLPDAFriendsAndEnemies
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAFriendsAndEnemies* UWTLPDAFriendsAndEnemies::GetDefaultObj()
{
	static class UWTLPDAFriendsAndEnemies* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAFriendsAndEnemies*>(UWTLPDAFriendsAndEnemies::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAFriendsAndEnemies.SendMessageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFriendsAndEnemies::SendMessageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "SendMessageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.RemoveContactConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDAFriendsAndEnemies::RemoveContactConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "RemoveContactConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.RemoveBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFriendsAndEnemies::RemoveBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "RemoveBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.OnGetCharacterIDByNameResponseWaitingEnd
// (Final, Native, Private)
// Parameters:

void UWTLPDAFriendsAndEnemies::OnGetCharacterIDByNameResponseWaitingEnd()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "OnGetCharacterIDByNameResponseWaitingEnd");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.OnGetCharacterIDByNameResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAFriendsAndEnemies::OnGetCharacterIDByNameResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "OnGetCharacterIDByNameResponse");

	Params::UWTLPDAFriendsAndEnemies_OnGetCharacterIDByNameResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.OnFriendsAndEnemiesListItemClicked
// (Final, Native, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAFriendsAndEnemies::OnFriendsAndEnemiesListItemClicked(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "OnFriendsAndEnemiesListItemClicked");

	Params::UWTLPDAFriendsAndEnemies_OnFriendsAndEnemiesListItemClicked_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.OnDescriptionTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        InText                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAFriendsAndEnemies::OnDescriptionTextChanged(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "OnDescriptionTextChanged");

	Params::UWTLPDAFriendsAndEnemies_OnDescriptionTextChanged_Params Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.OnContactTypeFilterSelectionChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAFriendsAndEnemies::OnContactTypeFilterSelectionChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "OnContactTypeFilterSelectionChanged");

	Params::UWTLPDAFriendsAndEnemies_OnContactTypeFilterSelectionChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.OnCharacterNameTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAFriendsAndEnemies::OnCharacterNameTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "OnCharacterNameTextCommitted");

	Params::UWTLPDAFriendsAndEnemies_OnCharacterNameTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.OnCharacterNameTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        InText                                                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAFriendsAndEnemies::OnCharacterNameTextChanged(class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "OnCharacterNameTextChanged");

	Params::UWTLPDAFriendsAndEnemies_OnCharacterNameTextChanged_Params Parms{};

	Parms.InText = InText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.InviteToGroupBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFriendsAndEnemies::InviteToGroupBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "InviteToGroupBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.EditBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFriendsAndEnemies::EditBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "EditBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.CancelActionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFriendsAndEnemies::CancelActionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "CancelActionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.AddCharacterBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFriendsAndEnemies::AddCharacterBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "AddCharacterBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAFriendsAndEnemies.ActionBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAFriendsAndEnemies::ActionBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAFriendsAndEnemies", "ActionBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAFriendsAndEnemiesListItem
// (None)

class UClass* UWTLPDAFriendsAndEnemiesListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAFriendsAndEnemiesListItem");

	return Clss;
}


// WTLPDAFriendsAndEnemiesListItem WTL.Default__WTLPDAFriendsAndEnemiesListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAFriendsAndEnemiesListItem* UWTLPDAFriendsAndEnemiesListItem::GetDefaultObj()
{
	static class UWTLPDAFriendsAndEnemiesListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAFriendsAndEnemiesListItem*>(UWTLPDAFriendsAndEnemiesListItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAGroup
// (None)

class UClass* UWTLPDAGroup::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAGroup");

	return Clss;
}


// WTLPDAGroup WTL.Default__WTLPDAGroup
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAGroup* UWTLPDAGroup::GetDefaultObj()
{
	static class UWTLPDAGroup* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAGroup*>(UWTLPDAGroup::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAGroup.OnSetGroupNameCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnSetGroupNameCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnSetGroupNameCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnSetGroupNameBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnSetGroupNameBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnSetGroupNameBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnSetGroupLeaderConfirm
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnSetGroupLeaderConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnSetGroupLeaderConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnSetGroupLeader
// (Final, Native, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAGroup::OnSetGroupLeader(uint64 CharacterID, const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnSetGroupLeader");

	Params::UWTLPDAGroup_OnSetGroupLeader_Params Parms{};

	Parms.CharacterID = CharacterID;
	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnSendInviteToGroupCancelBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnSendInviteToGroupCancelBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnSendInviteToGroupCancelBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnSendInviteToGroupBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnSendInviteToGroupBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnSendInviteToGroupBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnSendGroupMessageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnSendGroupMessageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnSendGroupMessageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnLeaveGroupConfirm
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnLeaveGroupConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnLeaveGroupConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnLeaveGroupBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnLeaveGroupBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnLeaveGroupBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnInviteToGroupBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnInviteToGroupBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnInviteToGroupBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnGroupMemberShowInfo
// (Final, Native, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAGroup::OnGroupMemberShowInfo(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnGroupMemberShowInfo");

	Params::UWTLPDAGroup_OnGroupMemberShowInfo_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnGroupMemberSendMessage
// (Final, Native, Private)
// Parameters:
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAGroup::OnGroupMemberSendMessage(const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnGroupMemberSendMessage");

	Params::UWTLPDAGroup_OnGroupMemberSendMessage_Params Parms{};

	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnExcludeGroupMemberConfirm
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnExcludeGroupMemberConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnExcludeGroupMemberConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnExcludeGroupMember
// (Final, Native, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAGroup::OnExcludeGroupMember(uint64 CharacterID, const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnExcludeGroupMember");

	Params::UWTLPDAGroup_OnExcludeGroupMember_Params Parms{};

	Parms.CharacterID = CharacterID;
	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnDeclineGroupInvite
// (Final, Native, Private)
// Parameters:
// uint64                             InviteID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAGroup::OnDeclineGroupInvite(uint64 InviteID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnDeclineGroupInvite");

	Params::UWTLPDAGroup_OnDeclineGroupInvite_Params Parms{};

	Parms.InviteID = InviteID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnCreateGroupBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnCreateGroupBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnCreateGroupBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnChangeGroupNameBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroup::OnChangeGroupNameBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnChangeGroupNameBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.OnAcceptGroupInvite
// (Final, Native, Private)
// Parameters:
// uint64                             InviteID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAGroup::OnAcceptGroupInvite(uint64 InviteID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "OnAcceptGroupInvite");

	Params::UWTLPDAGroup_OnAcceptGroupInvite_Params Parms{};

	Parms.InviteID = InviteID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.GroupNameTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAGroup::GroupNameTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "GroupNameTextBoxTextCommitted");

	Params::UWTLPDAGroup_GroupNameTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.GroupNameTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAGroup::GroupNameTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "GroupNameTextBoxTextChanged");

	Params::UWTLPDAGroup_GroupNameTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroup.CharacterNameToInviteTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAGroup::CharacterNameToInviteTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroup", "CharacterNameToInviteTextBoxTextCommitted");

	Params::UWTLPDAGroup_CharacterNameToInviteTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAGroupInviteItem
// (None)

class UClass* UWTLPDAGroupInviteItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAGroupInviteItem");

	return Clss;
}


// WTLPDAGroupInviteItem WTL.Default__WTLPDAGroupInviteItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAGroupInviteItem* UWTLPDAGroupInviteItem::GetDefaultObj()
{
	static class UWTLPDAGroupInviteItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAGroupInviteItem*>(UWTLPDAGroupInviteItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAGroupInviteItem.OnDeclineBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroupInviteItem::OnDeclineBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroupInviteItem", "OnDeclineBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroupInviteItem.OnAcceptBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroupInviteItem::OnAcceptBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroupInviteItem", "OnAcceptBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAGroupMemberItem
// (None)

class UClass* UWTLPDAGroupMemberItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAGroupMemberItem");

	return Clss;
}


// WTLPDAGroupMemberItem WTL.Default__WTLPDAGroupMemberItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAGroupMemberItem* UWTLPDAGroupMemberItem::GetDefaultObj()
{
	static class UWTLPDAGroupMemberItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAGroupMemberItem*>(UWTLPDAGroupMemberItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAGroupMemberItem.OnSetLeaderBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroupMemberItem::OnSetLeaderBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroupMemberItem", "OnSetLeaderBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroupMemberItem.OnSendMessageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroupMemberItem::OnSendMessageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroupMemberItem", "OnSendMessageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroupMemberItem.OnInfoBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroupMemberItem::OnInfoBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroupMemberItem", "OnInfoBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAGroupMemberItem.OnExcludeBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAGroupMemberItem::OnExcludeBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAGroupMemberItem", "OnExcludeBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAItemExperience
// (None)

class UClass* UWTLPDAItemExperience::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAItemExperience");

	return Clss;
}


// WTLPDAItemExperience WTL.Default__WTLPDAItemExperience
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAItemExperience* UWTLPDAItemExperience::GetDefaultObj()
{
	static class UWTLPDAItemExperience* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAItemExperience*>(UWTLPDAItemExperience::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAItemExperience.OnBtnClickWeapon
// (Final, Native, Protected)
// Parameters:

void UWTLPDAItemExperience::OnBtnClickWeapon()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAItemExperience", "OnBtnClickWeapon");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDALegendItem
// (None)

class UClass* UWTLPDALegendItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDALegendItem");

	return Clss;
}


// WTLPDALegendItem WTL.Default__WTLPDALegendItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDALegendItem* UWTLPDALegendItem::GetDefaultObj()
{
	static class UWTLPDALegendItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDALegendItem*>(UWTLPDALegendItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDALocationsListItem
// (None)

class UClass* UWTLPDALocationsListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDALocationsListItem");

	return Clss;
}


// WTLPDALocationsListItem WTL.Default__WTLPDALocationsListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDALocationsListItem* UWTLPDALocationsListItem::GetDefaultObj()
{
	static class UWTLPDALocationsListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDALocationsListItem*>(UWTLPDALocationsListItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAMail
// (None)

class UClass* UWTLPDAMail::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMail");

	return Clss;
}


// WTLPDAMail WTL.Default__WTLPDAMail
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMail* UWTLPDAMail::GetDefaultObj()
{
	static class UWTLPDAMail* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMail*>(UWTLPDAMail::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAMail.OnWriteMessageTipBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAMail::OnWriteMessageTipBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnWriteMessageTipBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnWriteMessageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAMail::OnWriteMessageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnWriteMessageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnSendMessageResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLOperationResult         OperationResult                                                  (Parm, OutParm, NativeAccessSpecifierPublic)

void UWTLPDAMail::OnSendMessageResponse(struct FWTLOperationResult* OperationResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnSendMessageResponse");

	Params::UWTLPDAMail_OnSendMessageResponse_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OperationResult != nullptr)
		*OperationResult = std::move(Parms.OperationResult);

}


// Function WTL.WTLPDAMail.OnSendMessageBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAMail::OnSendMessageBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnSendMessageBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnSelectorCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMail::OnSelectorCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnSelectorCheckStateChanged");

	Params::UWTLPDAMail_OnSelectorCheckStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnMessageToTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAMail::OnMessageToTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnMessageToTextChanged");

	Params::UWTLPDAMail_OnMessageToTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnMessageTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAMail::OnMessageTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnMessageTextChanged");

	Params::UWTLPDAMail_OnMessageTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnMessageSubjectTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAMail::OnMessageSubjectTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnMessageSubjectTextChanged");

	Params::UWTLPDAMail_OnMessageSubjectTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnMarkAsReadBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAMail::OnMarkAsReadBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnMarkAsReadBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnMailMessageClicked
// (Final, Native, Private)
// Parameters:
// uint64                             MessageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMail::OnMailMessageClicked(uint64 MessageID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnMailMessageClicked");

	Params::UWTLPDAMail_OnMailMessageClicked_Params Parms{};

	Parms.MessageID = MessageID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnMailMessageChecked
// (Final, Native, Private)
// Parameters:
// uint64                             MessageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsChecked                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsRead                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMail::OnMailMessageChecked(uint64 MessageID, bool IsChecked, bool IsRead)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnMailMessageChecked");

	Params::UWTLPDAMail_OnMailMessageChecked_Params Parms{};

	Parms.MessageID = MessageID;
	Parms.IsChecked = IsChecked;
	Parms.IsRead = IsRead;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnFilterValueChanged
// (Final, Native, Private)
// Parameters:
// class FString                      SelectedOption                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class ESelectInfo             SelectionType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMail::OnFilterValueChanged(const class FString& SelectedOption, enum class ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnFilterValueChanged");

	Params::UWTLPDAMail_OnFilterValueChanged_Params Parms{};

	Parms.SelectedOption = SelectedOption;
	Parms.SelectionType = SelectionType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnDeleteOpenConfirm
// (Final, Native, Private)
// Parameters:

void UWTLPDAMail::OnDeleteOpenConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnDeleteOpenConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnDeleteOpenBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAMail::OnDeleteOpenBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnDeleteOpenBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnDeleteConfirm
// (Final, Native, Private)
// Parameters:

void UWTLPDAMail::OnDeleteConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnDeleteConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMail.OnDeleteBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAMail::OnDeleteBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMail", "OnDeleteBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAMailMessageItem
// (None)

class UClass* UWTLPDAMailMessageItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMailMessageItem");

	return Clss;
}


// WTLPDAMailMessageItem WTL.Default__WTLPDAMailMessageItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMailMessageItem* UWTLPDAMailMessageItem::GetDefaultObj()
{
	static class UWTLPDAMailMessageItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMailMessageItem*>(UWTLPDAMailMessageItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAMailMessageItem.OnSelectCheckStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMailMessageItem::OnSelectCheckStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMailMessageItem", "OnSelectCheckStateChanged");

	Params::UWTLPDAMailMessageItem_OnSelectCheckStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAMain
// (None)

class UClass* UWTLPDAMain::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMain");

	return Clss;
}


// WTLPDAMain WTL.Default__WTLPDAMain
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMain* UWTLPDAMain::GetDefaultObj()
{
	static class UWTLPDAMain* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMain*>(UWTLPDAMain::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAMain.ShowPDAWidget
// (Final, Native, Private)
// Parameters:
// enum class EWTLPDAWidget           PDAWidget                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMain::ShowPDAWidget(enum class EWTLPDAWidget PDAWidget)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "ShowPDAWidget");

	Params::UWTLPDAMain_ShowPDAWidget_Params Parms{};

	Parms.PDAWidget = PDAWidget;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMain.PlayRandomSecondIndicatorAnimation
// (Final, Native, Private)
// Parameters:

void UWTLPDAMain::PlayRandomSecondIndicatorAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "PlayRandomSecondIndicatorAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMain.PlayRandomFirstIndicatorAnimation
// (Final, Native, Private)
// Parameters:

void UWTLPDAMain::PlayRandomFirstIndicatorAnimation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "PlayRandomFirstIndicatorAnimation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMain.OnSocialNetworkClicked
// (Final, Native, Private)
// Parameters:
// enum class EWTLSocialNetworkType   SocialNetworkType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLPDAWidget           PDAWidgetType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMain::OnSocialNetworkClicked(enum class EWTLSocialNetworkType SocialNetworkType, enum class EWTLPDAWidget PDAWidgetType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "OnSocialNetworkClicked");

	Params::UWTLPDAMain_OnSocialNetworkClicked_Params Parms{};

	Parms.SocialNetworkType = SocialNetworkType;
	Parms.PDAWidgetType = PDAWidgetType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMain.OnSecondIndicatorAnimationFinished
// (Final, Native, Private)
// Parameters:

void UWTLPDAMain::OnSecondIndicatorAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "OnSecondIndicatorAnimationFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMain.OnPDAUpButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAMain::OnPDAUpButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "OnPDAUpButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMain.OnPDADownButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAMain::OnPDADownButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "OnPDADownButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMain.OnPDACircleButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAMain::OnPDACircleButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "OnPDACircleButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMain.OnHomeButtonClick
// (Final, Native, Private)
// Parameters:

void UWTLPDAMain::OnHomeButtonClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "OnHomeButtonClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMain.OnFirstIndicatorAnimationFinished
// (Final, Native, Private)
// Parameters:

void UWTLPDAMain::OnFirstIndicatorAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "OnFirstIndicatorAnimationFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMain.OnBackgroundMouseButtonDown
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FEventReply                 ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FEventReply UWTLPDAMain::OnBackgroundMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMain", "OnBackgroundMouseButtonDown");

	Params::UWTLPDAMain_OnBackgroundMouseButtonDown_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLPDAMap
// (None)

class UClass* UWTLPDAMap::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMap");

	return Clss;
}


// WTLPDAMap WTL.Default__WTLPDAMap
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMap* UWTLPDAMap::GetDefaultObj()
{
	static class UWTLPDAMap* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMap*>(UWTLPDAMap::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAMap.UpdatePlayerMarkers
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::UpdatePlayerMarkers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "UpdatePlayerMarkers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.ShowPlayerMarkerParameters
// (Final, Native, Private)
// Parameters:
// int32                              MarkerIndex                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MarkerName                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SubTypeNumber                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MarkerColor                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsSticking                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::ShowPlayerMarkerParameters(int32 MarkerIndex, const class FString& MarkerName, uint8 SubTypeNumber, const class FString& MarkerColor, bool IsSticking)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "ShowPlayerMarkerParameters");

	Params::UWTLPDAMap_ShowPlayerMarkerParameters_Params Parms{};

	Parms.MarkerIndex = MarkerIndex;
	Parms.MarkerName = MarkerName;
	Parms.SubTypeNumber = SubTypeNumber;
	Parms.MarkerColor = MarkerColor;
	Parms.IsSticking = IsSticking;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.ShowHidePlayerMarkers
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::ShowHidePlayerMarkers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "ShowHidePlayerMarkers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.ShowHideLocationsList
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::ShowHideLocationsList()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "ShowHideLocationsList");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.ShowHideLegend
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::ShowHideLegend()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "ShowHideLegend");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.ShowAllMarkerItemsCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::ShowAllMarkerItemsCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "ShowAllMarkerItemsCheckBoxStateChanged");

	Params::UWTLPDAMap_ShowAllMarkerItemsCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.SetMarkerCancelBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::SetMarkerCancelBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "SetMarkerCancelBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.SetMarkerBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::SetMarkerBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "SetMarkerBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.RemoveAllPlayerMarkersConfirmed
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::RemoveAllPlayerMarkersConfirmed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "RemoveAllPlayerMarkersConfirmed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.RemoveAllPlayerMarkersBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::RemoveAllPlayerMarkersBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "RemoveAllPlayerMarkersBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnZoomSliderValueChanged
// (Final, Native, Private)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnZoomSliderValueChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnZoomSliderValueChanged");

	Params::UWTLPDAMap_OnZoomSliderValueChanged_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMenuOpenChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsOpen                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnMenuOpenChanged(bool bIsOpen)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMenuOpenChanged");

	Params::UWTLPDAMap_OnMenuOpenChanged_Params Parms{};

	Parms.bIsOpen = bIsOpen;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMarkerSubTypeItemClick
// (Final, Native, Private, HasOutParams)
// Parameters:
// uint8                              SubTypeNumber                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateBrush                 SubTypeBrush                                                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnMarkerSubTypeItemClick(uint8 SubTypeNumber, struct FSlateBrush& SubTypeBrush)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMarkerSubTypeItemClick");

	Params::UWTLPDAMap_OnMarkerSubTypeItemClick_Params Parms{};

	Parms.SubTypeNumber = SubTypeNumber;
	Parms.SubTypeBrush = SubTypeBrush;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMarkerShare
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::OnMarkerShare()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMarkerShare");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMarkerPopupMenuOpen
// (Final, Native, Private, HasDefaults)
// Parameters:
// struct FVector2D                   AbsoluteMouseClickPos                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLMapMarker               Marker                                                           (Parm, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnMarkerPopupMenuOpen(const struct FVector2D& AbsoluteMouseClickPos, const struct FWTLMapMarker& Marker)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMarkerPopupMenuOpen");

	Params::UWTLPDAMap_OnMarkerPopupMenuOpen_Params Parms{};

	Parms.AbsoluteMouseClickPos = AbsoluteMouseClickPos;
	Parms.Marker = Marker;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMarkerFindBtnClick
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FVector                     MarkerPosition                                                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnMarkerFindBtnClick(struct FVector& MarkerPosition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMarkerFindBtnClick");

	Params::UWTLPDAMap_OnMarkerFindBtnClick_Params Parms{};

	Parms.MarkerPosition = MarkerPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMarkerEditBtnClick
// (Final, Native, Private)
// Parameters:
// int32                              MarkerIndex                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MarkerName                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SubTypeNumber                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MarkerColor                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsSticking                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnMarkerEditBtnClick(int32 MarkerIndex, const class FString& MarkerName, uint8 SubTypeNumber, const class FString& MarkerColor, bool IsSticking)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMarkerEditBtnClick");

	Params::UWTLPDAMap_OnMarkerEditBtnClick_Params Parms{};

	Parms.MarkerIndex = MarkerIndex;
	Parms.MarkerName = MarkerName;
	Parms.SubTypeNumber = SubTypeNumber;
	Parms.MarkerColor = MarkerColor;
	Parms.IsSticking = IsSticking;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMarkerEdit
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::OnMarkerEdit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMarkerEdit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMarkerDeleteBtnClick
// (Final, Native, Private)
// Parameters:
// int32                              MarkerIndex                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnMarkerDeleteBtnClick(int32 MarkerIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMarkerDeleteBtnClick");

	Params::UWTLPDAMap_OnMarkerDeleteBtnClick_Params Parms{};

	Parms.MarkerIndex = MarkerIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMarkerDelete
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::OnMarkerDelete()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMarkerDelete");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMarkerColorPicked
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FLinearColor                ChangedColor                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnMarkerColorPicked(struct FLinearColor& ChangedColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMarkerColorPicked");

	Params::UWTLPDAMap_OnMarkerColorPicked_Params Parms{};

	Parms.ChangedColor = ChangedColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMarkerAdd
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::OnMarkerAdd()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMarkerAdd");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMapScreenBorderMouseMove
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnMapScreenBorderMouseMove(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMapScreenBorderMouseMove");

	Params::UWTLPDAMap_OnMapScreenBorderMouseMove_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMapScreenBorderMouseDown
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnMapScreenBorderMouseDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMapScreenBorderMouseDown");

	Params::UWTLPDAMap_OnMapScreenBorderMouseDown_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnMapScreenBorderMouseDoubleClick
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FGeometry                   MyGeometry                                                       (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FPointerEvent               MouseEvent                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnMapScreenBorderMouseDoubleClick(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnMapScreenBorderMouseDoubleClick");

	Params::UWTLPDAMap_OnMapScreenBorderMouseDoubleClick_Params Parms{};

	Parms.MyGeometry = MyGeometry;
	Parms.MouseEvent = MouseEvent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnLocationsListItemClicked
// (Final, Native, Private)
// Parameters:
// int32                              LocationID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::OnLocationsListItemClicked(int32 LocationID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnLocationsListItemClicked");

	Params::UWTLPDAMap_OnLocationsListItemClicked_Params Parms{};

	Parms.LocationID = LocationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.OnGetMapMenuContent
// (Final, Native, Private)
// Parameters:
// class UWidget*                     ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UWidget* UWTLPDAMap::OnGetMapMenuContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "OnGetMapMenuContent");

	Params::UWTLPDAMap_OnGetMapMenuContent_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLPDAMap.MarkerStickingCheckBoxChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::MarkerStickingCheckBoxChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "MarkerStickingCheckBoxChanged");

	Params::UWTLPDAMap_MarkerStickingCheckBoxChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.MarkerNameTextBoxTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::MarkerNameTextBoxTextCommitted(class FText& Text, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "MarkerNameTextBoxTextCommitted");

	Params::UWTLPDAMap_MarkerNameTextBoxTextCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.MarkerNameTextBoxTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLPDAMap::MarkerNameTextBoxTextChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "MarkerNameTextBoxTextChanged");

	Params::UWTLPDAMap_MarkerNameTextBoxTextChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.FindPlayerMarkerCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMap::FindPlayerMarkerCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "FindPlayerMarkerCheckBoxStateChanged");

	Params::UWTLPDAMap_FindPlayerMarkerCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.FindPlayerMarker
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::FindPlayerMarker()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "FindPlayerMarker");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMap.AddPlayerMarkerBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDAMap::AddPlayerMarkerBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMap", "AddPlayerMarkerBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAMapMarker
// (None)

class UClass* UWTLPDAMapMarker::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMapMarker");

	return Clss;
}


// WTLPDAMapMarker WTL.Default__WTLPDAMapMarker
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMapMarker* UWTLPDAMapMarker::GetDefaultObj()
{
	static class UWTLPDAMapMarker* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMapMarker*>(UWTLPDAMapMarker::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAMarkerListItem
// (None)

class UClass* UWTLPDAMarkerListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMarkerListItem");

	return Clss;
}


// WTLPDAMarkerListItem WTL.Default__WTLPDAMarkerListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMarkerListItem* UWTLPDAMarkerListItem::GetDefaultObj()
{
	static class UWTLPDAMarkerListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMarkerListItem*>(UWTLPDAMarkerListItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAMarkerListItem.OnFindMarkerBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDAMarkerListItem::OnFindMarkerBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMarkerListItem", "OnFindMarkerBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMarkerListItem.OnEditMarkerBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDAMarkerListItem::OnEditMarkerBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMarkerListItem", "OnEditMarkerBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMarkerListItem.OnDeleteMarkerBtnClick
// (Final, Native, Private)
// Parameters:

void UWTLPDAMarkerListItem::OnDeleteMarkerBtnClick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMarkerListItem", "OnDeleteMarkerBtnClick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAMarkerSubTypeItem
// (None)

class UClass* UWTLPDAMarkerSubTypeItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMarkerSubTypeItem");

	return Clss;
}


// WTLPDAMarkerSubTypeItem WTL.Default__WTLPDAMarkerSubTypeItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMarkerSubTypeItem* UWTLPDAMarkerSubTypeItem::GetDefaultObj()
{
	static class UWTLPDAMarkerSubTypeItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMarkerSubTypeItem*>(UWTLPDAMarkerSubTypeItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAMenuBase
// (None)

class UClass* UWTLPDAMenuBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMenuBase");

	return Clss;
}


// WTLPDAMenuBase WTL.Default__WTLPDAMenuBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMenuBase* UWTLPDAMenuBase::GetDefaultObj()
{
	static class UWTLPDAMenuBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMenuBase*>(UWTLPDAMenuBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAMenuBase.OnButtonClicked
// (Final, Native, Protected)
// Parameters:
// enum class EWTLPDAWidget           PDAWidgetType                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMenuBase::OnButtonClicked(enum class EWTLPDAWidget PDAWidgetType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMenuBase", "OnButtonClicked");

	Params::UWTLPDAMenuBase_OnButtonClicked_Params Parms{};

	Parms.PDAWidgetType = PDAWidgetType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAMenu
// (None)

class UClass* UWTLPDAMenu::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMenu");

	return Clss;
}


// WTLPDAMenu WTL.Default__WTLPDAMenu
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMenu* UWTLPDAMenu::GetDefaultObj()
{
	static class UWTLPDAMenu* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMenu*>(UWTLPDAMenu::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAMenuButtonBase
// (None)

class UClass* UWTLPDAMenuButtonBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMenuButtonBase");

	return Clss;
}


// WTLPDAMenuButtonBase WTL.Default__WTLPDAMenuButtonBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMenuButtonBase* UWTLPDAMenuButtonBase::GetDefaultObj()
{
	static class UWTLPDAMenuButtonBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMenuButtonBase*>(UWTLPDAMenuButtonBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAMenuButtonBase.Update
// (Final, Native, Public)
// Parameters:

void UWTLPDAMenuButtonBase::Update()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMenuButtonBase", "Update");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMenuButtonBase.SetNotificationsCount
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAMenuButtonBase::SetNotificationsCount(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMenuButtonBase", "SetNotificationsCount");

	Params::UWTLPDAMenuButtonBase_SetNotificationsCount_Params Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAMenuButtonBase.K2_Update
// (Event, Public, BlueprintEvent)
// Parameters:

void UWTLPDAMenuButtonBase::K2_Update()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMenuButtonBase", "K2_Update");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLPDAMenuButtonBase.K2_OnMenuOpened
// (Event, Public, BlueprintEvent)
// Parameters:

void UWTLPDAMenuButtonBase::K2_OnMenuOpened()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAMenuButtonBase", "K2_OnMenuOpened");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLPDAMenuButton
// (None)

class UClass* UWTLPDAMenuButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMenuButton");

	return Clss;
}


// WTLPDAMenuButton WTL.Default__WTLPDAMenuButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMenuButton* UWTLPDAMenuButton::GetDefaultObj()
{
	static class UWTLPDAMenuButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMenuButton*>(UWTLPDAMenuButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAMenuButtonToolBar
// (None)

class UClass* UWTLPDAMenuButtonToolBar::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMenuButtonToolBar");

	return Clss;
}


// WTLPDAMenuButtonToolBar WTL.Default__WTLPDAMenuButtonToolBar
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMenuButtonToolBar* UWTLPDAMenuButtonToolBar::GetDefaultObj()
{
	static class UWTLPDAMenuButtonToolBar* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMenuButtonToolBar*>(UWTLPDAMenuButtonToolBar::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAMenuPremiumButton
// (None)

class UClass* UWTLPDAMenuPremiumButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMenuPremiumButton");

	return Clss;
}


// WTLPDAMenuPremiumButton WTL.Default__WTLPDAMenuPremiumButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMenuPremiumButton* UWTLPDAMenuPremiumButton::GetDefaultObj()
{
	static class UWTLPDAMenuPremiumButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMenuPremiumButton*>(UWTLPDAMenuPremiumButton::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAMenuToolBar
// (None)

class UClass* UWTLPDAMenuToolBar::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAMenuToolBar");

	return Clss;
}


// WTLPDAMenuToolBar WTL.Default__WTLPDAMenuToolBar
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAMenuToolBar* UWTLPDAMenuToolBar::GetDefaultObj()
{
	static class UWTLPDAMenuToolBar* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAMenuToolBar*>(UWTLPDAMenuToolBar::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAModulesListItem
// (None)

class UClass* UWTLPDAModulesListItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAModulesListItem");

	return Clss;
}


// WTLPDAModulesListItem WTL.Default__WTLPDAModulesListItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAModulesListItem* UWTLPDAModulesListItem::GetDefaultObj()
{
	static class UWTLPDAModulesListItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAModulesListItem*>(UWTLPDAModulesListItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDANetworkSignal
// (None)

class UClass* UWTLPDANetworkSignal::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDANetworkSignal");

	return Clss;
}


// WTLPDANetworkSignal WTL.Default__WTLPDANetworkSignal
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDANetworkSignal* UWTLPDANetworkSignal::GetDefaultObj()
{
	static class UWTLPDANetworkSignal* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDANetworkSignal*>(UWTLPDANetworkSignal::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAParameter
// (None)

class UClass* UWTLPDAParameter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAParameter");

	return Clss;
}


// WTLPDAParameter WTL.Default__WTLPDAParameter
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAParameter* UWTLPDAParameter::GetDefaultObj()
{
	static class UWTLPDAParameter* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAParameter*>(UWTLPDAParameter::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAPremium
// (None)

class UClass* UWTLPDAPremium::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAPremium");

	return Clss;
}


// WTLPDAPremium WTL.Default__WTLPDAPremium
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAPremium* UWTLPDAPremium::GetDefaultObj()
{
	static class UWTLPDAPremium* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAPremium*>(UWTLPDAPremium::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAPremium.OnPremiumButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAPremium::OnPremiumButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAPremium", "OnPremiumButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAPremium.OnInAppPaymentResult
// (Final, Native, Private)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAPremium::OnInAppPaymentResult(bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAPremium", "OnInAppPaymentResult");

	Params::UWTLPDAPremium_OnInAppPaymentResult_Params Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAQuestLog
// (None)

class UClass* UWTLPDAQuestLog::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAQuestLog");

	return Clss;
}


// WTLPDAQuestLog WTL.Default__WTLPDAQuestLog
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAQuestLog* UWTLPDAQuestLog::GetDefaultObj()
{
	static class UWTLPDAQuestLog* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAQuestLog*>(UWTLPDAQuestLog::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDAQuestLog.OnSetActiveQuestBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAQuestLog::OnSetActiveQuestBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAQuestLog", "OnSetActiveQuestBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAQuestLog.OnQuestLogItemClicked
// (Final, Native, Private)
// Parameters:
// class UWTLPDAQuestLogItem*         QuestLogItem                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAQuestLog::OnQuestLogItemClicked(class UWTLPDAQuestLogItem* QuestLogItem)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAQuestLog", "OnQuestLogItemClicked");

	Params::UWTLPDAQuestLog_OnQuestLogItemClicked_Params Parms{};

	Parms.QuestLogItem = QuestLogItem;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAQuestLog.OnListTabBtnClicked
// (Final, Native, Private)
// Parameters:
// uint8                              Index                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAQuestLog::OnListTabBtnClicked(uint8 Index)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAQuestLog", "OnListTabBtnClicked");

	Params::UWTLPDAQuestLog_OnListTabBtnClicked_Params Parms{};

	Parms.Index = Index;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAQuestLog.OnHideActiveQuestInfoCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDAQuestLog::OnHideActiveQuestInfoCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAQuestLog", "OnHideActiveQuestInfoCheckBoxStateChanged");

	Params::UWTLPDAQuestLog_OnHideActiveQuestInfoCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAQuestLog.OnAbandonQuestConfirmation
// (Final, Native, Private)
// Parameters:

void UWTLPDAQuestLog::OnAbandonQuestConfirmation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAQuestLog", "OnAbandonQuestConfirmation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDAQuestLog.OnAbandonQuestBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDAQuestLog::OnAbandonQuestBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDAQuestLog", "OnAbandonQuestBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDAQuestLogItem
// (None)

class UClass* UWTLPDAQuestLogItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAQuestLogItem");

	return Clss;
}


// WTLPDAQuestLogItem WTL.Default__WTLPDAQuestLogItem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAQuestLogItem* UWTLPDAQuestLogItem::GetDefaultObj()
{
	static class UWTLPDAQuestLogItem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAQuestLogItem*>(UWTLPDAQuestLogItem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAQuestLogRequirementBase
// (None)

class UClass* UWTLPDAQuestLogRequirementBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAQuestLogRequirementBase");

	return Clss;
}


// WTLPDAQuestLogRequirementBase WTL.Default__WTLPDAQuestLogRequirementBase
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAQuestLogRequirementBase* UWTLPDAQuestLogRequirementBase::GetDefaultObj()
{
	static class UWTLPDAQuestLogRequirementBase* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAQuestLogRequirementBase*>(UWTLPDAQuestLogRequirementBase::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDAQuestLogRequiredMonsterKill
// (None)

class UClass* UWTLPDAQuestLogRequiredMonsterKill::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDAQuestLogRequiredMonsterKill");

	return Clss;
}


// WTLPDAQuestLogRequiredMonsterKill WTL.Default__WTLPDAQuestLogRequiredMonsterKill
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDAQuestLogRequiredMonsterKill* UWTLPDAQuestLogRequiredMonsterKill::GetDefaultObj()
{
	static class UWTLPDAQuestLogRequiredMonsterKill* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDAQuestLogRequiredMonsterKill*>(UWTLPDAQuestLogRequiredMonsterKill::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDASettings
// (None)

class UClass* UWTLPDASettings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDASettings");

	return Clss;
}


// WTLPDASettings WTL.Default__WTLPDASettings
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDASettings* UWTLPDASettings::GetDefaultObj()
{
	static class UWTLPDASettings* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDASettings*>(UWTLPDASettings::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDASettings.OnSecondIndicatorCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDASettings::OnSecondIndicatorCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnSecondIndicatorCheckBoxStateChanged");

	Params::UWTLPDASettings_OnSecondIndicatorCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASettings.OnRemoveModuleBtnError
// (Final, Native, Private)
// Parameters:

void UWTLPDASettings::OnRemoveModuleBtnError()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnRemoveModuleBtnError");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASettings.OnRemoveModuleBtnConfirm
// (Final, Native, Private)
// Parameters:

void UWTLPDASettings::OnRemoveModuleBtnConfirm()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnRemoveModuleBtnConfirm");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASettings.OnRemoveModuleBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDASettings::OnRemoveModuleBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnRemoveModuleBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASettings.OnPDAInterfaceColorSelectBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDASettings::OnPDAInterfaceColorSelectBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnPDAInterfaceColorSelectBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASettings.OnPDAInterfaceColorResetBtnClicked
// (Final, Native, Private)
// Parameters:

void UWTLPDASettings::OnPDAInterfaceColorResetBtnClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnPDAInterfaceColorResetBtnClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASettings.OnPDAInterfaceColorPickingCanceled
// (Final, Native, Private)
// Parameters:

void UWTLPDASettings::OnPDAInterfaceColorPickingCanceled()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnPDAInterfaceColorPickingCanceled");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASettings.OnPDAInterfaceColorPicked
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FLinearColor                PickedColor                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDASettings::OnPDAInterfaceColorPicked(struct FLinearColor& PickedColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnPDAInterfaceColorPicked");

	Params::UWTLPDASettings_OnPDAInterfaceColorPicked_Params Parms{};

	Parms.PickedColor = PickedColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASettings.OnPDAInterfaceColorChanged
// (Final, Native, Private, HasOutParams, HasDefaults)
// Parameters:
// struct FLinearColor                ChangedColor                                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDASettings::OnPDAInterfaceColorChanged(struct FLinearColor& ChangedColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnPDAInterfaceColorChanged");

	Params::UWTLPDASettings_OnPDAInterfaceColorChanged_Params Parms{};

	Parms.ChangedColor = ChangedColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASettings.OnModulesListItemClicked
// (Final, Native, Private)
// Parameters:
// uint16                             ModuleID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDASettings::OnModulesListItemClicked(uint16 ModuleID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnModulesListItemClicked");

	Params::UWTLPDASettings_OnModulesListItemClicked_Params Parms{};

	Parms.ModuleID = ModuleID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASettings.OnFirstIndicatorCheckBoxStateChanged
// (Final, Native, Private)
// Parameters:
// bool                               bIsChecked                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDASettings::OnFirstIndicatorCheckBoxStateChanged(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASettings", "OnFirstIndicatorCheckBoxStateChanged");

	Params::UWTLPDASettings_OnFirstIndicatorCheckBoxStateChanged_Params Parms{};

	Parms.bIsChecked = bIsChecked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPDASkillDependence
// (None)

class UClass* UWTLPDASkillDependence::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDASkillDependence");

	return Clss;
}


// WTLPDASkillDependence WTL.Default__WTLPDASkillDependence
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDASkillDependence* UWTLPDASkillDependence::GetDefaultObj()
{
	static class UWTLPDASkillDependence* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDASkillDependence*>(UWTLPDASkillDependence::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDASkillsConnector
// (None)

class UClass* UWTLPDASkillsConnector::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDASkillsConnector");

	return Clss;
}


// WTLPDASkillsConnector WTL.Default__WTLPDASkillsConnector
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDASkillsConnector* UWTLPDASkillsConnector::GetDefaultObj()
{
	static class UWTLPDASkillsConnector* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDASkillsConnector*>(UWTLPDASkillsConnector::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPDASocialNetworkAuthorization
// (None)

class UClass* UWTLPDASocialNetworkAuthorization::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPDASocialNetworkAuthorization");

	return Clss;
}


// WTLPDASocialNetworkAuthorization WTL.Default__WTLPDASocialNetworkAuthorization
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPDASocialNetworkAuthorization* UWTLPDASocialNetworkAuthorization::GetDefaultObj()
{
	static class UWTLPDASocialNetworkAuthorization* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPDASocialNetworkAuthorization*>(UWTLPDASocialNetworkAuthorization::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPDASocialNetworkAuthorization.OnURLChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      URL                                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDASocialNetworkAuthorization::OnURLChanged(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASocialNetworkAuthorization", "OnURLChanged");

	Params::UWTLPDASocialNetworkAuthorization_OnURLChanged_Params Parms{};

	Parms.URL = URL;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPDASocialNetworkAuthorization.OnLoadURL
// (Event, Public, BlueprintEvent)
// Parameters:
// class FString                      URL                                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPDASocialNetworkAuthorization::OnLoadURL(const class FString& URL)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPDASocialNetworkAuthorization", "OnLoadURL");

	Params::UWTLPDASocialNetworkAuthorization_OnLoadURL_Params Parms{};

	Parms.URL = URL;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLPlayerCameraManager
// (Actor)

class UClass* AWTLPlayerCameraManager::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPlayerCameraManager");

	return Clss;
}


// WTLPlayerCameraManager WTL.Default__WTLPlayerCameraManager
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLPlayerCameraManager* AWTLPlayerCameraManager::GetDefaultObj()
{
	static class AWTLPlayerCameraManager* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLPlayerCameraManager*>(AWTLPlayerCameraManager::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPlayerController
// (Actor, PlayerController)

class UClass* AWTLPlayerController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPlayerController");

	return Clss;
}


// WTLPlayerController WTL.Default__WTLPlayerController
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLPlayerController* AWTLPlayerController::GetDefaultObj()
{
	static class AWTLPlayerController* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLPlayerController*>(AWTLPlayerController::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPlayerController.TriggerPlayerKillNotification
// (Final, Native, Private, BlueprintCallable)
// Parameters:

void AWTLPlayerController::TriggerPlayerKillNotification()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "TriggerPlayerKillNotification");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_UpdatePlayerName
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class FString                      PlayerName                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_UpdatePlayerName(const class FString& PlayerName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_UpdatePlayerName");

	Params::AWTLPlayerController_Server_UpdatePlayerName_Params Parms{};

	Parms.PlayerName = PlayerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_SubmitPortalStationTeleportRequest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              WayIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PortalStationID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_SubmitPortalStationTeleportRequest(int32 WayIndex, int32 PortalStationID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_SubmitPortalStationTeleportRequest");

	Params::AWTLPlayerController_Server_SubmitPortalStationTeleportRequest_Params Parms{};

	Parms.WayIndex = WayIndex;
	Parms.PortalStationID = PortalStationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_ShareMarkerInGroup
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// int32                              LocationID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Color                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Position                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Name                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ShowOnMinimap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               SaveFile                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_ShareMarkerInGroup(int32 LocationID, uint8 Type, const class FString& Color, const struct FVector& Position, const class FString& Name, bool ShowOnMinimap, bool SaveFile, uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_ShareMarkerInGroup");

	Params::AWTLPlayerController_Server_ShareMarkerInGroup_Params Parms{};

	Parms.LocationID = LocationID;
	Parms.Type = Type;
	Parms.Color = Color;
	Parms.Position = Position;
	Parms.Name = Name;
	Parms.ShowOnMinimap = ShowOnMinimap;
	Parms.SaveFile = SaveFile;
	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_SetMinEventLogPriority
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint8                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_SetMinEventLogPriority(uint8 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_SetMinEventLogPriority");

	Params::AWTLPlayerController_Server_SetMinEventLogPriority_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_SendSpawnTracer
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// bool                               OwnCharacter                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             AmmoID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Position                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    Rotation                                                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                              Velocity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifeSpan                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_SendSpawnTracer(bool OwnCharacter, uint16 AmmoID, const struct FVector& Position, const struct FRotator& Rotation, float Velocity, float LifeSpan)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_SendSpawnTracer");

	Params::AWTLPlayerController_Server_SendSpawnTracer_Params Parms{};

	Parms.OwnCharacter = OwnCharacter;
	Parms.AmmoID = AmmoID;
	Parms.Position = Position;
	Parms.Rotation = Rotation;
	Parms.Velocity = Velocity;
	Parms.LifeSpan = LifeSpan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_SendHitInfo
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FHitResult                  HitInfo                                                          (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FTransform                  InitialTransform                                                 (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class AActor*                      Weapon                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             WeaponID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             AmmoID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_SendHitInfo(const struct FHitResult& HitInfo, const struct FTransform& InitialTransform, class AActor* Weapon, uint16 WeaponID, uint16 AmmoID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_SendHitInfo");

	Params::AWTLPlayerController_Server_SendHitInfo_Params Parms{};

	Parms.HitInfo = HitInfo;
	Parms.InitialTransform = InitialTransform;
	Parms.Weapon = Weapon;
	Parms.WeaponID = WeaponID;
	Parms.AmmoID = AmmoID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_SendConsoleCommand
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class FString                      ConsoleCommand                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_SendConsoleCommand(const class FString& ConsoleCommand)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_SendConsoleCommand");

	Params::AWTLPlayerController_Server_SendConsoleCommand_Params Parms{};

	Parms.ConsoleCommand = ConsoleCommand;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_SendChatMessage
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// enum class EWTLFiltersChat         FilterChat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLFaction             Faction                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ChatMessage                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      SenderPlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_SendChatMessage(enum class EWTLFiltersChat FilterChat, enum class EWTLFaction Faction, const class FString& ChatMessage, const class FString& SenderPlayerName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_SendChatMessage");

	Params::AWTLPlayerController_Server_SendChatMessage_Params Parms{};

	Parms.FilterChat = FilterChat;
	Parms.Faction = Faction;
	Parms.ChatMessage = ChatMessage;
	Parms.SenderPlayerName = SenderPlayerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_SendBulletHit
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               Reliable                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                       InstigatorPawn                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         HitLocation                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal   ImpactNormal                                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        HitSurface                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCaliber             Caliber                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_SendBulletHit(bool Reliable, class APawn* InstigatorPawn, class UPrimitiveComponent* HitComponent, const struct FVector_NetQuantize& HitLocation, const struct FVector_NetQuantizeNormal& ImpactNormal, enum class EPhysicalSurface HitSurface, enum class EWTLCaliber Caliber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_SendBulletHit");

	Params::AWTLPlayerController_Server_SendBulletHit_Params Parms{};

	Parms.Reliable = Reliable;
	Parms.InstigatorPawn = InstigatorPawn;
	Parms.HitComponent = HitComponent;
	Parms.HitLocation = HitLocation;
	Parms.ImpactNormal = ImpactNormal;
	Parms.HitSurface = HitSurface;
	Parms.Caliber = Caliber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_SendBulletFlyNear
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLCharacter*               OtherCharacter                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         Location                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCaliber             Caliber                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_SendBulletFlyNear(class AWTLCharacter* OtherCharacter, const struct FVector_NetQuantize& Location, enum class EWTLCaliber Caliber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_SendBulletFlyNear");

	Params::AWTLPlayerController_Server_SendBulletFlyNear_Params Parms{};

	Parms.OtherCharacter = OtherCharacter;
	Parms.Location = Location;
	Parms.Caliber = Caliber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_SelectReplica
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                DialogInstigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReplicaID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_SelectReplica(class AWTLNPCActor* DialogInstigator, int32 ReplicaID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_SelectReplica");

	Params::AWTLPlayerController_Server_SelectReplica_Params Parms{};

	Parms.DialogInstigator = DialogInstigator;
	Parms.ReplicaID = ReplicaID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_RemoveStash
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AWTLStash*                   Stash                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_RemoveStash(class AWTLStash* Stash)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_RemoveStash");

	Params::AWTLPlayerController_Server_RemoveStash_Params Parms{};

	Parms.Stash = Stash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_RejectPortalStationTeleportRequest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              PortalStationID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_RejectPortalStationTeleportRequest(int32 PortalStationID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_RejectPortalStationTeleportRequest");

	Params::AWTLPlayerController_Server_RejectPortalStationTeleportRequest_Params Parms{};

	Parms.PortalStationID = PortalStationID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_PutGiftInStash
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AWTLStash*                   Stash                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_PutGiftInStash(class AWTLStash* Stash)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_PutGiftInStash");

	Params::AWTLPlayerController_Server_PutGiftInStash_Params Parms{};

	Parms.Stash = Stash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_PickupPlaceableStuff
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AWTLPlaceableStuff*          PlaceableStuff                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_PickupPlaceableStuff(class AWTLPlaceableStuff* PlaceableStuff)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_PickupPlaceableStuff");

	Params::AWTLPlayerController_Server_PickupPlaceableStuff_Params Parms{};

	Parms.PlaceableStuff = PlaceableStuff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_OnClanNameSelected
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ClanName                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_OnClanNameSelected(class AWTLNPCActor* NPC, const class FString& ClanName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_OnClanNameSelected");

	Params::AWTLPlayerController_Server_OnClanNameSelected_Params Parms{};

	Parms.NPC = NPC;
	Parms.ClanName = ClanName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_GetExperienceForFirstMailMessage
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLPlayerController::Server_GetExperienceForFirstMailMessage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_GetExperienceForFirstMailMessage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_ExtinguishCampfire
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AWTLCampfire*                Campfire                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_ExtinguishCampfire(class AWTLCampfire* Campfire)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_ExtinguishCampfire");

	Params::AWTLPlayerController_Server_ExtinguishCampfire_Params Parms{};

	Parms.Campfire = Campfire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_EndInformationDialog
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLTriggerObject*           TriggerObject                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_EndInformationDialog(class AWTLTriggerObject* TriggerObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_EndInformationDialog");

	Params::AWTLPlayerController_Server_EndInformationDialog_Params Parms{};

	Parms.TriggerObject = TriggerObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_ChargePlaceableStuff
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// class AWTLPlaceableStuff*          PlaceableStuff                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_ChargePlaceableStuff(class AWTLPlaceableStuff* PlaceableStuff)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_ChargePlaceableStuff");

	Params::AWTLPlayerController_Server_ChargePlaceableStuff_Params Parms{};

	Parms.PlaceableStuff = PlaceableStuff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_CancelSuicide
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLPlayerController::Server_CancelSuicide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_CancelSuicide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_CancelExit
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLPlayerController::Server_CancelExit()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_CancelExit");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_BeginSuicide
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLPlayerController::Server_BeginSuicide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_BeginSuicide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Server_BeginExit
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               ExitByIdleTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Server_BeginExit(bool ExitByIdleTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Server_BeginExit");

	Params::AWTLPlayerController_Server_BeginExit_Params Parms{};

	Parms.ExitByIdleTime = ExitByIdleTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.RemoveStash
// (Final, Native, Public)
// Parameters:
// class AWTLStash*                   Stash                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::RemoveStash(class AWTLStash* Stash)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "RemoveStash");

	Params::AWTLPlayerController_RemoveStash_Params Parms{};

	Parms.Stash = Stash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.PutGiftInStash
// (Final, Native, Public)
// Parameters:
// class AWTLStash*                   Stash                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::PutGiftInStash(class AWTLStash* Stash)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "PutGiftInStash");

	Params::AWTLPlayerController_PutGiftInStash_Params Parms{};

	Parms.Stash = Stash;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.PickupPlaceableStuff
// (Final, Native, Public)
// Parameters:
// class AWTLPlaceableStuff*          PlaceableStuff                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::PickupPlaceableStuff(class AWTLPlaceableStuff* PlaceableStuff)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "PickupPlaceableStuff");

	Params::AWTLPlayerController_PickupPlaceableStuff_Params Parms{};

	Parms.PlaceableStuff = PlaceableStuff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OpenCharacterMail
// (Final, Native, Private)
// Parameters:

void AWTLPlayerController::OpenCharacterMail()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OpenCharacterMail");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnWindowCloseRequested
// (Final, Native, Private)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLPlayerController::OnWindowCloseRequested()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnWindowCloseRequested");

	Params::AWTLPlayerController_OnWindowCloseRequested_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLPlayerController.OnVOIPTimerTick
// (Final, Native, Private)
// Parameters:

void AWTLPlayerController::OnVOIPTimerTick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnVOIPTimerTick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnVOIPStop
// (Final, Native, Public)
// Parameters:

void AWTLPlayerController::OnVOIPStop()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnVOIPStop");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnVOIPStart
// (Final, Native, Public)
// Parameters:

void AWTLPlayerController::OnVOIPStart()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnVOIPStart");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnSendGlobalGroupInviteResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnSendGlobalGroupInviteResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnSendGlobalGroupInviteResponse");

	Params::AWTLPlayerController_OnSendGlobalGroupInviteResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnRep_SuicideState
// (Final, Native, Private)
// Parameters:

void AWTLPlayerController::OnRep_SuicideState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnRep_SuicideState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnRemovedFromGroup
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnRemovedFromGroup(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnRemovedFromGroup");

	Params::AWTLPlayerController_OnRemovedFromGroup_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnNewClanMemberRequest
// (Final, Native, Private)
// Parameters:
// class FString                      FromCharacter                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnNewClanMemberRequest(const class FString& FromCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnNewClanMemberRequest");

	Params::AWTLPlayerController_OnNewClanMemberRequest_Params Parms{};

	Parms.FromCharacter = FromCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnModuleScanTimerTick
// (Final, Native, Private)
// Parameters:

void AWTLPlayerController::OnModuleScanTimerTick()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnModuleScanTimerTick");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnGetGroupInvite
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnGetGroupInvite(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnGetGroupInvite");

	Params::AWTLPlayerController_OnGetGroupInvite_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnExitTimerOnClient
// (Final, Native, Private)
// Parameters:

void AWTLPlayerController::OnExitTimerOnClient()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnExitTimerOnClient");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnDeleteGroupInvite
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnDeleteGroupInvite(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnDeleteGroupInvite");

	Params::AWTLPlayerController_OnDeleteGroupInvite_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnConsoleCommandResponse
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLResponse                Response                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnConsoleCommandResponse(struct FWTLResponse& Response)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnConsoleCommandResponse");

	Params::AWTLPlayerController_OnConsoleCommandResponse_Params Parms{};

	Parms.Response = Response;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnClanNameSelected
// (Final, Native, Private)
// Parameters:
// class FString                      ClanName                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnClanNameSelected(const class FString& ClanName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnClanNameSelected");

	Params::AWTLPlayerController_OnClanNameSelected_Params Parms{};

	Parms.ClanName = ClanName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnClanMemberRequestRejected
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnClanMemberRequestRejected(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnClanMemberRequestRejected");

	Params::AWTLPlayerController_OnClanMemberRequestRejected_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnClanMemberRequestAccepted
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnClanMemberRequestAccepted(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnClanMemberRequestAccepted");

	Params::AWTLPlayerController_OnClanMemberRequestAccepted_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnChatMessage
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnChatMessage(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnChatMessage");

	Params::AWTLPlayerController_OnChatMessage_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnCancelBarterOffer
// (Final, Native, Private)
// Parameters:

void AWTLPlayerController::OnCancelBarterOffer()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnCancelBarterOffer");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnBecameGroupLeader
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnBecameGroupLeader(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnBecameGroupLeader");

	Params::AWTLPlayerController_OnBecameGroupLeader_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.OnAnticheatRequested
// (Final, Native, Private, HasOutParams)
// Parameters:
// struct FWTLEvent                   Event                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::OnAnticheatRequested(struct FWTLEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "OnAnticheatRequested");

	Params::AWTLPlayerController_OnAnticheatRequested_Params Parms{};

	Parms.Event = Event;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.ExtinguishCampfire
// (Final, Native, Public)
// Parameters:
// class AWTLCampfire*                Campfire                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::ExtinguishCampfire(class AWTLCampfire* Campfire)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "ExtinguishCampfire");

	Params::AWTLPlayerController_ExtinguishCampfire_Params Parms{};

	Parms.Campfire = Campfire;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.ClientUnreliable_OnSpawnTracer
// (Net, Native, Event, Public, NetClient)
// Parameters:
// bool                               OwnCharacter                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             AmmoID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         Position                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal   Rotation                                                         (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Velocity                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             TracerID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              LifeSpan                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::ClientUnreliable_OnSpawnTracer(bool OwnCharacter, uint16 AmmoID, const struct FVector_NetQuantize& Position, const struct FVector_NetQuantizeNormal& Rotation, float Velocity, uint16 TracerID, float LifeSpan)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "ClientUnreliable_OnSpawnTracer");

	Params::AWTLPlayerController_ClientUnreliable_OnSpawnTracer_Params Parms{};

	Parms.OwnCharacter = OwnCharacter;
	Parms.AmmoID = AmmoID;
	Parms.Position = Position;
	Parms.Rotation = Rotation;
	Parms.Velocity = Velocity;
	Parms.TracerID = TracerID;
	Parms.LifeSpan = LifeSpan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.ClientUnreliable_OnDestroyTracer
// (Net, Native, Event, Public, NetClient)
// Parameters:
// uint16                             TracerID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::ClientUnreliable_OnDestroyTracer(uint16 TracerID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "ClientUnreliable_OnDestroyTracer");

	Params::AWTLPlayerController_ClientUnreliable_OnDestroyTracer_Params Parms{};

	Parms.TracerID = TracerID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.ClientUnreliable_OnBulletRicochet
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         HitLocation                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal   ImpactNormal                                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        HitSurface                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCaliber             Caliber                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ServerTime                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::ClientUnreliable_OnBulletRicochet(class UPrimitiveComponent* HitComponent, const struct FVector_NetQuantize& HitLocation, const struct FVector_NetQuantizeNormal& ImpactNormal, enum class EPhysicalSurface HitSurface, enum class EWTLCaliber Caliber, float ServerTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "ClientUnreliable_OnBulletRicochet");

	Params::AWTLPlayerController_ClientUnreliable_OnBulletRicochet_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.HitLocation = HitLocation;
	Parms.ImpactNormal = ImpactNormal;
	Parms.HitSurface = HitSurface;
	Parms.Caliber = Caliber;
	Parms.ServerTime = ServerTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.ClientUnreliable_OnBulletHit
// (Net, Native, Event, Public, NetClient)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         HitLocation                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal   ImpactNormal                                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        HitSurface                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCaliber             Caliber                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ServerTime                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::ClientUnreliable_OnBulletHit(class UPrimitiveComponent* HitComponent, const struct FVector_NetQuantize& HitLocation, const struct FVector_NetQuantizeNormal& ImpactNormal, enum class EPhysicalSurface HitSurface, enum class EWTLCaliber Caliber, float ServerTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "ClientUnreliable_OnBulletHit");

	Params::AWTLPlayerController_ClientUnreliable_OnBulletHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.HitLocation = HitLocation;
	Parms.ImpactNormal = ImpactNormal;
	Parms.HitSurface = HitSurface;
	Parms.Caliber = Caliber;
	Parms.ServerTime = ServerTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.ClientSetCurrentCulture
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                      CultureName                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::ClientSetCurrentCulture(const class FString& CultureName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "ClientSetCurrentCulture");

	Params::AWTLPlayerController_ClientSetCurrentCulture_Params Parms{};

	Parms.CultureName = CultureName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.ClientReliable_OnBulletRicochet
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         HitLocation                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal   ImpactNormal                                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        HitSurface                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCaliber             Caliber                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ServerTime                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::ClientReliable_OnBulletRicochet(class UPrimitiveComponent* HitComponent, const struct FVector_NetQuantize& HitLocation, const struct FVector_NetQuantizeNormal& ImpactNormal, enum class EPhysicalSurface HitSurface, enum class EWTLCaliber Caliber, float ServerTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "ClientReliable_OnBulletRicochet");

	Params::AWTLPlayerController_ClientReliable_OnBulletRicochet_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.HitLocation = HitLocation;
	Parms.ImpactNormal = ImpactNormal;
	Parms.HitSurface = HitSurface;
	Parms.Caliber = Caliber;
	Parms.ServerTime = ServerTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.ClientReliable_OnBulletHit
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class UPrimitiveComponent*         HitComponent                                                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantize         HitLocation                                                      (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal   ImpactNormal                                                     (ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EPhysicalSurface        HitSurface                                                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCaliber             Caliber                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ServerTime                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::ClientReliable_OnBulletHit(class UPrimitiveComponent* HitComponent, const struct FVector_NetQuantize& HitLocation, const struct FVector_NetQuantizeNormal& ImpactNormal, enum class EPhysicalSurface HitSurface, enum class EWTLCaliber Caliber, float ServerTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "ClientReliable_OnBulletHit");

	Params::AWTLPlayerController_ClientReliable_OnBulletHit_Params Parms{};

	Parms.HitComponent = HitComponent;
	Parms.HitLocation = HitLocation;
	Parms.ImpactNormal = ImpactNormal;
	Parms.HitSurface = HitSurface;
	Parms.Caliber = Caliber;
	Parms.ServerTime = ServerTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_StartExitGame
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               IsExitToMainMenu                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ExitByIdleTime                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_StartExitGame(bool IsExitToMainMenu, bool ExitByIdleTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_StartExitGame");

	Params::AWTLPlayerController_Client_StartExitGame_Params Parms{};

	Parms.IsExitToMainMenu = IsExitToMainMenu;
	Parms.ExitByIdleTime = ExitByIdleTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_StartBarterDeal
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_StartBarterDeal(uint64 CharacterID, const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_StartBarterDeal");

	Params::AWTLPlayerController_Client_StartBarterDeal_Params Parms{};

	Parms.CharacterID = CharacterID;
	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowSteamInventoryWidget
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                NPCActor                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowSteamInventoryWidget(class AWTLNPCActor* NPCActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowSteamInventoryWidget");

	Params::AWTLPlayerController_Client_ShowSteamInventoryWidget_Params Parms{};

	Parms.NPCActor = NPCActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowSlotMachineReward
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FWTLStorageContent          Items                                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowSlotMachineReward(struct FWTLStorageContent& Items)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowSlotMachineReward");

	Params::AWTLPlayerController_Client_ShowSlotMachineReward_Params Parms{};

	Parms.Items = Items;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowSlotMachinePayTable
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLSlotMachinePayTable*     SlotMachinePayTableActor                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowSlotMachinePayTable(class AWTLSlotMachinePayTable* SlotMachinePayTableActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowSlotMachinePayTable");

	Params::AWTLPlayerController_Client_ShowSlotMachinePayTable_Params Parms{};

	Parms.SlotMachinePayTableActor = SlotMachinePayTableActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowRobotsCraftWidget
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLRobotCraftStation*       RobotCraftStation                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowRobotsCraftWidget(class AWTLRobotCraftStation* RobotCraftStation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowRobotsCraftWidget");

	Params::AWTLPlayerController_Client_ShowRobotsCraftWidget_Params Parms{};

	Parms.RobotCraftStation = RobotCraftStation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowQuestRewardInDialog
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                DialogInstigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowQuestRewardInDialog(class AWTLNPCActor* DialogInstigator, int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowQuestRewardInDialog");

	Params::AWTLPlayerController_Client_ShowQuestRewardInDialog_Params Parms{};

	Parms.DialogInstigator = DialogInstigator;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowPrivateStorage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      PrivateStorageActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowPrivateStorage(class AActor* PrivateStorageActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowPrivateStorage");

	Params::AWTLPlayerController_Client_ShowPrivateStorage_Params Parms{};

	Parms.PrivateStorageActor = PrivateStorageActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowPlayersTable
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLPlayerController::Client_ShowPlayersTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowPlayersTable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowObstacleCourseHelp
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLObstacleCourseHelpButton*ObstacleCourseHelpButton                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowObstacleCourseHelp(class AWTLObstacleCourseHelpButton* ObstacleCourseHelpButton)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowObstacleCourseHelp");

	Params::AWTLPlayerController_Client_ShowObstacleCourseHelp_Params Parms{};

	Parms.ObstacleCourseHelpButton = ObstacleCourseHelpButton;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowObjectCraftWidget
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      Actor                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCraftType           CraftType                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowObjectCraftWidget(class AActor* Actor, enum class EWTLCraftType CraftType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowObjectCraftWidget");

	Params::AWTLPlayerController_Client_ShowObjectCraftWidget_Params Parms{};

	Parms.Actor = Actor;
	Parms.CraftType = CraftType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowNote
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FText                        NoteName                                                         (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              NoteID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowNote(class FText& NoteName, int32 NoteID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowNote");

	Params::AWTLPlayerController_Client_ShowNote_Params Parms{};

	Parms.NoteName = NoteName;
	Parms.NoteID = NoteID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowMicrotransactionWindowWidget
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLMicrotransactionTypeType                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowMicrotransactionWindowWidget(enum class EWTLMicrotransactionType Type)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowMicrotransactionWindowWidget");

	Params::AWTLPlayerController_Client_ShowMicrotransactionWindowWidget_Params Parms{};

	Parms.Type = Type;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowMessageDialog
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLDialogMessageType   DialogMessageType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        Message                                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowMessageDialog(enum class EWTLDialogMessageType DialogMessageType, class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowMessageDialog");

	Params::AWTLPlayerController_Client_ShowMessageDialog_Params Parms{};

	Parms.DialogMessageType = DialogMessageType;
	Parms.Message = Message;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowMailBox
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLMailBox*                 MailBox                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowMailBox(class AWTLMailBox* MailBox)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowMailBox");

	Params::AWTLPlayerController_Client_ShowMailBox_Params Parms{};

	Parms.MailBox = MailBox;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowJunkMachine
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLJunkMachineBase*         JunkMachine                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowJunkMachine(class AWTLJunkMachineBase* JunkMachine)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowJunkMachine");

	Params::AWTLPlayerController_Client_ShowJunkMachine_Params Parms{};

	Parms.JunkMachine = JunkMachine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowGodConsole
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLPlayerController::Client_ShowGodConsole()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowGodConsole");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowDialog
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                DialogInstigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NPCReplicaID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                      CharacterReplicaIDArray                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowDialog(class AWTLNPCActor* DialogInstigator, int32 NPCReplicaID, TArray<int32>& CharacterReplicaIDArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowDialog");

	Params::AWTLPlayerController_Client_ShowDialog_Params Parms{};

	Parms.DialogInstigator = DialogInstigator;
	Parms.NPCReplicaID = NPCReplicaID;
	Parms.CharacterReplicaIDArray = CharacterReplicaIDArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowClanStorage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      ClanStorageActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowClanStorage(class AActor* ClanStorageActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowClanStorage");

	Params::AWTLPlayerController_Client_ShowClanStorage_Params Parms{};

	Parms.ClanStorageActor = ClanStorageActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowClanNameRequest
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowClanNameRequest(class AWTLNPCActor* NPC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowClanNameRequest");

	Params::AWTLPlayerController_Client_ShowClanNameRequest_Params Parms{};

	Parms.NPC = NPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowBulletinBoard
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLBulletinBoard*           Board                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowBulletinBoard(class AWTLBulletinBoard* Board)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowBulletinBoard");

	Params::AWTLPlayerController_Client_ShowBulletinBoard_Params Parms{};

	Parms.Board = Board;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ShowArenaReward
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLLootBoxType         BoxType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLStorageContent          Items                                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ShowArenaReward(enum class EWTLLootBoxType BoxType, int32 MoneyAmount, struct FWTLStorageContent& Items)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ShowArenaReward");

	Params::AWTLPlayerController_Client_ShowArenaReward_Params Parms{};

	Parms.BoxType = BoxType;
	Parms.MoneyAmount = MoneyAmount;
	Parms.Items = Items;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_SendMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLClientMessageType   ClientMessageType                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Text                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_SendMessage(enum class EWTLClientMessageType ClientMessageType, const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_SendMessage");

	Params::AWTLPlayerController_Client_SendMessage_Params Parms{};

	Parms.ClientMessageType = ClientMessageType;
	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ReceiveSharedMarkerInGroup
// (Net, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// int32                              LocationID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Color                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Position                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Name                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ShowOnMinimap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               SaveFile                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               OtherCharacter                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_ReceiveSharedMarkerInGroup(int32 LocationID, uint8 Type, const class FString& Color, const struct FVector& Position, const class FString& Name, bool ShowOnMinimap, bool SaveFile, const class FString& CharacterName, class AWTLCharacter* OtherCharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ReceiveSharedMarkerInGroup");

	Params::AWTLPlayerController_Client_ReceiveSharedMarkerInGroup_Params Parms{};

	Parms.LocationID = LocationID;
	Parms.Type = Type;
	Parms.Color = Color;
	Parms.Position = Position;
	Parms.Name = Name;
	Parms.ShowOnMinimap = ShowOnMinimap;
	Parms.SaveFile = SaveFile;
	Parms.CharacterName = CharacterName;
	Parms.OtherCharacter = OtherCharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnTakeQuest
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint32                             QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnTakeQuest(uint32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnTakeQuest");

	Params::AWTLPlayerController_Client_OnTakeQuest_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnSystemQuest
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class FString                      QuestInfo                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnSystemQuest(const class FString& QuestInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnSystemQuest");

	Params::AWTLPlayerController_Client_OnSystemQuest_Params Parms{};

	Parms.QuestInfo = QuestInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnSystemEvent
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class FString                      EventInfo                                                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnSystemEvent(const class FString& EventInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnSystemEvent");

	Params::AWTLPlayerController_Client_OnSystemEvent_Params Parms{};

	Parms.EventInfo = EventInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnStuffItemAttachedToWeapon
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint64                             WeaponItemID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             AttachmentItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnStuffItemAttachedToWeapon(uint64 WeaponItemID, uint64 AttachmentItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnStuffItemAttachedToWeapon");

	Params::AWTLPlayerController_Client_OnStuffItemAttachedToWeapon_Params Parms{};

	Parms.WeaponItemID = WeaponItemID;
	Parms.AttachmentItemID = AttachmentItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnSafeZoneLeave
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLPlayerController::Client_OnSafeZoneLeave()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnSafeZoneLeave");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnSafeZoneEnter
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLPlayerController::Client_OnSafeZoneEnter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnSafeZoneEnter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnReputationIncrease
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnReputationIncrease(uint8 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnReputationIncrease");

	Params::AWTLPlayerController_Client_OnReputationIncrease_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnReputationDecrease
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnReputationDecrease(uint8 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnReputationDecrease");

	Params::AWTLPlayerController_Client_OnReputationDecrease_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnRemoveInventoryItem
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnRemoveInventoryItem(enum class EWTLItemType ItemType, uint16 ItemTypeID, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnRemoveInventoryItem");

	Params::AWTLPlayerController_Client_OnRemoveInventoryItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnReceiveChatMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLFiltersChat         FilterChat                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ChatMessage                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      SenderPlayerName                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ToPlayersName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsNPCDialog                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnReceiveChatMessage(enum class EWTLFiltersChat FilterChat, const class FString& ChatMessage, const class FString& SenderPlayerName, const class FString& ToPlayersName, bool IsNPCDialog)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnReceiveChatMessage");

	Params::AWTLPlayerController_Client_OnReceiveChatMessage_Params Parms{};

	Parms.FilterChat = FilterChat;
	Parms.ChatMessage = ChatMessage;
	Parms.SenderPlayerName = SenderPlayerName;
	Parms.ToPlayersName = ToPlayersName;
	Parms.IsNPCDialog = IsNPCDialog;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnQuestFailed
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint32                             QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnQuestFailed(uint32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnQuestFailed");

	Params::AWTLPlayerController_Client_OnQuestFailed_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnQuestCompleted
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint32                             QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnQuestCompleted(uint32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnQuestCompleted");

	Params::AWTLPlayerController_Client_OnQuestCompleted_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnPlayerSuicide
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLPlayerController::Client_OnPlayerSuicide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnPlayerSuicide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnPlayerKilledByPlayer
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FText                        KillerName                                                       (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnPlayerKilledByPlayer(class FText& KillerName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnPlayerKilledByPlayer");

	Params::AWTLPlayerController_Client_OnPlayerKilledByPlayer_Params Parms{};

	Parms.KillerName = KillerName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnPlayerKilledByMonster
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              MonsterID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnPlayerKilledByMonster(int32 MonsterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnPlayerKilledByMonster");

	Params::AWTLPlayerController_Client_OnPlayerKilledByMonster_Params Parms{};

	Parms.MonsterID = MonsterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnPlayerKilledByEnemyNPC
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint16                             EnemyNPCGroupID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             FirstNameIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             LastNameIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnPlayerKilledByEnemyNPC(uint16 EnemyNPCGroupID, uint16 FirstNameIndex, uint16 LastNameIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnPlayerKilledByEnemyNPC");

	Params::AWTLPlayerController_Client_OnPlayerKilledByEnemyNPC_Params Parms{};

	Parms.EnemyNPCGroupID = EnemyNPCGroupID;
	Parms.FirstNameIndex = FirstNameIndex;
	Parms.LastNameIndex = LastNameIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnPlayerDied
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLPlayerController::Client_OnPlayerDied()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnPlayerDied");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnPDAModuleInstalled
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint16                             ModuleID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnPDAModuleInstalled(uint16 ModuleID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnPDAModuleInstalled");

	Params::AWTLPlayerController_Client_OnPDAModuleInstalled_Params Parms{};

	Parms.ModuleID = ModuleID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnNPCKilledWithBroadcastToKillers
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLEnemyNPC*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnNPCKilledWithBroadcastToKillers(class AWTLEnemyNPC* NPC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnNPCKilledWithBroadcastToKillers");

	Params::AWTLPlayerController_Client_OnNPCKilledWithBroadcastToKillers_Params Parms{};

	Parms.NPC = NPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnNewMailPackage
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class FString                      SenderName                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnNewMailPackage(const class FString& SenderName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnNewMailPackage");

	Params::AWTLPlayerController_Client_OnNewMailPackage_Params Parms{};

	Parms.SenderName = SenderName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnMonsterKilledWithBroadcastToKillers
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLMonsterPawn*             Monster                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnMonsterKilledWithBroadcastToKillers(class AWTLMonsterPawn* Monster)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnMonsterKilledWithBroadcastToKillers");

	Params::AWTLPlayerController_Client_OnMonsterKilledWithBroadcastToKillers_Params Parms{};

	Parms.Monster = Monster;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnMailMessageReceived
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class FString                      Subject                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnMailMessageReceived(const class FString& Subject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnMailMessageReceived");

	Params::AWTLPlayerController_Client_OnMailMessageReceived_Params Parms{};

	Parms.Subject = Subject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnMadeEffect
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterEffectType EffectType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              EffectValue                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnMadeEffect(class AActor* OtherActor, enum class EWTLCharacterEffectType EffectType, float EffectValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnMadeEffect");

	Params::AWTLPlayerController_Client_OnMadeEffect_Params Parms{};

	Parms.OtherActor = OtherActor;
	Parms.EffectType = EffectType;
	Parms.EffectValue = EffectValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnLongDistanceHit
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              Distance                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLColliderType        ColliderType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Kill                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnLongDistanceHit(int32 Distance, enum class EWTLColliderType ColliderType, bool Kill)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnLongDistanceHit");

	Params::AWTLPlayerController_Client_OnLongDistanceHit_Params Parms{};

	Parms.Distance = Distance;
	Parms.ColliderType = ColliderType;
	Parms.Kill = Kill;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnLevelUp
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              NewLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnLevelUp(uint8 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnLevelUp");

	Params::AWTLPlayerController_Client_OnLevelUp_Params Parms{};

	Parms.NewLevel = NewLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnLeftClan
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class FString                      ClanName                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnLeftClan(const class FString& ClanName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnLeftClan");

	Params::AWTLPlayerController_Client_OnLeftClan_Params Parms{};

	Parms.ClanName = ClanName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnJoinedClan
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class FString                      ClanName                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnJoinedClan(const class FString& ClanName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnJoinedClan");

	Params::AWTLPlayerController_Client_OnJoinedClan_Params Parms{};

	Parms.ClanName = ClanName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnJackpot
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLPlayerController::Client_OnJackpot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnJackpot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnItemUnequipped
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnItemUnequipped(enum class EWTLItemType ItemType, uint16 ItemTypeID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnItemUnequipped");

	Params::AWTLPlayerController_Client_OnItemUnequipped_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnItemsRepaired
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLPlayerController::Client_OnItemsRepaired()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnItemsRepaired");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnItemRepaired
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnItemRepaired(enum class EWTLItemType ItemType, uint16 ItemTypeID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnItemRepaired");

	Params::AWTLPlayerController_Client_OnItemRepaired_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnItemEquipped
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnItemEquipped(enum class EWTLItemType ItemType, uint16 ItemTypeID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnItemEquipped");

	Params::AWTLPlayerController_Client_OnItemEquipped_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnHaveNewMailPackages
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnHaveNewMailPackages(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnHaveNewMailPackages");

	Params::AWTLPlayerController_Client_OnHaveNewMailPackages_Params Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnGetCommissionSellItemsTypesCountResponse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLCommissionItemTypeCount>TypesCount                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnGetCommissionSellItemsTypesCountResponse(class AWTLNPCActor* NPC, TArray<struct FWTLCommissionItemTypeCount>& TypesCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnGetCommissionSellItemsTypesCountResponse");

	Params::AWTLPlayerController_Client_OnGetCommissionSellItemsTypesCountResponse_Params Parms{};

	Parms.NPC = NPC;
	Parms.TypesCount = TypesCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnGetCommissionSellItemsPageResponse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemsCount                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PageCount                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemPerPage                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PageIndex                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLSellItems               ItemsPage                                                        (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnGetCommissionSellItemsPageResponse(class AWTLNPCActor* NPC, int32 ItemsCount, int32 PageCount, int32 ItemPerPage, int32 PageIndex, struct FWTLSellItems& ItemsPage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnGetCommissionSellItemsPageResponse");

	Params::AWTLPlayerController_Client_OnGetCommissionSellItemsPageResponse_Params Parms{};

	Parms.NPC = NPC;
	Parms.ItemsCount = ItemsCount;
	Parms.PageCount = PageCount;
	Parms.ItemPerPage = ItemPerPage;
	Parms.PageIndex = PageIndex;
	Parms.ItemsPage = ItemsPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnGetClanStorageMoneyLogPageResponse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              RecordCount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PageCount                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              RecordsPerPage                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PageIndex                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLClanStorageMoneyLogRecord>RecordsPage                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnGetClanStorageMoneyLogPageResponse(class AWTLNPCActor* NPC, int32 RecordCount, int32 PageCount, int32 RecordsPerPage, int32 PageIndex, TArray<struct FWTLClanStorageMoneyLogRecord>& RecordsPage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnGetClanStorageMoneyLogPageResponse");

	Params::AWTLPlayerController_Client_OnGetClanStorageMoneyLogPageResponse_Params Parms{};

	Parms.NPC = NPC;
	Parms.RecordCount = RecordCount;
	Parms.PageCount = PageCount;
	Parms.RecordsPerPage = RecordsPerPage;
	Parms.PageIndex = PageIndex;
	Parms.RecordsPage = RecordsPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnGetClanStorageItemsLogPageResponse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              RecordCount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PageCount                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              RecordsPerPage                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PageIndex                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLClanStorageItemLogRecord>RecordsPage                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnGetClanStorageItemsLogPageResponse(class AWTLNPCActor* NPC, int32 RecordCount, int32 PageCount, int32 RecordsPerPage, int32 PageIndex, TArray<struct FWTLClanStorageItemLogRecord>& RecordsPage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnGetClanStorageItemsLogPageResponse");

	Params::AWTLPlayerController_Client_OnGetClanStorageItemsLogPageResponse_Params Parms{};

	Parms.NPC = NPC;
	Parms.RecordCount = RecordCount;
	Parms.PageCount = PageCount;
	Parms.RecordsPerPage = RecordsPerPage;
	Parms.PageIndex = PageIndex;
	Parms.RecordsPage = RecordsPage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnFortificationStateChanged
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLFortificationNotificationStateState                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnFortificationStateChanged(enum class EWTLFortificationNotificationState State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnFortificationStateChanged");

	Params::AWTLPlayerController_Client_OnFortificationStateChanged_Params Parms{};

	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnFactionScoreIncrease
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int32                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnFactionScoreIncrease(int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnFactionScoreIncrease");

	Params::AWTLPlayerController_Client_OnFactionScoreIncrease_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnFactionScoreDecrease
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int32                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnFactionScoreDecrease(int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnFactionScoreDecrease");

	Params::AWTLPlayerController_Client_OnFactionScoreDecrease_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnFactionRankIncrease
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              Rank                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnFactionRankIncrease(uint8 Rank)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnFactionRankIncrease");

	Params::AWTLPlayerController_Client_OnFactionRankIncrease_Params Parms{};

	Parms.Rank = Rank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnFactionRankDecrease
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              Rank                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnFactionRankDecrease(uint8 Rank)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnFactionRankDecrease");

	Params::AWTLPlayerController_Client_OnFactionRankDecrease_Params Parms{};

	Parms.Rank = Rank;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnExitFromGame
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLPlayerController::Client_OnExitFromGame()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnExitFromGame");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnExcludedFromClan
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// class FString                      ClanName                                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnExcludedFromClan(const class FString& ClanName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnExcludedFromClan");

	Params::AWTLPlayerController_Client_OnExcludedFromClan_Params Parms{};

	Parms.ClanName = ClanName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnEventLogRecord
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// enum class EWTLEventLogRecordType  RecordType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Priority                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      InstigatorName                                                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      VictimName                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Param1                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Param2                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Param3                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Param4                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnEventLogRecord(enum class EWTLEventLogRecordType RecordType, uint8 Priority, const class FString& InstigatorName, const class FString& VictimName, const class FString& Param1, const class FString& Param2, const class FString& Param3, const class FString& Param4)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnEventLogRecord");

	Params::AWTLPlayerController_Client_OnEventLogRecord_Params Parms{};

	Parms.RecordType = RecordType;
	Parms.Priority = Priority;
	Parms.InstigatorName = InstigatorName;
	Parms.VictimName = VictimName;
	Parms.Param1 = Param1;
	Parms.Param2 = Param2;
	Parms.Param3 = Param3;
	Parms.Param4 = Param4;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnEarnExperience
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint32                             ExperienceValue                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnEarnExperience(uint32 ExperienceValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnEarnExperience");

	Params::AWTLPlayerController_Client_OnEarnExperience_Params Parms{};

	Parms.ExperienceValue = ExperienceValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnDamageToActor
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FWTLDamageActorInfo> DamageInfoArray                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnDamageToActor(TArray<struct FWTLDamageActorInfo>& DamageInfoArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnDamageToActor");

	Params::AWTLPlayerController_Client_OnDamageToActor_Params Parms{};

	Parms.DamageInfoArray = DamageInfoArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnDamageFromActor
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FWTLDamageActorInfo> DamageInfoArray                                                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnDamageFromActor(TArray<struct FWTLDamageActorInfo>& DamageInfoArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnDamageFromActor");

	Params::AWTLPlayerController_Client_OnDamageFromActor_Params Parms{};

	Parms.DamageInfoArray = DamageInfoArray;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnCraftObjectProcessStarted
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int32                              CraftObjectID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CraftItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ProcessTime                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnCraftObjectProcessStarted(int32 CraftObjectID, int32 CraftItemID, float ProcessTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnCraftObjectProcessStarted");

	Params::AWTLPlayerController_Client_OnCraftObjectProcessStarted_Params Parms{};

	Parms.CraftObjectID = CraftObjectID;
	Parms.CraftItemID = CraftItemID;
	Parms.ProcessTime = ProcessTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnCraftObjectProcessFinished
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int32                              CraftObjectID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CraftItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnCraftObjectProcessFinished(int32 CraftObjectID, int32 CraftItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnCraftObjectProcessFinished");

	Params::AWTLPlayerController_Client_OnCraftObjectProcessFinished_Params Parms{};

	Parms.CraftObjectID = CraftObjectID;
	Parms.CraftItemID = CraftItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnConsumeItemResult
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               bIsSuccessfull                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              TimeToConsume                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnConsumeItemResult(bool bIsSuccessfull, const class FString& Description, float TimeToConsume)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnConsumeItemResult");

	Params::AWTLPlayerController_Client_OnConsumeItemResult_Params Parms{};

	Parms.bIsSuccessfull = bIsSuccessfull;
	Parms.Description = Description;
	Parms.TimeToConsume = TimeToConsume;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnConfederationReputationIncrease
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnConfederationReputationIncrease(uint8 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnConfederationReputationIncrease");

	Params::AWTLPlayerController_Client_OnConfederationReputationIncrease_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnConfederationReputationDecrease
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnConfederationReputationDecrease(uint8 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnConfederationReputationDecrease");

	Params::AWTLPlayerController_Client_OnConfederationReputationDecrease_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnClanLevelUp
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              NewLevel                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnClanLevelUp(uint8 NewLevel)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnClanLevelUp");

	Params::AWTLPlayerController_Client_OnClanLevelUp_Params Parms{};

	Parms.NewLevel = NewLevel;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnBlackSunsetReputationIncrease
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnBlackSunsetReputationIncrease(uint8 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnBlackSunsetReputationIncrease");

	Params::AWTLPlayerController_Client_OnBlackSunsetReputationIncrease_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnBlackSunsetReputationDecrease
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnBlackSunsetReputationDecrease(uint8 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnBlackSunsetReputationDecrease");

	Params::AWTLPlayerController_Client_OnBlackSunsetReputationDecrease_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnBarterDealRequestRejected
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnBarterDealRequestRejected(uint64 CharacterID, const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnBarterDealRequestRejected");

	Params::AWTLPlayerController_Client_OnBarterDealRequestRejected_Params Parms{};

	Parms.CharacterID = CharacterID;
	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnBarterDealRequestReceived
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FWTLBarterDealRequest       Request                                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnBarterDealRequestReceived(struct FWTLBarterDealRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnBarterDealRequestReceived");

	Params::AWTLPlayerController_Client_OnBarterDealRequestReceived_Params Parms{};

	Parms.Request = Request;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnBarterDealRequestCreated
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FWTLBarterDealRequest       Request                                                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnBarterDealRequestCreated(struct FWTLBarterDealRequest& Request)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnBarterDealRequestCreated");

	Params::AWTLPlayerController_Client_OnBarterDealRequestCreated_Params Parms{};

	Parms.Request = Request;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnBarterDealRequestCanceled
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint64                             FromCharacterID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ToCharacterID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnBarterDealRequestCanceled(uint64 FromCharacterID, uint64 ToCharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnBarterDealRequestCanceled");

	Params::AWTLPlayerController_Client_OnBarterDealRequestCanceled_Params Parms{};

	Parms.FromCharacterID = FromCharacterID;
	Parms.ToCharacterID = ToCharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnBarterDealRequestAccepted
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnBarterDealRequestAccepted(uint64 CharacterID, const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnBarterDealRequestAccepted");

	Params::AWTLPlayerController_Client_OnBarterDealRequestAccepted_Params Parms{};

	Parms.CharacterID = CharacterID;
	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnBalanceReceivedFromCharacter
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                      SenderName                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Amount                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnBalanceReceivedFromCharacter(const class FString& SenderName, const class FString& Description, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnBalanceReceivedFromCharacter");

	Params::AWTLPlayerController_Client_OnBalanceReceivedFromCharacter_Params Parms{};

	Parms.SenderName = SenderName;
	Parms.Description = Description;
	Parms.Amount = Amount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnBalanceChange
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int32                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnBalanceChange(int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnBalanceChange");

	Params::AWTLPlayerController_Client_OnBalanceChange_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnBadConnectionState
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLPlayerController::Client_OnBadConnectionState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnBadConnectionState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnAddInventoryItem
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnAddInventoryItem(enum class EWTLItemType ItemType, uint16 ItemTypeID, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnAddInventoryItem");

	Params::AWTLPlayerController_Client_OnAddInventoryItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnAccountBalanceChange
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// int32                              Delta                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnAccountBalanceChange(int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnAccountBalanceChange");

	Params::AWTLPlayerController_Client_OnAccountBalanceChange_Params Parms{};

	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_OnAccountAchievement
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint16                             AchievementID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_OnAccountAchievement(uint16 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_OnAccountAchievement");

	Params::AWTLPlayerController_Client_OnAccountAchievement_Params Parms{};

	Parms.AchievementID = AchievementID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_LogQuestDescription
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                DialogInstigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_LogQuestDescription(class AWTLNPCActor* DialogInstigator, int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_LogQuestDescription");

	Params::AWTLPlayerController_Client_LogQuestDescription_Params Parms{};

	Parms.DialogInstigator = DialogInstigator;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_ForceSendScreenshot
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLPlayerController::Client_ForceSendScreenshot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_ForceSendScreenshot");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_EndDialog
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                DialogInstigator                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_EndDialog(class AWTLNPCActor* DialogInstigator)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_EndDialog");

	Params::AWTLPlayerController_Client_EndDialog_Params Parms{};

	Parms.DialogInstigator = DialogInstigator;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_EndBarterDeal
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_EndBarterDeal(bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_EndBarterDeal");

	Params::AWTLPlayerController_Client_EndBarterDeal_Params Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_EditorGetGroupInvite
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FWTLGroupInvite             Invite                                                           (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_EditorGetGroupInvite(struct FWTLGroupInvite& Invite)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_EditorGetGroupInvite");

	Params::AWTLPlayerController_Client_EditorGetGroupInvite_Params Parms{};

	Parms.Invite = Invite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_BeginWeaponPartsExchange
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                NPCActor                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_BeginWeaponPartsExchange(class AWTLNPCActor* NPCActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_BeginWeaponPartsExchange");

	Params::AWTLPlayerController_Client_BeginWeaponPartsExchange_Params Parms{};

	Parms.NPCActor = NPCActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_BeginTrade
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      TradingActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_BeginTrade(class AActor* TradingActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_BeginTrade");

	Params::AWTLPlayerController_Client_BeginTrade_Params Parms{};

	Parms.TradingActor = TradingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_BeginRepair
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                RepairingActor                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_BeginRepair(class AWTLNPCActor* RepairingActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_BeginRepair");

	Params::AWTLPlayerController_Client_BeginRepair_Params Parms{};

	Parms.RepairingActor = RepairingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_BeginItemsCustomization
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLNPCActor*                NPCActor                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_BeginItemsCustomization(class AWTLNPCActor* NPCActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_BeginItemsCustomization");

	Params::AWTLPlayerController_Client_BeginItemsCustomization_Params Parms{};

	Parms.NPCActor = NPCActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.Client_BeginInformationDialog
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLTriggerObject*           TriggerObject                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InformationDialogID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        Title                                                            (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerController::Client_BeginInformationDialog(class AWTLTriggerObject* TriggerObject, int32 InformationDialogID, class FText& Title)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "Client_BeginInformationDialog");

	Params::AWTLPlayerController_Client_BeginInformationDialog_Params Parms{};

	Parms.TriggerObject = TriggerObject;
	Parms.InformationDialogID = InformationDialogID;
	Parms.Title = Title;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.ClearHUDWidgets
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLPlayerController::ClearHUDWidgets()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "ClearHUDWidgets");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.ChargePlaceableStuff
// (Final, Native, Public)
// Parameters:
// class AWTLPlaceableStuff*          PlaceableStuff                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerController::ChargePlaceableStuff(class AWTLPlaceableStuff* PlaceableStuff)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "ChargePlaceableStuff");

	Params::AWTLPlayerController_ChargePlaceableStuff_Params Parms{};

	Parms.PlaceableStuff = PlaceableStuff;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.CancelSuicide
// (Final, Native, Public)
// Parameters:

void AWTLPlayerController::CancelSuicide()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "CancelSuicide");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerController.CancelExitGame
// (Final, Native, Public)
// Parameters:

void AWTLPlayerController::CancelExitGame()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerController", "CancelExitGame");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPlayerStart
// (Actor)

class UClass* AWTLPlayerStart::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPlayerStart");

	return Clss;
}


// WTLPlayerStart WTL.Default__WTLPlayerStart
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLPlayerStart* AWTLPlayerStart::GetDefaultObj()
{
	static class AWTLPlayerStart* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLPlayerStart*>(AWTLPlayerStart::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLPlayerState
// (Actor)

class UClass* AWTLPlayerState::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPlayerState");

	return Clss;
}


// WTLPlayerState WTL.Default__WTLPlayerState
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLPlayerState* AWTLPlayerState::GetDefaultObj()
{
	static class AWTLPlayerState* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLPlayerState*>(AWTLPlayerState::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPlayerState.Server_ViewOrReadItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint16                             ArtefactID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ViewOrReadItem(uint16 ArtefactID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ViewOrReadItem");

	Params::AWTLPlayerState_Server_ViewOrReadItem_Params Parms{};

	Parms.ArtefactID = ArtefactID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UseRepairKit
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             RepaitKitItemID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UseRepairKit(uint64 RepaitKitItemID, enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UseRepairKit");

	Params::AWTLPlayerState_Server_UseRepairKit_Params Parms{};

	Parms.RepaitKitItemID = RepaitKitItemID;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UseNewPassport
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UseNewPassport(uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UseNewPassport");

	Params::AWTLPlayerState_Server_UseNewPassport_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UseModificationKit
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             RepaitKitItemID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UseModificationKit(uint64 RepaitKitItemID, enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UseModificationKit");

	Params::AWTLPlayerState_Server_UseModificationKit_Params Parms{};

	Parms.RepaitKitItemID = RepaitKitItemID;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UseJunkMachine
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLJunkMachineBase*         JunkMachine                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLSellingItemInfo> Items                                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UseJunkMachine(class AWTLJunkMachineBase* JunkMachine, TArray<struct FWTLSellingItemInfo>& Items)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UseJunkMachine");

	Params::AWTLPlayerState_Server_UseJunkMachine_Params Parms{};

	Parms.JunkMachine = JunkMachine;
	Parms.Items = Items;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UseItemFromStorage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UseItemFromStorage(class AActor* StorageContentActor, enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UseItemFromStorage");

	Params::AWTLPlayerState_Server_UseItemFromStorage_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UseItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UseItem(enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UseItem");

	Params::AWTLPlayerState_Server_UseItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UpdateItemCustomizationWithSprayCan
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             SprayCanItemID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UpdateItemCustomizationWithSprayCan(enum class EWTLItemType ItemType, uint64 ItemId, uint64 SprayCanItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UpdateItemCustomizationWithSprayCan");

	Params::AWTLPlayerState_Server_UpdateItemCustomizationWithSprayCan_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SprayCanItemID = SprayCanItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UpdateItemCustomization
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              CustomizationScalar                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              CustomizationColor                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UpdateItemCustomization(class AWTLNPCActor* NPC, enum class EWTLItemType ItemType, uint64 ItemId, uint8 CustomizationScalar, uint8 CustomizationColor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UpdateItemCustomization");

	Params::AWTLPlayerState_Server_UpdateItemCustomization_Params Parms{};

	Parms.NPC = NPC;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.CustomizationScalar = CustomizationScalar;
	Parms.CustomizationColor = CustomizationColor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UpdateCommissionItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Price                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MinBuyCount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                             CommissionDaysDelta                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UpdateCommissionItem(class AWTLNPCActor* NPC, enum class EWTLItemType ItemType, uint64 ItemId, float Price, int32 MinBuyCount, uint32 CommissionDaysDelta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UpdateCommissionItem");

	Params::AWTLPlayerState_Server_UpdateCommissionItem_Params Parms{};

	Parms.NPC = NPC;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.Price = Price;
	Parms.MinBuyCount = MinBuyCount;
	Parms.CommissionDaysDelta = CommissionDaysDelta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UpdateClanStorageTab
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ImageIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      TabName                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint64>                     CanPutClanPolicyGroups                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint64>                     CanTakeClanPolicyGroups                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UpdateClanStorageTab(class AWTLNPCActor* NPC, uint8 TabIndex, uint8 ImageIndex, const class FString& TabName, const class FString& Description, TArray<uint64>& CanPutClanPolicyGroups, TArray<uint64>& CanTakeClanPolicyGroups)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UpdateClanStorageTab");

	Params::AWTLPlayerState_Server_UpdateClanStorageTab_Params Parms{};

	Parms.NPC = NPC;
	Parms.TabIndex = TabIndex;
	Parms.ImageIndex = ImageIndex;
	Parms.TabName = TabName;
	Parms.Description = Description;
	Parms.CanPutClanPolicyGroups = CanPutClanPolicyGroups;
	Parms.CanTakeClanPolicyGroups = CanTakeClanPolicyGroups;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UpdateClanPolicyGroup
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ClanPolicyGroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Name                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UpdateClanPolicyGroup(uint64 ClanPolicyGroupID, const class FString& Name)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UpdateClanPolicyGroup");

	Params::AWTLPlayerState_Server_UpdateClanPolicyGroup_Params Parms{};

	Parms.ClanPolicyGroupID = ClanPolicyGroupID;
	Parms.Name = Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UpdateCharacterParameters
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              Strength                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Dexterity                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Stamina                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Accuracy                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Intelligence                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Fortune                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UpdateCharacterParameters(uint8 Strength, uint8 Dexterity, uint8 Stamina, uint8 Accuracy, uint8 Intelligence, uint8 Fortune)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UpdateCharacterParameters");

	Params::AWTLPlayerState_Server_UpdateCharacterParameters_Params Parms{};

	Parms.Strength = Strength;
	Parms.Dexterity = Dexterity;
	Parms.Stamina = Stamina;
	Parms.Accuracy = Accuracy;
	Parms.Intelligence = Intelligence;
	Parms.Fortune = Fortune;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UnloadWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UnloadWeapon(uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UnloadWeapon");

	Params::AWTLPlayerState_Server_UnloadWeapon_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UniteAllStorageItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UniteAllStorageItems(class AActor* StorageContentActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UniteAllStorageItems");

	Params::AWTLPlayerState_Server_UniteAllStorageItems_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UniteAllItemsOfType
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UniteAllItemsOfType(enum class EWTLItemType ItemType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UniteAllItemsOfType");

	Params::AWTLPlayerState_Server_UniteAllItemsOfType_Params Parms{};

	Parms.ItemType = ItemType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UniteAllItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_UniteAllItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UniteAllItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UniteAllClanStorageItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UniteAllClanStorageItems(class AWTLNPCActor* NPC, uint8 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UniteAllClanStorageItems");

	Params::AWTLPlayerState_Server_UniteAllClanStorageItems_Params Parms{};

	Parms.NPC = NPC;
	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_Unite2StorageItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemID1                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemID2                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_Unite2StorageItems(class AActor* StorageContentActor, enum class EWTLItemType ItemType, uint64 ItemID1, uint64 ItemID2)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_Unite2StorageItems");

	Params::AWTLPlayerState_Server_Unite2StorageItems_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;
	Parms.ItemType = ItemType;
	Parms.ItemID1 = ItemID1;
	Parms.ItemID2 = ItemID2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_Unite2InventoryItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemID1                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemID2                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_Unite2InventoryItems(enum class EWTLItemType ItemType, uint64 ItemID1, uint64 ItemID2)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_Unite2InventoryItems");

	Params::AWTLPlayerState_Server_Unite2InventoryItems_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemID1 = ItemID1;
	Parms.ItemID2 = ItemID2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_Unite2ClanStorageItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemID1                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemID2                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_Unite2ClanStorageItems(class AWTLNPCActor* NPC, uint8 TabIndex, enum class EWTLItemType ItemType, uint64 ItemID1, uint64 ItemID2)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_Unite2ClanStorageItems");

	Params::AWTLPlayerState_Server_Unite2ClanStorageItems_Params Parms{};

	Parms.NPC = NPC;
	Parms.TabIndex = TabIndex;
	Parms.ItemType = ItemType;
	Parms.ItemID1 = ItemID1;
	Parms.ItemID2 = ItemID2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UnequipStuffItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UnequipStuffItem(enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UnequipStuffItem");

	Params::AWTLPlayerState_Server_UnequipStuffItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_UnequipItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_UnequipItem(enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_UnequipItem");

	Params::AWTLPlayerState_Server_UnequipItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_TeleportToFortificationCommandCore
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             TeleportationDeviceItemID                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWTLFortificationCommandCore*FortificationCommandCore                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_TeleportToFortificationCommandCore(uint64 TeleportationDeviceItemID, class AWTLCharacter* Character, class AWTLFortificationCommandCore* FortificationCommandCore)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_TeleportToFortificationCommandCore");

	Params::AWTLPlayerState_Server_TeleportToFortificationCommandCore_Params Parms{};

	Parms.TeleportationDeviceItemID = TeleportationDeviceItemID;
	Parms.Character = Character;
	Parms.FortificationCommandCore = FortificationCommandCore;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_TakeMoneyFromClanStorage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_TakeMoneyFromClanStorage(class AWTLNPCActor* NPC, uint8 TabIndex, int32 MoneyAmount, const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_TakeMoneyFromClanStorage");

	Params::AWTLPlayerState_Server_TakeMoneyFromClanStorage_Params Parms{};

	Parms.NPC = NPC;
	Parms.TabIndex = TabIndex;
	Parms.MoneyAmount = MoneyAmount;
	Parms.Description = Description;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_TakeMoneyFromCharacterBalance
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_TakeMoneyFromCharacterBalance(class AWTLNPCActor* NPC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_TakeMoneyFromCharacterBalance");

	Params::AWTLPlayerState_Server_TakeMoneyFromCharacterBalance_Params Parms{};

	Parms.NPC = NPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_TakeClanQuest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_TakeClanQuest(int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_TakeClanQuest");

	Params::AWTLPlayerState_Server_TakeClanQuest_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_TakeBulletinBoarQuest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLBulletinBoard*           BulletinBoard                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_TakeBulletinBoarQuest(class AWTLBulletinBoard* BulletinBoard, int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_TakeBulletinBoarQuest");

	Params::AWTLPlayerState_Server_TakeBulletinBoarQuest_Params Parms{};

	Parms.BulletinBoard = BulletinBoard;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SynchronizeQuestStates
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ControlSum                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SynchronizeQuestStates(uint64 ControlSum)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SynchronizeQuestStates");

	Params::AWTLPlayerState_Server_SynchronizeQuestStates_Params Parms{};

	Parms.ControlSum = ControlSum;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SwapStorageItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              FromSlotNumber                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ToSlotNumber                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SwapStorageItems(class AActor* StorageContentActor, uint8 FromSlotNumber, uint8 ToSlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SwapStorageItems");

	Params::AWTLPlayerState_Server_SwapStorageItems_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;
	Parms.FromSlotNumber = FromSlotNumber;
	Parms.ToSlotNumber = ToSlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SwapInventoryItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              FromSlotNumber                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ToSlotNumber                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SwapInventoryItems(uint8 FromSlotNumber, uint8 ToSlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SwapInventoryItems");

	Params::AWTLPlayerState_Server_SwapInventoryItems_Params Parms{};

	Parms.FromSlotNumber = FromSlotNumber;
	Parms.ToSlotNumber = ToSlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SwapClanStorageItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              FromSlotNumber                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ToSlotNumber                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SwapClanStorageItems(class AWTLNPCActor* NPC, uint8 TabIndex, uint8 FromSlotNumber, uint8 ToSlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SwapClanStorageItems");

	Params::AWTLPlayerState_Server_SwapClanStorageItems_Params Parms{};

	Parms.NPC = NPC;
	Parms.TabIndex = TabIndex;
	Parms.FromSlotNumber = FromSlotNumber;
	Parms.ToSlotNumber = ToSlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SwapArmorPlates
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ArmorItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SwapArmorPlates(uint64 ArmorItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SwapArmorPlates");

	Params::AWTLPlayerState_Server_SwapArmorPlates_Params Parms{};

	Parms.ArmorItemID = ArmorItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SplitItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              NewItemCount                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SplitItem(enum class EWTLItemType ItemType, uint64 ItemId, int32 NewItemCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SplitItem");

	Params::AWTLPlayerState_Server_SplitItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.NewItemCount = NewItemCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ShowPlayersTable
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_ShowPlayersTable()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ShowPlayersTable");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ShowGodConsole
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_ShowGodConsole()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ShowGodConsole");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetPVPMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               PVPEnabled                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetPVPMode(bool PVPEnabled)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetPVPMode");

	Params::AWTLPlayerState_Server_SetPVPMode_Params Parms{};

	Parms.PVPEnabled = PVPEnabled;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetMoneyToBarterDeal
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetMoneyToBarterDeal(int32 MoneyAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetMoneyToBarterDeal");

	Params::AWTLPlayerState_Server_SetMoneyToBarterDeal_Params Parms{};

	Parms.MoneyAmount = MoneyAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetMailMessageRead
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             MessageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetMailMessageRead(uint64 MessageID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetMailMessageRead");

	Params::AWTLPlayerState_Server_SetMailMessageRead_Params Parms{};

	Parms.MessageID = MessageID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetItemCustomizationName
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             CustomizationItemID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CustomizationName                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetItemCustomizationName(enum class EWTLItemType ItemType, uint64 ItemId, uint64 CustomizationItemID, const class FString& CustomizationName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetItemCustomizationName");

	Params::AWTLPlayerState_Server_SetItemCustomizationName_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.CustomizationItemID = CustomizationItemID;
	Parms.CustomizationName = CustomizationName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetDebugIsFounder
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               IsFounder                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetDebugIsFounder(bool IsFounder)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetDebugIsFounder");

	Params::AWTLPlayerState_Server_SetDebugIsFounder_Params Parms{};

	Parms.IsFounder = IsFounder;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetDebugHavePremium
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               HavePremium                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetDebugHavePremium(bool HavePremium)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetDebugHavePremium");

	Params::AWTLPlayerState_Server_SetDebugHavePremium_Params Parms{};

	Parms.HavePremium = HavePremium;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetDebugCharacterPlayerType
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLPlayerType          PlayerType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetDebugCharacterPlayerType(enum class EWTLPlayerType PlayerType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetDebugCharacterPlayerType");

	Params::AWTLPlayerState_Server_SetDebugCharacterPlayerType_Params Parms{};

	Parms.PlayerType = PlayerType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetDebugCharacterIsInClan
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               IsInClan                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetDebugCharacterIsInClan(bool IsInClan)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetDebugCharacterIsInClan");

	Params::AWTLPlayerState_Server_SetDebugCharacterIsInClan_Params Parms{};

	Parms.IsInClan = IsInClan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetDebugCharacterClanMemberType
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLClanMemberType      ClanMemberType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetDebugCharacterClanMemberType(enum class EWTLClanMemberType ClanMemberType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetDebugCharacterClanMemberType");

	Params::AWTLPlayerState_Server_SetDebugCharacterClanMemberType_Params Parms{};

	Parms.ClanMemberType = ClanMemberType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetDebugCharacterBodyType
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              BodyTypeIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetDebugCharacterBodyType(int32 BodyTypeIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetDebugCharacterBodyType");

	Params::AWTLPlayerState_Server_SetDebugCharacterBodyType_Params Parms{};

	Parms.BodyTypeIndex = BodyTypeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetClanLeader
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetClanLeader(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetClanLeader");

	Params::AWTLPlayerState_Server_SetClanLeader_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetClanDescription
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetClanDescription(const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetClanDescription");

	Params::AWTLPlayerState_Server_SetClanDescription_Params Parms{};

	Parms.Description = Description;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetClanDeputyLeader
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetClanDeputyLeader(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetClanDeputyLeader");

	Params::AWTLPlayerState_Server_SetClanDeputyLeader_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetBarterDealReady
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetBarterDealReady(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetBarterDealReady");

	Params::AWTLPlayerState_Server_SetBarterDealReady_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetBarterDealAgreement
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               AcceptState                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetBarterDealAgreement(class AWTLCharacter* Character, bool AcceptState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetBarterDealAgreement");

	Params::AWTLPlayerState_Server_SetBarterDealAgreement_Params Parms{};

	Parms.Character = Character;
	Parms.AcceptState = AcceptState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SetActiveQuest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SetActiveQuest(int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SetActiveQuest");

	Params::AWTLPlayerState_Server_SetActiveQuest_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SendMoneyToCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SendMoneyToCharacter(uint64 CharacterID, int32 MoneyAmount, const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SendMoneyToCharacter");

	Params::AWTLPlayerState_Server_SendMoneyToCharacter_Params Parms{};

	Parms.CharacterID = CharacterID;
	Parms.MoneyAmount = MoneyAmount;
	Parms.Description = Description;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SendMailPackage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLMailBox*                 MailBox                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLMailPackageDeliveryTypeDeliveryType                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      RecipientName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLSellingItemInfo> Items                                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MessageText                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SendMailPackage(class AWTLMailBox* MailBox, enum class EWTLMailPackageDeliveryType DeliveryType, const class FString& RecipientName, TArray<struct FWTLSellingItemInfo>& Items, int32 MoneyAmount, const class FString& MessageText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SendMailPackage");

	Params::AWTLPlayerState_Server_SendMailPackage_Params Parms{};

	Parms.MailBox = MailBox;
	Parms.DeliveryType = DeliveryType;
	Parms.RecipientName = RecipientName;
	Parms.Items = Items;
	Parms.MoneyAmount = MoneyAmount;
	Parms.MessageText = MessageText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SendMailMessageToClanMembers
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              Priority                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Subject                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Text                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SendMailMessageToClanMembers(uint8 Priority, const class FString& Subject, const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SendMailMessageToClanMembers");

	Params::AWTLPlayerState_Server_SendMailMessageToClanMembers_Params Parms{};

	Parms.Priority = Priority;
	Parms.Subject = Subject;
	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SendMailMessage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                      RecipientName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Priority                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Subject                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Text                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SendMailMessage(const class FString& RecipientName, uint8 Priority, const class FString& Subject, const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SendMailMessage");

	Params::AWTLPlayerState_Server_SendMailMessage_Params Parms{};

	Parms.RecipientName = RecipientName;
	Parms.Priority = Priority;
	Parms.Subject = Subject;
	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SendClanMemberRequest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint16                             ClanID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Commentary                                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SendClanMemberRequest(uint16 ClanID, const class FString& Commentary)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SendClanMemberRequest");

	Params::AWTLPlayerState_Server_SendClanMemberRequest_Params Parms{};

	Parms.ClanID = ClanID;
	Parms.Commentary = Commentary;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SendClanInviteToCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SendClanInviteToCharacter(const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SendClanInviteToCharacter");

	Params::AWTLPlayerState_Server_SendClanInviteToCharacter_Params Parms{};

	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SendBarterDealRequest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      MessageText                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SendBarterDealRequest(uint64 CharacterID, const class FString& MessageText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SendBarterDealRequest");

	Params::AWTLPlayerState_Server_SendBarterDealRequest_Params Parms{};

	Parms.CharacterID = CharacterID;
	Parms.MessageText = MessageText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_SellItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      TradingActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLSellingItemInfo> SellingItems                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_SellItems(class AActor* TradingActor, TArray<struct FWTLSellingItemInfo>& SellingItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_SellItems");

	Params::AWTLPlayerState_Server_SellItems_Params Parms{};

	Parms.TradingActor = TradingActor;
	Parms.SellingItems = SellingItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ResetCharacterParameters
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_ResetCharacterParameters()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ResetCharacterParameters");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RequestPrivateLootFromStorageContentActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RequestPrivateLootFromStorageContentActor(class AActor* StorageContentActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RequestPrivateLootFromStorageContentActor");

	Params::AWTLPlayerState_Server_RequestPrivateLootFromStorageContentActor_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ReplicateBarterDeals
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ReplicateBarterDeals(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ReplicateBarterDeals");

	Params::AWTLPlayerState_Server_ReplicateBarterDeals_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RepairStuffItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             StuffItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             OtherItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RepairStuffItem(uint64 StuffItemID, uint64 OtherItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RepairStuffItem");

	Params::AWTLPlayerState_Server_RepairStuffItem_Params Parms{};

	Parms.StuffItemID = StuffItemID;
	Parms.OtherItemID = OtherItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RepairItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                GunsmithNPC                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLIdentityItem>    RepairItems                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RepairItems(class AWTLNPCActor* GunsmithNPC, TArray<struct FWTLIdentityItem>& RepairItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RepairItems");

	Params::AWTLPlayerState_Server_RepairItems_Params Parms{};

	Parms.GunsmithNPC = GunsmithNPC;
	Parms.RepairItems = RepairItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveWeaponAttachmentFromSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             WeaponItemID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLWeaponAttachmentSlotTypeSlotType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveWeaponAttachmentFromSlot(uint64 WeaponItemID, enum class EWTLWeaponAttachmentSlotType SlotType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveWeaponAttachmentFromSlot");

	Params::AWTLPlayerState_Server_RemoveWeaponAttachmentFromSlot_Params Parms{};

	Parms.WeaponItemID = WeaponItemID;
	Parms.SlotType = SlotType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveWeaponAttachment
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             WeaponItemID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveWeaponAttachment(uint64 WeaponItemID, uint16 ItemTypeID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveWeaponAttachment");

	Params::AWTLPlayerState_Server_RemoveWeaponAttachment_Params Parms{};

	Parms.WeaponItemID = WeaponItemID;
	Parms.ItemTypeID = ItemTypeID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveSkillFromCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint16                             SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveSkillFromCharacter(uint16 SkillID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveSkillFromCharacter");

	Params::AWTLPlayerState_Server_RemoveSkillFromCharacter_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemovePDAModuleID
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint16                             ModuleID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemovePDAModuleID(uint16 ModuleID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemovePDAModuleID");

	Params::AWTLPlayerState_Server_RemovePDAModuleID_Params Parms{};

	Parms.ModuleID = ModuleID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveItemFromContainer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ContainerItemID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveItemFromContainer(uint64 ContainerItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveItemFromContainer");

	Params::AWTLPlayerState_Server_RemoveItemFromContainer_Params Parms{};

	Parms.ContainerItemID = ContainerItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveItemFromCommission
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveItemFromCommission(class AWTLNPCActor* NPC, enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveItemFromCommission");

	Params::AWTLPlayerState_Server_RemoveItemFromCommission_Params Parms{};

	Parms.NPC = NPC;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveItemFromBarterDeal
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveItemFromBarterDeal(enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveItemFromBarterDeal");

	Params::AWTLPlayerState_Server_RemoveItemFromBarterDeal_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveContact
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveContact(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveContact");

	Params::AWTLPlayerState_Server_RemoveContact_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveClanDeputyLeader
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveClanDeputyLeader(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveClanDeputyLeader");

	Params::AWTLPlayerState_Server_RemoveClanDeputyLeader_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveArmorPlate
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ArmorItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLArmorPlateType      ArmorPlateType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveArmorPlate(uint64 ArmorItemID, enum class EWTLArmorPlateType ArmorPlateType, uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveArmorPlate");

	Params::AWTLPlayerState_Server_RemoveArmorPlate_Params Parms{};

	Parms.ArmorItemID = ArmorItemID;
	Parms.ArmorPlateType = ArmorPlateType;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveAllWeaponAttachments
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             WeaponItemID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveAllWeaponAttachments(uint64 WeaponItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveAllWeaponAttachments");

	Params::AWTLPlayerState_Server_RemoveAllWeaponAttachments_Params Parms{};

	Parms.WeaponItemID = WeaponItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RemoveAllArmorPlates
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ArmorItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RemoveAllArmorPlates(uint64 ArmorItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RemoveAllArmorPlates");

	Params::AWTLPlayerState_Server_RemoveAllArmorPlates_Params Parms{};

	Parms.ArmorItemID = ArmorItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_RejectBarterDealRequest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_RejectBarterDealRequest(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_RejectBarterDealRequest");

	Params::AWTLPlayerState_Server_RejectBarterDealRequest_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ReceiveMailPackage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLMailBox*                 MailBox                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             MailPackageID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ReceiveMailPackage(class AWTLMailBox* MailBox, uint64 MailPackageID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ReceiveMailPackage");

	Params::AWTLPlayerState_Server_ReceiveMailPackage_Params Parms{};

	Parms.MailBox = MailBox;
	Parms.MailPackageID = MailPackageID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_PutMoneyToClanStorage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_PutMoneyToClanStorage(class AWTLNPCActor* NPC, uint8 TabIndex, int32 MoneyAmount, const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_PutMoneyToClanStorage");

	Params::AWTLPlayerState_Server_PutMoneyToClanStorage_Params Parms{};

	Parms.NPC = NPC;
	Parms.TabIndex = TabIndex;
	Parms.MoneyAmount = MoneyAmount;
	Parms.Description = Description;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_PutItemToAccountInventory
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_PutItemToAccountInventory(enum class EWTLItemType ItemType, uint64 ItemId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_PutItemToAccountInventory");

	Params::AWTLPlayerState_Server_PutItemToAccountInventory_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_PutItemOnCommission
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Price                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              MinBuyCount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CommissionDays                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_PutItemOnCommission(class AWTLNPCActor* NPC, enum class EWTLItemType ItemType, uint64 ItemId, float Price, int32 MinBuyCount, int32 CommissionDays)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_PutItemOnCommission");

	Params::AWTLPlayerState_Server_PutItemOnCommission_Params Parms{};

	Parms.NPC = NPC;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.Price = Price;
	Parms.MinBuyCount = MinBuyCount;
	Parms.CommissionDays = CommissionDays;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_PlaceItemToStorageContentActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_PlaceItemToStorageContentActor(class AActor* StorageContentActor, enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_PlaceItemToStorageContentActor");

	Params::AWTLPlayerState_Server_PlaceItemToStorageContentActor_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_PlaceItemToClanStorage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_PlaceItemToClanStorage(class AWTLNPCActor* NPC, uint8 TabIndex, enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber, int32 Count, const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_PlaceItemToClanStorage");

	Params::AWTLPlayerState_Server_PlaceItemToClanStorage_Params Parms{};

	Parms.NPC = NPC;
	Parms.TabIndex = TabIndex;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;
	Parms.Count = Count;
	Parms.Description = Description;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_PlaceItemInContainer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ContainerItemID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_PlaceItemInContainer(uint64 ContainerItemID, enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_PlaceItemInContainer");

	Params::AWTLPlayerState_Server_PlaceItemInContainer_Params Parms{};

	Parms.ContainerItemID = ContainerItemID;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_PickupItemFromStorageContentActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_PickupItemFromStorageContentActor(class AActor* StorageContentActor, enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_PickupItemFromStorageContentActor");

	Params::AWTLPlayerState_Server_PickupItemFromStorageContentActor_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_PickupItemFromClanStorage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_PickupItemFromClanStorage(class AWTLNPCActor* NPC, uint8 TabIndex, enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber, int32 Count, const class FString& Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_PickupItemFromClanStorage");

	Params::AWTLPlayerState_Server_PickupItemFromClanStorage_Params Parms{};

	Parms.NPC = NPC;
	Parms.TabIndex = TabIndex;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;
	Parms.Count = Count;
	Parms.Description = Description;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_PickupAllItemsFromStorageContentActor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_PickupAllItemsFromStorageContentActor(class AActor* StorageContentActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_PickupAllItemsFromStorageContentActor");

	Params::AWTLPlayerState_Server_PickupAllItemsFromStorageContentActor_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_OptimizeStorageItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_OptimizeStorageItems(class AActor* StorageContentActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_OptimizeStorageItems");

	Params::AWTLPlayerState_Server_OptimizeStorageItems_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_OptimizeItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_OptimizeItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_OptimizeItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_OptimizeClanStorageItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_OptimizeClanStorageItems(class AWTLNPCActor* NPC, uint8 TabIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_OptimizeClanStorageItems");

	Params::AWTLPlayerState_Server_OptimizeClanStorageItems_Params Parms{};

	Parms.NPC = NPC;
	Parms.TabIndex = TabIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_MoveStuffItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_MoveStuffItem(enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_MoveStuffItem");

	Params::AWTLPlayerState_Server_MoveStuffItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_MoveStorageItemToSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_MoveStorageItemToSlot(class AActor* StorageContentActor, enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_MoveStorageItemToSlot");

	Params::AWTLPlayerState_Server_MoveStorageItemToSlot_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_MoveOrSwapFastAccessSlotItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              FromSlotNumber                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ToSlotNumber                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_MoveOrSwapFastAccessSlotItem(uint8 FromSlotNumber, uint8 ToSlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_MoveOrSwapFastAccessSlotItem");

	Params::AWTLPlayerState_Server_MoveOrSwapFastAccessSlotItem_Params Parms{};

	Parms.FromSlotNumber = FromSlotNumber;
	Parms.ToSlotNumber = ToSlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_MoveInventoryItemToSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_MoveInventoryItemToSlot(enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_MoveInventoryItemToSlot");

	Params::AWTLPlayerState_Server_MoveInventoryItemToSlot_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_MoveClanStorageItemToSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              NewTabIndex                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              NewSlotNumber                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_MoveClanStorageItemToSlot(class AWTLNPCActor* NPC, uint8 TabIndex, enum class EWTLItemType ItemType, uint64 ItemId, uint8 NewTabIndex, uint8 NewSlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_MoveClanStorageItemToSlot");

	Params::AWTLPlayerState_Server_MoveClanStorageItemToSlot_Params Parms{};

	Parms.NPC = NPC;
	Parms.TabIndex = TabIndex;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.NewTabIndex = NewTabIndex;
	Parms.NewSlotNumber = NewSlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_MoveCharacterToPointLocation
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     PointLocation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               UseCharacterCurrentRotation                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              PointRotationYaw                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_MoveCharacterToPointLocation(class AWTLCharacter* Character, const struct FVector& PointLocation, bool UseCharacterCurrentRotation, float PointRotationYaw)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_MoveCharacterToPointLocation");

	Params::AWTLPlayerState_Server_MoveCharacterToPointLocation_Params Parms{};

	Parms.Character = Character;
	Parms.PointLocation = PointLocation;
	Parms.UseCharacterCurrentRotation = UseCharacterCurrentRotation;
	Parms.PointRotationYaw = PointRotationYaw;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_MakeExtractFromItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ExtractorItemID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ContainerItemID                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLExtractItemInfo> ExtractItems                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_MakeExtractFromItems(uint64 ExtractorItemID, uint64 ContainerItemID, TArray<struct FWTLExtractItemInfo>& ExtractItems)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_MakeExtractFromItems");

	Params::AWTLPlayerState_Server_MakeExtractFromItems_Params Parms{};

	Parms.ExtractorItemID = ExtractorItemID;
	Parms.ContainerItemID = ContainerItemID;
	Parms.ExtractItems = ExtractItems;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_LoadWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             WeaponItemID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             AmmoItemID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_LoadWeapon(uint64 WeaponItemID, uint64 AmmoItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_LoadWeapon");

	Params::AWTLPlayerState_Server_LoadWeapon_Params Parms{};

	Parms.WeaponItemID = WeaponItemID;
	Parms.AmmoItemID = AmmoItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_LoadMailMessageText
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             MessageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_LoadMailMessageText(uint64 MessageID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_LoadMailMessageText");

	Params::AWTLPlayerState_Server_LoadMailMessageText_Params Parms{};

	Parms.MessageID = MessageID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_LeaveFaction
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                               ForceExclude                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_LeaveFaction(bool ForceExclude)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_LeaveFaction");

	Params::AWTLPlayerState_Server_LeaveFaction_Params Parms{};

	Parms.ForceExclude = ForceExclude;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_LeaveClan
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_LeaveClan()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_LeaveClan");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_InstallPDAModuleItemID
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ModuleItemID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_InstallPDAModuleItemID(uint64 ModuleItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_InstallPDAModuleItemID");

	Params::AWTLPlayerState_Server_InstallPDAModuleItemID_Params Parms{};

	Parms.ModuleItemID = ModuleItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_InstallArmorPlate
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ArmorItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLArmorPlateType      ArmorPlateType                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ArmorPlateItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsSwitchRemovedArmorPlate                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_InstallArmorPlate(uint64 ArmorItemID, enum class EWTLArmorPlateType ArmorPlateType, uint64 ArmorPlateItemID, bool bIsSwitchRemovedArmorPlate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_InstallArmorPlate");

	Params::AWTLPlayerState_Server_InstallArmorPlate_Params Parms{};

	Parms.ArmorItemID = ArmorItemID;
	Parms.ArmorPlateType = ArmorPlateType;
	Parms.ArmorPlateItemID = ArmorPlateItemID;
	Parms.bIsSwitchRemovedArmorPlate = bIsSwitchRemovedArmorPlate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GiveSkillToClan
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_GiveSkillToClan(uint8 SkillID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GiveSkillToClan");

	Params::AWTLPlayerState_Server_GiveSkillToClan_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GiveSkillToCharacter
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint16                             SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_GiveSkillToCharacter(uint16 SkillID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GiveSkillToCharacter");

	Params::AWTLPlayerState_Server_GiveSkillToCharacter_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GetSkill
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint16                             SkillID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_GetSkill(uint16 SkillID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GetSkill");

	Params::AWTLPlayerState_Server_GetSkill_Params Parms{};

	Parms.SkillID = SkillID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GetMailPackageList
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLMailBox*                 MailBox                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PageIndex                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_GetMailPackageList(class AWTLMailBox* MailBox, int32 PageIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GetMailPackageList");

	Params::AWTLPlayerState_Server_GetMailPackageList_Params Parms{};

	Parms.MailBox = MailBox;
	Parms.PageIndex = PageIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GetMailPackageCount
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLMailBox*                 MailBox                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_GetMailPackageCount(class AWTLMailBox* MailBox)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GetMailPackageCount");

	Params::AWTLPlayerState_Server_GetMailPackageCount_Params Parms{};

	Parms.MailBox = MailBox;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GetItemFromAccountInventory
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             AccountInventoryID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_GetItemFromAccountInventory(uint64 AccountInventoryID, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GetItemFromAccountInventory");

	Params::AWTLPlayerState_Server_GetItemFromAccountInventory_Params Parms{};

	Parms.AccountInventoryID = AccountInventoryID;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GetFactionLeaders
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_GetFactionLeaders()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GetFactionLeaders");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GetCommissionSellItemsTypesCount
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      TradingActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_GetCommissionSellItemsTypesCount(class AActor* TradingActor)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GetCommissionSellItemsTypesCount");

	Params::AWTLPlayerState_Server_GetCommissionSellItemsTypesCount_Params Parms{};

	Parms.TradingActor = TradingActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GetCommissionSellItemsPage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      TradingActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PageIndex                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemsPerPage                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SortType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              FilterValue1                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              FilterValue2                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_GetCommissionSellItemsPage(class AActor* TradingActor, enum class EWTLItemType ItemType, int32 PageIndex, int32 ItemsPerPage, int32 SortType, int32 FilterValue1, int32 FilterValue2)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GetCommissionSellItemsPage");

	Params::AWTLPlayerState_Server_GetCommissionSellItemsPage_Params Parms{};

	Parms.TradingActor = TradingActor;
	Parms.ItemType = ItemType;
	Parms.PageIndex = PageIndex;
	Parms.ItemsPerPage = ItemsPerPage;
	Parms.SortType = SortType;
	Parms.FilterValue1 = FilterValue1;
	Parms.FilterValue2 = FilterValue2;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GetClanStorageMoneyLogPage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      ClanStorageActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PageIndex                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              RecordsPerPage                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SortType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLClanStorageMoneyOperationTypeOperationTypeFilter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CharacterNameFilter                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TabIndexFilter                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_GetClanStorageMoneyLogPage(class AActor* ClanStorageActor, int32 PageIndex, int32 RecordsPerPage, int32 SortType, enum class EWTLClanStorageMoneyOperationType OperationTypeFilter, const class FString& CharacterNameFilter, int32 TabIndexFilter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GetClanStorageMoneyLogPage");

	Params::AWTLPlayerState_Server_GetClanStorageMoneyLogPage_Params Parms{};

	Parms.ClanStorageActor = ClanStorageActor;
	Parms.PageIndex = PageIndex;
	Parms.RecordsPerPage = RecordsPerPage;
	Parms.SortType = SortType;
	Parms.OperationTypeFilter = OperationTypeFilter;
	Parms.CharacterNameFilter = CharacterNameFilter;
	Parms.TabIndexFilter = TabIndexFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_GetClanStorageItemsLogPage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      ClanStorageActor                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              PageIndex                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              RecordsPerPage                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SortType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLClanStorageItemOperationTypeOperationTypeFilter                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CharacterNameFilter                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              TabIndexFilter                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_GetClanStorageItemsLogPage(class AActor* ClanStorageActor, int32 PageIndex, int32 RecordsPerPage, int32 SortType, enum class EWTLClanStorageItemOperationType OperationTypeFilter, const class FString& CharacterNameFilter, int32 TabIndexFilter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_GetClanStorageItemsLogPage");

	Params::AWTLPlayerState_Server_GetClanStorageItemsLogPage_Params Parms{};

	Parms.ClanStorageActor = ClanStorageActor;
	Parms.PageIndex = PageIndex;
	Parms.RecordsPerPage = RecordsPerPage;
	Parms.SortType = SortType;
	Parms.OperationTypeFilter = OperationTypeFilter;
	Parms.CharacterNameFilter = CharacterNameFilter;
	Parms.TabIndexFilter = TabIndexFilter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ExchangeWeaponModificationParts
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ExchangeItemID                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             ToPartID                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ExchangeWeaponModificationParts(uint64 ExchangeItemID, uint16 ToPartID, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ExchangeWeaponModificationParts");

	Params::AWTLPlayerState_Server_ExchangeWeaponModificationParts_Params Parms{};

	Parms.ExchangeItemID = ExchangeItemID;
	Parms.ToPartID = ToPartID;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ExchangeJunkMachineCardItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLJunkMachineBase*         JunkMachine                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ExchangeJunkMachineCardItem(class AWTLJunkMachineBase* JunkMachine)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ExchangeJunkMachineCardItem");

	Params::AWTLPlayerState_Server_ExchangeJunkMachineCardItem_Params Parms{};

	Parms.JunkMachine = JunkMachine;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ExchangeClanScore
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLClanScoreType       FromType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLClanScoreType       ToType                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ExchangeClanScore(enum class EWTLClanScoreType FromType, enum class EWTLClanScoreType ToType, int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ExchangeClanScore");

	Params::AWTLPlayerState_Server_ExchangeClanScore_Params Parms{};

	Parms.FromType = FromType;
	Parms.ToType = ToType;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_EquipStuffItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_EquipStuffItem(enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_EquipStuffItem");

	Params::AWTLPlayerState_Server_EquipStuffItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_EquipItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLBodyPart            BodyPart                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_EquipItem(enum class EWTLItemType ItemType, uint64 ItemId, enum class EWTLBodyPart BodyPart)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_EquipItem");

	Params::AWTLPlayerState_Server_EquipItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.BodyPart = BodyPart;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_EditorSetGroupLeader
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_EditorSetGroupLeader(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_EditorSetGroupLeader");

	Params::AWTLPlayerState_Server_EditorSetGroupLeader_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_EditorSendGroupInvite
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                      CharacterNameToInvite                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_EditorSendGroupInvite(const class FString& CharacterNameToInvite)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_EditorSendGroupInvite");

	Params::AWTLPlayerState_Server_EditorSendGroupInvite_Params Parms{};

	Parms.CharacterNameToInvite = CharacterNameToInvite;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_EditorRenameGroup
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                      NewGroupName                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_EditorRenameGroup(const class FString& NewGroupName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_EditorRenameGroup");

	Params::AWTLPlayerState_Server_EditorRenameGroup_Params Parms{};

	Parms.NewGroupName = NewGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_EditorRemoveGroupMember
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_EditorRemoveGroupMember(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_EditorRemoveGroupMember");

	Params::AWTLPlayerState_Server_EditorRemoveGroupMember_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_EditorLeaveGroup
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_EditorLeaveGroup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_EditorLeaveGroup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_EditorCreateGroup
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_EditorCreateGroup()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_EditorCreateGroup");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_EditorAcceptGroupInvite
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint64                             GroupId                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_EditorAcceptGroupInvite(uint64 GroupId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_EditorAcceptGroupInvite");

	Params::AWTLPlayerState_Server_EditorAcceptGroupInvite_Params Parms{};

	Parms.GroupId = GroupId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DropItemCount
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemCountToDrop                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_DropItemCount(enum class EWTLItemType ItemType, uint64 ItemId, int32 ItemCountToDrop)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DropItemCount");

	Params::AWTLPlayerState_Server_DropItemCount_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.ItemCountToDrop = ItemCountToDrop;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DropItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_DropItem(enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DropItem");

	Params::AWTLPlayerState_Server_DropItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DismissCharacterFromClan
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_DismissCharacterFromClan(const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DismissCharacterFromClan");

	Params::AWTLPlayerState_Server_DismissCharacterFromClan_Params Parms{};

	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DestroyStash
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_DestroyStash()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DestroyStash");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DestroyItemCount
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemCountToDestroy                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_DestroyItemCount(enum class EWTLItemType ItemType, uint64 ItemId, int32 ItemCountToDestroy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DestroyItemCount");

	Params::AWTLPlayerState_Server_DestroyItemCount_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.ItemCountToDestroy = ItemCountToDestroy;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DestroyItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_DestroyItem(enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DestroyItem");

	Params::AWTLPlayerState_Server_DestroyItem_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DestroyAllInventoryItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_DestroyAllInventoryItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DestroyAllInventoryItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DeleteMailMessages
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<uint64>                     MessageIDs                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_DeleteMailMessages(TArray<uint64>& MessageIDs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DeleteMailMessages");

	Params::AWTLPlayerState_Server_DeleteMailMessages_Params Parms{};

	Parms.MessageIDs = MessageIDs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DeleteMailMessage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             MessageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_DeleteMailMessage(uint64 MessageID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DeleteMailMessage");

	Params::AWTLPlayerState_Server_DeleteMailMessage_Params Parms{};

	Parms.MessageID = MessageID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DeleteClanPolicyGroup
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ClanPolicyGroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_DeleteClanPolicyGroup(uint64 ClanPolicyGroupID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DeleteClanPolicyGroup");

	Params::AWTLPlayerState_Server_DeleteClanPolicyGroup_Params Parms{};

	Parms.ClanPolicyGroupID = ClanPolicyGroupID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_DeleteAllMailMessages
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_DeleteAllMailMessages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_DeleteAllMailMessages");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_CutFishWithKnife
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             FishItemID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             KnifeItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_CutFishWithKnife(uint64 FishItemID, uint64 KnifeItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_CutFishWithKnife");

	Params::AWTLPlayerState_Server_CutFishWithKnife_Params Parms{};

	Parms.FishItemID = FishItemID;
	Parms.KnifeItemID = KnifeItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_CutFish
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             FishItemID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_CutFish(uint64 FishItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_CutFish");

	Params::AWTLPlayerState_Server_CutFish_Params Parms{};

	Parms.FishItemID = FishItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_CreateCraftObjectItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLCraftObject*             CraftObject                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CraftItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_CreateCraftObjectItem(class AWTLCraftObject* CraftObject, int32 CraftItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_CreateCraftObjectItem");

	Params::AWTLPlayerState_Server_CreateCraftObjectItem_Params Parms{};

	Parms.CraftObject = CraftObject;
	Parms.CraftItemID = CraftItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_CreateCraftItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              CraftItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_CreateCraftItem(int32 CraftItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_CreateCraftItem");

	Params::AWTLPlayerState_Server_CreateCraftItem_Params Parms{};

	Parms.CraftItemID = CraftItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_CreateClanPolicyGroup
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class FString                      Name                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_CreateClanPolicyGroup(const class FString& Name)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_CreateClanPolicyGroup");

	Params::AWTLPlayerState_Server_CreateClanPolicyGroup_Params Parms{};

	Parms.Name = Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ConsumeSteamInventoryItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPCActor                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             UserSteamID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ConsumeSteamInventoryItem(class AWTLNPCActor* NPCActor, uint64 UserSteamID, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ConsumeSteamInventoryItem");

	Params::AWTLPlayerState_Server_ConsumeSteamInventoryItem_Params Parms{};

	Parms.NPCActor = NPCActor;
	Parms.UserSteamID = UserSteamID;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_CombineInventoryItems
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// TArray<struct FWTLIdentityItem>    Items                                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_CombineInventoryItems(TArray<struct FWTLIdentityItem>& Items)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_CombineInventoryItems");

	Params::AWTLPlayerState_Server_CombineInventoryItems_Params Parms{};

	Parms.Items = Items;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ClearFastAccessSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ClearFastAccessSlot(uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ClearFastAccessSlot");

	Params::AWTLPlayerState_Server_ClearFastAccessSlot_Params Parms{};

	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ClearCharacterSkills
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_ClearCharacterSkills()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ClearCharacterSkills");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ClearCharacterMapMarkers
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_ClearCharacterMapMarkers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ClearCharacterMapMarkers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ChargeStuffItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             StuffItemID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             EnergySourceItemID                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ChargeStuffItem(uint64 StuffItemID, uint64 EnergySourceItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ChargeStuffItem");

	Params::AWTLPlayerState_Server_ChargeStuffItem_Params Parms{};

	Parms.StuffItemID = StuffItemID;
	Parms.EnergySourceItemID = EnergySourceItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ChangeCharacterSexByItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ChangeCharacterSexByItem(uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ChangeCharacterSexByItem");

	Params::AWTLPlayerState_Server_ChangeCharacterSexByItem_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ChangeCharacterSex
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLSex                 NewSex                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ChangeCharacterSex(enum class EWTLSex NewSex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ChangeCharacterSex");

	Params::AWTLPlayerState_Server_ChangeCharacterSex_Params Parms{};

	Parms.NewSex = NewSex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ChangeCharacterClassByItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCharacterClass      NewClass                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ChangeCharacterClassByItem(uint64 ItemId, enum class EWTLCharacterClass NewClass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ChangeCharacterClassByItem");

	Params::AWTLPlayerState_Server_ChangeCharacterClassByItem_Params Parms{};

	Parms.ItemId = ItemId;
	Parms.NewClass = NewClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_CancelBarterDealRequest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_CancelBarterDealRequest()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_CancelBarterDealRequest");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_CancelBarterDeal
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_CancelBarterDeal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_CancelBarterDeal");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_BuyItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AActor*                      TradingActor                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ClientPrice                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_BuyItem(class AActor* TradingActor, enum class EWTLItemType ItemType, uint64 ItemId, int32 Count, float ClientPrice)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_BuyItem");

	Params::AWTLPlayerState_Server_BuyItem_Params Parms{};

	Parms.TradingActor = TradingActor;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.Count = Count;
	Parms.ClientPrice = ClientPrice;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_BreakWeaponItemToParts
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_BreakWeaponItemToParts(uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_BreakWeaponItemToParts");

	Params::AWTLPlayerState_Server_BreakWeaponItemToParts_Params Parms{};

	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AssignItemToFastAccessSlot
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_AssignItemToFastAccessSlot(enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AssignItemToFastAccessSlot");

	Params::AWTLPlayerState_Server_AssignItemToFastAccessSlot_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AssignClanPolicyGroupToClanMember
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             ClanMemberID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ClanPolicyGroupID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_AssignClanPolicyGroupToClanMember(uint64 ClanMemberID, uint64 ClanPolicyGroupID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AssignClanPolicyGroupToClanMember");

	Params::AWTLPlayerState_Server_AssignClanPolicyGroupToClanMember_Params Parms{};

	Parms.ClanMemberID = ClanMemberID;
	Parms.ClanPolicyGroupID = ClanPolicyGroupID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_ApplyWeaponAttachment
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             WeaponItemID                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             AttachmentItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_ApplyWeaponAttachment(uint64 WeaponItemID, uint64 AttachmentItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_ApplyWeaponAttachment");

	Params::AWTLPlayerState_Server_ApplyWeaponAttachment_Params Parms{};

	Parms.WeaponItemID = WeaponItemID;
	Parms.AttachmentItemID = AttachmentItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AddTabToClanStorage
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_AddTabToClanStorage(class AWTLNPCActor* NPC)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AddTabToClanStorage");

	Params::AWTLPlayerState_Server_AddTabToClanStorage_Params Parms{};

	Parms.NPC = NPC;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AddItemToCommissionItem
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPC                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            CommissionItemType                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             CommissionItemID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             NewItemID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_AddItemToCommissionItem(class AWTLNPCActor* NPC, enum class EWTLItemType CommissionItemType, uint64 CommissionItemID, uint64 NewItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AddItemToCommissionItem");

	Params::AWTLPlayerState_Server_AddItemToCommissionItem_Params Parms{};

	Parms.NPC = NPC;
	Parms.CommissionItemType = CommissionItemType;
	Parms.CommissionItemID = CommissionItemID;
	Parms.NewItemID = NewItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AddItemToBarterDeal
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_AddItemToBarterDeal(enum class EWTLItemType ItemType, uint64 ItemId, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AddItemToBarterDeal");

	Params::AWTLPlayerState_Server_AddItemToBarterDeal_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AddItemsToSteamInventory
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class AWTLNPCActor*                NPCActor                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             UserSteamID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLIdentityItem>    ItemsToAdd                                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_AddItemsToSteamInventory(class AWTLNPCActor* NPCActor, uint64 UserSteamID, TArray<struct FWTLIdentityItem>& ItemsToAdd)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AddItemsToSteamInventory");

	Params::AWTLPlayerState_Server_AddItemsToSteamInventory_Params Parms{};

	Parms.NPCActor = NPCActor;
	Parms.UserSteamID = UserSteamID;
	Parms.ItemsToAdd = ItemsToAdd;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AddContact
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Name                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_AddContact(uint64 CharacterID, const class FString& Name)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AddContact");

	Params::AWTLPlayerState_Server_AddContact_Params Parms{};

	Parms.CharacterID = CharacterID;
	Parms.Name = Name;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AcceptClanInvite
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint16                             ClanID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_AcceptClanInvite(uint16 ClanID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AcceptClanInvite");

	Params::AWTLPlayerState_Server_AcceptClanInvite_Params Parms{};

	Parms.ClanID = ClanID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AcceptBarterRequest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_AcceptBarterRequest(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AcceptBarterRequest");

	Params::AWTLPlayerState_Server_AcceptBarterRequest_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AcceptBarterDeal
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:

void AWTLPlayerState::Server_AcceptBarterDeal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AcceptBarterDeal");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Server_AbandonQuest
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Server_AbandonQuest(int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Server_AbandonQuest");

	Params::AWTLPlayerState_Server_AbandonQuest_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_ShortCharacterInfo
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_ShortCharacterInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_ShortCharacterInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_PrivateStorages
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_PrivateStorages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_PrivateStorages");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_MuteStateVoice
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_MuteStateVoice()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_MuteStateVoice");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_MuteStateChat
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_MuteStateChat()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_MuteStateChat");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_MaxInventoryWeight
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_MaxInventoryWeight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_MaxInventoryWeight");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_MailStorage
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_MailStorage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_MailStorage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_LastStashLocation
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_LastStashLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_LastStashLocation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_LastOperationResult
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_LastOperationResult()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_LastOperationResult");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_LastDeathLocation
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_LastDeathLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_LastDeathLocation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_LastCampfireLocation
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_LastCampfireLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_LastCampfireLocation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_InventoryWeight
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_InventoryWeight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_InventoryWeight");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_Group
// (Final, Native, Private)
// Parameters:

void AWTLPlayerState::OnRep_Group()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_Group");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_CraftObjectStates
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_CraftObjectStates()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_CraftObjectStates");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_CommissionStorages
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_CommissionStorages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_CommissionStorages");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_ClanStorages
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_ClanStorages()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_ClanStorages");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_ClanPolicyGroups
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_ClanPolicyGroups()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_ClanPolicyGroups");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_ClanMembers
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_ClanMembers()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_ClanMembers");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_CharacterInfo
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_CharacterInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_CharacterInfo");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_CharacterCurrentState
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_CharacterCurrentState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_CharacterCurrentState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnRep_BarterDeal
// (Final, Native, Protected)
// Parameters:

void AWTLPlayerState::OnRep_BarterDeal()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnRep_BarterDeal");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.OnCharacterTeleportToFortificationCommandCoreResult
// (Final, Native, Private)
// Parameters:
// bool                               Result                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::OnCharacterTeleportToFortificationCommandCoreResult(bool Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "OnCharacterTeleportToFortificationCommandCoreResult");

	Params::AWTLPlayerState_OnCharacterTeleportToFortificationCommandCoreResult_Params Parms{};

	Parms.Result = Result;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_UseModificationKitResult
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_UseModificationKitResult(bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_UseModificationKitResult");

	Params::AWTLPlayerState_Client_UseModificationKitResult_Params Parms{};

	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_UpdatePrivateStorageItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32                             NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             StorageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                      ItemData                                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_UpdatePrivateStorageItem(uint32 NPCID, uint64 StorageID, enum class EWTLItemType ItemType, TArray<uint8>& ItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_UpdatePrivateStorageItem");

	Params::AWTLPlayerState_Client_UpdatePrivateStorageItem_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.StorageID = StorageID;
	Parms.ItemType = ItemType;
	Parms.ItemData = ItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_UpdatePrivateStorage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32                             NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             StorageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotCount                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_UpdatePrivateStorage(uint32 NPCID, uint64 StorageID, uint8 SlotCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_UpdatePrivateStorage");

	Params::AWTLPlayerState_Client_UpdatePrivateStorage_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.StorageID = StorageID;
	Parms.SlotCount = SlotCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_UpdatePrivateLootForStorageContentActor
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AActor*                      StorageContentActor                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLStorageContent          PrivateContent                                                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_UpdatePrivateLootForStorageContentActor(class AActor* StorageContentActor, struct FWTLStorageContent& PrivateContent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_UpdatePrivateLootForStorageContentActor");

	Params::AWTLPlayerState_Client_UpdatePrivateLootForStorageContentActor_Params Parms{};

	Parms.StorageContentActor = StorageContentActor;
	Parms.PrivateContent = PrivateContent;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_UpdateInventory
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLPlayerState::Client_UpdateInventory()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_UpdateInventory");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_UpdateFactionLeaders
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FWTLFactionLeaderRecord>Leaders                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_UpdateFactionLeaders(TArray<struct FWTLFactionLeaderRecord>& Leaders)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_UpdateFactionLeaders");

	Params::AWTLPlayerState_Client_UpdateFactionLeaders_Params Parms{};

	Parms.Leaders = Leaders;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_UpdateClanStorageTab
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ImageIndex                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      TabName                                                          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Description                                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint64>                     CanPutClanPolicyGroups                                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<uint64>                     CanTakeClanPolicyGroups                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_UpdateClanStorageTab(int32 NPCID, uint8 TabIndex, uint8 ImageIndex, const class FString& TabName, const class FString& Description, TArray<uint64>& CanPutClanPolicyGroups, TArray<uint64>& CanTakeClanPolicyGroups)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_UpdateClanStorageTab");

	Params::AWTLPlayerState_Client_UpdateClanStorageTab_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.TabIndex = TabIndex;
	Parms.ImageIndex = ImageIndex;
	Parms.TabName = TabName;
	Parms.Description = Description;
	Parms.CanPutClanPolicyGroups = CanPutClanPolicyGroups;
	Parms.CanTakeClanPolicyGroups = CanTakeClanPolicyGroups;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_UpdateClanStorageMoney
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32                             MoneyAmount                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_UpdateClanStorageMoney(int32 NPCID, uint8 TabIndex, uint32 MoneyAmount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_UpdateClanStorageMoney");

	Params::AWTLPlayerState_Client_UpdateClanStorageMoney_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.TabIndex = TabIndex;
	Parms.MoneyAmount = MoneyAmount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_UpdateClanStorageItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                      ItemData                                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_UpdateClanStorageItem(int32 NPCID, uint8 TabIndex, enum class EWTLItemType ItemType, TArray<uint8>& ItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_UpdateClanStorageItem");

	Params::AWTLPlayerState_Client_UpdateClanStorageItem_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.TabIndex = TabIndex;
	Parms.ItemType = ItemType;
	Parms.ItemData = ItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_ShowWarningText
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FText                        WarningText                                                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_ShowWarningText(class FText& WarningText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_ShowWarningText");

	Params::AWTLPlayerState_Client_ShowWarningText_Params Parms{};

	Parms.WarningText = WarningText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_ShowWarning
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLWarningTitleWidgetTypeWarningTitleWidgetType                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_ShowWarning(enum class EWTLWarningTitleWidgetType WarningTitleWidgetType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_ShowWarning");

	Params::AWTLPlayerState_Client_ShowWarning_Params Parms{};

	Parms.WarningTitleWidgetType = WarningTitleWidgetType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_ShowTutorialMessagesByIDs
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<uint16>                     TutorialMessagesIDs                                              (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               IsIgnoreTutorialEnabling                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_ShowTutorialMessagesByIDs(TArray<uint16>& TutorialMessagesIDs, bool IsIgnoreTutorialEnabling)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_ShowTutorialMessagesByIDs");

	Params::AWTLPlayerState_Client_ShowTutorialMessagesByIDs_Params Parms{};

	Parms.TutorialMessagesIDs = TutorialMessagesIDs;
	Parms.IsIgnoreTutorialEnabling = IsIgnoreTutorialEnabling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_ShowTutorialMessages
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<enum class EWTLTutorialMessage>TutorialMessages                                                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                               IsIgnoreTutorialEnabling                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_ShowTutorialMessages(TArray<enum class EWTLTutorialMessage>& TutorialMessages, bool IsIgnoreTutorialEnabling)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_ShowTutorialMessages");

	Params::AWTLPlayerState_Client_ShowTutorialMessages_Params Parms{};

	Parms.TutorialMessages = TutorialMessages;
	Parms.IsIgnoreTutorialEnabling = IsIgnoreTutorialEnabling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_ShowTutorialMessageByID
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint16                             TutorialMessageID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsIgnoreTutorialEnabling                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_ShowTutorialMessageByID(uint16 TutorialMessageID, bool IsIgnoreTutorialEnabling)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_ShowTutorialMessageByID");

	Params::AWTLPlayerState_Client_ShowTutorialMessageByID_Params Parms{};

	Parms.TutorialMessageID = TutorialMessageID;
	Parms.IsIgnoreTutorialEnabling = IsIgnoreTutorialEnabling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_ShowTutorialMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLTutorialMessage     TutorialMessage                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               IsIgnoreTutorialEnabling                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_ShowTutorialMessage(enum class EWTLTutorialMessage TutorialMessage, bool IsIgnoreTutorialEnabling)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_ShowTutorialMessage");

	Params::AWTLPlayerState_Client_ShowTutorialMessage_Params Parms{};

	Parms.TutorialMessage = TutorialMessage;
	Parms.IsIgnoreTutorialEnabling = IsIgnoreTutorialEnabling;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_SetQuestStates
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FWTLCharacterQuestState>QuestStates                                                      (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_SetQuestStates(TArray<struct FWTLCharacterQuestState>& QuestStates)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_SetQuestStates");

	Params::AWTLPlayerState_Client_SetQuestStates_Params Parms{};

	Parms.QuestStates = QuestStates;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_SetQuestState
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FWTLCharacterQuestState     QuestState                                                       (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_SetQuestState(struct FWTLCharacterQuestState& QuestState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_SetQuestState");

	Params::AWTLPlayerState_Client_SetQuestState_Params Parms{};

	Parms.QuestState = QuestState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_SetQuestActive
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32                             QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Active                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_SetQuestActive(uint32 QuestID, bool Active)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_SetQuestActive");

	Params::AWTLPlayerState_Client_SetQuestActive_Params Parms{};

	Parms.QuestID = QuestID;
	Parms.Active = Active;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_RemoveQuestStates
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<uint32>                     QuestIDs                                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_RemoveQuestStates(TArray<uint32>& QuestIDs)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_RemoveQuestStates");

	Params::AWTLPlayerState_Client_RemoveQuestStates_Params Parms{};

	Parms.QuestIDs = QuestIDs;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_RemoveQuestState
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32                             QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_RemoveQuestState(uint32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_RemoveQuestState");

	Params::AWTLPlayerState_Client_RemoveQuestState_Params Parms{};

	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_RemovePrivateStorageItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32                             NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             StorageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_RemovePrivateStorageItem(uint32 NPCID, uint64 StorageID, enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_RemovePrivateStorageItem");

	Params::AWTLPlayerState_Client_RemovePrivateStorageItem_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.StorageID = StorageID;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_RemovePrivateStorage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32                             NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             StorageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_RemovePrivateStorage(uint32 NPCID, uint64 StorageID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_RemovePrivateStorage");

	Params::AWTLPlayerState_Client_RemovePrivateStorage_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.StorageID = StorageID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_RemoveInventoryItems
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// TArray<struct FWTLIdentityItem>    Items                                                            (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_RemoveInventoryItems(TArray<struct FWTLIdentityItem>& Items)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_RemoveInventoryItems");

	Params::AWTLPlayerState_Client_RemoveInventoryItems_Params Parms{};

	Parms.Items = Items;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_RemoveClanStorageItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_RemoveClanStorageItem(int32 NPCID, uint8 TabIndex, enum class EWTLItemType ItemType, uint64 ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_RemoveClanStorageItem");

	Params::AWTLPlayerState_Client_RemoveClanStorageItem_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.TabIndex = TabIndex;
	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_RemoveClanStorage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_RemoveClanStorage(int32 NPCID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_RemoveClanStorage");

	Params::AWTLPlayerState_Client_RemoveClanStorage_Params Parms{};

	Parms.NPCID = NPCID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_OnMailPackageSent
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLPlayerState::Client_OnMailPackageSent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_OnMailPackageSent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_OnMailPackageReceived
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint64                             MailPackageID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_OnMailPackageReceived(uint64 MailPackageID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_OnMailPackageReceived");

	Params::AWTLPlayerState_Client_OnMailPackageReceived_Params Parms{};

	Parms.MailPackageID = MailPackageID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_OnClanInviteReceived
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint16                             ClanID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      CharacterName                                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_OnClanInviteReceived(uint16 ClanID, const class FString& CharacterName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_OnClanInviteReceived");

	Params::AWTLPlayerState_Client_OnClanInviteReceived_Params Parms{};

	Parms.ClanID = ClanID;
	Parms.CharacterName = CharacterName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_OnBuyItemResult
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               Result                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCannotBuyItemReason Reason                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_OnBuyItemResult(bool Result, enum class EWTLCannotBuyItemReason Reason)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_OnBuyItemResult");

	Params::AWTLPlayerState_Client_OnBuyItemResult_Params Parms{};

	Parms.Result = Result;
	Parms.Reason = Reason;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_OnAssignedItemToFastAccessSlot
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             ItemId                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              SlotNumber                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_OnAssignedItemToFastAccessSlot(enum class EWTLItemType ItemType, uint64 ItemId, uint8 SlotNumber)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_OnAssignedItemToFastAccessSlot");

	Params::AWTLPlayerState_Client_OnAssignedItemToFastAccessSlot_Params Parms{};

	Parms.ItemType = ItemType;
	Parms.ItemId = ItemId;
	Parms.SlotNumber = SlotNumber;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_MailPackageListResult
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// TArray<struct FWTLMailPackageRecord>MailPackages                                                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_MailPackageListResult(TArray<struct FWTLMailPackageRecord>& MailPackages)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_MailPackageListResult");

	Params::AWTLPlayerState_Client_MailPackageListResult_Params Parms{};

	Parms.MailPackages = MailPackages;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_MailPackageCountResult
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_MailPackageCountResult(int32 Count)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_MailPackageCountResult");

	Params::AWTLPlayerState_Client_MailPackageCountResult_Params Parms{};

	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_EditorOnGroupRenamed
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class FString                      NewGroupName                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_EditorOnGroupRenamed(const class FString& NewGroupName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_EditorOnGroupRenamed");

	Params::AWTLPlayerState_Client_EditorOnGroupRenamed_Params Parms{};

	Parms.NewGroupName = NewGroupName;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_ClearQuests
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:

void AWTLPlayerState::Client_ClearQuests()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_ClearQuests");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_ApplyPrivateStorageDelta
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32                             NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             StorageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLCharacterInventoryDeltaRecord>Records                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_ApplyPrivateStorageDelta(uint32 NPCID, uint64 StorageID, TArray<struct FWTLCharacterInventoryDeltaRecord>& Records)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_ApplyPrivateStorageDelta");

	Params::AWTLPlayerState_Client_ApplyPrivateStorageDelta_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.StorageID = StorageID;
	Parms.Records = Records;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_ApplyInventoryDelta
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// TArray<struct FWTLCharacterInventoryDeltaRecord>Records                                                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_ApplyInventoryDelta(TArray<struct FWTLCharacterInventoryDeltaRecord>& Records)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_ApplyInventoryDelta");

	Params::AWTLPlayerState_Client_ApplyInventoryDelta_Params Parms{};

	Parms.Records = Records;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_AfterQuestObjectSpawnerUse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class AWTLQuestObjectSpawner*      QuestObject                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_AfterQuestObjectSpawnerUse(class AWTLQuestObjectSpawner* QuestObject)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_AfterQuestObjectSpawnerUse");

	Params::AWTLPlayerState_Client_AfterQuestObjectSpawnerUse_Params Parms{};

	Parms.QuestObject = QuestObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_AddPrivateStorageItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32                             NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64                             StorageID                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                      ItemData                                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_AddPrivateStorageItem(uint32 NPCID, uint64 StorageID, enum class EWTLItemType ItemType, TArray<uint8>& ItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_AddPrivateStorageItem");

	Params::AWTLPlayerState_Client_AddPrivateStorageItem_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.StorageID = StorageID;
	Parms.ItemType = ItemType;
	Parms.ItemData = ItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_AddPrivateStorage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FWTLPrivateStorage          PrivateStorage                                                   (ConstParm, Parm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_AddPrivateStorage(struct FWTLPrivateStorage& PrivateStorage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_AddPrivateStorage");

	Params::AWTLPlayerState_Client_AddPrivateStorage_Params Parms{};

	Parms.PrivateStorage = PrivateStorage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_AddMapMarker
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// int32                              LocationID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Type                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Color                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                     Position                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      Name                                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ShowOnMinimap                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_AddMapMarker(int32 LocationID, uint8 Type, const class FString& Color, const struct FVector& Position, const class FString& Name, bool ShowOnMinimap)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_AddMapMarker");

	Params::AWTLPlayerState_Client_AddMapMarker_Params Parms{};

	Parms.LocationID = LocationID;
	Parms.Type = Type;
	Parms.Color = Color;
	Parms.Position = Position;
	Parms.Name = Name;
	Parms.ShowOnMinimap = ShowOnMinimap;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_AddClanStorageItem
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int32                              NPCID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              TabIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                      ItemData                                                         (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_AddClanStorageItem(int32 NPCID, uint8 TabIndex, enum class EWTLItemType ItemType, TArray<uint8>& ItemData)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_AddClanStorageItem");

	Params::AWTLPlayerState_Client_AddClanStorageItem_Params Parms{};

	Parms.NPCID = NPCID;
	Parms.TabIndex = TabIndex;
	Parms.ItemType = ItemType;
	Parms.ItemData = ItemData;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPlayerState.Client_AddClanStorage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FWTLClanStorage             ClanStorage                                                      (ConstParm, Parm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLPlayerState::Client_AddClanStorage(struct FWTLClanStorage& ClanStorage)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPlayerState", "Client_AddClanStorage");

	Params::AWTLPlayerState_Client_AddClanStorage_Params Parms{};

	Parms.ClanStorage = ClanStorage;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPortal
// (Actor)

class UClass* AWTLPortal::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPortal");

	return Clss;
}


// WTLPortal WTL.Default__WTLPortal
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLPortal* AWTLPortal::GetDefaultObj()
{
	static class AWTLPortal* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLPortal*>(AWTLPortal::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPortal.OnUsePortal
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPortal::OnUsePortal(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortal", "OnUsePortal");

	Params::AWTLPortal_OnUsePortal_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLPortal.MoveToLocation
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLPortalActionResult  Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPortal::MoveToLocation(class AWTLCharacter* Character, enum class EWTLPortalActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortal", "MoveToLocation");

	Params::AWTLPortal_MoveToLocation_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Class WTL.WTLPortalStation
// (Actor)

class UClass* AWTLPortalStation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPortalStation");

	return Clss;
}


// WTLPortalStation WTL.Default__WTLPortalStation
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLPortalStation* AWTLPortalStation::GetDefaultObj()
{
	static class AWTLPortalStation* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLPortalStation*>(AWTLPortalStation::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPortalStation.TravelCharacterByWay
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              WayIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPortalStation::TravelCharacterByWay(class AWTLCharacter* Character, int32 WayIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "TravelCharacterByWay");

	Params::AWTLPortalStation_TravelCharacterByWay_Params Parms{};

	Parms.Character = Character;
	Parms.WayIndex = WayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPortalStation.OnPortalZoneBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLPortalStation::OnPortalZoneBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "OnPortalZoneBeginOverlap");

	Params::AWTLPortalStation_OnPortalZoneBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPortalStation.K2_SubmitTeleportRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              WayIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPortalStation::K2_SubmitTeleportRequest(int32 WayIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "K2_SubmitTeleportRequest");

	Params::AWTLPortalStation_K2_SubmitTeleportRequest_Params Parms{};

	Parms.WayIndex = WayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPortalStation.K2_RejectTeleportRequest
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLPortalStation::K2_RejectTeleportRequest()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "K2_RejectTeleportRequest");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPortalStation.GetRouteIsAvailable
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                              WayIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLPortalStation::GetRouteIsAvailable(int32 WayIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "GetRouteIsAvailable");

	Params::AWTLPortalStation_GetRouteIsAvailable_Params Parms{};

	Parms.WayIndex = WayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLPortalStation.GetMaxEnergyConsumption
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLPortalStation::GetMaxEnergyConsumption()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "GetMaxEnergyConsumption");

	Params::AWTLPortalStation_GetMaxEnergyConsumption_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLPortalStation.GetEnergyConsumptionForWay
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              WayIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLPortalStation::GetEnergyConsumptionForWay(class AWTLCharacter* Character, int32 WayIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "GetEnergyConsumptionForWay");

	Params::AWTLPortalStation_GetEnergyConsumptionForWay_Params Parms{};

	Parms.Character = Character;
	Parms.WayIndex = WayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLPortalStation.CharacterCanTravelByWay
// (Final, Native, Public, HasOutParams, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              WayIndex                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        Description                                                      (Parm, OutParm, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLPortalStation::CharacterCanTravelByWay(class AWTLCharacter* Character, int32 WayIndex, class FText* Description)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "CharacterCanTravelByWay");

	Params::AWTLPortalStation_CharacterCanTravelByWay_Params Parms{};

	Parms.Character = Character;
	Parms.WayIndex = WayIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Description != nullptr)
		*Description = Parms.Description;

	return Parms.ReturnValue;

}


// Function WTL.WTLPortalStation.BPOnUse
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPortalStation::BPOnUse(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "BPOnUse");

	Params::AWTLPortalStation_BPOnUse_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLPortalStation.BPOnTeleportWaySubmitted
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FWTLPortalStationWay        SelectedWay                                                      (Parm, NativeAccessSpecifierPublic)
// float                              Timeout                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLPortalStation::BPOnTeleportWaySubmitted(const struct FWTLPortalStationWay& SelectedWay, float Timeout)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "BPOnTeleportWaySubmitted");

	Params::AWTLPortalStation_BPOnTeleportWaySubmitted_Params Parms{};

	Parms.SelectedWay = SelectedWay;
	Parms.Timeout = Timeout;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLPortalStation.BPOnTeleportWayRejected
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLPortalStation::BPOnTeleportWayRejected()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStation", "BPOnTeleportWayRejected");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLPortalStationPanel
// (None)

class UClass* UWTLPortalStationPanel::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPortalStationPanel");

	return Clss;
}


// WTLPortalStationPanel WTL.Default__WTLPortalStationPanel
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPortalStationPanel* UWTLPortalStationPanel::GetDefaultObj()
{
	static class UWTLPortalStationPanel* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPortalStationPanel*>(UWTLPortalStationPanel::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPortalStationPanel.SubmitWay
// (Final, Native, Public)
// Parameters:

void UWTLPortalStationPanel::SubmitWay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStationPanel", "SubmitWay");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPortalStationPanel.RejectWay
// (Final, Native, Public)
// Parameters:

void UWTLPortalStationPanel::RejectWay()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStationPanel", "RejectWay");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPortalStationPanel.OnClientRequestTimeout
// (Final, Native, Public)
// Parameters:

void UWTLPortalStationPanel::OnClientRequestTimeout()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStationPanel", "OnClientRequestTimeout");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPortalStationPanel.OnCanNotTeleportCharacter
// (Final, Native, Private)
// Parameters:
// class FText                        ErrorInfo                                                        (Parm, NativeAccessSpecifierPublic)

void UWTLPortalStationPanel::OnCanNotTeleportCharacter(class FText ErrorInfo)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStationPanel", "OnCanNotTeleportCharacter");

	Params::UWTLPortalStationPanel_OnCanNotTeleportCharacter_Params Parms{};

	Parms.ErrorInfo = ErrorInfo;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPortalStationPanel.Init
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FWTLPortalStationWay>Ways                                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AWTLPortalStation*           PortalStation                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLPortalStationPanel::Init(TArray<struct FWTLPortalStationWay>& Ways, class AWTLPortalStation* PortalStation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStationPanel", "Init");

	Params::UWTLPortalStationPanel_Init_Params Parms{};

	Parms.Ways = Ways;
	Parms.PortalStation = PortalStation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPortalStationPanel.GetPortalStation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLPortalStation*           ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLPortalStation* UWTLPortalStationPanel::GetPortalStation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStationPanel", "GetPortalStation");

	Params::UWTLPortalStationPanel_GetPortalStation_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLPortalStationPanel.CloseUnavailableRouteMessage
// (Final, Native, Public)
// Parameters:

void UWTLPortalStationPanel::CloseUnavailableRouteMessage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStationPanel", "CloseUnavailableRouteMessage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLPortalStationPanel.CloseErrorMessage
// (Final, Native, Public)
// Parameters:

void UWTLPortalStationPanel::CloseErrorMessage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStationPanel", "CloseErrorMessage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPortalStationPanelWayButton
// (None)

class UClass* UWTLPortalStationPanelWayButton::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPortalStationPanelWayButton");

	return Clss;
}


// WTLPortalStationPanelWayButton WTL.Default__WTLPortalStationPanelWayButton
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLPortalStationPanelWayButton* UWTLPortalStationPanelWayButton::GetDefaultObj()
{
	static class UWTLPortalStationPanelWayButton* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLPortalStationPanelWayButton*>(UWTLPortalStationPanelWayButton::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLPortalStationPanelWayButton.OnButtonPressed
// (Final, Native, Private)
// Parameters:

void UWTLPortalStationPanelWayButton::OnButtonPressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLPortalStationPanelWayButton", "OnButtonPressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLStash
// (Actor)

class UClass* AWTLStash::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStash");

	return Clss;
}


// WTLStash WTL.Default__WTLStash
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStash* AWTLStash::GetDefaultObj()
{
	static class AWTLStash* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStash*>(AWTLStash::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLStash.OnStorageContentChanged
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FWTLStorageContent          StorageContent                                                   (Parm, OutParm, NativeAccessSpecifierPublic)

void AWTLStash::OnStorageContentChanged(struct FWTLStorageContent* StorageContent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStash", "OnStorageContentChanged");

	Params::AWTLStash_OnStorageContentChanged_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	if (StorageContent != nullptr)
		*StorageContent = std::move(Parms.StorageContent);

}


// Function WTL.WTLStash.OnRep_StorageContent
// (Final, Native, Private)
// Parameters:

void AWTLStash::OnRep_StorageContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStash", "OnRep_StorageContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLPremiumStash
// (Actor)

class UClass* AWTLPremiumStash::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLPremiumStash");

	return Clss;
}


// WTLPremiumStash WTL.Default__WTLPremiumStash
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLPremiumStash* AWTLPremiumStash::GetDefaultObj()
{
	static class AWTLPremiumStash* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLPremiumStash*>(AWTLPremiumStash::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLProjectileLauncher
// (Actor)

class UClass* AWTLProjectileLauncher::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLProjectileLauncher");

	return Clss;
}


// WTLProjectileLauncher WTL.Default__WTLProjectileLauncher
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLProjectileLauncher* AWTLProjectileLauncher::GetDefaultObj()
{
	static class AWTLProjectileLauncher* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLProjectileLauncher*>(AWTLProjectileLauncher::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLProjectileLauncher.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLProjectileLauncher::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLProjectileLauncher", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLProjectileLauncher.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLProjectileLauncher::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLProjectileLauncher", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLProjectileLauncher.NetMulticast_OnStopUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLProjectileLauncher::NetMulticast_OnStopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLProjectileLauncher", "NetMulticast_OnStopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLProjectileLauncher.NetMulticast_OnStartUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLProjectileLauncher::NetMulticast_OnStartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLProjectileLauncher", "NetMulticast_OnStartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLProjectileMovementComponent
// (None)

class UClass* UWTLProjectileMovementComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLProjectileMovementComponent");

	return Clss;
}


// WTLProjectileMovementComponent WTL.Default__WTLProjectileMovementComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLProjectileMovementComponent* UWTLProjectileMovementComponent::GetDefaultObj()
{
	static class UWTLProjectileMovementComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLProjectileMovementComponent*>(UWTLProjectileMovementComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLQuestMiningZone
// (Actor)

class UClass* AWTLQuestMiningZone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLQuestMiningZone");

	return Clss;
}


// WTLQuestMiningZone WTL.Default__WTLQuestMiningZone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLQuestMiningZone* AWTLQuestMiningZone::GetDefaultObj()
{
	static class AWTLQuestMiningZone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLQuestMiningZone*>(AWTLQuestMiningZone::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLQuestObject
// (Actor)

class UClass* AWTLQuestObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLQuestObject");

	return Clss;
}


// WTLQuestObject WTL.Default__WTLQuestObject
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLQuestObject* AWTLQuestObject::GetDefaultObj()
{
	static class AWTLQuestObject* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLQuestObject*>(AWTLQuestObject::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLQuestObject.ShowCharacterActionTimerWidget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Timeout                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLActionTimerWidgetTypeType                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCountdownSliderWidgetFillingTypeDirection                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObject::ShowCharacterActionTimerWidget(class AWTLCharacter* Character, float Timeout, enum class EWTLActionTimerWidgetType Type, enum class EWTLCountdownSliderWidgetFillingType Direction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObject", "ShowCharacterActionTimerWidget");

	Params::AWTLQuestObject_ShowCharacterActionTimerWidget_Params Parms{};

	Parms.Character = Character;
	Parms.Timeout = Timeout;
	Parms.Type = Type;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuestObject.SetQuestState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestCheckResult    Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObject::SetQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState State, enum class EWTLQuestCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObject", "SetQuestState");

	Params::AWTLQuestObject_SetQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLQuestObject.OnRep_ChangeState
// (Final, Native, Public)
// Parameters:

void AWTLQuestObject::OnRep_ChangeState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObject", "OnRep_ChangeState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuestObject.OnChangeState
// (Event, Public, BlueprintEvent)
// Parameters:
// uint8                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObject::OnChangeState(uint8 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObject", "OnChangeState");

	Params::AWTLQuestObject_OnChangeState_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLQuestObject.HideCharacterActionTimerWidget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObject::HideCharacterActionTimerWidget(class AWTLCharacter* Character, bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObject", "HideCharacterActionTimerWidget");

	Params::AWTLQuestObject_HideCharacterActionTimerWidget_Params Parms{};

	Parms.Character = Character;
	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuestObject.GetQuestState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObject::GetQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState* QuestState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObject", "GetQuestState");

	Params::AWTLQuestObject_GetQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (QuestState != nullptr)
		*QuestState = Parms.QuestState;

}


// Function WTL.WTLQuestObject.CharacterTakeQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestCheckResult    Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObject::CharacterTakeQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObject", "CharacterTakeQuest");

	Params::AWTLQuestObject_CharacterTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLQuestObject.CharacterCompleteQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestCheckResult    Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObject::CharacterCompleteQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObject", "CharacterCompleteQuest");

	Params::AWTLQuestObject_CharacterCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLQuestObject.CharacterCanTakeQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestCheckResult    Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObject::CharacterCanTakeQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObject", "CharacterCanTakeQuest");

	Params::AWTLQuestObject_CharacterCanTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLQuestObject.CharacterCanCompleteQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestCheckResult    Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObject::CharacterCanCompleteQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObject", "CharacterCanCompleteQuest");

	Params::AWTLQuestObject_CharacterCanCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Class WTL.WTLQuestObjectAchievement
// (Actor)

class UClass* AWTLQuestObjectAchievement::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLQuestObjectAchievement");

	return Clss;
}


// WTLQuestObjectAchievement WTL.Default__WTLQuestObjectAchievement
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLQuestObjectAchievement* AWTLQuestObjectAchievement::GetDefaultObj()
{
	static class AWTLQuestObjectAchievement* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLQuestObjectAchievement*>(AWTLQuestObjectAchievement::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLQuestObjectAchievement.UpdateMeshAchievement
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLQuestObjectAchievement::UpdateMeshAchievement()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectAchievement", "UpdateMeshAchievement");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuestObjectAchievement.HideAllMeshes
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLQuestObjectAchievement::HideAllMeshes()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectAchievement", "HideAllMeshes");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuestObjectAchievement.GetQuestStates
// (Final, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// TArray<struct FWTLQuestState>      OutQuestStates                                                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void AWTLQuestObjectAchievement::GetQuestStates(TArray<struct FWTLQuestState>* OutQuestStates)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectAchievement", "GetQuestStates");

	Params::AWTLQuestObjectAchievement_GetQuestStates_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (OutQuestStates != nullptr)
		*OutQuestStates = std::move(Parms.OutQuestStates);

}


// Class WTL.WTLQuestObjectForAction
// (Actor)

class UClass* AWTLQuestObjectForAction::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLQuestObjectForAction");

	return Clss;
}


// WTLQuestObjectForAction WTL.Default__WTLQuestObjectForAction
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLQuestObjectForAction* AWTLQuestObjectForAction::GetDefaultObj()
{
	static class AWTLQuestObjectForAction* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLQuestObjectForAction*>(AWTLQuestObjectForAction::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLQuestObjectForAction.SetQuestState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLObjFAActionResult   Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObjectForAction::SetQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState State, enum class EWTLObjFAActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectForAction", "SetQuestState");

	Params::AWTLQuestObjectForAction_SetQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLQuestObjectForAction.GetQuestState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObjectForAction::GetQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState* QuestState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectForAction", "GetQuestState");

	Params::AWTLQuestObjectForAction_GetQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (QuestState != nullptr)
		*QuestState = Parms.QuestState;

}


// Function WTL.WTLQuestObjectForAction.CharacterCanTakeQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLObjFACheckResult    Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObjectForAction::CharacterCanTakeQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLObjFACheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectForAction", "CharacterCanTakeQuest");

	Params::AWTLQuestObjectForAction_CharacterCanTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLQuestObjectForAction.CharacterCanCompleteQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLObjFACheckResult    Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObjectForAction::CharacterCanCompleteQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLObjFACheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectForAction", "CharacterCanCompleteQuest");

	Params::AWTLQuestObjectForAction_CharacterCanCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Class WTL.WTLQuestObjectSpawner
// (Actor)

class UClass* AWTLQuestObjectSpawner::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLQuestObjectSpawner");

	return Clss;
}


// WTLQuestObjectSpawner WTL.Default__WTLQuestObjectSpawner
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLQuestObjectSpawner* AWTLQuestObjectSpawner::GetDefaultObj()
{
	static class AWTLQuestObjectSpawner* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLQuestObjectSpawner*>(AWTLQuestObjectSpawner::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLQuestObjectSpawner.OnRep_CurrentState
// (Final, Native, Private)
// Parameters:

void AWTLQuestObjectSpawner::OnRep_CurrentState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectSpawner", "OnRep_CurrentState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuestObjectSpawner.NetMulticast_CharacterUseItem
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// uint64                             CharacterID                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObjectSpawner::NetMulticast_CharacterUseItem(uint64 CharacterID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectSpawner", "NetMulticast_CharacterUseItem");

	Params::AWTLQuestObjectSpawner_NetMulticast_CharacterUseItem_Params Parms{};

	Parms.CharacterID = CharacterID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLQuestObjectSpawner.BPOnTakeItem
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObjectSpawner::BPOnTakeItem(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectSpawner", "BPOnTakeItem");

	Params::AWTLQuestObjectSpawner_BPOnTakeItem_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLQuestObjectSpawner.BPOnStartInteraction
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObjectSpawner::BPOnStartInteraction(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectSpawner", "BPOnStartInteraction");

	Params::AWTLQuestObjectSpawner_BPOnStartInteraction_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLQuestObjectSpawner.BPOnFinishInteraction
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLQuestObjectSpawner::BPOnFinishInteraction(class AWTLCharacter* Character, bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectSpawner", "BPOnFinishInteraction");

	Params::AWTLQuestObjectSpawner_BPOnFinishInteraction_Params Parms{};

	Parms.Character = Character;
	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLQuestObjectSpawner.BPIsRelevantForCharacterQuestState
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLQuestObjectSpawner::BPIsRelevantForCharacterQuestState(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestObjectSpawner", "BPIsRelevantForCharacterQuestState");

	Params::AWTLQuestObjectSpawner_BPIsRelevantForCharacterQuestState_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLQuestSystem
// (None)

class UClass* UWTLQuestSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLQuestSystem");

	return Clss;
}


// WTLQuestSystem WTL.Default__WTLQuestSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLQuestSystem* UWTLQuestSystem::GetDefaultObj()
{
	static class UWTLQuestSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLQuestSystem*>(UWTLQuestSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLQuestTutorialVolume
// (Actor)

class UClass* AWTLQuestTutorialVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLQuestTutorialVolume");

	return Clss;
}


// WTLQuestTutorialVolume WTL.Default__WTLQuestTutorialVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLQuestTutorialVolume* AWTLQuestTutorialVolume::GetDefaultObj()
{
	static class AWTLQuestTutorialVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLQuestTutorialVolume*>(AWTLQuestTutorialVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLQuestTutorialVolume.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLQuestTutorialVolume::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLQuestTutorialVolume", "OnBeginOverlap");

	Params::AWTLQuestTutorialVolume_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLRadialForceComponent
// (SceneComponent)

class UClass* UWTLRadialForceComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRadialForceComponent");

	return Clss;
}


// WTLRadialForceComponent WTL.Default__WTLRadialForceComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLRadialForceComponent* UWTLRadialForceComponent::GetDefaultObj()
{
	static class UWTLRadialForceComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLRadialForceComponent*>(UWTLRadialForceComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLRadialForceComponent.AddPhysicsImpusle
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void UWTLRadialForceComponent::AddPhysicsImpusle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRadialForceComponent", "AddPhysicsImpusle");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRadialForceComponent.AddGravity
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                              RadiusXY                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              RadiusZ                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxValueXY                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MinValueXY                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ValueZ                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              MaxMonsterMass                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLRadialForceComponent::AddGravity(float RadiusXY, float RadiusZ, float MaxValueXY, float MinValueXY, float ValueZ, float MaxMonsterMass)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRadialForceComponent", "AddGravity");

	Params::UWTLRadialForceComponent_AddGravity_Params Parms{};

	Parms.RadiusXY = RadiusXY;
	Parms.RadiusZ = RadiusZ;
	Parms.MaxValueXY = MaxValueXY;
	Parms.MinValueXY = MinValueXY;
	Parms.ValueZ = ValueZ;
	Parms.MaxMonsterMass = MaxMonsterMass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLRadialMenuInstigatorInterface
// (None)

class UClass* IWTLRadialMenuInstigatorInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRadialMenuInstigatorInterface");

	return Clss;
}


// WTLRadialMenuInstigatorInterface WTL.Default__WTLRadialMenuInstigatorInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLRadialMenuInstigatorInterface* IWTLRadialMenuInstigatorInterface::GetDefaultObj()
{
	static class IWTLRadialMenuInstigatorInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLRadialMenuInstigatorInterface*>(IWTLRadialMenuInstigatorInterface::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLRadialMenuInstigatorInterface.GenerateRadialMenuButtons
// (Native, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TArray<struct FWTLUseMenuButtonInfo>ButtonsInfoArray                                                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void IWTLRadialMenuInstigatorInterface::GenerateRadialMenuButtons(TArray<struct FWTLUseMenuButtonInfo>* ButtonsInfoArray)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRadialMenuInstigatorInterface", "GenerateRadialMenuButtons");

	Params::IWTLRadialMenuInstigatorInterface_GenerateRadialMenuButtons_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (ButtonsInfoArray != nullptr)
		*ButtonsInfoArray = std::move(Parms.ButtonsInfoArray);

}


// Class WTL.WTLRadio
// (Actor)

class UClass* AWTLRadio::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRadio");

	return Clss;
}


// WTLRadio WTL.Default__WTLRadio
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLRadio* AWTLRadio::GetDefaultObj()
{
	static class AWTLRadio* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLRadio*>(AWTLRadio::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLRadioBomb
// (Actor)

class UClass* AWTLRadioBomb::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRadioBomb");

	return Clss;
}


// WTLRadioBomb WTL.Default__WTLRadioBomb
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLRadioBomb* AWTLRadioBomb::GetDefaultObj()
{
	static class AWTLRadioBomb* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLRadioBomb*>(AWTLRadioBomb::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLRadioBomb.OnRep_SpawnExplosion
// (Final, Native, Private)
// Parameters:

void AWTLRadioBomb::OnRep_SpawnExplosion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRadioBomb", "OnRep_SpawnExplosion");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRadioBomb.OnRep_Activated
// (Final, Native, Private)
// Parameters:

void AWTLRadioBomb::OnRep_Activated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRadioBomb", "OnRep_Activated");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRadioBomb.OnRemainingTimerChanged
// (Final, Native, Private)
// Parameters:
// float                              Time                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRadioBomb::OnRemainingTimerChanged(float Time)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRadioBomb", "OnRemainingTimerChanged");

	Params::AWTLRadioBomb_OnRemainingTimerChanged_Params Parms{};

	Parms.Time = Time;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRadioBomb.OnGiveDeminedItemToCharacter
// (Final, Native, Private)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRadioBomb::OnGiveDeminedItemToCharacter(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRadioBomb", "OnGiveDeminedItemToCharacter");

	Params::AWTLRadioBomb_OnGiveDeminedItemToCharacter_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRadioBomb.OnActivate
// (Final, Native, Public)
// Parameters:

void AWTLRadioBomb::OnActivate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRadioBomb", "OnActivate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRadioBomb.K2_ProccessExplosion
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLRadioBomb::K2_ProccessExplosion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRadioBomb", "K2_ProccessExplosion");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLRadioBomb.K2_OnActivated
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void AWTLRadioBomb::K2_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRadioBomb", "K2_OnActivated");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLRainRemoverVolume
// (Actor)

class UClass* AWTLRainRemoverVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRainRemoverVolume");

	return Clss;
}


// WTLRainRemoverVolume WTL.Default__WTLRainRemoverVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLRainRemoverVolume* AWTLRainRemoverVolume::GetDefaultObj()
{
	static class AWTLRainRemoverVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLRainRemoverVolume*>(AWTLRainRemoverVolume::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLRandomPointsMiningZone
// (Actor)

class UClass* AWTLRandomPointsMiningZone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRandomPointsMiningZone");

	return Clss;
}


// WTLRandomPointsMiningZone WTL.Default__WTLRandomPointsMiningZone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLRandomPointsMiningZone* AWTLRandomPointsMiningZone::GetDefaultObj()
{
	static class AWTLRandomPointsMiningZone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLRandomPointsMiningZone*>(AWTLRandomPointsMiningZone::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLRangedWeapon
// (Actor)

class UClass* AWTLRangedWeapon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRangedWeapon");

	return Clss;
}


// WTLRangedWeapon WTL.Default__WTLRangedWeapon
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLRangedWeapon* AWTLRangedWeapon::GetDefaultObj()
{
	static class AWTLRangedWeapon* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLRangedWeapon*>(AWTLRangedWeapon::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLRangedWeapon.Server_StopUseNew
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint8                              DoneActionCount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              MagazineAmmoCount                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::Server_StopUseNew(uint8 DoneActionCount, uint8 MagazineAmmoCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_StopUseNew");

	Params::AWTLRangedWeapon_Server_StopUseNew_Params Parms{};

	Parms.DoneActionCount = DoneActionCount;
	Parms.MagazineAmmoCount = MagazineAmmoCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLRangedWeapon::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLRangedWeapon::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Server_SpawnGrenadeLauncherProjectile
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FTransform                  SpawnTransform                                                   (Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::Server_SpawnGrenadeLauncherProjectile(const struct FTransform& SpawnTransform)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_SpawnGrenadeLauncherProjectile");

	Params::AWTLRangedWeapon_Server_SpawnGrenadeLauncherProjectile_Params Parms{};

	Parms.SpawnTransform = SpawnTransform;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Server_SetFireModeIndex
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// uint8                              FireModeIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::Server_SetFireModeIndex(uint8 FireModeIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_SetFireModeIndex");

	Params::AWTLRangedWeapon_Server_SetFireModeIndex_Params Parms{};

	Parms.FireModeIndex = FireModeIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Server_SetAmmoCount
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint8                              ClientAmmoCount                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::Server_SetAmmoCount(uint8 ClientAmmoCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_SetAmmoCount");

	Params::AWTLRangedWeapon_Server_SetAmmoCount_Params Parms{};

	Parms.ClientAmmoCount = ClientAmmoCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Server_OnUnload
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLRangedWeapon::Server_OnUnload()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_OnUnload");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Server_OnReload
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                               bChangeAmmoItem                                                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              ClientMagazineAmmoCount                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::Server_OnReload(bool bChangeAmmoItem, uint8 ClientMagazineAmmoCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_OnReload");

	Params::AWTLRangedWeapon_Server_OnReload_Params Parms{};

	Parms.bChangeAmmoItem = bChangeAmmoItem;
	Parms.ClientMagazineAmmoCount = ClientMagazineAmmoCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Server_OnLoad
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// uint64                             AmmoItemID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::Server_OnLoad(uint64 AmmoItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_OnLoad");

	Params::AWTLRangedWeapon_Server_OnLoad_Params Parms{};

	Parms.AmmoItemID = AmmoItemID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Server_InterruptLoading
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLRangedWeapon::Server_InterruptLoading()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_InterruptLoading");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Server_ChangeAmmoItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLRangedWeapon::Server_ChangeAmmoItem()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Server_ChangeAmmoItem");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.PostReload
// (Final, Native, Private)
// Parameters:

void AWTLRangedWeapon::PostReload()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "PostReload");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.OnRep_InterruptLoadingReceived
// (Final, Native, Private)
// Parameters:

void AWTLRangedWeapon::OnRep_InterruptLoadingReceived()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "OnRep_InterruptLoadingReceived");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.OnRep_FireModeIndex
// (Final, Native, Private)
// Parameters:

void AWTLRangedWeapon::OnRep_FireModeIndex()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "OnRep_FireModeIndex");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.OnRep_Customization
// (Final, Native, Private)
// Parameters:

void AWTLRangedWeapon::OnRep_Customization()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "OnRep_Customization");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.OnRep_CurrentState
// (Final, Native, Private)
// Parameters:
// enum class EWTLWeaponState         Previous                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::OnRep_CurrentState(enum class EWTLWeaponState Previous)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "OnRep_CurrentState");

	Params::AWTLRangedWeapon_OnRep_CurrentState_Params Parms{};

	Parms.Previous = Previous;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.OnRep_CurrentAmmoID
// (Final, Native, Private)
// Parameters:

void AWTLRangedWeapon::OnRep_CurrentAmmoID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "OnRep_CurrentAmmoID");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.OnRep_AttachmentTypeIDs
// (Final, Native, Private)
// Parameters:

void AWTLRangedWeapon::OnRep_AttachmentTypeIDs()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "OnRep_AttachmentTypeIDs");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.OnMontageEnded
// (Final, Native, Private)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bInterrupted                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "OnMontageEnded");

	Params::AWTLRangedWeapon_OnMontageEnded_Params Parms{};

	Parms.Montage = Montage;
	Parms.bInterrupted = bInterrupted;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.NetMulticast_OnStopFire
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLRangedWeapon::NetMulticast_OnStopFire()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "NetMulticast_OnStopFire");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.NetMulticast_OnStartFire
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// uint8                              FireModeIndex                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               FireLast                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::NetMulticast_OnStartFire(uint8 FireModeIndex, bool FireLast)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "NetMulticast_OnStartFire");

	Params::AWTLRangedWeapon_NetMulticast_OnStartFire_Params Parms{};

	Parms.FireModeIndex = FireModeIndex;
	Parms.FireLast = FireLast;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.NetMulticast_OnReload
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// uint64                             AmmoItemID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bIsFullReload                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              CountToReload                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentAmmoCount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint16                             CurrentAmmoID                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::NetMulticast_OnReload(uint64 AmmoItemID, bool bIsFullReload, uint8 CountToReload, int32 CurrentAmmoCount, uint16 CurrentAmmoID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "NetMulticast_OnReload");

	Params::AWTLRangedWeapon_NetMulticast_OnReload_Params Parms{};

	Parms.AmmoItemID = AmmoItemID;
	Parms.bIsFullReload = bIsFullReload;
	Parms.CountToReload = CountToReload;
	Parms.CurrentAmmoCount = CurrentAmmoCount;
	Parms.CurrentAmmoID = CurrentAmmoID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.NetMulticast_OnApplyWeaponAttachments
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLRangedWeapon::NetMulticast_OnApplyWeaponAttachments()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "NetMulticast_OnApplyWeaponAttachments");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.NetMulticast_OnApplyCustomization
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLRangedWeapon::NetMulticast_OnApplyCustomization()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "NetMulticast_OnApplyCustomization");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.ClientActionFinished
// (Final, Native, Private)
// Parameters:

void AWTLRangedWeapon::ClientActionFinished()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "ClientActionFinished");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Client_UpdateAmmoItemReference
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLRangedWeapon::Client_UpdateAmmoItemReference()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Client_UpdateAmmoItemReference");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Client_SetPrivateAmmoCount
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              AmmoValue                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::Client_SetPrivateAmmoCount(uint8 AmmoValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Client_SetPrivateAmmoCount");

	Params::AWTLRangedWeapon_Client_SetPrivateAmmoCount_Params Parms{};

	Parms.AmmoValue = AmmoValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Client_OnStopUse
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint8                              CurrentMagazineAmmoCount                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              CurrentAmmoCount                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::Client_OnStopUse(uint8 CurrentMagazineAmmoCount, int32 CurrentAmmoCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Client_OnStopUse");

	Params::AWTLRangedWeapon_Client_OnStopUse_Params Parms{};

	Parms.CurrentMagazineAmmoCount = CurrentMagazineAmmoCount;
	Parms.CurrentAmmoCount = CurrentAmmoCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Client_OnPostReload
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:
// uint8                              AmmoCount                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::Client_OnPostReload(uint8 AmmoCount)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Client_OnPostReload");

	Params::AWTLRangedWeapon_Client_OnPostReload_Params Parms{};

	Parms.AmmoCount = AmmoCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.Client_AffectedByEMP
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                              EffectTime                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::Client_AffectedByEMP(float EffectTime)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "Client_AffectedByEMP");

	Params::AWTLRangedWeapon_Client_AffectedByEMP_Params Parms{};

	Parms.EffectTime = EffectTime;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRangedWeapon.BPTakeInArms
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               IsLoaded                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              AmmoID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::BPTakeInArms(bool IsLoaded, int32 AmmoID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "BPTakeInArms");

	Params::AWTLRangedWeapon_BPTakeInArms_Params Parms{};

	Parms.IsLoaded = IsLoaded;
	Parms.AmmoID = AmmoID;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLRangedWeapon.BPReloading
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              AmmoItemID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRangedWeapon::BPReloading(int32 AmmoItemID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "BPReloading");

	Params::AWTLRangedWeapon_BPReloading_Params Parms{};

	Parms.AmmoItemID = AmmoItemID;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLRangedWeapon.BPGetNewReloadMontagePawn
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              AmmoID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* AWTLRangedWeapon::BPGetNewReloadMontagePawn(int32 AmmoID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "BPGetNewReloadMontagePawn");

	Params::AWTLRangedWeapon_BPGetNewReloadMontagePawn_Params Parms{};

	Parms.AmmoID = AmmoID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function WTL.WTLRangedWeapon.BPGetNewReloadMontage
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              AmmoID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* AWTLRangedWeapon::BPGetNewReloadMontage(int32 AmmoID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "BPGetNewReloadMontage");

	Params::AWTLRangedWeapon_BPGetNewReloadMontage_Params Parms{};

	Parms.AmmoID = AmmoID;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function WTL.WTLRangedWeapon.BPGetCurrentAmmoID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLRangedWeapon::BPGetCurrentAmmoID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "BPGetCurrentAmmoID");

	Params::AWTLRangedWeapon_BPGetCurrentAmmoID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRangedWeapon.BPClientStartUse
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLRangedWeapon::BPClientStartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRangedWeapon", "BPClientStartUse");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLRankSystem
// (None)

class UClass* UWTLRankSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRankSystem");

	return Clss;
}


// WTLRankSystem WTL.Default__WTLRankSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLRankSystem* UWTLRankSystem::GetDefaultObj()
{
	static class UWTLRankSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLRankSystem*>(UWTLRankSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLRecastNavMeshLarge
// (Actor)

class UClass* AWTLRecastNavMeshLarge::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRecastNavMeshLarge");

	return Clss;
}


// WTLRecastNavMeshLarge WTL.Default__WTLRecastNavMeshLarge
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLRecastNavMeshLarge* AWTLRecastNavMeshLarge::GetDefaultObj()
{
	static class AWTLRecastNavMeshLarge* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLRecastNavMeshLarge*>(AWTLRecastNavMeshLarge::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLRefHelper
// (None)

class UClass* UWTLRefHelper::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRefHelper");

	return Clss;
}


// WTLRefHelper WTL.Default__WTLRefHelper
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLRefHelper* UWTLRefHelper::GetDefaultObj()
{
	static class UWTLRefHelper* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLRefHelper*>(UWTLRefHelper::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLRepairItem
// (Actor)

class UClass* AWTLRepairItem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRepairItem");

	return Clss;
}


// WTLRepairItem WTL.Default__WTLRepairItem
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLRepairItem* AWTLRepairItem::GetDefaultObj()
{
	static class AWTLRepairItem* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLRepairItem*>(AWTLRepairItem::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLRepairItem.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLRepairItem::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLRepairItem::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.Server_RepairHit
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FHitResult                  HitResult                                                        (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLRepairItem::Server_RepairHit(struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "Server_RepairHit");

	Params::AWTLRepairItem_Server_RepairHit_Params Parms{};

	Parms.HitResult = HitResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.OnRep_SetEffects
// (Final, Native, Public)
// Parameters:

void AWTLRepairItem::OnRep_SetEffects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "OnRep_SetEffects");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.OnRep_EnergyValue
// (Final, Native, Public)
// Parameters:

void AWTLRepairItem::OnRep_EnergyValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "OnRep_EnergyValue");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.NetMulticast_SpawnDecal
// (Final, Net, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FVector_NetQuantize         Location                                                         (Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                    Rotator                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         Component                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRepairItem::NetMulticast_SpawnDecal(const struct FVector_NetQuantize& Location, const struct FRotator& Rotator, class UPrimitiveComponent* Component)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "NetMulticast_SpawnDecal");

	Params::AWTLRepairItem_NetMulticast_SpawnDecal_Params Parms{};

	Parms.Location = Location;
	Parms.Rotator = Rotator;
	Parms.Component = Component;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.NetMulticast_OnUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// enum class EWTLUsableItemUseType   UseType                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRepairItem::NetMulticast_OnUse(enum class EWTLUsableItemUseType UseType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "NetMulticast_OnUse");

	Params::AWTLRepairItem_NetMulticast_OnUse_Params Parms{};

	Parms.UseType = UseType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.NetMulticast_OnStopUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLRepairItem::NetMulticast_OnStopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "NetMulticast_OnStopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.Client_SetEnergyOnMaterial
// (Net, Native, Event, Public, NetClient)
// Parameters:

void AWTLRepairItem::Client_SetEnergyOnMaterial()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "Client_SetEnergyOnMaterial");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.Client_EffectsUnderWater
// (Net, Native, Event, Public, NetClient)
// Parameters:

void AWTLRepairItem::Client_EffectsUnderWater()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "Client_EffectsUnderWater");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.Client_Charge
// (Net, Native, Event, Public, NetClient)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRepairItem::Client_Charge(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "Client_Charge");

	Params::AWTLRepairItem_Client_Charge_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRepairItem.BPSetEnergyValueOnMaterial
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Energy                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRepairItem::BPSetEnergyValueOnMaterial(float Energy)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "BPSetEnergyValueOnMaterial");

	Params::AWTLRepairItem_BPSetEnergyValueOnMaterial_Params Parms{};

	Parms.Energy = Energy;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLRepairItem.BPRepairEffects
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLRepairItem::BPRepairEffects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "BPRepairEffects");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLRepairItem.BPEffectsUnderWater
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLRepairItem::BPEffectsUnderWater()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "BPEffectsUnderWater");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLRepairItem.BPDeactivateRepairEffects
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLRepairItem::BPDeactivateRepairEffects()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "BPDeactivateRepairEffects");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLRepairItem.BPChargeItem
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRepairItem::BPChargeItem(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRepairItem", "BPChargeItem");

	Params::AWTLRepairItem_BPChargeItem_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLReplicationGraph
// (None)

class UClass* UWTLReplicationGraph::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLReplicationGraph");

	return Clss;
}


// WTLReplicationGraph WTL.Default__WTLReplicationGraph
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLReplicationGraph* UWTLReplicationGraph::GetDefaultObj()
{
	static class UWTLReplicationGraph* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLReplicationGraph*>(UWTLReplicationGraph::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLReplicationGraphNode_AlwaysRelevant_ForConnection
// (None)

class UClass* UWTLReplicationGraphNode_AlwaysRelevant_ForConnection::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLReplicationGraphNode_AlwaysRelevant_ForConnection");

	return Clss;
}


// WTLReplicationGraphNode_AlwaysRelevant_ForConnection WTL.Default__WTLReplicationGraphNode_AlwaysRelevant_ForConnection
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLReplicationGraphNode_AlwaysRelevant_ForConnection* UWTLReplicationGraphNode_AlwaysRelevant_ForConnection::GetDefaultObj()
{
	static class UWTLReplicationGraphNode_AlwaysRelevant_ForConnection* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLReplicationGraphNode_AlwaysRelevant_ForConnection*>(UWTLReplicationGraphNode_AlwaysRelevant_ForConnection::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLReplicationGraphNode_PlayerStateFrequencyLimiter
// (None)

class UClass* UWTLReplicationGraphNode_PlayerStateFrequencyLimiter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLReplicationGraphNode_PlayerStateFrequencyLimiter");

	return Clss;
}


// WTLReplicationGraphNode_PlayerStateFrequencyLimiter WTL.Default__WTLReplicationGraphNode_PlayerStateFrequencyLimiter
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLReplicationGraphNode_PlayerStateFrequencyLimiter* UWTLReplicationGraphNode_PlayerStateFrequencyLimiter::GetDefaultObj()
{
	static class UWTLReplicationGraphNode_PlayerStateFrequencyLimiter* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLReplicationGraphNode_PlayerStateFrequencyLimiter*>(UWTLReplicationGraphNode_PlayerStateFrequencyLimiter::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLReputationSystem
// (None)

class UClass* UWTLReputationSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLReputationSystem");

	return Clss;
}


// WTLReputationSystem WTL.Default__WTLReputationSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLReputationSystem* UWTLReputationSystem::GetDefaultObj()
{
	static class UWTLReputationSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLReputationSystem*>(UWTLReputationSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLReverseRainbowProjectile
// (Actor)

class UClass* AWTLReverseRainbowProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLReverseRainbowProjectile");

	return Clss;
}


// WTLReverseRainbowProjectile WTL.Default__WTLReverseRainbowProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLReverseRainbowProjectile* AWTLReverseRainbowProjectile::GetDefaultObj()
{
	static class AWTLReverseRainbowProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLReverseRainbowProjectile*>(AWTLReverseRainbowProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLReverseRainbowProjectile.OnRep_Destroy
// (Final, Native, Private)
// Parameters:

void AWTLReverseRainbowProjectile::OnRep_Destroy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLReverseRainbowProjectile", "OnRep_Destroy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLReverseRainbowProjectile.OnRep_Burst
// (Final, Native, Public)
// Parameters:

void AWTLReverseRainbowProjectile::OnRep_Burst()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLReverseRainbowProjectile", "OnRep_Burst");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLReverseRainbowProjectile.NetMulticast_OnExplosion
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLReverseRainbowProjectile::NetMulticast_OnExplosion()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLReverseRainbowProjectile", "NetMulticast_OnExplosion");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLReverseRainbowProjectile.BPPlaySound
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLReverseRainbowProjectile::BPPlaySound()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLReverseRainbowProjectile", "BPPlaySound");



	UObject::ProcessEvent(Func, nullptr);

}


// Class WTL.WTLRichTextBlockInventoryItemDecorator
// (None)

class UClass* UWTLRichTextBlockInventoryItemDecorator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRichTextBlockInventoryItemDecorator");

	return Clss;
}


// WTLRichTextBlockInventoryItemDecorator WTL.Default__WTLRichTextBlockInventoryItemDecorator
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLRichTextBlockInventoryItemDecorator* UWTLRichTextBlockInventoryItemDecorator::GetDefaultObj()
{
	static class UWTLRichTextBlockInventoryItemDecorator* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLRichTextBlockInventoryItemDecorator*>(UWTLRichTextBlockInventoryItemDecorator::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLRichTextBlockPlayerNameDecorator
// (None)

class UClass* UWTLRichTextBlockPlayerNameDecorator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRichTextBlockPlayerNameDecorator");

	return Clss;
}


// WTLRichTextBlockPlayerNameDecorator WTL.Default__WTLRichTextBlockPlayerNameDecorator
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLRichTextBlockPlayerNameDecorator* UWTLRichTextBlockPlayerNameDecorator::GetDefaultObj()
{
	static class UWTLRichTextBlockPlayerNameDecorator* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLRichTextBlockPlayerNameDecorator*>(UWTLRichTextBlockPlayerNameDecorator::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLRichTextBlockInlineImageDecorator
// (None)

class UClass* UWTLRichTextBlockInlineImageDecorator::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRichTextBlockInlineImageDecorator");

	return Clss;
}


// WTLRichTextBlockInlineImageDecorator WTL.Default__WTLRichTextBlockInlineImageDecorator
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLRichTextBlockInlineImageDecorator* UWTLRichTextBlockInlineImageDecorator::GetDefaultObj()
{
	static class UWTLRichTextBlockInlineImageDecorator* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLRichTextBlockInlineImageDecorator*>(UWTLRichTextBlockInlineImageDecorator::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLRobotCraftStation
// (Actor)

class UClass* AWTLRobotCraftStation::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLRobotCraftStation");

	return Clss;
}


// WTLRobotCraftStation WTL.Default__WTLRobotCraftStation
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLRobotCraftStation* AWTLRobotCraftStation::GetDefaultObj()
{
	static class AWTLRobotCraftStation* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLRobotCraftStation*>(AWTLRobotCraftStation::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLRobotCraftStation.OnRep_StorageContent
// (Final, Native, Private)
// Parameters:

void AWTLRobotCraftStation::OnRep_StorageContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "OnRep_StorageContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.OnRep_ProductionEndServerTime
// (Final, Native, Private)
// Parameters:

void AWTLRobotCraftStation::OnRep_ProductionEndServerTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "OnRep_ProductionEndServerTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.OnRep_MaxRobotCount
// (Final, Native, Private)
// Parameters:

void AWTLRobotCraftStation::OnRep_MaxRobotCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "OnRep_MaxRobotCount");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.OnRep_CurrentRobotCount
// (Final, Native, Private)
// Parameters:

void AWTLRobotCraftStation::OnRep_CurrentRobotCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "OnRep_CurrentRobotCount");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.K2_ShowCraftObjectWidget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLPlayerController*        PlayerController                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRobotCraftStation::K2_ShowCraftObjectWidget(class AWTLPlayerController* PlayerController)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_ShowCraftObjectWidget");

	Params::AWTLRobotCraftStation_K2_ShowCraftObjectWidget_Params Parms{};

	Parms.PlayerController = PlayerController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.K2_PowerOn
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLRobotCraftStation::K2_PowerOn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_PowerOn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.K2_PowerOff
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLRobotCraftStation::K2_PowerOff()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_PowerOff");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.K2_LoadNeedItems
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLRobotCraftStation::K2_LoadNeedItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_LoadNeedItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.K2_IsWaitingSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLRobotCraftStation::K2_IsWaitingSpawn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_IsWaitingSpawn");

	Params::AWTLRobotCraftStation_K2_IsWaitingSpawn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_IsPowerOn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLRobotCraftStation::K2_IsPowerOn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_IsPowerOn");

	Params::AWTLRobotCraftStation_K2_IsPowerOn_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_IsEnoughResources
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLRobotCraftStation::K2_IsEnoughResources()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_IsEnoughResources");

	Params::AWTLRobotCraftStation_K2_IsEnoughResources_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_IsCrafting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLRobotCraftStation::K2_IsCrafting()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_IsCrafting");

	Params::AWTLRobotCraftStation_K2_IsCrafting_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_IsActivated
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLRobotCraftStation::K2_IsActivated()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_IsActivated");

	Params::AWTLRobotCraftStation_K2_IsActivated_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_GetRank
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLRobotCraftStation::K2_GetRank()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_GetRank");

	Params::AWTLRobotCraftStation_K2_GetRank_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_GetProductionTimeSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLRobotCraftStation::K2_GetProductionTimeSeconds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_GetProductionTimeSeconds");

	Params::AWTLRobotCraftStation_K2_GetProductionTimeSeconds_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_GetProductionTimeLeftSeconds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLRobotCraftStation::K2_GetProductionTimeLeftSeconds()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_GetProductionTimeLeftSeconds");

	Params::AWTLRobotCraftStation_K2_GetProductionTimeLeftSeconds_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_GetNameRobot
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class FText                        ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

class FText AWTLRobotCraftStation::K2_GetNameRobot()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_GetNameRobot");

	Params::AWTLRobotCraftStation_K2_GetNameRobot_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_GetMonsterInfo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FWTLMonsterItemData         ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FWTLMonsterItemData AWTLRobotCraftStation::K2_GetMonsterInfo()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_GetMonsterInfo");

	Params::AWTLRobotCraftStation_K2_GetMonsterInfo_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_GetMinLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLRobotCraftStation::K2_GetMinLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_GetMinLevel");

	Params::AWTLRobotCraftStation_K2_GetMinLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_GetMaxLevel
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLRobotCraftStation::K2_GetMaxLevel()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_GetMaxLevel");

	Params::AWTLRobotCraftStation_K2_GetMaxLevel_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_GetCurrentRobotCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLRobotCraftStation::K2_GetCurrentRobotCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_GetCurrentRobotCount");

	Params::AWTLRobotCraftStation_K2_GetCurrentRobotCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_ConvertProductionTimeToText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLRobotCraftStation::K2_ConvertProductionTimeToText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_ConvertProductionTimeToText");

	Params::AWTLRobotCraftStation_K2_ConvertProductionTimeToText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_ConvertProductionTimeFromText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      Value                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRobotCraftStation::K2_ConvertProductionTimeFromText(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_ConvertProductionTimeFromText");

	Params::AWTLRobotCraftStation_K2_ConvertProductionTimeFromText_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.K2_ConvertItemsToText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLRobotCraftStation::K2_ConvertItemsToText()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_ConvertItemsToText");

	Params::AWTLRobotCraftStation_K2_ConvertItemsToText_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.K2_ConvertItemsFromText
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class FString                      Value                                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRobotCraftStation::K2_ConvertItemsFromText(const class FString& Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_ConvertItemsFromText");

	Params::AWTLRobotCraftStation_K2_ConvertItemsFromText_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.K2_CompleteProgress
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLRobotCraftStation::K2_CompleteProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "K2_CompleteProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.BPUse
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRobotCraftStation::BPUse(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "BPUse");

	Params::AWTLRobotCraftStation_BPUse_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.BPSetHighlightState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLRobotCraftStation::BPSetHighlightState(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "BPSetHighlightState");

	Params::AWTLRobotCraftStation_BPSetHighlightState_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLRobotCraftStation.BPGetDisplayText
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLRobotCraftStation::BPGetDisplayText(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "BPGetDisplayText");

	Params::AWTLRobotCraftStation_BPGetDisplayText_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLRobotCraftStation.BPCanBeUsed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLRobotCraftStation::BPCanBeUsed(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLRobotCraftStation", "BPCanBeUsed");

	Params::AWTLRobotCraftStation_BPCanBeUsed_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLScriptedEventsSystem
// (None)

class UClass* UWTLScriptedEventsSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLScriptedEventsSystem");

	return Clss;
}


// WTLScriptedEventsSystem WTL.Default__WTLScriptedEventsSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLScriptedEventsSystem* UWTLScriptedEventsSystem::GetDefaultObj()
{
	static class UWTLScriptedEventsSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLScriptedEventsSystem*>(UWTLScriptedEventsSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSecurityController
// (None)

class UClass* UWTLSecurityController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSecurityController");

	return Clss;
}


// WTLSecurityController WTL.Default__WTLSecurityController
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSecurityController* UWTLSecurityController::GetDefaultObj()
{
	static class UWTLSecurityController* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSecurityController*>(UWTLSecurityController::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSecuritySystem
// (None)

class UClass* UWTLSecuritySystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSecuritySystem");

	return Clss;
}


// WTLSecuritySystem WTL.Default__WTLSecuritySystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSecuritySystem* UWTLSecuritySystem::GetDefaultObj()
{
	static class UWTLSecuritySystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSecuritySystem*>(UWTLSecuritySystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSharedData
// (None)

class UClass* UWTLSharedData::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSharedData");

	return Clss;
}


// WTLSharedData WTL.Default__WTLSharedData
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSharedData* UWTLSharedData::GetDefaultObj()
{
	static class UWTLSharedData* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSharedData*>(UWTLSharedData::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSignalJammer
// (Actor)

class UClass* AWTLSignalJammer::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSignalJammer");

	return Clss;
}


// WTLSignalJammer WTL.Default__WTLSignalJammer
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSignalJammer* AWTLSignalJammer::GetDefaultObj()
{
	static class AWTLSignalJammer* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSignalJammer*>(AWTLSignalJammer::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSignalJammer.OnRep_Energy
// (Final, Native, Protected)
// Parameters:

void AWTLSignalJammer::OnRep_Energy()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSignalJammer", "OnRep_Energy");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSignalJammer.OnEndOverlap
// (Native, Protected)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSignalJammer::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSignalJammer", "OnEndOverlap");

	Params::AWTLSignalJammer_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSignalJammer.OnBeginOverlap
// (Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLSignalJammer::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSignalJammer", "OnBeginOverlap");

	Params::AWTLSignalJammer_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLSkillSystem
// (None)

class UClass* UWTLSkillSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSkillSystem");

	return Clss;
}


// WTLSkillSystem WTL.Default__WTLSkillSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSkillSystem* UWTLSkillSystem::GetDefaultObj()
{
	static class UWTLSkillSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSkillSystem*>(UWTLSkillSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSky
// (Actor)

class UClass* AWTLSky::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSky");

	return Clss;
}


// WTLSky WTL.Default__WTLSky
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSky* AWTLSky::GetDefaultObj()
{
	static class AWTLSky* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSky*>(AWTLSky::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSky.K2_UpdateWeather
// (Event, Public, BlueprintEvent)
// Parameters:
// enum class EWTLWeatherType         Weather                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSky::K2_UpdateWeather(enum class EWTLWeatherType Weather)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSky", "K2_UpdateWeather");

	Params::AWTLSky_K2_UpdateWeather_Params Parms{};

	Parms.Weather = Weather;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLSky.GetSunLight
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UDirectionalLightComponent*  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDirectionalLightComponent* AWTLSky::GetSunLight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSky", "GetSunLight");

	Params::AWTLSky_GetSunLight_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function WTL.WTLSky.GetSkyModeOverride
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// uint8                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

uint8 AWTLSky::GetSkyModeOverride()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSky", "GetSkyModeOverride");

	Params::AWTLSky_GetSkyModeOverride_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLSky.GetMoonLight
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// class UDirectionalLightComponent*  ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UDirectionalLightComponent* AWTLSky::GetMoonLight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSky", "GetMoonLight");

	Params::AWTLSky_GetMoonLight_Params Parms{};


	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Class WTL.WTLSkyLevelScriptActor
// (Actor)

class UClass* AWTLSkyLevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSkyLevelScriptActor");

	return Clss;
}


// WTLSkyLevelScriptActor WTL.Default__WTLSkyLevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSkyLevelScriptActor* AWTLSkyLevelScriptActor::GetDefaultObj()
{
	static class AWTLSkyLevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSkyLevelScriptActor*>(AWTLSkyLevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSkyLevelScriptActor.OnRep_DesiredWindActiveTime
// (Final, Native, Private)
// Parameters:

void AWTLSkyLevelScriptActor::OnRep_DesiredWindActiveTime()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSkyLevelScriptActor", "OnRep_DesiredWindActiveTime");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSkyLevelScriptActor.GetUndergroundMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLSkyLevelScriptActor::GetUndergroundMode()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSkyLevelScriptActor", "GetUndergroundMode");

	Params::AWTLSkyLevelScriptActor_GetUndergroundMode_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLSkyLevelScriptActor.GetCloudsValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLSkyLevelScriptActor::GetCloudsValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSkyLevelScriptActor", "GetCloudsValue");

	Params::AWTLSkyLevelScriptActor_GetCloudsValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLSlotMachineBase
// (Actor)

class UClass* AWTLSlotMachineBase::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSlotMachineBase");

	return Clss;
}


// WTLSlotMachineBase WTL.Default__WTLSlotMachineBase
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSlotMachineBase* AWTLSlotMachineBase::GetDefaultObj()
{
	static class AWTLSlotMachineBase* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSlotMachineBase*>(AWTLSlotMachineBase::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSlotMachineBase.OnRep_SlotMachineMoney
// (Final, Native, Private)
// Parameters:

void AWTLSlotMachineBase::OnRep_SlotMachineMoney()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBase", "OnRep_SlotMachineMoney");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSlotMachineBase.K2_OnRep_SlotMachineMoney
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLSlotMachineBase::K2_OnRep_SlotMachineMoney()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBase", "K2_OnRep_SlotMachineMoney");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLSlotMachineBase.IncrementSlotMachineMoney
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSlotMachineBase::IncrementSlotMachineMoney(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBase", "IncrementSlotMachineMoney");

	Params::AWTLSlotMachineBase_IncrementSlotMachineMoney_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSlotMachineBase.GiveItemsToCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLGiveItemInfo>    Value                                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLSlotMachineBase::GiveItemsToCharacter(class AWTLCharacter* Character, const TArray<struct FWTLGiveItemInfo>& Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBase", "GiveItemsToCharacter");

	Params::AWTLSlotMachineBase_GiveItemsToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLSlotMachineBase.GetSlotMachineMoney
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLSlotMachineBase::GetSlotMachineMoney()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBase", "GetSlotMachineMoney");

	Params::AWTLSlotMachineBase_GetSlotMachineMoney_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLSlotMachineBase.GetID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLSlotMachineBase::GetID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBase", "GetID");

	Params::AWTLSlotMachineBase_GetID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLSlotMachineBase.DecrementSlotMachineMoney
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// int32                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLSlotMachineBase::DecrementSlotMachineMoney(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBase", "DecrementSlotMachineMoney");

	Params::AWTLSlotMachineBase_DecrementSlotMachineMoney_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLSlotMachineBandit
// (Actor)

class UClass* AWTLSlotMachineBandit::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSlotMachineBandit");

	return Clss;
}


// WTLSlotMachineBandit WTL.Default__WTLSlotMachineBandit
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSlotMachineBandit* AWTLSlotMachineBandit::GetDefaultObj()
{
	static class AWTLSlotMachineBandit* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSlotMachineBandit*>(AWTLSlotMachineBandit::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSlotMachineBandit.PlayWinSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLSlotMachineBandit::PlayWinSound()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBandit", "PlayWinSound");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSlotMachineBandit.OnRep_SlotMachineData
// (Final, Native, Public)
// Parameters:

void AWTLSlotMachineBandit::OnRep_SlotMachineData()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBandit", "OnRep_SlotMachineData");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSlotMachineBandit.NetMulticast_Win
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// uint32                             WinID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSlotMachineBandit::NetMulticast_Win(uint32 WinID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBandit", "NetMulticast_Win");

	Params::AWTLSlotMachineBandit_NetMulticast_Win_Params Parms{};

	Parms.WinID = WinID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSlotMachineBandit.K2_SetTickerText
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLSlotMachineBandit::K2_SetTickerText(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBandit", "K2_SetTickerText");

	Params::AWTLSlotMachineBandit_K2_SetTickerText_Params Parms{};

	Parms.Text = Text;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLSlotMachineBandit.K2_SetTickerColor
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FSlateColor                 Color                                                            (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void AWTLSlotMachineBandit::K2_SetTickerColor(struct FSlateColor& Color)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBandit", "K2_SetTickerColor");

	Params::AWTLSlotMachineBandit_K2_SetTickerColor_Params Parms{};

	Parms.Color = Color;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLSlotMachineBandit.K2_ResetTickerColor
// (Event, Public, BlueprintEvent)
// Parameters:

void AWTLSlotMachineBandit::K2_ResetTickerColor()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBandit", "K2_ResetTickerColor");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLSlotMachineBandit.K2_OnDataCylinderChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FWTLSlotMachineData         Value                                                            (Parm, NativeAccessSpecifierPublic)

void AWTLSlotMachineBandit::K2_OnDataCylinderChanged(const struct FWTLSlotMachineData& Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBandit", "K2_OnDataCylinderChanged");

	Params::AWTLSlotMachineBandit_K2_OnDataCylinderChanged_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLSlotMachineBandit.K2_ClientWin
// (Event, Public, BlueprintEvent)
// Parameters:
// int32                              WinID                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSlotMachineBandit::K2_ClientWin(int32 WinID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBandit", "K2_ClientWin");

	Params::AWTLSlotMachineBandit_K2_ClientWin_Params Parms{};

	Parms.WinID = WinID;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLSlotMachineBandit.GetNewSlotCombination
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FWTLSlotMachineData         ReturnValue                                                      (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FWTLSlotMachineData AWTLSlotMachineBandit::GetNewSlotCombination(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBandit", "GetNewSlotCombination");

	Params::AWTLSlotMachineBandit_GetNewSlotCombination_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLSlotMachineBandit.CheckWin
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLSlotMachineBandit::CheckWin()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachineBandit", "CheckWin");

	Params::AWTLSlotMachineBandit_CheckWin_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLSlotMachinePayTable
// (Actor)

class UClass* AWTLSlotMachinePayTable::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSlotMachinePayTable");

	return Clss;
}


// WTLSlotMachinePayTable WTL.Default__WTLSlotMachinePayTable
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSlotMachinePayTable* AWTLSlotMachinePayTable::GetDefaultObj()
{
	static class AWTLSlotMachinePayTable* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSlotMachinePayTable*>(AWTLSlotMachinePayTable::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSlotMachinePayTableItemCombo
// (None)

class UClass* UWTLSlotMachinePayTableItemCombo::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSlotMachinePayTableItemCombo");

	return Clss;
}


// WTLSlotMachinePayTableItemCombo WTL.Default__WTLSlotMachinePayTableItemCombo
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSlotMachinePayTableItemCombo* UWTLSlotMachinePayTableItemCombo::GetDefaultObj()
{
	static class UWTLSlotMachinePayTableItemCombo* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSlotMachinePayTableItemCombo*>(UWTLSlotMachinePayTableItemCombo::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSlotMachinePayTableItemImage
// (None)

class UClass* UWTLSlotMachinePayTableItemImage::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSlotMachinePayTableItemImage");

	return Clss;
}


// WTLSlotMachinePayTableItemImage WTL.Default__WTLSlotMachinePayTableItemImage
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSlotMachinePayTableItemImage* UWTLSlotMachinePayTableItemImage::GetDefaultObj()
{
	static class UWTLSlotMachinePayTableItemImage* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSlotMachinePayTableItemImage*>(UWTLSlotMachinePayTableItemImage::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSlotMachinePayTableItemWin
// (None)

class UClass* UWTLSlotMachinePayTableItemWin::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSlotMachinePayTableItemWin");

	return Clss;
}


// WTLSlotMachinePayTableItemWin WTL.Default__WTLSlotMachinePayTableItemWin
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSlotMachinePayTableItemWin* UWTLSlotMachinePayTableItemWin::GetDefaultObj()
{
	static class UWTLSlotMachinePayTableItemWin* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSlotMachinePayTableItemWin*>(UWTLSlotMachinePayTableItemWin::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSlotMachinePayTableItemWin.OnGiftButtonClicked
// (Final, Native, Private)
// Parameters:

void UWTLSlotMachinePayTableItemWin::OnGiftButtonClicked()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachinePayTableItemWin", "OnGiftButtonClicked");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLSlotMachinePayTableWidget
// (None)

class UClass* UWTLSlotMachinePayTableWidget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSlotMachinePayTableWidget");

	return Clss;
}


// WTLSlotMachinePayTableWidget WTL.Default__WTLSlotMachinePayTableWidget
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSlotMachinePayTableWidget* UWTLSlotMachinePayTableWidget::GetDefaultObj()
{
	static class UWTLSlotMachinePayTableWidget* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSlotMachinePayTableWidget*>(UWTLSlotMachinePayTableWidget::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSlotMachinePayTableWidget.InitPayTable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                              WinCombinationID                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              SymbolsTexturesID                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              BetValue                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UWTLSlotMachinePayTableWidget::InitPayTable(int32 WinCombinationID, int32 SymbolsTexturesID, int32 BetValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSlotMachinePayTableWidget", "InitPayTable");

	Params::UWTLSlotMachinePayTableWidget_InitPayTable_Params Parms{};

	Parms.WinCombinationID = WinCombinationID;
	Parms.SymbolsTexturesID = SymbolsTexturesID;
	Parms.BetValue = BetValue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLSmokeGrenadeProjectile
// (Actor)

class UClass* AWTLSmokeGrenadeProjectile::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSmokeGrenadeProjectile");

	return Clss;
}


// WTLSmokeGrenadeProjectile WTL.Default__WTLSmokeGrenadeProjectile
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSmokeGrenadeProjectile* AWTLSmokeGrenadeProjectile::GetDefaultObj()
{
	static class AWTLSmokeGrenadeProjectile* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSmokeGrenadeProjectile*>(AWTLSmokeGrenadeProjectile::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSmokeGrenadeProjectile.OnRep_ParticleProgress
// (Final, Native, Public)
// Parameters:

void AWTLSmokeGrenadeProjectile::OnRep_ParticleProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSmokeGrenadeProjectile", "OnRep_ParticleProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSmokeGrenadeProjectile.OnRep_ExplodeLocation
// (Final, Native, Public)
// Parameters:

void AWTLSmokeGrenadeProjectile::OnRep_ExplodeLocation()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSmokeGrenadeProjectile", "OnRep_ExplodeLocation");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSmokeGrenadeProjectile.OnRep_DestroyParticles
// (Final, Native, Private)
// Parameters:

void AWTLSmokeGrenadeProjectile::OnRep_DestroyParticles()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSmokeGrenadeProjectile", "OnRep_DestroyParticles");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSmokeGrenadeProjectile.OnRep_CollisionProgress
// (Final, Native, Public)
// Parameters:

void AWTLSmokeGrenadeProjectile::OnRep_CollisionProgress()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSmokeGrenadeProjectile", "OnRep_CollisionProgress");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSmokeGrenadeProjectile.EndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSmokeGrenadeProjectile::EndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSmokeGrenadeProjectile", "EndOverlap");

	Params::AWTLSmokeGrenadeProjectile_EndOverlap_Params Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSmokeGrenadeProjectile.BeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLSmokeGrenadeProjectile::BeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSmokeGrenadeProjectile", "BeginOverlap");

	Params::AWTLSmokeGrenadeProjectile_BeginOverlap_Params Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLSocialSystem
// (None)

class UClass* UWTLSocialSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSocialSystem");

	return Clss;
}


// WTLSocialSystem WTL.Default__WTLSocialSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSocialSystem* UWTLSocialSystem::GetDefaultObj()
{
	static class UWTLSocialSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSocialSystem*>(UWTLSocialSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSoundSubmixesComponent
// (SceneComponent)

class UClass* UWTLSoundSubmixesComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSoundSubmixesComponent");

	return Clss;
}


// WTLSoundSubmixesComponent WTL.Default__WTLSoundSubmixesComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSoundSubmixesComponent* UWTLSoundSubmixesComponent::GetDefaultObj()
{
	static class UWTLSoundSubmixesComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSoundSubmixesComponent*>(UWTLSoundSubmixesComponent::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSpawnAICharacter
// (Actor)

class UClass* AWTLSpawnAICharacter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSpawnAICharacter");

	return Clss;
}


// WTLSpawnAICharacter WTL.Default__WTLSpawnAICharacter
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSpawnAICharacter* AWTLSpawnAICharacter::GetDefaultObj()
{
	static class AWTLSpawnAICharacter* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSpawnAICharacter*>(AWTLSpawnAICharacter::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSpawnAICharacter.K2_OnAICharacterDeath
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLAICharacter*             AICharacter                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSpawnAICharacter::K2_OnAICharacterDeath(class AWTLAICharacter* AICharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSpawnAICharacter", "K2_OnAICharacterDeath");

	Params::AWTLSpawnAICharacter_K2_OnAICharacterDeath_Params Parms{};

	Parms.AICharacter = AICharacter;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLSpawnAICharacter.AICharacterDeath
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLAICharacter*             AICharacter                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSpawnAICharacter::AICharacterDeath(class AWTLAICharacter* AICharacter)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSpawnAICharacter", "AICharacterDeath");

	Params::AWTLSpawnAICharacter_AICharacterDeath_Params Parms{};

	Parms.AICharacter = AICharacter;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLSpectatorCameraViewSpot
// (Actor)

class UClass* AWTLSpectatorCameraViewSpot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSpectatorCameraViewSpot");

	return Clss;
}


// WTLSpectatorCameraViewSpot WTL.Default__WTLSpectatorCameraViewSpot
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSpectatorCameraViewSpot* AWTLSpectatorCameraViewSpot::GetDefaultObj()
{
	static class AWTLSpectatorCameraViewSpot* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSpectatorCameraViewSpot*>(AWTLSpectatorCameraViewSpot::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSpectatorPawn
// (Actor, Pawn)

class UClass* AWTLSpectatorPawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSpectatorPawn");

	return Clss;
}


// WTLSpectatorPawn WTL.Default__WTLSpectatorPawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSpectatorPawn* AWTLSpectatorPawn::GetDefaultObj()
{
	static class AWTLSpectatorPawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSpectatorPawn*>(AWTLSpectatorPawn::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLStaminaVolume
// (Actor)

class UClass* AWTLStaminaVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStaminaVolume");

	return Clss;
}


// WTLStaminaVolume WTL.Default__WTLStaminaVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStaminaVolume* AWTLStaminaVolume::GetDefaultObj()
{
	static class AWTLStaminaVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStaminaVolume*>(AWTLStaminaVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLStaminaVolume.OnVolumeEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStaminaVolume::OnVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaminaVolume", "OnVolumeEndOverlap");

	Params::AWTLStaminaVolume_OnVolumeEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStaminaVolume.OnVolumeBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLStaminaVolume::OnVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStaminaVolume", "OnVolumeBeginOverlap");

	Params::AWTLStaminaVolume_OnVolumeBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLStaticMeshActor
// (Actor)

class UClass* AWTLStaticMeshActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStaticMeshActor");

	return Clss;
}


// WTLStaticMeshActor WTL.Default__WTLStaticMeshActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStaticMeshActor* AWTLStaticMeshActor::GetDefaultObj()
{
	static class AWTLStaticMeshActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStaticMeshActor*>(AWTLStaticMeshActor::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLStaticMiningZone
// (Actor)

class UClass* AWTLStaticMiningZone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStaticMiningZone");

	return Clss;
}


// WTLStaticMiningZone WTL.Default__WTLStaticMiningZone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStaticMiningZone* AWTLStaticMiningZone::GetDefaultObj()
{
	static class AWTLStaticMiningZone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStaticMiningZone*>(AWTLStaticMiningZone::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLStaticSkyLevelScriptActor
// (Actor)

class UClass* AWTLStaticSkyLevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStaticSkyLevelScriptActor");

	return Clss;
}


// WTLStaticSkyLevelScriptActor WTL.Default__WTLStaticSkyLevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStaticSkyLevelScriptActor* AWTLStaticSkyLevelScriptActor::GetDefaultObj()
{
	static class AWTLStaticSkyLevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStaticSkyLevelScriptActor*>(AWTLStaticSkyLevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLStationControlledRobot
// (Actor)

class UClass* AWTLStationControlledRobot::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStationControlledRobot");

	return Clss;
}


// WTLStationControlledRobot WTL.Default__WTLStationControlledRobot
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStationControlledRobot* AWTLStationControlledRobot::GetDefaultObj()
{
	static class AWTLStationControlledRobot* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStationControlledRobot*>(AWTLStationControlledRobot::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLStationControlledRobot.OnRep_StorageContent
// (Final, Native, Private)
// Parameters:

void AWTLStationControlledRobot::OnRep_StorageContent()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStationControlledRobot", "OnRep_StorageContent");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStationControlledRobot.OnRep_MaxRobotCount
// (Final, Native, Private)
// Parameters:

void AWTLStationControlledRobot::OnRep_MaxRobotCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStationControlledRobot", "OnRep_MaxRobotCount");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStationControlledRobot.BPUse
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStationControlledRobot::BPUse(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStationControlledRobot", "BPUse");

	Params::AWTLStationControlledRobot_BPUse_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStationControlledRobot.BPSetHighlightState
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLStationControlledRobot::BPSetHighlightState(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStationControlledRobot", "BPSetHighlightState");

	Params::AWTLStationControlledRobot_BPSetHighlightState_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLStationControlledRobot.BPGetDisplayText
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString AWTLStationControlledRobot::BPGetDisplayText(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStationControlledRobot", "BPGetDisplayText");

	Params::AWTLStationControlledRobot_BPGetDisplayText_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLStationControlledRobot.BPCanBeUsed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLStationControlledRobot::BPCanBeUsed(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLStationControlledRobot", "BPCanBeUsed");

	Params::AWTLStationControlledRobot_BPCanBeUsed_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLStatisticsSystem
// (None)

class UClass* UWTLStatisticsSystem::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStatisticsSystem");

	return Clss;
}


// WTLStatisticsSystem WTL.Default__WTLStatisticsSystem
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLStatisticsSystem* UWTLStatisticsSystem::GetDefaultObj()
{
	static class UWTLStatisticsSystem* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLStatisticsSystem*>(UWTLStatisticsSystem::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSteamHelper
// (None)

class UClass* UWTLSteamHelper::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSteamHelper");

	return Clss;
}


// WTLSteamHelper WTL.Default__WTLSteamHelper
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLSteamHelper* UWTLSteamHelper::GetDefaultObj()
{
	static class UWTLSteamHelper* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLSteamHelper*>(UWTLSteamHelper::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSteamMainMenuLevelScriptActor
// (Actor)

class UClass* AWTLSteamMainMenuLevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSteamMainMenuLevelScriptActor");

	return Clss;
}


// WTLSteamMainMenuLevelScriptActor WTL.Default__WTLSteamMainMenuLevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSteamMainMenuLevelScriptActor* AWTLSteamMainMenuLevelScriptActor::GetDefaultObj()
{
	static class AWTLSteamMainMenuLevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSteamMainMenuLevelScriptActor*>(AWTLSteamMainMenuLevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSteamMainMenuLevelScriptActor.ShowInventoryItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLSteamMainMenuLevelScriptActor::ShowInventoryItems()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSteamMainMenuLevelScriptActor", "ShowInventoryItems");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSteamMainMenuLevelScriptActor.Authorize
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLSteamMainMenuLevelScriptActor::Authorize()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSteamMainMenuLevelScriptActor", "Authorize");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLSteelTarget
// (Actor)

class UClass* AWTLSteelTarget::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSteelTarget");

	return Clss;
}


// WTLSteelTarget WTL.Default__WTLSteelTarget
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSteelTarget* AWTLSteelTarget::GetDefaultObj()
{
	static class AWTLSteelTarget* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSteelTarget*>(AWTLSteelTarget::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLSteelTarget.OnRep_RecoveryCooldown
// (Final, Native, Private)
// Parameters:

void AWTLSteelTarget::OnRep_RecoveryCooldown()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSteelTarget", "OnRep_RecoveryCooldown");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSteelTarget.OnRep_IsActivate
// (Final, Native, Private)
// Parameters:

void AWTLSteelTarget::OnRep_IsActivate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSteelTarget", "OnRep_IsActivate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSteelTarget.NetMulticast_UpdateImpulseValue
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// float                              Impulse                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSteelTarget::NetMulticast_UpdateImpulseValue(float Impulse)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSteelTarget", "NetMulticast_UpdateImpulseValue");

	Params::AWTLSteelTarget_NetMulticast_UpdateImpulseValue_Params Parms{};

	Parms.Impulse = Impulse;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSteelTarget.Deactivate
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLSteelTarget::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSteelTarget", "Deactivate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLSteelTarget.BPOnTargetHit
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              ImpulseValue                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLSteelTarget::BPOnTargetHit(class AWTLCharacter* Character, float ImpulseValue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSteelTarget", "BPOnTargetHit");

	Params::AWTLSteelTarget_BPOnTargetHit_Params Parms{};

	Parms.Character = Character;
	Parms.ImpulseValue = ImpulseValue;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLSteelTarget.Activate
// (Final, Native, Public, BlueprintCallable)
// Parameters:

void AWTLSteelTarget::Activate()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLSteelTarget", "Activate");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLStorageObjectInterface
// (None)

class UClass* IWTLStorageObjectInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStorageObjectInterface");

	return Clss;
}


// WTLStorageObjectInterface WTL.Default__WTLStorageObjectInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLStorageObjectInterface* IWTLStorageObjectInterface::GetDefaultObj()
{
	static class IWTLStorageObjectInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLStorageObjectInterface*>(IWTLStorageObjectInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLStuffPlacementZone
// (Actor)

class UClass* AWTLStuffPlacementZone::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLStuffPlacementZone");

	return Clss;
}


// WTLStuffPlacementZone WTL.Default__WTLStuffPlacementZone
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLStuffPlacementZone* AWTLStuffPlacementZone::GetDefaultObj()
{
	static class AWTLStuffPlacementZone* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLStuffPlacementZone*>(AWTLStuffPlacementZone::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLSublevelScriptActor
// (Actor)

class UClass* AWTLSublevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLSublevelScriptActor");

	return Clss;
}


// WTLSublevelScriptActor WTL.Default__WTLSublevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLSublevelScriptActor* AWTLSublevelScriptActor::GetDefaultObj()
{
	static class AWTLSublevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLSublevelScriptActor*>(AWTLSublevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLTacticalGrenade
// (Actor)

class UClass* AWTLTacticalGrenade::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTacticalGrenade");

	return Clss;
}


// WTLTacticalGrenade WTL.Default__WTLTacticalGrenade
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLTacticalGrenade* AWTLTacticalGrenade::GetDefaultObj()
{
	static class AWTLTacticalGrenade* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLTacticalGrenade*>(AWTLTacticalGrenade::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLTacticalGrenade.OnRep_CurrentCondition
// (Final, Native, Private)
// Parameters:

void AWTLTacticalGrenade::OnRep_CurrentCondition()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "OnRep_CurrentCondition");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTacticalGrenade.OnOverlapEnd
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTacticalGrenade::OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "OnOverlapEnd");

	Params::AWTLTacticalGrenade_OnOverlapEnd_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTacticalGrenade.OnOverlapBegin
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComp                                                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLTacticalGrenade::OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "OnOverlapBegin");

	Params::AWTLTacticalGrenade_OnOverlapBegin_Params Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTacticalGrenade.OnConditionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              InCurrentCondition                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTacticalGrenade::OnConditionChanged(float InCurrentCondition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "OnConditionChanged");

	Params::AWTLTacticalGrenade_OnConditionChanged_Params Parms{};

	Parms.InCurrentCondition = InCurrentCondition;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLTacticalGrenade.NetMulticast_StuntCharacter
// (Final, Net, Native, Event, NetMulticast, Private, HasDefaults)
// Parameters:
// struct FVector                     ImpactPosition                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTacticalGrenade::NetMulticast_StuntCharacter(const struct FVector& ImpactPosition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "NetMulticast_StuntCharacter");

	Params::AWTLTacticalGrenade_NetMulticast_StuntCharacter_Params Parms{};

	Parms.ImpactPosition = ImpactPosition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTacticalGrenade.BPSwitchMaterialColor
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              CondionPercent                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTacticalGrenade::BPSwitchMaterialColor(float CondionPercent)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "BPSwitchMaterialColor");

	Params::AWTLTacticalGrenade_BPSwitchMaterialColor_Params Parms{};

	Parms.CondionPercent = CondionPercent;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLTacticalGrenade.BPDestroyFX
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:

void AWTLTacticalGrenade::BPDestroyFX()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "BPDestroyFX");



	UObject::ProcessEvent(Func, nullptr);

}


// Function WTL.WTLTacticalGrenade.AIInterface_IsInSafeZone
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLTacticalGrenade::AIInterface_IsInSafeZone()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "AIInterface_IsInSafeZone");

	Params::AWTLTacticalGrenade_AIInterface_IsInSafeZone_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTacticalGrenade.AIInterface_IsCanBeAttacked
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             InstigatorFaction                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLTacticalGrenade::AIInterface_IsCanBeAttacked(enum class EWTLFaction InstigatorFaction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "AIInterface_IsCanBeAttacked");

	Params::AWTLTacticalGrenade_AIInterface_IsCanBeAttacked_Params Parms{};

	Parms.InstigatorFaction = InstigatorFaction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTacticalGrenade.AIInterface_IsAlive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLTacticalGrenade::AIInterface_IsAlive()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "AIInterface_IsAlive");

	Params::AWTLTacticalGrenade_AIInterface_IsAlive_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTacticalGrenade.AIInterface_GetVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLTacticalGrenade::AIInterface_GetVelocity()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "AIInterface_GetVelocity");

	Params::AWTLTacticalGrenade_AIInterface_GetVelocity_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTacticalGrenade.AIInterface_GetGroupID
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLTacticalGrenade::AIInterface_GetGroupID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "AIInterface_GetGroupID");

	Params::AWTLTacticalGrenade_AIInterface_GetGroupID_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTacticalGrenade.AIInterface_GetFaction
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// enum class EWTLFaction             ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLFaction AWTLTacticalGrenade::AIInterface_GetFaction()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalGrenade", "AIInterface_GetFaction");

	Params::AWTLTacticalGrenade_AIInterface_GetFaction_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLTacticalWeapon
// (Actor)

class UClass* AWTLTacticalWeapon::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTacticalWeapon");

	return Clss;
}


// WTLTacticalWeapon WTL.Default__WTLTacticalWeapon
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLTacticalWeapon* AWTLTacticalWeapon::GetDefaultObj()
{
	static class AWTLTacticalWeapon* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLTacticalWeapon*>(AWTLTacticalWeapon::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLTacticalWeapon.SetPreviewMeshVisibility
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                               NewVisibility                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTacticalWeapon::SetPreviewMeshVisibility(bool NewVisibility)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalWeapon", "SetPreviewMeshVisibility");

	Params::AWTLTacticalWeapon_SetPreviewMeshVisibility_Params Parms{};

	Parms.NewVisibility = NewVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTacticalWeapon.Server_StopUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLTacticalWeapon::Server_StopUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalWeapon", "Server_StopUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTacticalWeapon.Server_StartUse
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLTacticalWeapon::Server_StartUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalWeapon", "Server_StartUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTacticalWeapon.NetMulticast_OnUse
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLTacticalWeapon::NetMulticast_OnUse()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalWeapon", "NetMulticast_OnUse");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTacticalWeapon.NetMulticast_OnPlace
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:

void AWTLTacticalWeapon::NetMulticast_OnPlace()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalWeapon", "NetMulticast_OnPlace");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTacticalWeapon.Client_ShowPlacementMesh
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
// Parameters:

void AWTLTacticalWeapon::Client_ShowPlacementMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTacticalWeapon", "Client_ShowPlacementMesh");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLTiltComponent
// (SceneComponent)

class UClass* UWTLTiltComponent::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTiltComponent");

	return Clss;
}


// WTLTiltComponent WTL.Default__WTLTiltComponent
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLTiltComponent* UWTLTiltComponent::GetDefaultObj()
{
	static class UWTLTiltComponent* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLTiltComponent*>(UWTLTiltComponent::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLTiltComponent.OnRep_TiltState
// (Final, Native, Public)
// Parameters:

void UWTLTiltComponent::OnRep_TiltState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTiltComponent", "OnRep_TiltState");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLTradingObjectInterface
// (None)

class UClass* IWTLTradingObjectInterface::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTradingObjectInterface");

	return Clss;
}


// WTLTradingObjectInterface WTL.Default__WTLTradingObjectInterface
// (Public, ClassDefaultObject, ArchetypeObject)

class IWTLTradingObjectInterface* IWTLTradingObjectInterface::GetDefaultObj()
{
	static class IWTLTradingObjectInterface* Default = nullptr;

	if (!Default)
		Default = static_cast<IWTLTradingObjectInterface*>(IWTLTradingObjectInterface::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLTransitionLevelScriptActor
// (Actor)

class UClass* AWTLTransitionLevelScriptActor::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTransitionLevelScriptActor");

	return Clss;
}


// WTLTransitionLevelScriptActor WTL.Default__WTLTransitionLevelScriptActor
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLTransitionLevelScriptActor* AWTLTransitionLevelScriptActor::GetDefaultObj()
{
	static class AWTLTransitionLevelScriptActor* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLTransitionLevelScriptActor*>(AWTLTransitionLevelScriptActor::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLTransitionLevelScriptActor.OnLevelLoaded
// (Final, Native, Private)
// Parameters:

void AWTLTransitionLevelScriptActor::OnLevelLoaded()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTransitionLevelScriptActor", "OnLevelLoaded");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLTriggerObject
// (Actor)

class UClass* AWTLTriggerObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTriggerObject");

	return Clss;
}


// WTLTriggerObject WTL.Default__WTLTriggerObject
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLTriggerObject* AWTLTriggerObject::GetDefaultObj()
{
	static class AWTLTriggerObject* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLTriggerObject*>(AWTLTriggerObject::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLTriggerObject.ShowNote
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                        NoteName                                                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int32                              NoteID                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerObject::ShowNote(class AWTLCharacter* Character, class FText& NoteName, int32 NoteID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "ShowNote");

	Params::AWTLTriggerObject_ShowNote_Params Parms{};

	Parms.Character = Character;
	Parms.NoteName = NoteName;
	Parms.NoteID = NoteID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTriggerObject.SetQuestState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLTriggerCheckResult  Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerObject::SetQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState State, enum class EWTLTriggerCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "SetQuestState");

	Params::AWTLTriggerObject_SetQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.State = State;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLTriggerObject.OnEndUse
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerObject::OnEndUse(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "OnEndUse");

	Params::AWTLTriggerObject_OnEndUse_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLTriggerObject.OnCharacterUse
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerObject::OnCharacterUse(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "OnCharacterUse");

	Params::AWTLTriggerObject_OnCharacterUse_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLTriggerObject.OnCharacterCanBeUsed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLTriggerObject::OnCharacterCanBeUsed(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "OnCharacterCanBeUsed");

	Params::AWTLTriggerObject_OnCharacterCanBeUsed_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;

}


// Function WTL.WTLTriggerObject.HasQuestWithQuestState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLTriggerObject::HasQuestWithQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState QuestState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "HasQuestWithQuestState");

	Params::AWTLTriggerObject_HasQuestWithQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.QuestState = QuestState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTriggerObject.GetTriggerActionType
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLTriggerObjectActionTypeReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLTriggerObjectActionType AWTLTriggerObject::GetTriggerActionType(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "GetTriggerActionType");

	Params::AWTLTriggerObject_GetTriggerActionType_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTriggerObject.GetQuestState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerObject::GetQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState* QuestState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "GetQuestState");

	Params::AWTLTriggerObject_GetQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (QuestState != nullptr)
		*QuestState = Parms.QuestState;

}


// Function WTL.WTLTriggerObject.CharacterTakeQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLTriggerCheckResult  Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerObject::CharacterTakeQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLTriggerCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "CharacterTakeQuest");

	Params::AWTLTriggerObject_CharacterTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLTriggerObject.CharacterCompleteQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLTriggerCheckResult  Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerObject::CharacterCompleteQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLTriggerCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "CharacterCompleteQuest");

	Params::AWTLTriggerObject_CharacterCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLTriggerObject.CharacterCanTakeQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLTriggerCheckResult  Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerObject::CharacterCanTakeQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLTriggerCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "CharacterCanTakeQuest");

	Params::AWTLTriggerObject_CharacterCanTakeQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLTriggerObject.CharacterCanCompleteQuest
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLTriggerCheckResult  Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerObject::CharacterCanCompleteQuest(class AWTLCharacter* Character, int32 QuestID, enum class EWTLTriggerCheckResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "CharacterCanCompleteQuest");

	Params::AWTLTriggerObject_CharacterCanCompleteQuest_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLTriggerObject.CanQuestBeCompleted
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLTriggerObject::CanQuestBeCompleted(class AWTLCharacter* Character, int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "CanQuestBeCompleted");

	Params::AWTLTriggerObject_CanQuestBeCompleted_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTriggerObject.BeginInformationDialog
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              InformationDialogID                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerObject::BeginInformationDialog(class AWTLCharacter* Character, int32 InformationDialogID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerObject", "BeginInformationDialog");

	Params::AWTLTriggerObject_BeginInformationDialog_Params Parms{};

	Parms.Character = Character;
	Parms.InformationDialogID = InformationDialogID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLTriggerStateObject
// (Actor)

class UClass* AWTLTriggerStateObject::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTriggerStateObject");

	return Clss;
}


// WTLTriggerStateObject WTL.Default__WTLTriggerStateObject
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLTriggerStateObject* AWTLTriggerStateObject::GetDefaultObj()
{
	static class AWTLTriggerStateObject* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLTriggerStateObject*>(AWTLTriggerStateObject::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLTriggerStateObject.OnRep_State
// (Final, Native, Private)
// Parameters:

void AWTLTriggerStateObject::OnRep_State()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerStateObject", "OnRep_State");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTriggerStateObject.OnCharacterUse
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLTriggerObjectState  NewState                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerStateObject::OnCharacterUse(class AWTLCharacter* Character, enum class EWTLTriggerObjectState NewState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerStateObject", "OnCharacterUse");

	Params::AWTLTriggerStateObject_OnCharacterUse_Params Parms{};

	Parms.Character = Character;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);

}


// Class WTL.WTLTriggerVolume
// (Actor)

class UClass* AWTLTriggerVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTriggerVolume");

	return Clss;
}


// WTLTriggerVolume WTL.Default__WTLTriggerVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLTriggerVolume* AWTLTriggerVolume::GetDefaultObj()
{
	static class AWTLTriggerVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLTriggerVolume*>(AWTLTriggerVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLTriggerVolume.SwitchCharacterQuestState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerVolume::SwitchCharacterQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState* QuestState)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "SwitchCharacterQuestState");

	Params::AWTLTriggerVolume_SwitchCharacterQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (QuestState != nullptr)
		*QuestState = Parms.QuestState;

}


// Function WTL.WTLTriggerVolume.ShowCharacterActionTimerWidget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Timeout                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLActionTimerWidgetTypeType                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLCountdownSliderWidgetFillingTypeDirection                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerVolume::ShowCharacterActionTimerWidget(class AWTLCharacter* Character, float Timeout, enum class EWTLActionTimerWidgetType Type, enum class EWTLCountdownSliderWidgetFillingType Direction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "ShowCharacterActionTimerWidget");

	Params::AWTLTriggerVolume_ShowCharacterActionTimerWidget_Params Parms{};

	Parms.Character = Character;
	Parms.Timeout = Timeout;
	Parms.Type = Type;
	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTriggerVolume.SetCharacterQuestState
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          QuestState                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLTriggerActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerVolume::SetCharacterQuestState(class AWTLCharacter* Character, int32 QuestID, enum class EWTLQuestState QuestState, enum class EWTLTriggerActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "SetCharacterQuestState");

	Params::AWTLTriggerVolume_SetCharacterQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;
	Parms.QuestState = QuestState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLTriggerVolume.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerVolume::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "OnEndOverlap");

	Params::AWTLTriggerVolume_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTriggerVolume.OnCharacterLeave
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerVolume::OnCharacterLeave(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "OnCharacterLeave");

	Params::AWTLTriggerVolume_OnCharacterLeave_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLTriggerVolume.OnCharacterEnter
// (Event, Public, BlueprintEvent)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerVolume::OnCharacterEnter(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "OnCharacterEnter");

	Params::AWTLTriggerVolume_OnCharacterEnter_Params Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLTriggerVolume.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLTriggerVolume::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "OnBeginOverlap");

	Params::AWTLTriggerVolume_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTriggerVolume.HideCharacterActionTimerWidget
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               Success                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerVolume::HideCharacterActionTimerWidget(class AWTLCharacter* Character, bool Success)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "HideCharacterActionTimerWidget");

	Params::AWTLTriggerVolume_HideCharacterActionTimerWidget_Params Parms{};

	Parms.Character = Character;
	Parms.Success = Success;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLTriggerVolume.GiveItemToCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Condition                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLTriggerActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerVolume::GiveItemToCharacter(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, int32 Count, int32 Condition, enum class EWTLTriggerActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "GiveItemToCharacter");

	Params::AWTLTriggerVolume_GiveItemToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Count = Count;
	Parms.Condition = Condition;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLTriggerVolume.GiveItemsToCharacter
// (Final, BlueprintAuthorityOnly, Native, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FWTLGiveItemInfo>    ItemsToGive                                                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// enum class EWTLTriggerActionResult Result                                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLTriggerVolume::GiveItemsToCharacter(class AWTLCharacter* Character, const TArray<struct FWTLGiveItemInfo>& ItemsToGive, enum class EWTLTriggerActionResult* Result)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "GiveItemsToCharacter");

	Params::AWTLTriggerVolume_GiveItemsToCharacter_Params Parms{};

	Parms.Character = Character;
	Parms.ItemsToGive = ItemsToGive;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = Parms.Result;

}


// Function WTL.WTLTriggerVolume.GetCharactersQuestState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              QuestID                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLQuestState          ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLQuestState AWTLTriggerVolume::GetCharactersQuestState(class AWTLCharacter* Character, int32 QuestID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "GetCharactersQuestState");

	Params::AWTLTriggerVolume_GetCharactersQuestState_Params Parms{};

	Parms.Character = Character;
	Parms.QuestID = QuestID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTriggerVolume.GetCharactersCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int32                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 AWTLTriggerVolume::GetCharactersCount()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "GetCharactersCount");

	Params::AWTLTriggerVolume_GetCharactersCount_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTriggerVolume.CheckCharacterHaveItem
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// enum class EWTLItemType            ItemType                                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ItemTypeID                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Count                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               CheckContainers                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLTriggerVolume::CheckCharacterHaveItem(class AWTLCharacter* Character, enum class EWTLItemType ItemType, int32 ItemTypeID, int32 Count, bool CheckContainers)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "CheckCharacterHaveItem");

	Params::AWTLTriggerVolume_CheckCharacterHaveItem_Params Parms{};

	Parms.Character = Character;
	Parms.ItemType = ItemType;
	Parms.ItemTypeID = ItemTypeID;
	Parms.Count = Count;
	Parms.CheckContainers = CheckContainers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLTriggerVolume.CharacterInVolume
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLTriggerVolume::CharacterInVolume(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTriggerVolume", "CharacterInVolume");

	Params::AWTLTriggerVolume_CharacterInVolume_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLTurretAnimInstance
// (None)

class UClass* UWTLTurretAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTurretAnimInstance");

	return Clss;
}


// WTLTurretAnimInstance WTL.Default__WTLTurretAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLTurretAnimInstance* UWTLTurretAnimInstance::GetDefaultObj()
{
	static class UWTLTurretAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLTurretAnimInstance*>(UWTLTurretAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLTutorialVolume
// (Actor)

class UClass* AWTLTutorialVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTutorialVolume");

	return Clss;
}


// WTLTutorialVolume WTL.Default__WTLTutorialVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLTutorialVolume* AWTLTutorialVolume::GetDefaultObj()
{
	static class AWTLTutorialVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLTutorialVolume*>(AWTLTutorialVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLTutorialVolume.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLTutorialVolume::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTutorialVolume", "OnBeginOverlap");

	Params::AWTLTutorialVolume_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.EnvironmentDamageType
// (None)

class UClass* UEnvironmentDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("EnvironmentDamageType");

	return Clss;
}


// EnvironmentDamageType WTL.Default__EnvironmentDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class UEnvironmentDamageType* UEnvironmentDamageType::GetDefaultObj()
{
	static class UEnvironmentDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<UEnvironmentDamageType*>(UEnvironmentDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.AcidDamageType
// (None)

class UClass* UAcidDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("AcidDamageType");

	return Clss;
}


// AcidDamageType WTL.Default__AcidDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class UAcidDamageType* UAcidDamageType::GetDefaultObj()
{
	static class UAcidDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<UAcidDamageType*>(UAcidDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.FireDamageType
// (None)

class UClass* UFireDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("FireDamageType");

	return Clss;
}


// FireDamageType WTL.Default__FireDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class UFireDamageType* UFireDamageType::GetDefaultObj()
{
	static class UFireDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<UFireDamageType*>(UFireDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.RadiationDamageType
// (None)

class UClass* URadiationDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("RadiationDamageType");

	return Clss;
}


// RadiationDamageType WTL.Default__RadiationDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class URadiationDamageType* URadiationDamageType::GetDefaultObj()
{
	static class URadiationDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<URadiationDamageType*>(URadiationDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WeaponDamageType
// (None)

class UClass* UWeaponDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WeaponDamageType");

	return Clss;
}


// WeaponDamageType WTL.Default__WeaponDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class UWeaponDamageType* UWeaponDamageType::GetDefaultObj()
{
	static class UWeaponDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<UWeaponDamageType*>(UWeaponDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.ExplosiveWeaponDamageType
// (None)

class UClass* UExplosiveWeaponDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ExplosiveWeaponDamageType");

	return Clss;
}


// ExplosiveWeaponDamageType WTL.Default__ExplosiveWeaponDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class UExplosiveWeaponDamageType* UExplosiveWeaponDamageType::GetDefaultObj()
{
	static class UExplosiveWeaponDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<UExplosiveWeaponDamageType*>(UExplosiveWeaponDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.MedicineDamageType
// (None)

class UClass* UMedicineDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("MedicineDamageType");

	return Clss;
}


// MedicineDamageType WTL.Default__MedicineDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class UMedicineDamageType* UMedicineDamageType::GetDefaultObj()
{
	static class UMedicineDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<UMedicineDamageType*>(UMedicineDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.MonsterDamageType
// (None)

class UClass* UMonsterDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("MonsterDamageType");

	return Clss;
}


// MonsterDamageType WTL.Default__MonsterDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class UMonsterDamageType* UMonsterDamageType::GetDefaultObj()
{
	static class UMonsterDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<UMonsterDamageType*>(UMonsterDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.SuffocationDamageType
// (None)

class UClass* USuffocationDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("SuffocationDamageType");

	return Clss;
}


// SuffocationDamageType WTL.Default__SuffocationDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class USuffocationDamageType* USuffocationDamageType::GetDefaultObj()
{
	static class USuffocationDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<USuffocationDamageType*>(USuffocationDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.ControlledMonsterSpawnDamageType
// (None)

class UClass* UControlledMonsterSpawnDamageType::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("ControlledMonsterSpawnDamageType");

	return Clss;
}


// ControlledMonsterSpawnDamageType WTL.Default__ControlledMonsterSpawnDamageType
// (Public, ClassDefaultObject, ArchetypeObject)

class UControlledMonsterSpawnDamageType* UControlledMonsterSpawnDamageType::GetDefaultObj()
{
	static class UControlledMonsterSpawnDamageType* Default = nullptr;

	if (!Default)
		Default = static_cast<UControlledMonsterSpawnDamageType*>(UControlledMonsterSpawnDamageType::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.CurveLipSync
// (None)

class UClass* UCurveLipSync::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("CurveLipSync");

	return Clss;
}


// CurveLipSync WTL.Default__CurveLipSync
// (Public, ClassDefaultObject, ArchetypeObject)

class UCurveLipSync* UCurveLipSync::GetDefaultObj()
{
	static class UCurveLipSync* Default = nullptr;

	if (!Default)
		Default = static_cast<UCurveLipSync*>(UCurveLipSync::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLUndergroundVolume
// (Actor)

class UClass* AWTLUndergroundVolume::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLUndergroundVolume");

	return Clss;
}


// WTLUndergroundVolume WTL.Default__WTLUndergroundVolume
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLUndergroundVolume* AWTLUndergroundVolume::GetDefaultObj()
{
	static class AWTLUndergroundVolume* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLUndergroundVolume*>(AWTLUndergroundVolume::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLUndergroundVolume.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLUndergroundVolume::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUndergroundVolume", "OnEndOverlap");

	Params::AWTLUndergroundVolume_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLUndergroundVolume.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLUndergroundVolume::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUndergroundVolume", "OnBeginOverlap");

	Params::AWTLUndergroundVolume_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLUtilityColorPicker
// (None)

class UClass* UWTLUtilityColorPicker::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLUtilityColorPicker");

	return Clss;
}


// WTLUtilityColorPicker WTL.Default__WTLUtilityColorPicker
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLUtilityColorPicker* UWTLUtilityColorPicker::GetDefaultObj()
{
	static class UWTLUtilityColorPicker* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLUtilityColorPicker*>(UWTLUtilityColorPicker::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLUtilityColorPicker.OnValueSliderChanged
// (Final, Native, Private)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLUtilityColorPicker::OnValueSliderChanged(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUtilityColorPicker", "OnValueSliderChanged");

	Params::UWTLUtilityColorPicker_OnValueSliderChanged_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLUtilityColorPicker.OnSaturationSliderChanged
// (Final, Native, Private)
// Parameters:
// float                              Saturation                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLUtilityColorPicker::OnSaturationSliderChanged(float Saturation)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUtilityColorPicker", "OnSaturationSliderChanged");

	Params::UWTLUtilityColorPicker_OnSaturationSliderChanged_Params Parms{};

	Parms.Saturation = Saturation;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLUtilityColorPicker.OnHueSliderChanged
// (Final, Native, Private)
// Parameters:
// float                              Hue                                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLUtilityColorPicker::OnHueSliderChanged(float Hue)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUtilityColorPicker", "OnHueSliderChanged");

	Params::UWTLUtilityColorPicker_OnHueSliderChanged_Params Parms{};

	Parms.Hue = Hue;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLUtilityColorPicker.OnHexCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitType                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLUtilityColorPicker::OnHexCommitted(class FText& Text, enum class ETextCommit CommitType)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUtilityColorPicker", "OnHexCommitted");

	Params::UWTLUtilityColorPicker_OnHexCommitted_Params Parms{};

	Parms.Text = Text;
	Parms.CommitType = CommitType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLUtilityColorPicker.OnHexChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        Text                                                             (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLUtilityColorPicker::OnHexChanged(class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUtilityColorPicker", "OnHexChanged");

	Params::UWTLUtilityColorPicker_OnHexChanged_Params Parms{};

	Parms.Text = Text;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLUtilityColorPicker.OnAlphaSliderChanged
// (Final, Native, Private)
// Parameters:
// float                              Alpha                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLUtilityColorPicker::OnAlphaSliderChanged(float Alpha)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUtilityColorPicker", "OnAlphaSliderChanged");

	Params::UWTLUtilityColorPicker_OnAlphaSliderChanged_Params Parms{};

	Parms.Alpha = Alpha;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLUtilityNumberTextBox
// (None)

class UClass* UWTLUtilityNumberTextBox::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLUtilityNumberTextBox");

	return Clss;
}


// WTLUtilityNumberTextBox WTL.Default__WTLUtilityNumberTextBox
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLUtilityNumberTextBox* UWTLUtilityNumberTextBox::GetDefaultObj()
{
	static class UWTLUtilityNumberTextBox* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLUtilityNumberTextBox*>(UWTLUtilityNumberTextBox::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLUtilityNumberTextBox.OnNumberTextCommitted
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        NumberText                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// enum class ETextCommit             CommitMethod                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLUtilityNumberTextBox::OnNumberTextCommitted(class FText& NumberText, enum class ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUtilityNumberTextBox", "OnNumberTextCommitted");

	Params::UWTLUtilityNumberTextBox_OnNumberTextCommitted_Params Parms{};

	Parms.NumberText = NumberText;
	Parms.CommitMethod = CommitMethod;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLUtilityNumberTextBox.OnNumberTextChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// class FText                        NumberText                                                       (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)

void UWTLUtilityNumberTextBox::OnNumberTextChanged(class FText& NumberText)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLUtilityNumberTextBox", "OnNumberTextChanged");

	Params::UWTLUtilityNumberTextBox_OnNumberTextChanged_Params Parms{};

	Parms.NumberText = NumberText;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.MasterServerBlueprintLibrary
// (None)

class UClass* UMasterServerBlueprintLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("MasterServerBlueprintLibrary");

	return Clss;
}


// MasterServerBlueprintLibrary WTL.Default__MasterServerBlueprintLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UMasterServerBlueprintLibrary* UMasterServerBlueprintLibrary::GetDefaultObj()
{
	static class UMasterServerBlueprintLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UMasterServerBlueprintLibrary*>(UMasterServerBlueprintLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.MasterServerBlueprintLibrary.UpdateAccountStatistics
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              ParameterID                                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              Delta                                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMasterServerBlueprintLibrary::UpdateAccountStatistics(class AWTLCharacter* Character, int32 ParameterID, int32 Delta)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("MasterServerBlueprintLibrary", "UpdateAccountStatistics");

	Params::UMasterServerBlueprintLibrary_UpdateAccountStatistics_Params Parms{};

	Parms.Character = Character;
	Parms.ParameterID = ParameterID;
	Parms.Delta = Delta;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.MasterServerBlueprintLibrary.TriggerAccountAchievement
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              AchievementID                                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UMasterServerBlueprintLibrary::TriggerAccountAchievement(class AWTLCharacter* Character, int32 AchievementID)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("MasterServerBlueprintLibrary", "TriggerAccountAchievement");

	Params::UMasterServerBlueprintLibrary_TriggerAccountAchievement_Params Parms{};

	Parms.Character = Character;
	Parms.AchievementID = AchievementID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLTestingBlueprintLibrary
// (None)

class UClass* UWTLTestingBlueprintLibrary::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLTestingBlueprintLibrary");

	return Clss;
}


// WTLTestingBlueprintLibrary WTL.Default__WTLTestingBlueprintLibrary
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLTestingBlueprintLibrary* UWTLTestingBlueprintLibrary::GetDefaultObj()
{
	static class UWTLTestingBlueprintLibrary* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLTestingBlueprintLibrary*>(UWTLTestingBlueprintLibrary::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLTestingBlueprintLibrary.ProcessSteamInventoryItem
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                      ItemId                                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLTestingBlueprintLibrary::ProcessSteamInventoryItem(class AWTLCharacter* Character, const class FString& ItemId)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLTestingBlueprintLibrary", "ProcessSteamInventoryItem");

	Params::UWTLTestingBlueprintLibrary_ProcessSteamInventoryItem_Params Parms{};

	Parms.Character = Character;
	Parms.ItemId = ItemId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLVehicleCharacterAnimInstance
// (None)

class UClass* UWTLVehicleCharacterAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLVehicleCharacterAnimInstance");

	return Clss;
}


// WTLVehicleCharacterAnimInstance WTL.Default__WTLVehicleCharacterAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLVehicleCharacterAnimInstance* UWTLVehicleCharacterAnimInstance::GetDefaultObj()
{
	static class UWTLVehicleCharacterAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLVehicleCharacterAnimInstance*>(UWTLVehicleCharacterAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLVehiclePawn
// (Actor, Pawn)

class UClass* AWTLVehiclePawn::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLVehiclePawn");

	return Clss;
}


// WTLVehiclePawn WTL.Default__WTLVehiclePawn
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLVehiclePawn* AWTLVehiclePawn::GetDefaultObj()
{
	static class AWTLVehiclePawn* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLVehiclePawn*>(AWTLVehiclePawn::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLVehiclePawn.UpdateObstruction
// (Final, Native, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                     ImpactPoint                                                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::UpdateObstruction(struct FVector& ImpactPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "UpdateObstruction");

	Params::AWTLVehiclePawn_UpdateObstruction_Params Parms{};

	Parms.ImpactPoint = ImpactPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.SetVehicleMeshVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::SetVehicleMeshVisibility(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "SetVehicleMeshVisibility");

	Params::AWTLVehiclePawn_SetVehicleMeshVisibility_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.SetIsInAnomaly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::SetIsInAnomaly(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "SetIsInAnomaly");

	Params::AWTLVehiclePawn_SetIsInAnomaly_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_VehicleEnteredInWater
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void AWTLVehiclePawn::Server_VehicleEnteredInWater()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_VehicleEnteredInWater");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_UseHorn
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void AWTLVehiclePawn::Server_UseHorn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_UseHorn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_UpdateObstruction
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                     ImpactPoint                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::Server_UpdateObstruction(const struct FVector& ImpactPoint)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_UpdateObstruction");

	Params::AWTLVehiclePawn_Server_UpdateObstruction_Params Parms{};

	Parms.ImpactPoint = ImpactPoint;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_ToggleRadio
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void AWTLVehiclePawn::Server_ToggleRadio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_ToggleRadio");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_ToggleHeadlight
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void AWTLVehiclePawn::Server_ToggleHeadlight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_ToggleHeadlight");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_SetMoveRightPressed
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::Server_SetMoveRightPressed(float Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_SetMoveRightPressed");

	Params::AWTLVehiclePawn_Server_SetMoveRightPressed_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_SetEngineBraking
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::Server_SetEngineBraking(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_SetEngineBraking");

	Params::AWTLVehiclePawn_Server_SetEngineBraking_Params Parms{};

	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_RequestEject
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void AWTLVehiclePawn::Server_RequestEject()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_RequestEject");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_PlayStun
// (Final, Native, Private)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::Server_PlayStun(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_PlayStun");

	Params::AWTLVehiclePawn_Server_PlayStun_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_LeaveVehicle
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void AWTLVehiclePawn::Server_LeaveVehicle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_LeaveVehicle");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_Kick
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// float                              KickVelocity                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::Server_Kick(float KickVelocity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_Kick");

	Params::AWTLVehiclePawn_Server_Kick_Params Parms{};

	Parms.KickVelocity = KickVelocity;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_EjectCharacterFromVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// enum class EWTLCharacterStunhitDirectionDirection                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::Server_EjectCharacterFromVehicle(enum class EWTLCharacterStunhitDirection Direction)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_EjectCharacterFromVehicle");

	Params::AWTLVehiclePawn_Server_EjectCharacterFromVehicle_Params Parms{};

	Parms.Direction = Direction;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_CharacterIsUnderground
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:

void AWTLVehiclePawn::Server_CharacterIsUnderground()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_CharacterIsUnderground");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_BrakeReleased
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void AWTLVehiclePawn::Server_BrakeReleased()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_BrakeReleased");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Server_BrakePressed
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:

void AWTLVehiclePawn::Server_BrakePressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Server_BrakePressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.PlayVehicleAnimMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                Montage                                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Rate                                                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::PlayVehicleAnimMontage(class UAnimMontage* Montage, float Rate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "PlayVehicleAnimMontage");

	Params::AWTLVehiclePawn_PlayVehicleAnimMontage_Params Parms{};

	Parms.Montage = Montage;
	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.PlayHightGravityVehicleMontage
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:

void AWTLVehiclePawn::PlayHightGravityVehicleMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "PlayHightGravityVehicleMontage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.OnRep_VehicleMeshVisibility
// (Final, Native, Protected)
// Parameters:

void AWTLVehiclePawn::OnRep_VehicleMeshVisibility()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "OnRep_VehicleMeshVisibility");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.OnRep_UseRadio
// (Final, Native, Protected)
// Parameters:

void AWTLVehiclePawn::OnRep_UseRadio()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "OnRep_UseRadio");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.OnRep_UseHeadlight
// (Final, Native, Protected)
// Parameters:

void AWTLVehiclePawn::OnRep_UseHeadlight()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "OnRep_UseHeadlight");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.OnRep_PlayHightGravityMontage
// (Final, Native, Private)
// Parameters:

void AWTLVehiclePawn::OnRep_PlayHightGravityMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "OnRep_PlayHightGravityMontage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.OnRep_LeaveVehicle
// (Final, Native, Protected)
// Parameters:

void AWTLVehiclePawn::OnRep_LeaveVehicle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "OnRep_LeaveVehicle");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.OnRep_ItemInventoryID
// (Final, Native, Protected)
// Parameters:

void AWTLVehiclePawn::OnRep_ItemInventoryID()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "OnRep_ItemInventoryID");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.OnRep_IsInAmomaly
// (Final, Native, Protected)
// Parameters:

void AWTLVehiclePawn::OnRep_IsInAmomaly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "OnRep_IsInAmomaly");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.OnRep_EngineBraking
// (Final, Native, Protected)
// Parameters:

void AWTLVehiclePawn::OnRep_EngineBraking()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "OnRep_EngineBraking");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.OnRep_EjectCharacter
// (Final, Native, Protected)
// Parameters:

void AWTLVehiclePawn::OnRep_EjectCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "OnRep_EjectCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.OnRep_BrakePressed
// (Final, Native, Protected)
// Parameters:

void AWTLVehiclePawn::OnRep_BrakePressed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "OnRep_BrakePressed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.NetMulticast_UseHorn
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:

void AWTLVehiclePawn::NetMulticast_UseHorn()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "NetMulticast_UseHorn");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.NetMulticast_PlayVehicleAnimMontage
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class UAnimMontage*                Montag                                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                              Rate                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::NetMulticast_PlayVehicleAnimMontage(class UAnimMontage* Montag, float Rate)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "NetMulticast_PlayVehicleAnimMontage");

	Params::AWTLVehiclePawn_NetMulticast_PlayVehicleAnimMontage_Params Parms{};

	Parms.Montag = Montag;
	Parms.Rate = Rate;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.NetMulticast_PlayUnlandingMontage
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:

void AWTLVehiclePawn::NetMulticast_PlayUnlandingMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "NetMulticast_PlayUnlandingMontage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.NetMulticast_PlayLandingMontage
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:

void AWTLVehiclePawn::NetMulticast_PlayLandingMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "NetMulticast_PlayLandingMontage");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.NetMulticast_EjectCharacter
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:

void AWTLVehiclePawn::NetMulticast_EjectCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "NetMulticast_EjectCharacter");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.K2_VehicleCustomEvent
// (Event, Public, BlueprintEvent)
// Parameters:
// class FName                        TriggerName                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::K2_VehicleCustomEvent(class FName TriggerName)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "K2_VehicleCustomEvent");

	Params::AWTLVehiclePawn_K2_VehicleCustomEvent_Params Parms{};

	Parms.TriggerName = TriggerName;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLVehiclePawn.K2_UpdateHeadLight
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              Intensity                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::K2_UpdateHeadLight(float Intensity)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "K2_UpdateHeadLight");

	Params::AWTLVehiclePawn_K2_UpdateHeadLight_Params Parms{};

	Parms.Intensity = Intensity;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLVehiclePawn.K2_SetStoplight
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::K2_SetStoplight(bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "K2_SetStoplight");

	Params::AWTLVehiclePawn_K2_SetStoplight_Params Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLVehiclePawn.K2_SetRadio
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::K2_SetRadio(bool State)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "K2_SetRadio");

	Params::AWTLVehiclePawn_K2_SetRadio_Params Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLVehiclePawn.K2_SetHighlight
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               Value                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::K2_SetHighlight(bool Value)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "K2_SetHighlight");

	Params::AWTLVehiclePawn_K2_SetHighlight_Params Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLVehiclePawn.K2_SetHeadlight
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                               State                                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                              Mode                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::K2_SetHeadlight(bool State, uint8 Mode)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "K2_SetHeadlight");

	Params::AWTLVehiclePawn_K2_SetHeadlight_Params Parms{};

	Parms.State = State;
	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLVehiclePawn.K2_ConditionChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                              NewCondition                                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::K2_ConditionChanged(float NewCondition)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "K2_ConditionChanged");

	Params::AWTLVehiclePawn_K2_ConditionChanged_Params Parms{};

	Parms.NewCondition = NewCondition;

	UObject::ProcessEvent(Func, &Parms);

}


// Function WTL.WTLVehiclePawn.IsCharacterUnderground
// (Final, Native, Private)
// Parameters:

void AWTLVehiclePawn::IsCharacterUnderground()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "IsCharacterUnderground");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.GetVehicleState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EWTLVehicleState        ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLVehicleState AWTLVehiclePawn::GetVehicleState()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetVehicleState");

	Params::AWTLVehiclePawn_GetVehicleState_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetVehicleMesh
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USkeletalMeshComponent*      ReturnValue                                                      (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class USkeletalMeshComponent* AWTLVehiclePawn::GetVehicleMesh()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetVehicleMesh");

	Params::AWTLVehiclePawn_GetVehicleMesh_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetVehicleHighGravityMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*                ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UAnimMontage* AWTLVehiclePawn::GetVehicleHighGravityMontage()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetVehicleHighGravityMontage");

	Params::AWTLVehiclePawn_GetVehicleHighGravityMontage_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetSpeed");

	Params::AWTLVehiclePawn_GetSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetRearWheelRotationAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetRearWheelRotationAngle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetRearWheelRotationAngle");

	Params::AWTLVehiclePawn_GetRearWheelRotationAngle_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetNormalizedSpeedSigned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetNormalizedSpeedSigned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetNormalizedSpeedSigned");

	Params::AWTLVehiclePawn_GetNormalizedSpeedSigned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetNormalizedSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetNormalizedSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetNormalizedSpeed");

	Params::AWTLVehiclePawn_GetNormalizedSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetMaxSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetMaxSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetMaxSpeed");

	Params::AWTLVehiclePawn_GetMaxSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetIsInAnomaly
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLVehiclePawn::GetIsInAnomaly()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetIsInAnomaly");

	Params::AWTLVehiclePawn_GetIsInAnomaly_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetFrontWheelRotationAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetFrontWheelRotationAngle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetFrontWheelRotationAngle");

	Params::AWTLVehiclePawn_GetFrontWheelRotationAngle_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetForwardWheelAngle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetForwardWheelAngle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetForwardWheelAngle");

	Params::AWTLVehiclePawn_GetForwardWheelAngle_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetCurrentSpeedSigned
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetCurrentSpeedSigned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetCurrentSpeedSigned");

	Params::AWTLVehiclePawn_GetCurrentSpeedSigned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetCurrentSpeed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetCurrentSpeed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetCurrentSpeed");

	Params::AWTLVehiclePawn_GetCurrentSpeed_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetCurrentRootBoneOffset
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                     ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector AWTLVehiclePawn::GetCurrentRootBoneOffset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetCurrentRootBoneOffset");

	Params::AWTLVehiclePawn_GetCurrentRootBoneOffset_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetCurrentRollValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetCurrentRollValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetCurrentRollValue");

	Params::AWTLVehiclePawn_GetCurrentRollValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetCurrentForwardInputValue
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetCurrentForwardInputValue()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetCurrentForwardInputValue");

	Params::AWTLVehiclePawn_GetCurrentForwardInputValue_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetCurrentForwardAbsorberOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetCurrentForwardAbsorberOffset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetCurrentForwardAbsorberOffset");

	Params::AWTLVehiclePawn_GetCurrentForwardAbsorberOffset_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetCurrentBackwardAbsorberOffset
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                              ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float AWTLVehiclePawn::GetCurrentBackwardAbsorberOffset()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetCurrentBackwardAbsorberOffset");

	Params::AWTLVehiclePawn_GetCurrentBackwardAbsorberOffset_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetCharacterStateInVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// enum class EWTLCharacterStateInVehicleReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

enum class EWTLCharacterStateInVehicle AWTLVehiclePawn::GetCharacterStateInVehicle()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetCharacterStateInVehicle");

	Params::AWTLVehiclePawn_GetCharacterStateInVehicle_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.GetCharacterIsStunned
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool AWTLVehiclePawn::GetCharacterIsStunned()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "GetCharacterIsStunned");

	Params::AWTLVehiclePawn_GetCharacterIsStunned_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Function WTL.WTLVehiclePawn.EnterInVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AWTLCharacter*               Character                                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::EnterInVehicle(class AWTLCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "EnterInVehicle");

	Params::AWTLVehiclePawn_EnterInVehicle_Params Parms{};

	Parms.Character = Character;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Client_ResetCamera
// (Net, Native, Event, Protected, NetClient)
// Parameters:

void AWTLVehiclePawn::Client_ResetCamera()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Client_ResetCamera");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Client_OnUpdateInVehicle
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:
// bool                               IsInVehicle                                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVehiclePawn::Client_OnUpdateInVehicle(bool IsInVehicle)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Client_OnUpdateInVehicle");

	Params::AWTLVehiclePawn_Client_OnUpdateInVehicle_Params Parms{};

	Parms.IsInVehicle = IsInVehicle;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVehiclePawn.Client_OnPossessed
// (Net, NetReliable, Native, Event, Protected, NetClient)
// Parameters:

void AWTLVehiclePawn::Client_OnPossessed()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVehiclePawn", "Client_OnPossessed");



	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLVKSocialNetworkAdapter
// (None)

class UClass* UWTLVKSocialNetworkAdapter::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLVKSocialNetworkAdapter");

	return Clss;
}


// WTLVKSocialNetworkAdapter WTL.Default__WTLVKSocialNetworkAdapter
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLVKSocialNetworkAdapter* UWTLVKSocialNetworkAdapter::GetDefaultObj()
{
	static class UWTLVKSocialNetworkAdapter* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLVKSocialNetworkAdapter*>(UWTLVKSocialNetworkAdapter::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLVoiceController
// (None)

class UClass* UWTLVoiceController::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLVoiceController");

	return Clss;
}


// WTLVoiceController WTL.Default__WTLVoiceController
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLVoiceController* UWTLVoiceController::GetDefaultObj()
{
	static class UWTLVoiceController* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLVoiceController*>(UWTLVoiceController::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLVolumePortal
// (Actor)

class UClass* AWTLVolumePortal::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLVolumePortal");

	return Clss;
}


// WTLVolumePortal WTL.Default__WTLVolumePortal
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLVolumePortal* AWTLVolumePortal::GetDefaultObj()
{
	static class AWTLVolumePortal* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLVolumePortal*>(AWTLVolumePortal::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLVolumePortal.OnEndOverlap
// (Final, Native, Private)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AWTLVolumePortal::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVolumePortal", "OnEndOverlap");

	Params::AWTLVolumePortal_OnEndOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Function WTL.WTLVolumePortal.OnBeginOverlap
// (Final, Native, Private, HasOutParams)
// Parameters:
// class UPrimitiveComponent*         OverlappedComponent                                              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                      OtherActor                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*         OtherComp                                                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                              OtherBodyIndex                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                               bFromSweep                                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult                  SweepResult                                                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AWTLVolumePortal::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLVolumePortal", "OnBeginOverlap");

	Params::AWTLVolumePortal_OnBeginOverlap_Params Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = SweepResult;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLWaterSource
// (Actor)

class UClass* AWTLWaterSource::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLWaterSource");

	return Clss;
}


// WTLWaterSource WTL.Default__WTLWaterSource
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLWaterSource* AWTLWaterSource::GetDefaultObj()
{
	static class AWTLWaterSource* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLWaterSource*>(AWTLWaterSource::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLWeaponAnimInstance
// (None)

class UClass* UWTLWeaponAnimInstance::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLWeaponAnimInstance");

	return Clss;
}


// WTLWeaponAnimInstance WTL.Default__WTLWeaponAnimInstance
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLWeaponAnimInstance* UWTLWeaponAnimInstance::GetDefaultObj()
{
	static class UWTLWeaponAnimInstance* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLWeaponAnimInstance*>(UWTLWeaponAnimInstance::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLWeaponAnimInstance.GetCharacter
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AWTLCharacter*               ReturnValue                                                      (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AWTLCharacter* UWTLWeaponAnimInstance::GetCharacter()
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLWeaponAnimInstance", "GetCharacter");

	Params::UWTLWeaponAnimInstance_GetCharacter_Params Parms{};


	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;

}


// Class WTL.WTLWeaponAttachment
// (SceneComponent, PrimitiveComponent, StaticMeshComponent)

class UClass* UWTLWeaponAttachment::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLWeaponAttachment");

	return Clss;
}


// WTLWeaponAttachment WTL.Default__WTLWeaponAttachment
// (Public, ClassDefaultObject, ArchetypeObject)

class UWTLWeaponAttachment* UWTLWeaponAttachment::GetDefaultObj()
{
	static class UWTLWeaponAttachment* Default = nullptr;

	if (!Default)
		Default = static_cast<UWTLWeaponAttachment*>(UWTLWeaponAttachment::StaticClass()->DefaultObject);

	return Default;
}


// Function WTL.WTLWeaponAttachment.Client_SetMesh
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// class UStaticMesh*                 Mesh                                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UWTLWeaponAttachment::Client_SetMesh(class UStaticMesh* Mesh)
{
	static class UFunction* Func = nullptr;

	if (!Func)
		Func = Class->GetFunction("WTLWeaponAttachment", "Client_SetMesh");

	Params::UWTLWeaponAttachment_Client_SetMesh_Params Parms{};

	Parms.Mesh = Mesh;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);


	Func->FunctionFlags = Flgs;

}


// Class WTL.WTLWindTurbine
// (Actor)

class UClass* AWTLWindTurbine::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLWindTurbine");

	return Clss;
}


// WTLWindTurbine WTL.Default__WTLWindTurbine
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLWindTurbine* AWTLWindTurbine::GetDefaultObj()
{
	static class AWTLWindTurbine* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLWindTurbine*>(AWTLWindTurbine::StaticClass()->DefaultObject);

	return Default;
}


// Class WTL.WTLWorldSettings
// (Actor)

class UClass* AWTLWorldSettings::StaticClass()
{
	static class UClass* Clss = nullptr;

	if (!Clss)
		Clss = UObject::FindClassFast("WTLWorldSettings");

	return Clss;
}


// WTLWorldSettings WTL.Default__WTLWorldSettings
// (Public, ClassDefaultObject, ArchetypeObject)

class AWTLWorldSettings* AWTLWorldSettings::GetDefaultObj()
{
	static class AWTLWorldSettings* Default = nullptr;

	if (!Default)
		Default = static_cast<AWTLWorldSettings*>(AWTLWorldSettings::StaticClass()->DefaultObject);

	return Default;
}

}


