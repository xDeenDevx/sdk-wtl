// BlueprintGeneratedClass BP_MonsterFunctions.BP_MonsterFunctions_C
// Size: 0x28 (Inherited: 0x28)
struct UBP_MonsterFunctions_C : UBlueprintFunctionLibrary {

	void RegisterMonsterEventPoint(struct AWTLMonsterPawn* Monster, float SetLifeSpan, int32_t EventId, struct AWTLEventPoint* EventPointClass, struct UObject* __WorldContext, bool& Result); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.RegisterMonsterEventPoint // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void GetEventPointObj(int32_t EventId, struct AWTLEventPoint* EventPointClass, struct UObject* __WorldContext, bool& Valid, struct AWTLEventPoint*& EventPoint); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.GetEventPointObj // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1ad0090
	void SporeSpawnPickupCrystal(int32_t ColorID, struct FVector Location, bool UseEndLocation, struct FVector EndLocation, struct UObject* __WorldContext); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.SporeSpawnPickupCrystal // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void SporeGetLevelState(struct UObject* __WorldContext, bool& Valid, int32_t& Level); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.SporeGetLevelState // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1ad0090
	void SporeGetCrystalEnergySource(int32_t ColorID, struct UObject* __WorldContext, bool& Valid, struct ABP_Crystal_EnergySource_Base_C*& Object); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.SporeGetCrystalEnergySource // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void SporeGetColorCrystal(int32_t ColorID, struct UObject* __WorldContext, bool& ValidColorID, struct FLinearColor& ColorA, struct FLinearColor& ColorB); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.SporeGetColorCrystal // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1ad0090
	void CalculateMonsterLevel(struct UObject* WorldContextObject, struct FVector ObserverLocation, float InRange, int32_t MinLevel, int32_t MaxLevel, int32_t MaxCountCharacters, struct UObject* __WorldContext, int32_t& Level); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.CalculateMonsterLevel // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1ad0090
	void ApplayRandomPercentDamageInRange(struct FVector Location, float Radius, float MinPercent, float MaxPercent, struct AActor* DamageCauser, struct UObject* WorldContextObject, struct UObject* __WorldContext); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.ApplayRandomPercentDamageInRange // (Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void GetDeltaAngleToTarget(struct FVector InTargetLocation, struct FVector InOriginLocation, struct FVector InOriginUpVector, struct FVector InOriginRightVector, struct FVector InOriginForwardVector, struct UObject* __WorldContext, float& ReturnYaw, float& ReturnPitch, struct FRotator& ReturnRotator); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.GetDeltaAngleToTarget // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void SphereAttackBase(float InDistance, float InRadius, bool InIsMultiTrace, float InCapsuleRadius, struct FVector InForwardVector, struct FVector InAttackLocationn, struct AActor* InIgnoreActor, struct UObject* __WorldContext, struct TArray<struct FHitResult>& OutHitsResult); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.SphereAttackBase // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void GetAIInterfaceInRange(struct AActor* Instigator, float Radius, float YawHalfAngle, float PitchHalfAngle, struct UObject* __WorldContext, struct TArray<struct AActor*>& OutAIInterfaceActors); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.GetAIInterfaceInRange // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void SetStateFollowTarget(struct AActor* MonsterSelf, enum class E_MonsterFollowTarget State, struct UObject* __WorldContext); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.SetStateFollowTarget // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void CheckDistancToVisibleEnemy(struct AWTLMonsterPawn* Monster, float Distance, struct UObject* __WorldContext, bool& Result, struct AWTLCharacter*& Character); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.CheckDistancToVisibleEnemy // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void WhoIsCloser(struct AActor* ActorStart, struct AActor* ActorA, struct AActor* ActorB, struct UObject* __WorldContext, bool& ActorA_IsCloser); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.WhoIsCloser // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	bool CheckIsVisibleActor(struct AActor* StartActor, struct AActor* EndActor, struct FVector StartLocation, struct FVector EndLocation, struct UObject* __WorldContext); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.CheckIsVisibleActor // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void AttackAIInterface(struct AActor* MonsterSelf, float AttackRadius, struct UObject* __WorldContext, struct AActor*& Actor); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.AttackAIInterface // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void AttackPointElectronicBait(struct AActor* MonsterSelf, float AttackRadius, float ApplyAngle, struct UObject* __WorldContext, struct TArray<struct AActor*>& ActorHit); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.AttackPointElectronicBait // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void SetRandomColor(struct AWTLMonsterPawn* Monster, struct TArray<struct FLinearColor>& Color, struct UObject* __WorldContext); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.SetRandomColor // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void UpdateMove(struct AWTLMonsterPawn* MonsterPawn, struct UCharacterMovementComponent* CharacterMovement, struct UObject* __WorldContext); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.UpdateMove // (Static|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void CheckIsVisibleTarget(struct AWTLMonsterPawn* Monster, struct AActor* Character, struct UObject* __WorldContext, bool& Result); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.CheckIsVisibleTarget // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void IsStates(struct APawn* ControllerPawn, struct TArray<enum class StateMonster>& MonsterStates, struct UObject* __WorldContext, bool& Result); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.IsStates // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void GetAngle(struct FVector2D A, struct FVector2D B, struct UObject* __WorldContext, float& Angle); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.GetAngle // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1ad0090
	void IsValidAngle(struct FVector Vec1, struct FVector Vec2, float ValidAngle, struct UObject* __WorldContext, bool& Result); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.IsValidAngle // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void AttackPoint(struct AActor* MonsterSelf, float AttackRadius, float ApplyAngle, struct UObject* __WorldContext, struct AActor*& ActorHit); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.AttackPoint // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
	void AttackSphere(struct AActor* MonsterSelf, struct FVector Offset, float SphereRadius, struct UObject* __WorldContext, struct TArray<struct AActor*>& ActorsHit); // Function BP_MonsterFunctions.BP_MonsterFunctions_C.AttackSphere // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1ad0090
};

