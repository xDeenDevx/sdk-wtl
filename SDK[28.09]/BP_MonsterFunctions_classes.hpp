#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass BP_MonsterFunctions.BP_MonsterFunctions_C
class UBP_MonsterFunctions_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBP_MonsterFunctions_C* GetDefaultObj();

	void RegisterMonsterEventPoint(class AWTLMonsterPawn* Monster, float SetLifeSpan, int32 EventId, class UClass* EventPointClass, class UObject* __WorldContext, bool* Result, bool CallFunc_GetEventPointObj_Valid, class AWTLEventPoint* CallFunc_GetEventPointObj_EventPoint, bool CallFunc_Greater_FloatFloat_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void GetEventPointObj(int32 EventId, class UClass* EventPointClass, class UObject* __WorldContext, bool* Valid, class AWTLEventPoint** EventPoint, bool CallFunc_IsValidClass_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, TArray<class AWTLEventPoint*>& CallFunc_GetAllActorsOfClass_OutActors, TArray<class AWTLEventPoint*>& CallFunc_GetAllActorsOfClass_OutActors_1, class AWTLEventPoint* CallFunc_Array_Get_Item, class AWTLEventPoint* CallFunc_Array_Get_Item_1, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_GetID_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void SporeSpawnPickupCrystal(int32 ColorID, const struct FVector& Location, bool UseEndLocation, const struct FVector& EndLocation, class UObject* __WorldContext, bool CallFunc_SporeGetCrystalEnergySource_Valid, class ABP_Crystal_EnergySource_Base_C* CallFunc_SporeGetCrystalEnergySource_Object, bool CallFunc_IsValid_ReturnValue);
	void SporeGetLevelState(class UObject* __WorldContext, bool* Valid, int32* Level, bool CallFunc_IsValid_ReturnValue, TArray<class ABP_Actor_Spore_Boss_C*>& CallFunc_GetAllActorsOfClass_OutActors, class ABP_Actor_Spore_Boss_C* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue);
	void SporeGetCrystalEnergySource(int32 ColorID, class UObject* __WorldContext, bool* Valid, class ABP_Crystal_EnergySource_Base_C** Object, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class ABP_Crystal_EnergySource_Base_C*>& CallFunc_GetAllActorsOfClass_OutActors, class ABP_Crystal_EnergySource_Base_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void SporeGetColorCrystal(int32 ColorID, class UObject* __WorldContext, bool* ValidColorID, struct FLinearColor* ColorA, struct FLinearColor* ColorB, TArray<struct FLinearColor>& K2Node_MakeArray_Array, bool CallFunc_Array_IsValidIndex_ReturnValue, TArray<struct FLinearColor>& K2Node_MakeArray_Array_1, bool CallFunc_Array_IsValidIndex_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	void CalculateMonsterLevel(class UObject* WorldContextObject, const struct FVector& ObserverLocation, float InRange, int32 MinLevel, int32 MaxLevel, int32 MaxCountCharacters, class UObject* __WorldContext, int32* Level, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_Conv_IntToFloat_ReturnValue_2, TArray<class AWTLCharacter*>& CallFunc_GetListCharactersInRange_ResultList, enum class EWTLBPCheckResult CallFunc_GetListCharactersInRange_Result, int32 CallFunc_Array_Length_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, float CallFunc_Conv_IntToFloat_ReturnValue_3, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Lerp_ReturnValue, float CallFunc_FClamp_ReturnValue, int32 CallFunc_FTrunc_ReturnValue);
	void ApplayRandomPercentDamageInRange(const struct FVector& Location, float Radius, float MinPercent, float MaxPercent, class AActor* DamageCauser, class UObject* WorldContextObject, class UObject* __WorldContext, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class AActor*>& K2Node_MakeArray_Array, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_1, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class AActor* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, class AWTLCharacter* K2Node_DynamicCast_AsWTLCharacter, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsInSafeZone_ReturnValue, bool CallFunc_AIInterface_IsAlive_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void GetDeltaAngleToTarget(const struct FVector& InTargetLocation, const struct FVector& InOriginLocation, const struct FVector& InOriginUpVector, const struct FVector& InOriginRightVector, const struct FVector& InOriginForwardVector, class UObject* __WorldContext, float* ReturnYaw, float* ReturnPitch, struct FRotator* ReturnRotator, float DesiredPitch, float DesiredYaw, const struct FVector& NormalizedVectorToTarget, const struct FVector& UpLocation, const struct FVector& RightLocation, const struct FVector& ForwardLocation, const struct FVector& ProjectTargetLocation, const struct FVector& OriginLocation, const struct FVector& TargetLocation, const struct FRotator& CallFunc_MakeRotator_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue_1, float CallFunc_SignOfFloat_ReturnValue, float CallFunc_SignOfFloat_ReturnValue_1, float CallFunc_Dot_VectorVector_ReturnValue_2, float CallFunc_SignOfFloat_ReturnValue_2, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, float CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_2, float CallFunc_VSize_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_3, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_VSize_ReturnValue_2, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_Atan_ReturnValue, float CallFunc_RadiansToDegrees_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_4, float CallFunc_VSize_ReturnValue_3, float CallFunc_Multiply_FloatFloat_ReturnValue_2, float CallFunc_Atan2_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_5, float CallFunc_RadiansToDegrees_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_ProjectPointOnToPlane_ReturnValue, const struct FVector& CallFunc_ProjectPointOnToPlane_ReturnValue_1, const struct FVector& CallFunc_ProjectPointOnToPlane_ReturnValue_2);
	void SphereAttackBase(float InDistance, float InRadius, bool InIsMultiTrace, float InCapsuleRadius, const struct FVector& InForwardVector, const struct FVector& InAttackLocationn, class AActor* InIgnoreActor, class UObject* __WorldContext, TArray<struct FHitResult>* OutHitsResult, const TArray<struct FHitResult>& HitsResult, const struct FVector& EndLocation, const struct FVector& StartLocation, TArray<class AActor*>& K2Node_MakeArray_Array, TArray<class AActor*>& K2Node_MakeArray_Array_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_2, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_3, const struct FHitResult& CallFunc_SphereTraceSingleForObjects_OutHit, bool CallFunc_SphereTraceSingleForObjects_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, TArray<struct FHitResult>& CallFunc_SphereTraceMultiForObjects_OutHits, bool CallFunc_SphereTraceMultiForObjects_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2);
	void GetAIInterfaceInRange(class AActor* Instigator, float Radius, float YawHalfAngle, float PitchHalfAngle, class UObject* __WorldContext, TArray<class AActor*>* OutAIInterfaceActors, const TArray<class AActor*>& ListActors, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, TArray<class AActor*>& K2Node_MakeArray_Array, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool Temp_bool_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_1, bool CallFunc_IsValid_ReturnValue_1, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue, class AActor* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, TScriptInterface<class IWTLAITargetInterface> K2Node_DynamicCast_AsWTLAITarget_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_AIInterface_IsAlive_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, class AWTLCharacter* K2Node_DynamicCast_AsWTLCharacter, bool K2Node_DynamicCast_bSuccess_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, bool CallFunc_IsInSafeZone_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue, bool CallFunc_DoesImplementInterface_ReturnValue, const struct FRotator& CallFunc_NormalizedDeltaRotator_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, bool CallFunc_IsValid_ReturnValue_2, float CallFunc_Abs_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	void SetStateFollowTarget(class AActor* MonsterSelf, enum class E_MonsterFollowTarget State, class UObject* __WorldContext, class FName CallFunc_MakeLiteralName_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void CheckDistancToVisibleEnemy(class AWTLMonsterPawn* Monster, float Distance, class UObject* __WorldContext, bool* Result, class AWTLCharacter** Character, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class AAIController* CallFunc_GetAIController_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, class FName CallFunc_MakeLiteralName_ReturnValue, class UObject* CallFunc_GetValueAsObject_ReturnValue, class AActor* K2Node_DynamicCast_AsActor, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, class AWTLCharacter* K2Node_DynamicCast_AsWTLCharacter, bool K2Node_DynamicCast_bSuccess_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSizeSquared_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue);
	void WhoIsCloser(class AActor* ActorStart, class AActor* ActorA, class AActor* ActorB, class UObject* __WorldContext, bool* ActorA_IsCloser, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, float CallFunc_VSizeSquared_ReturnValue, float CallFunc_VSizeSquared_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue);
	bool CheckIsVisibleActor(class AActor* StartActor, class AActor* EndActor, const struct FVector& StartLocation, const struct FVector& EndLocation, class UObject* __WorldContext, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, TArray<class AActor*>& K2Node_MakeArray_Array_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, enum class EWTLBPCheckResult CallFunc_SwitchIsValidActor_Result, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, TArray<class AActor*>& K2Node_MakeArray_Array_2, enum class EWTLBPCheckResult CallFunc_SwitchIsValidActor_Result_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, TArray<class AActor*>& K2Node_MakeArray_Array_3, enum class EWTLBPCheckResult CallFunc_SwitchIsValidActor_Result_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, bool K2Node_SwitchEnum_CmpSuccess_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_4, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_5, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_6, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit, bool CallFunc_LineTraceSingleForObjects_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit_1, bool CallFunc_LineTraceSingleForObjects_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit_2, bool CallFunc_LineTraceSingleForObjects_ReturnValue_2, TArray<class AActor*>& Temp_object_Variable, bool CallFunc_Not_PreBool_ReturnValue_2, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit_3, bool CallFunc_LineTraceSingleForObjects_ReturnValue_3, bool CallFunc_Not_PreBool_ReturnValue_3);
	void AttackAIInterface(class AActor* MonsterSelf, float AttackRadius, class UObject* __WorldContext, class AActor** Actor, bool CallFunc_Greater_FloatFloat_ReturnValue, class AAIController* CallFunc_GetAIController_ReturnValue, class AWTLMonsterPawnAIController* K2Node_DynamicCast_AsWTLMonster_Pawn_AIController, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class AAIController* CallFunc_GetAIController_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class FName CallFunc_MakeLiteralName_ReturnValue, class UObject* CallFunc_GetValueAsObject_ReturnValue, class AActor* K2Node_DynamicCast_AsActor, bool K2Node_DynamicCast_bSuccess_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue);
	void AttackPointElectronicBait(class AActor* MonsterSelf, float AttackRadius, float ApplyAngle, class UObject* __WorldContext, TArray<class AActor*>* ActorHit, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, TArray<class AActor*>& K2Node_MakeArray_Array_1, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue);
	void SetRandomColor(class AWTLMonsterPawn* Monster, TArray<struct FLinearColor>& Color, class UObject* __WorldContext, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_RandomInteger_ReturnValue, const struct FLinearColor& CallFunc_Array_Get_Item, const struct FVector& CallFunc_Conv_LinearColorToVector_ReturnValue);
	void UpdateMove(class AWTLMonsterPawn* MonsterPawn, class UCharacterMovementComponent* CharacterMovement, class UObject* __WorldContext);
	void CheckIsVisibleTarget(class AWTLMonsterPawn* Monster, class AActor* Character, class UObject* __WorldContext, bool* Result, bool CallFunc_IsValid_ReturnValue, TArray<class AActor*>& K2Node_MakeArray_Array, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_1, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit, bool CallFunc_LineTraceSingleForObjects_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void IsStates(class APawn* ControllerPawn, TArray<enum class EStateMonster>& MonsterStates, class UObject* __WorldContext, bool* Result, class FName CallFunc_MakeLiteralName_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_IsValid_ReturnValue, uint8 CallFunc_GetValueAsEnum_ReturnValue, uint8 CallFunc_GetValidValue_ReturnValue, bool CallFunc_Array_Contains_ReturnValue);
	void GetAngle(const struct FVector2D& A, const struct FVector2D& B, class UObject* __WorldContext, float* Angle, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, float CallFunc_BreakVector2D_X_1, float CallFunc_BreakVector2D_Y_1, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, float CallFunc_DegAtan_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue);
	void IsValidAngle(const struct FVector& Vec1, const struct FVector& Vec2, float ValidAngle, class UObject* __WorldContext, bool* Result, const struct FVector2D& CallFunc_Conv_VectorToVector2D_ReturnValue, const struct FVector2D& CallFunc_Conv_VectorToVector2D_ReturnValue_1, float CallFunc_VSize2D_ReturnValue, float CallFunc_VSize2D_ReturnValue_1, float CallFunc_DotProduct2D_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_DegAcos_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue);
	void AttackPoint(class AActor* MonsterSelf, float AttackRadius, float ApplyAngle, class UObject* __WorldContext, class AActor** ActorHit, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, TArray<class AActor*>& K2Node_MakeArray_Array, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, class FName CallFunc_MakeLiteralName_ReturnValue, class UObject* CallFunc_GetValueAsObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AActor* K2Node_DynamicCast_AsActor, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, bool CallFunc_IsValidAngle_Result, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit, bool CallFunc_LineTraceSingleForObjects_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd);
	void AttackSphere(class AActor* MonsterSelf, const struct FVector& Offset, float SphereRadius, class UObject* __WorldContext, TArray<class AActor*>* ActorsHit, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array, TArray<class AActor*>& K2Node_MakeArray_Array_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, TArray<enum class EObjectTypeQuery>& K2Node_MakeArray_Array_2, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors_1, bool CallFunc_SphereOverlapActors_ReturnValue_1);
};

}


