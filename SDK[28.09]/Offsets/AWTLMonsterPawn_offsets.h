namespace offsets
{
	namespace AWTLMonsterPawn
	{
			constexpr auto m_MonsterSpawner = 0x4d8; // Size: 8, Type: struct AWTLMonsterSpawner*
			constexpr auto m_Controller = 0x4e0; // Size: 8, Type: struct AWTLMonsterPawnAIController*
			constexpr auto m_RectTexture = 0x5a8; // Size: 40, Type: struct TSoftObjectPtr<UTexture2D>
			constexpr auto m_HUDFont = 0x5d0; // Size: 40, Type: struct TSoftObjectPtr<UFont>
			constexpr auto m_MovementMode = 0x5f8; // Size: 1, Type: enum class EWTLMonsterMovementMode
			constexpr auto m_CurrentAction = 0x5f9; // Size: 1, Type: enum class EWTLMonsterActionType
			constexpr auto m_CurrentAdditiveAction = 0x5fa; // Size: 1, Type: enum class EWTLMonsterActionType
			constexpr auto m_ReplicatedStamina = 0x618; // Size: 4, Type: uint32_t
			constexpr auto m_CurrentLevelOfStun = 0x61c; // Size: 4, Type: float
			constexpr auto m_ConditionShield = 0x620; // Size: 4, Type: int32_t
			constexpr auto m_WasStunned = 0x628; // Size: 1, Type: bool
			constexpr auto m_PublicStorageContent = 0x6b8; // Size: 168, Type: struct FWTLStorageContent
			constexpr auto m_SummaryStorageContent = 0x760; // Size: 168, Type: struct FWTLStorageContent
			constexpr auto m_PrivateStorageContent = 0x808; // Size: 168, Type: struct FWTLStorageContent
			constexpr auto m_bIsInStealthMode = 0x8f0; // Size: 1, Type: bool
			constexpr auto m_LocationDead = 0x98c; // Size: 12, Type: struct FVector
			constexpr auto m_ReplicatedHealth = 0xa58; // Size: 4, Type: uint32_t
			constexpr auto m_Aggression = 0xa6c; // Size: 4, Type: float
			constexpr auto m_MultiplierParameters = 0xa74; // Size: 4, Type: float
			constexpr auto IsUseEyesViewPoint = 0xa78; // Size: 1, Type: bool
			constexpr auto EyesViewPointLocation = 0xa7c; // Size: 12, Type: struct FVector
			constexpr auto EyesViewPointRotation = 0xa88; // Size: 12, Type: struct FRotator
			constexpr auto bIncreaseDamageWhenChangingTarget = 0xa94; // Size: 1, Type: bool
			constexpr auto DamageMultiplierIDCT = 0xa98; // Size: 4, Type: float
			constexpr auto OldTargetIDCT = 0xaa0; // Size: 8, Type: struct AActor*
			constexpr auto ActualDamageMultiplierIDCT = 0xaa8; // Size: 4, Type: float
			constexpr auto IsUseRotation = 0xaac; // Size: 1, Type: bool
			constexpr auto IsUseSlope = 0xaad; // Size: 1, Type: bool
			constexpr auto IsRotationToForwardVector = 0xaae; // Size: 1, Type: bool
			constexpr auto IsUseRoll = 0xaaf; // Size: 1, Type: bool
			constexpr auto IsUseXRotation = 0xab0; // Size: 1, Type: bool
			constexpr auto OffsetRotationMesh = 0xab4; // Size: 12, Type: struct FRotator
			constexpr auto bIgnoreIsWalkableFloor = 0xac0; // Size: 1, Type: bool
			constexpr auto SpeedRotationPerSecond = 0xac4; // Size: 4, Type: float
			constexpr auto isOffsetMeshNetLag = 0xac8; // Size: 1, Type: bool
			constexpr auto MonsterID = 0xacc; // Size: 4, Type: int32_t
			constexpr auto GroupId = 0xad0; // Size: 4, Type: int32_t
			constexpr auto MyRank = 0xad4; // Size: 4, Type: int32_t
			constexpr auto CommandPointsPrice = 0xad8; // Size: 4, Type: int32_t
			constexpr auto MyFaction = 0xadc; // Size: 1, Type: enum class EWTLFaction
			constexpr auto DetectOnMap = 0xadd; // Size: 1, Type: bool
			constexpr auto NormalActorTickInterval = 0xae0; // Size: 4, Type: float
			constexpr auto ReactionToEMPWeapon = 0xae4; // Size: 1, Type: bool
			constexpr auto IsCanBeStunned = 0xae5; // Size: 1, Type: bool
			constexpr auto IsCanUseShield = 0xae6; // Size: 1, Type: bool
			constexpr auto CanTakeDamageFromEnvironment = 0xae7; // Size: 1, Type: bool
			constexpr auto StunRecoveryPerSecond = 0xae8; // Size: 4, Type: float
			constexpr auto AnimationUpdateRate = 0xaec; // Size: 1, Type: bool
			constexpr auto StaminaRecoveryPerSecond = 0xaf0; // Size: 4, Type: float
			constexpr auto DangerLevel = 0xaf4; // Size: 4, Type: float
			constexpr auto LifespanAfterDeath = 0xaf8; // Size: 4, Type: float
			constexpr auto MeshPhysicsAsset = 0xb00; // Size: 8, Type: struct UPhysicsAsset*
			constexpr auto KillZ = 0xb08; // Size: 4, Type: float
			constexpr auto OffsetFarAttackStart = 0xb0c; // Size: 12, Type: struct FVector
			constexpr auto OffsetFarAttackEnd = 0xb18; // Size: 12, Type: struct FVector
			constexpr auto bCanJumpToEnemy = 0xb24; // Size: 1, Type: bool
			constexpr auto DistanceForJump = 0xb28; // Size: 4, Type: float
			constexpr auto PowerJump = 0xb2c; // Size: 4, Type: float
			constexpr auto bCanBeUseStealth = 0xb30; // Size: 1, Type: bool
			constexpr auto bCanMoveInStealth = 0xb31; // Size: 1, Type: bool
			constexpr auto LoafSpeed = 0xb34; // Size: 4, Type: float
			constexpr auto WalkSpeed = 0xb38; // Size: 4, Type: float
			constexpr auto SprintSpeed = 0xb3c; // Size: 4, Type: float
			constexpr auto SprintStaminaCost = 0xb40; // Size: 4, Type: float
			constexpr auto NormalAcceleration = 0xb44; // Size: 4, Type: float
			constexpr auto FastAcceleration = 0xb48; // Size: 4, Type: float
			constexpr auto bIsWounded = 0xb4c; // Size: 1, Type: bool
			constexpr auto IsInvulnerable = 0xb4d; // Size: 1, Type: bool
			constexpr auto StaminaCosts = 0xb50; // Size: 80, Type: struct TMap<enum class EWTLMonsterActionType, float>
			constexpr auto AvailableRandomActions = 0xba0; // Size: 4, Type: int32_t
			constexpr auto MaxHeadArmor = 0xba4; // Size: 4, Type: float
			constexpr auto HeadArmor = 0xba8; // Size: 4, Type: float
			constexpr auto MaxBodyArmor = 0xbac; // Size: 4, Type: float
			constexpr auto BodyArmor = 0xbb0; // Size: 4, Type: float
			constexpr auto MaxArmsArmor = 0xbb4; // Size: 4, Type: float
			constexpr auto ArmsArmor = 0xbb8; // Size: 4, Type: float
			constexpr auto MaxLegsArmor = 0xbbc; // Size: 4, Type: float
			constexpr auto LegsArmor = 0xbc0; // Size: 4, Type: float
			constexpr auto MaxFeetArmor = 0xbc4; // Size: 4, Type: float
			constexpr auto FeetArmor = 0xbc8; // Size: 4, Type: float
			constexpr auto MainAttackAnimation = 0xbd0; // Size: 8, Type: struct UAnimSequenceBase*
			constexpr auto SecondaryAttackAnimation = 0xbd8; // Size: 8, Type: struct UAnimSequenceBase*
			constexpr auto DeathAnimation = 0xbe0; // Size: 8, Type: struct UAnimSequenceBase*
			constexpr auto DeathAnimations = 0xbe8; // Size: 16, Type: struct TArray<struct UAnimSequenceBase*>
			constexpr auto SpecialAbilityAnimations = 0xbf8; // Size: 16, Type: struct TArray<struct UAnimSequenceBase*>
			constexpr auto IdleAnimations = 0xc08; // Size: 16, Type: struct TArray<struct UAnimSequenceBase*>
			constexpr auto CustomActionAnimations = 0xc18; // Size: 16, Type: struct TArray<struct UAnimSequenceBase*>
			constexpr auto IdleAnimationsBase = 0xc28; // Size: 16, Type: struct TArray<struct FWTLMonsterActionBase>
			constexpr auto ActionAnimationsBase = 0xc38; // Size: 80, Type: struct TMap<enum class EWTLMonsterActionType, struct FWTLMonsterActionBase>
			constexpr auto UseAnimationFromAnimInstance = 0xc88; // Size: 4, Type: int32_t
			constexpr auto bUseServerSideAnimations = 0xc8c; // Size: 1, Type: bool
			constexpr auto bUseHUDCrosshair = 0xc8d; // Size: 1, Type: bool
			constexpr auto HUDCrosshairOffset = 0xc90; // Size: 8, Type: struct FVector2D
			constexpr auto bUseListTarget = 0xc98; // Size: 1, Type: bool
			constexpr auto MaxAgeInListTargets = 0xca0; // Size: 8, Type: double
			constexpr auto bUseVisibleTarget = 0xca8; // Size: 1, Type: bool
			constexpr auto VisionDistance = 0xcac; // Size: 4, Type: float
			constexpr auto UpdateVisionInterval = 0xcb0; // Size: 4, Type: float
			constexpr auto HalfAngleVision = 0xcb4; // Size: 4, Type: float
			constexpr auto bBroadcastDeathToKillers = 0xcb8; // Size: 1, Type: bool
			constexpr auto bApplyFlyOffset = 0xcb9; // Size: 1, Type: bool
			constexpr auto m_BlackboardState = 0xcba; // Size: 1, Type: enum class EWTLMonsterState
			constexpr auto RepBlackboardState = 0xcbb; // Size: 1, Type: enum class EWTLMonsterState
			constexpr auto OffsetIdentityPosition = 0xccc; // Size: 12, Type: struct FVector
			constexpr auto OnDeathDelegate = 0xcd8; // Size: 16, Type: struct FMulticastInlineDelegate
			constexpr auto MonsterOwner = 0xce8; // Size: 8, Type: struct AActor*
			constexpr auto TargetWaypoint = 0xcf0; // Size: 8, Type: struct AActor*
			constexpr auto AttachedState = 0xcf8; // Size: 1, Type: enum class EWTLMonsterAttachState
			constexpr auto IsBurst = 0xcf9; // Size: 1, Type: bool
			constexpr auto PercentDamageBurst = 0xcfa; // Size: 1, Type: char
			constexpr auto TakeDamageBurst = 0xcfc; // Size: 4, Type: float
			constexpr auto MinLevelBurst = 0xd00; // Size: 1, Type: char
			constexpr auto MaxLevelBurst = 0xd01; // Size: 1, Type: char
			constexpr auto PhysicalSurface = 0xd02; // Size: 1, Type: enum class EPhysicalSurface
			constexpr auto WeaponTypeDamageMultipliers = 0xd08; // Size: 80, Type: struct TMap<enum class EWTLWeaponType, float>
			constexpr auto ColliderChancesDamage = 0xd58; // Size: 80, Type: struct TMap<enum class EWTLColliderType, float>
			constexpr auto bUseAmmoDamageMultipliers = 0xda8; // Size: 1, Type: bool
			constexpr auto AmmoDamageMultipliers = 0xdb0; // Size: 80, Type: struct TMap<int32_t, float>
			constexpr auto bUseStunFromAmmoID = 0xe00; // Size: 1, Type: bool
			constexpr auto StunFromAmmo = 0xe08; // Size: 80, Type: struct TMap<int32_t, float>
			constexpr auto bUseTakeDamageInRange = 0xe58; // Size: 1, Type: bool
			constexpr auto MinTakeDamageInRangeSquare = 0xe5c; // Size: 4, Type: float
			constexpr auto MaxTakeDamageInRangeSquare = 0xe60; // Size: 4, Type: float
			constexpr auto CanFarAttack = 0xe64; // Size: 1, Type: bool
			constexpr auto MinDistanceFarAttack = 0xe68; // Size: 4, Type: float
			constexpr auto MaxDistanceFarAttack = 0xe6c; // Size: 4, Type: float
			constexpr auto CanFarAttackToBadCharacter = 0xe70; // Size: 1, Type: bool
			constexpr auto AdditionalLoot = 0xe78; // Size: 16, Type: struct TArray<struct FWTLItemDropInfo>
			constexpr auto MinCharacterDamageForLoot = 0xe88; // Size: 4, Type: float
			constexpr auto Level = 0xe8c; // Size: 1, Type: char
			constexpr auto MaxLevel = 0xe8d; // Size: 1, Type: char
			constexpr auto UseReputationBonus = 0xe8e; // Size: 1, Type: bool
			constexpr auto ReactToPoison = 0xe8f; // Size: 1, Type: bool
			constexpr auto EdibleForMonster = 0xe90; // Size: 1, Type: bool
			constexpr auto ApplyAnimationsScale = 0xe91; // Size: 1, Type: bool
			constexpr auto MonsterExperienceDelta = 0xe94; // Size: 4, Type: int32_t
			constexpr auto MonsterExperienceTickInterval = 0xe98; // Size: 4, Type: float
			constexpr auto ExperienceDropCountMultiplierDelta = 0xe9c; // Size: 4, Type: float
			constexpr auto ExperienceDropChanceMultiplierDelta = 0xea0; // Size: 4, Type: float
			constexpr auto ClientToServerMovementUpdateFrequency = 0xea4; // Size: 4, Type: float
			constexpr auto ServerToClientsMovementUpdateFrequency = 0xea8; // Size: 4, Type: float
			constexpr auto IsFollowVisibleEnemy = 0xf00; // Size: 1, Type: bool
			constexpr auto IsNearTheVisibleEnemy = 0xf01; // Size: 1, Type: bool
			constexpr auto CurrentVisibleEnemy = 0xf08; // Size: 8, Type: struct AWTLCharacter*
	}
} 
